{"version":3,"sources":["webpack:///static/js/vendor.734a472330e3fca54a9b.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./~/vue-style-loader/lib/listToStyles.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/lib/addStylesClient.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/d3/build/d3.js","webpack:///./~/lodash/lodash.js","webpack:///(webpack)/buildin/global.js"],"names":["webpackJsonp","0","module","exports","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","type","default","options","render","staticRenderFns","_scopeId","computed","Object","keys","forEach","key","114","parentId","list","styles","newStyles","i","length","item","id","css","media","sourceMap","part","parts","push","115","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable","get","l","117","toString","result","this","join","modules","mediaQuery","alreadyImportedModules","118","__webpack_require__","addStylesToDom","domStyle","stylesInDom","refs","j","addStyle","listToStyles","createStyleElement","styleElement","document","createElement","head","appendChild","obj","update","remove","querySelector","hasSSR","isProduction","noop","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","applyToTag","parentNode","removeChild","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","sources","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","hasDocument","DEBUG","Error","getElementsByTagName","navigator","test","userAgent","toLowerCase","_isProduction","newList","mayRemove","textStore","replacement","filter","Boolean","2","global","_toString","val","String","toNumber","n","parseFloat","isNaN","makeMap","str","expectsLowerCase","map","create","split","arr","indexOf","splice","hasOwn","hasOwnProperty","call","isPrimitive","value","cached","fn","cache","ctx","boundFn","a","arguments","apply","_length","toArray","start","ret","Array","extend","to","_from","isObject","isPlainObject","OBJECT_STRING","toObject","res","genStaticKeys","reduce","m","concat","staticKeys","looseEqual","b","isObjectA","isObjectB","e","looseIndexOf","once","called","isReserved","c","charCodeAt","def","writable","configurable","parsePath","path","bailRE","segments","isNative","Ctor","pushTarget","_target","Dep","target","targetStack","popTarget","pop","protoAugment","src","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isArray","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","dep","property","getOwnPropertyDescriptor","getter","setter","set","childOb","depend","dependArray","newVal","notify","Math","max","del","mergeData","from","toVal","fromVal","mergeHook","parentVal","childVal","mergeAssets","normalizeProps","props","name","camelize","normalizeDirectives","dirs","directives","mergeOptions","parent","child","vm","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","mixin","prototype","Vue$3","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","prop","absent","isType","hyphenate","undefined","getPropDefaultValue","prevShouldConvert","$options","_props","getType","match","len","handleError","err","info","config","errorHandler","inBrowser","console","error","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","data","text","elm","context","componentOptions","ns","isStatic","isCloned","cloneVNodes","vnodes","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","add","remove$$1","cur","old","event","normalizeEvent","capture","mergeVNodeHook","hookKey","hook","wrappedHook","oldHook","merged","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","nestedIndex","last","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","once$$1","$once","$on","remove$1","$off","oldListeners","eventsMixin","Vue","hookRE","this$1","i$1","cbs","cb","$emit","args","resolveSlots","slots","defaultSlot","functionalContext","slot","every","isWhitespace","node","isComment","resolveScopedSlots","initLifecycle","abstract","$parent","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_update","hydrating","callHook","prevEl","$el","prevVnode","_vnode","prevActiveInstance","activeInstance","__patch__","_parentElm","_refElm","__vue__","$vnode","$forceUpdate","$destroy","teardown","_watchers","_data","mountComponent","el","createEmptyVNode","updateComponent","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","resetSchedulerState","queue","has","waiting","flushing","flushSchedulerQueue","watcher","sort","run","devtools","emit","queueWatcher","nextTick","traverse","seenObjects","clear","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","opts","initProps","methods","initMethods","initData","initComputed","watch","initWatch","propsOptions","isRoot","loop","watchers","_computedWatchers","userDef","computedWatcherOptions","defineComputed","createComputedGetter","dirty","evaluate","handler","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","expOrFn","user","immediate","createComponent","baseCtor","_base","cid","resolved","resolveAsyncComponent","resolveConstructorOptions","model","transformModel","extractProps","functional","createFunctionalComponent","nativeOn","mergeHooks","_context","h","d","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","inlineTemplate","factory","requested","pendingCallbacks","sync","resolve","reject","reason","then","attrs","domProps","altKey","checkProp","hash","preserve","hooksToMerge","fromParent","ours","componentVNodeHooks","mergeHook$1","one","two","callback","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","resolveFilter","identity","checkKeyCodes","eventKeyCode","builtInAlias","keyCodes","bindObjectProps","asProp","mustUseProp","renderStatic","isInFor","tree","_staticTrees","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","initRender","renderContext","_c","$createElement","renderMixin","$nextTick","ref","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","initProvide","provide","_provided","initInjections","inject","hasSymbol","Reflect","ownKeys","provideKey","source","initMixin","_init","_uid","uid","initInternalComponent","constructor","_self","$mount","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","sealed","sealedOptions","dedupe","initUse","use","plugin","installed","unshift","install","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","_assetTypes","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","RegExp","pruneCache","cachedNode","pruneCacheEntry","componentInstance","initGlobalAPI","configDef","util","warn","defineReactive","delete","builtInComponents","genClassForVnode","childNode","mergeClassData","genClassFromData","staticClass","class","dynamicClass","stringifyClass","stringified","slice","isSVG","isUnknownElement","unknownElementCache","window","HTMLUnknownElement","HTMLElement","query","selected","createElement$1","tagName","multiple","createElementNS","namespace","namespaceMap","createComment","newNode","referenceNode","nextSibling","setTextContent","textContent","registerRef","isRemoval","refInFor","isUndef","s","isDef","sameVnode","vnode1","vnode2","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","emptyNodeAt","nodeOps","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","isRootInsert","setScope","createChildren","invokeCreateHooks","insert","isReactivated","keepAlive","init","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","emptyNode","ancestor","addVnodes","startIdx","invokeDestroyHook","destroy","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","oldVnode","hasData","prepatch","postpatch","invokeInsertHook","initial","hydrate","hasChildNodes","childrenMatch","isRenderedModule","hooks","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","parentElm$1","_leaveCb","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","oldAttrs","setAttr","isIE9","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","filters","lastFilterIndex","trim","prev","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","p","charAt","validDivisionCharRE","wrapFilter","baseWarn","msg","pluckModuleFunction","_","addProp","addAttr","addDirective","arg","addHandler","important","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","attrsMap","attrsList","genComponentModel","number","baseValueExpression","valueExpression","assignment","genAssignmentCode","modelRs","parseModel","idx","index$1","expressionPos","expressionEndPos","lastIndexOf","eof","chr","next","isStringStart","parseString","parseBracket","substring","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","CHECKBOX_RADIO_TOKEN","selectedVal","code","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isIE","isChrome","add$1","oldHandler","target$1","ev","remove$2","addEventListener","removeEventListener","updateDOMListeners","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","activeElement","_vModifiers","normalizeStyleData","style","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","oldStyle","newStyle","setProp","addClass","classList","getAttribute","removeClass","tar","replace","resolveTransition","def$$1","autoCssTransition","nextFrame","raf","addTransitionClass","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","timeout","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","end","onEnd","setTimeout","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","Number","enter","toggleDisplay","cancelled","_enterCb","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","isMultiple","option","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","comp","key$1","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","pos","dx","left","dy","top","moved","transform","WebkitTransform","transitionDuration","shouldDecode","content","encoded","div","innerHTML","decode","html","decoder","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","advance","parseStartTag","startTagOpen","attr","startTagClose","attribute","unarySlash","handleStartTag","expectHTML","lastTag","isNonPhrasingTag","parseEndTag","canBeLeftOpenTag","unary","isUnaryTag$$1","IS_REGEX_CAPTURING_BROKEN","stack","lowerCasedTag","lowerCasedTagName","isUnaryTag","no","isPlainTextElement","stackedTag","reStackedTag","reCache","endTagLength","rest","all","endTag","chars","textEnd","comment","commentEnd","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","rest$1","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokens","lastIndex","exec","parse","template","endPre","element","pre","inVPre","platformIsPreTag","inPre","warn$2","platformGetTagNamespace","platformMustUseProp","isPreTag","preTransforms","transforms","postTransforms","root","currentParent","preserveWhitespace","checkRootConstraints","guardIESVGBug","makeAttrsMap","isForbiddenTag","forbidden","processPre","processRawAttrs","processFor","processIf","processOnce","processKey","plain","processRef","processSlot","processComponent","processAttrs","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","i$2","lastNode","decodeHTMLCached","checkInFor","inMatch","forAliasRE","for","alias","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","condition","ifConditions","slotName","component","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","optimize","isStaticKey","genStaticKeysCached","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","staticInFor","staticRoot","walkThroughConditionsBlocks","conditionBlocks","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genKeyFilter","genFilterCode","keyVal","parseInt","bind$1","wrapData","generate","ast","prevStaticRenderFns","currentStaticRenderFns","prevOnceCount","onceCount","currentOptions","warn$3","transforms$1","dataGenFns","platformDirectives$1","isPlatformReservedTag$1","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData","genChildren","genIfConditions","conditions","genTernaryExp","shift","genDirectives","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","baseDirectives","inlineRenderFns","genScopedSlot","scope","checkSkip","el$1","getNormalizationType","genNode","needsNormalization","some","maybeComponent","genText","transformSpecialNewlines","bind$$1","componentName","baseCompile","makeFunction","errors","Function","createCompiler","baseOptions","compile","finalOptions","tips","tip$$1","compiled","compileToFunctions","functionCompileCache","fnGenErrors","transformNode","classBinding","genData$1","transformNode$1","styleBinding","genData$2","getOuterHTML","outerHTML","container","cloneNode","_isServer","_Set","camelizeRE","toUpperCase","hyphenateRE","optionMergeStrategies","silent","productionTip","performance","ignoredElements","_lifecycleHooks","_maxUpdateCount","freeze","hasProto","UA","isEdge","isAndroid","isIOS","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","Symbol","nextTickHandler","pending","copies","callbacks","timerFunc","Promise","logError","catch","MutationObserver","counter","observer","textNode","characterData","_resolve","Set","uid$1","subs","addSub","sub","removeSub","addDep","arrayProto","arrayMethods","method","original","observeArray","arrayKeys","getOwnPropertyNames","isSettingProps","walk","items","instanceData","defaultData","raw","prototypeAccessors","defineProperties","uid$2","deep","active","deps","newDeps","depIds","newDepIds","cleanupDeps","tmp","mountedNode","patternTypes","KeepAlive","include","exclude","created","destroyed","version","testEl","acceptValue","svg","math","isHTMLTag","baseModules","klass","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalize","prefixes","upper","prefixed","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","platformModules","patch","vmodel","model$1","v","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","body","offsetHeight","propertyName","_hasMove","clone","platformComponents","singleAttrIdentifier","singleAttrAssign","singleAttrValues","ncname","qnameCapture","g","&lt;","&gt;","&quot;","&amp;","&#10;","regexEscapeRE","open","close","esc","tab","space","up","right","down","genGuard","stop","prevent","self","ctrl","alt","meta","middle","cloak","klass$1","style$1","modules$1","directives$1","ref$1","idToTemplate","mount","documentElement","39","ascendingComparator","f","x","ascending","pair","tickStep","count","step0","abs","step1","pow","floor","log","LN10","e10","e5","e2","translateX","translateY","y","center","scale","offset","bandwidth","round","entering","__axis","axis","orient","values","tickValues","ticks","tickArguments","domain","format","tickFormat","identity$1","spacing","tickSizeInner","tickPadding","range","range0","range1","position","copy","selection","selectAll","tick","order","tickExit","exit","tickEnter","append","line","select","merge","k","bottom","epsilon","isFinite","tickSizeOuter","each","slice$1","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","t","Dispatch","parseTypenames","typenames","types","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","local","local$1","Local","nextId","filterContextListener","listener","group","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","o","onAdd","wrap","filterEvents","customEvent","that","sourceEvent","none","empty$1","EnterNode","datum","_next","_parent","bindIndex","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$1","NaN","attrRemove","attrRemoveNS","attrConstant","attrConstantNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","string","ClassList","_node","_names","classedAdd","names","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textConstant","textFunction","htmlRemove","htmlConstant","htmlFunction","raise","lower","previousSibling","constantNull","params","window$$1","CustomEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","Color","color","reHex3","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","rgbConvert","rgb","opacity","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","parseCss","identity$2","cssRoot","cssView","defaultView","getPropertyValue","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","cosh","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","schedule","__transition","state","CREATED","set$1","STARTING","get$1","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","ease","ENDING","tweenRemove","tween0","tween1","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","ownerSVGElement","width","height","local$$1","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","move","point0","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","touches","touchending","keydowned","keyCode","keyupped","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","object","createObject","setObject","createMap","setMap","set$2","objectConverter","columns","customConverter","row","inferColumns","rows","columnSet","column","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","z","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","step","circleRadius","Intersection","points","other","entry","link$1","array","clipExtent","visible","interpolate","a1","corner","comparePoint","compareIntersection","ca","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","sum","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","L","B","circle","l2","p1","l0","l1","enclose1","enclose2","enclose3","tail","r1","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","d3","A","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","change","executeShifts","nextAncestor","vim","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","d1","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","Date","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","pads","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","requoteRe","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","radialLine","point$2","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","hi","mid","ascendingBisect","bisectLeft","pairs","cross","ia","ib","ic","na","nb","descending","variance","deviation","constant","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","permute","permutes","scan","xi","xj","shuffle","random","transpose","zip","T","namespaces","xlink","xml","xmlns","prefix","creator","matcher","selector","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","clientLeft","clientTop","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","constant$1","selection_data","enterGroup","updateGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","reA","reB","interpolateString","am","bm","bs","bi","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","TypeError","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","buffer","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","x$$1","y$$1","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","identity$3","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","temp","valueOf","epsilon2$1","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","sum$1","sinPhi1","absDelta","intersection","phiArc","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","lengthRing","_circle","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","notHemisphere","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$3","defer","await","results","awaitAll","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential$1","request","url","respond","status","mimeType","headers","XMLHttpRequest","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","constant$10","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","ka","kr","star","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$5","none$1","none$2","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","randomUniform","randomLogNormal","randomBates","randomExponential","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","65","__WEBPACK_AMD_DEFINE_RESULT__","addMapEntry","addSetEntry","func","thisArg","arrayAggregator","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","asciiWords","reAsciiWord","baseFindKey","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","basePropertyOf","baseReduce","baseSortBy","comparer","baseTimes","baseToPairs","baseUnary","baseValues","cacheHas","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","escapeStringChar","stringEscapes","hasUnicode","reHasUnicode","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","done","mapToArray","overArg","replaceHolders","PLACEHOLDER","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","unicodeWords","reUnicodeWord","VERSION","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","LAZY_WHILE_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","promiseTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsOptJoin","rsOrdLower","rsOrdUpper","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&#39;","\\","\n","\r"," "," ","freeParseFloat","freeParseInt","freeGlobal","freeSelf","freeExports","freeModule","moduleExports","freeProcess","process","nodeUtil","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","lazyValue","isArr","isRight","arrLength","getView","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","Hash","hashClear","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isBuffer","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","baseAssignIn","keysIn","baseAt","skip","baseClone","bitmask","customizer","isDeep","isFlat","isFull","initCloneArray","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","keysFunc","getAllKeysIn","getAllKeys","subValue","baseConforms","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","othLength","othIndex","caches","maxLength","baseInverter","baseInvoke","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","baseMatchesProperty","baseMatches","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","basePullAt","baseUnset","nativeFloor","nativeRandom","baseRange","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","allocUnsafe","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","cloneSet","cloneSymbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","isBind","createCtor","createCaseFirst","methodName","trailing","createCompounder","words","deburr","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","charsLength","createPartial","toFinite","createRelationalOperation","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","createToPairs","createWrap","baseSetData","customDefaultsAssignIn","objectProto","customDefaultsMerge","customOmitClone","isPartial","arrValue","othValue","compared","message","objProps","objLength","skipCtor","objCtor","othCtor","flatten","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","getWrapDetails","hasPath","hasFunc","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","memoizeCapped","memoize","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","reference","updateWrapDetails","shortOut","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","separator","nativeJoin","nth","pullAll","pullAllBy","pullAllWith","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","orderBy","reduceRight","negate","sample","sampleSize","curry","curryRight","debounce","invokeFunc","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","flip","resolver","memoized","Cache","spread","throttle","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isError","nativeIsFinite","isInteger","isMatch","isMatchWith","isNumber","isMaskable","isNull","isNil","objectCtorString","isSafeInteger","isUndefined","isWeakMap","isWeakSet","symIterator","remainder","isBinary","toSafeInteger","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","setWith","isArrLike","unset","updateWith","valuesIn","inRange","floating","upperFirst","endsWith","escape","escapeRegExp","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","reDelimiters","sourceURL","escapeValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","trimEnd","trimStart","truncate","omission","search","newEnd","cond","conforms","defaultTo","matchesProperty","methodNames","noConflict","oldDash","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","idCounter","maxBy","meanBy","minBy","sumBy","defaults","pick","funcProto","coreJsData","IE_PROTO","Buffer","getPrototypeOf","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ArrayBuffer","ctorString","quote","difference","differenceBy","differenceWith","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zipWith","wrapperAt","countBy","findLast","groupBy","invokeMap","keyBy","sortBy","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invertBy","invoke","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","methodOf","over","overEvery","overSome","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","subtract","minuend","subtrahend","entriesIn","extendWith","eachRight","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","8","eval"],"mappings":"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,KACAC,IAAA,KAEAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,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","file":"static/js/vendor.734a472330e3fca54a9b.js","sourcesContent":["webpackJsonp([1,2],{\n\n/***/ 0:\n/***/ (function(module, exports) {\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ 114:\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n\n/***/ 115:\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n\n/***/ 117:\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n\n/***/ 118:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(114)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = { css: css, media: media, sourceMap: sourceMap }\n    if (!newStyles[id]) {\n      part.id = parentId + ':0'\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      part.id = parentId + ':' + newStyles[id].parts.length\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n  var hasSSR = styleElement != null\n\n  // if in production mode and style is already provided by SSR,\n  // simply do nothing.\n  if (hasSSR && isProduction) {\n    return noop\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = styleElement || createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (!hasSSR) {\n    update(obj)\n  }\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n\n/***/ 2:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.2.3\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n\n\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName;\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'function' && vm.options\n      ? vm.options.name\n      : vm._isVue\n        ? vm.$options.name || vm.$options._componentTag\n        : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === \"<Anonymous>\") {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = target.__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = target.__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$3) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (false) {\n      warn((\"Error in \" + info + \":\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!cur) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      if (!cur.fns) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (!oldHook) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (oldHook.fns && oldHook.merged) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns\n) {\n  var res = {};\n  for (var i = 0; i < fns.length; i++) {\n    res[fns[i][0]] = fns[i][1];\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var startTag = \"start \" + name;\n      var endTag = \"end \" + name;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (false) {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (false) {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive == null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar queue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id, vm;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // call updated hooks\n  index = queue.length;\n  while (index--) {\n    watcher = queue[index];\n    vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedProp[key]) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    if (!vnode.componentInstance._isMounted) {\n      vnode.componentInstance._isMounted = true;\n      callHook(vnode.componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      activateChildComponent(vnode.componentInstance, true /* direct */);\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    if (!vnode.componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        vnode.componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(vnode.componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (data.model) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && attrs.hasOwnProperty(keyInLowerCase)\n        ) {\n          warn(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is not declared in component \" +\n            (formatComponentName(Ctor)) + \". Note that HTML attributes are \" +\n            \"case-insensitive and camelCased props need to use their kebab-case \" +\n            \"equivalents when using in-DOM templates. You should probably use \" +\n            \"\\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (on[event]) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { normalizationType = ALWAYS_NORMALIZE; }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (data && data.__ob__) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"production\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = _toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var inject = vm.$options.inject;\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          vm[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n  }\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    /* istanbul ignore if */\n    if (false) {\n      mark('init');\n    }\n\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark('init end');\n      measure(((vm._name) + \" init\"), 'init', 'init end');\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    for (var i = 0; i < latest.length; i++) {\n      if (sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (false) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cachedNode);\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    if (!vnode.componentInstance._inactive) {\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$3.version = '2.2.3';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.componentInstance) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks[i]] !== undefined) { cbs[hooks[i]].push(modules[j][hooks[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (parent) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isReactivated) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (parent) {\n      if (ref) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        (vnode.isCloned || vnode.isOnce)) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (false) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (vnode.parent) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parentElm$1 !== null) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important\n) {\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + value + \"=$$c}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (on[RANGE_TOKEN]) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (on[CHECKBOX_RADIO_TOKEN]) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once,\n  capture\n) {\n  if (once) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(event, handler, capture);\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (!fn) { return false }\n  var invokerFns = fn.fns;\n  if (invokerFns) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n          currentParent.tag === 'textarea' &&\n          currentParent.attrsMap.placeholder === text) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"production\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (false) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (events, native) {\n  var res = native ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    false\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (false) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  return \"[\" + key + \",function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}]\"\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n        el$1.for &&\n        el$1.tag !== 'template' &&\n        el$1.tag !== 'slot') {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var keywordMatch = exp.replace(stripStringRE, '').match(unaryOperatorsRE);\n  if (keywordMatch) {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (false) {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nmodule.exports = Vue$3;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ }),\n\n/***/ 39:\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org Version 4.7.2. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.7.2\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(a, b, f) {\n  var na = a.length, nb = b.length, c = new Array(na * nb), ia, ib, ic, va;\n  if (f == null) f = pair;\n  for (ia = ic = 0; ia < na; ++ia) for (va = a[ia], ib = 0; ib < nb; ++ib, ++ic) c[ic] = f(va, b[ib]);\n  return c;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m([0, 0]);\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]\n        : [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ }),\n\n/***/ 65:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return _;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8), __webpack_require__(115)(module)))\n\n/***/ }),\n\n/***/ 8:\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.734a472330e3fca54a9b.js","module.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 0\n// module chunks = 1","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/listToStyles.js\n// module id = 114\n// module chunks = 1","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 115\n// module chunks = 1","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 117\n// module chunks = 1","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = { css: css, media: media, sourceMap: sourceMap }\n    if (!newStyles[id]) {\n      part.id = parentId + ':0'\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      part.id = parentId + ':' + newStyles[id].parts.length\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n  var hasSSR = styleElement != null\n\n  // if in production mode and style is already provided by SSR,\n  // simply do nothing.\n  if (hasSSR && isProduction) {\n    return noop\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = styleElement || createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (!hasSSR) {\n    update(obj)\n  }\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/addStylesClient.js\n// module id = 118\n// module chunks = 1","/*!\n * Vue.js v2.2.3\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName;\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'function' && vm.options\n      ? vm.options.name\n      : vm._isVue\n        ? vm.$options.name || vm.$options._componentTag\n        : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === \"<Anonymous>\") {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = target.__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = target.__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$3) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Error in \" + info + \":\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!cur) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      if (!cur.fns) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (!oldHook) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (oldHook.fns && oldHook.merged) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns\n) {\n  var res = {};\n  for (var i = 0; i < fns.length; i++) {\n    res[fns[i][0]] = fns[i][1];\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var startTag = \"start \" + name;\n      var endTag = \"end \" + name;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive == null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar queue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id, vm;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // call updated hooks\n  index = queue.length;\n  while (index--) {\n    watcher = queue[index];\n    vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedProp[key]) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    if (!vnode.componentInstance._isMounted) {\n      vnode.componentInstance._isMounted = true;\n      callHook(vnode.componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      activateChildComponent(vnode.componentInstance, true /* direct */);\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    if (!vnode.componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        vnode.componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(vnode.componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (data.model) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && attrs.hasOwnProperty(keyInLowerCase)\n        ) {\n          warn(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is not declared in component \" +\n            (formatComponentName(Ctor)) + \". Note that HTML attributes are \" +\n            \"case-insensitive and camelCased props need to use their kebab-case \" +\n            \"equivalents when using in-DOM templates. You should probably use \" +\n            \"\\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (on[event]) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { normalizationType = ALWAYS_NORMALIZE; }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (data && data.__ob__) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = _toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var inject = vm.$options.inject;\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          vm[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n  }\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      mark('init');\n    }\n\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark('init end');\n      measure(((vm._name) + \" init\"), 'init', 'init end');\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    for (var i = 0; i < latest.length; i++) {\n      if (sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cachedNode);\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    if (!vnode.componentInstance._inactive) {\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$3.version = '2.2.3';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.componentInstance) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks[i]] !== undefined) { cbs[hooks[i]].push(modules[j][hooks[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (parent) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isReactivated) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (parent) {\n      if (ref) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        (vnode.isCloned || vnode.isOnce)) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (vnode.parent) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parentElm$1 !== null) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important\n) {\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + value + \"=$$c}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (on[RANGE_TOKEN]) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (on[CHECKBOX_RADIO_TOKEN]) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once,\n  capture\n) {\n  if (once) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(event, handler, capture);\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitLeaveDuration != null) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (!fn) { return false }\n  var invokerFns = fn.fns;\n  if (invokerFns) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n        mode && mode !== 'in-out' && mode !== 'out-in') {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      config.productionTip !== false &&\n      inBrowser && typeof console !== 'undefined') {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n            (i > pos || !tagName) &&\n            options.warn) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n          currentParent.tag === 'textarea' &&\n          currentParent.attrsMap.placeholder === text) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (process.env.NODE_ENV !== 'production' && map[attrs[i].name] && !isIE) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (events, native) {\n  var res = native ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    maybeComponent(el) && el.tag !== 'slot' && el.tag !== 'template' && !el.key\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  return \"[\" + key + \",function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}]\"\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n        el$1.for &&\n        el$1.tag !== 'template' &&\n        el$1.tag !== 'slot') {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var keywordMatch = exp.replace(stripStringRE, '').match(unaryOperatorsRE);\n  if (keywordMatch) {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (process.env.NODE_ENV !== 'production') {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nmodule.exports = Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.common.js\n// module id = 2\n// module chunks = 1","// https://d3js.org Version 4.7.2. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.7.2\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(a, b, f) {\n  var na = a.length, nb = b.length, c = new Array(na * nb), ia, ib, ic, va;\n  if (f == null) f = pair;\n  for (ia = ic = 0; ia < na; ++ia) for (va = a[ia], ib = 0; ib < nb; ++ib, ++ic) c[ic] = f(va, b[ib]);\n  return c;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m([0, 0]);\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]\n        : [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 39\n// module chunks = 1","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/lodash.js\n// module id = 65\n// module chunks = 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 8\n// module chunks = 1"],"sourceRoot":""}
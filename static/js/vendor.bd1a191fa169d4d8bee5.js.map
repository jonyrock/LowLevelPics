{"version":3,"sources":["webpack:///static/js/vendor.bd1a191fa169d4d8bee5.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/vue-style-loader/lib/listToStyles.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/lib/addStylesClient.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/lodash/lodash.js","webpack:///./~/d3/build/d3.js"],"names":["webpackJsonp","0","module","exports","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","type","default","options","render","staticRenderFns","_scopeId","computed","Object","keys","forEach","key","12","g","this","Function","eval","e","window","140","parentId","list","styles","newStyles","i","length","item","id","css","media","sourceMap","part","parts","push","141","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable","get","l","143","toString","result","join","modules","mediaQuery","alreadyImportedModules","144","__webpack_require__","addStylesToDom","domStyle","stylesInDom","refs","j","addStyle","listToStyles","createStyleElement","styleElement","document","createElement","head","appendChild","obj","update","remove","querySelector","hasSSR","isProduction","noop","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","applyToTag","parentNode","removeChild","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","sources","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","hasDocument","DEBUG","Error","getElementsByTagName","navigator","test","userAgent","toLowerCase","_isProduction","newList","mayRemove","textStore","replacement","filter","Boolean","2","global","_toString","val","String","toNumber","n","parseFloat","isNaN","makeMap","str","expectsLowerCase","map","create","split","arr","indexOf","splice","hasOwn","hasOwnProperty","call","isPrimitive","value","cached","fn","cache","ctx","boundFn","a","arguments","apply","_length","toArray","start","ret","Array","extend","to","_from","isObject","isPlainObject","OBJECT_STRING","toObject","res","genStaticKeys","reduce","m","concat","staticKeys","looseEqual","b","isObjectA","isObjectB","looseIndexOf","once","called","isReserved","c","charCodeAt","def","writable","configurable","parsePath","path","bailRE","segments","isNative","Ctor","pushTarget","_target","Dep","target","targetStack","popTarget","pop","protoAugment","src","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isArray","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","dep","property","getOwnPropertyDescriptor","getter","setter","set","childOb","depend","dependArray","newVal","notify","Math","max","del","mergeData","from","toVal","fromVal","mergeHook","parentVal","childVal","mergeAssets","normalizeProps","props","name","camelize","normalizeDirectives","dirs","directives","mergeOptions","parent","child","vm","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","mixin","prototype","Vue$3","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","prop","absent","isType","hyphenate","undefined","getPropDefaultValue","prevShouldConvert","$options","_props","getType","match","len","handleError","err","info","config","errorHandler","inBrowser","console","error","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","data","text","elm","context","componentOptions","ns","isStatic","isCloned","cloneVNodes","vnodes","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","add","remove$$1","cur","old","event","normalizeEvent","capture","mergeVNodeHook","hookKey","hook","wrappedHook","oldHook","merged","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","nestedIndex","last","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","once$$1","$once","$on","remove$1","$off","oldListeners","eventsMixin","Vue","hookRE","this$1","i$1","cbs","cb","$emit","args","resolveSlots","slots","defaultSlot","functionalContext","slot","every","isWhitespace","node","isComment","resolveScopedSlots","initLifecycle","abstract","$parent","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_update","hydrating","callHook","prevEl","$el","prevVnode","_vnode","prevActiveInstance","activeInstance","__patch__","_parentElm","_refElm","__vue__","$vnode","$forceUpdate","$destroy","teardown","_watchers","_data","mountComponent","el","createEmptyVNode","updateComponent","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","resetSchedulerState","queue","has","waiting","flushing","flushSchedulerQueue","watcher","sort","run","devtools","emit","queueWatcher","nextTick","traverse","seenObjects","clear","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","opts","initProps","methods","initMethods","initData","initComputed","watch","initWatch","propsOptions","isRoot","loop","watchers","_computedWatchers","userDef","computedWatcherOptions","defineComputed","createComputedGetter","dirty","evaluate","handler","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","expOrFn","user","immediate","createComponent","baseCtor","_base","cid","resolved","resolveAsyncComponent","resolveConstructorOptions","model","transformModel","extractProps","functional","createFunctionalComponent","nativeOn","mergeHooks","_context","h","d","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","inlineTemplate","factory","requested","pendingCallbacks","sync","resolve","reject","reason","then","attrs","domProps","altKey","checkProp","hash","preserve","hooksToMerge","fromParent","ours","componentVNodeHooks","mergeHook$1","one","two","callback","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","resolveFilter","identity","checkKeyCodes","eventKeyCode","builtInAlias","keyCodes","bindObjectProps","asProp","mustUseProp","renderStatic","isInFor","tree","_staticTrees","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","initRender","renderContext","_c","$createElement","renderMixin","$nextTick","ref","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","initProvide","provide","_provided","initInjections","inject","hasSymbol","Reflect","ownKeys","provideKey","source","initMixin","_init","_uid","uid","initInternalComponent","constructor","_self","$mount","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","sealed","sealedOptions","dedupe","initUse","use","plugin","installed","unshift","install","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","_assetTypes","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","RegExp","pruneCache","cachedNode","pruneCacheEntry","componentInstance","initGlobalAPI","configDef","util","warn","defineReactive","delete","builtInComponents","genClassForVnode","childNode","mergeClassData","genClassFromData","staticClass","class","dynamicClass","stringifyClass","stringified","slice","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","query","selected","createElement$1","tagName","multiple","createElementNS","namespace","namespaceMap","createComment","newNode","referenceNode","nextSibling","setTextContent","textContent","registerRef","isRemoval","refInFor","isUndef","s","isDef","sameVnode","vnode1","vnode2","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","emptyNodeAt","nodeOps","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","isRootInsert","setScope","createChildren","invokeCreateHooks","insert","isReactivated","keepAlive","init","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","emptyNode","ancestor","addVnodes","startIdx","invokeDestroyHook","destroy","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","oldVnode","hasData","prepatch","postpatch","invokeInsertHook","initial","hydrate","hasChildNodes","childrenMatch","isRenderedModule","hooks","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","parentElm$1","_leaveCb","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","oldAttrs","setAttr","isIE9","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","filters","lastFilterIndex","trim","prev","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","p","charAt","validDivisionCharRE","wrapFilter","baseWarn","msg","pluckModuleFunction","_","addProp","addAttr","addDirective","arg","addHandler","important","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","attrsMap","attrsList","genComponentModel","number","baseValueExpression","valueExpression","assignment","genAssignmentCode","modelRs","parseModel","idx","index$1","expressionPos","expressionEndPos","lastIndexOf","eof","chr","next","isStringStart","parseString","parseBracket","substring","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","CHECKBOX_RADIO_TOKEN","selectedVal","code","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isIE","isChrome","add$1","oldHandler","target$1","ev","remove$2","addEventListener","removeEventListener","updateDOMListeners","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","activeElement","_vModifiers","normalizeStyleData","style","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","oldStyle","newStyle","setProp","addClass","classList","getAttribute","removeClass","tar","replace","resolveTransition","def$$1","autoCssTransition","nextFrame","raf","addTransitionClass","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","timeout","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","end","onEnd","setTimeout","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","Number","enter","toggleDisplay","cancelled","_enterCb","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","isMultiple","option","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","comp","key$1","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","pos","dx","left","dy","top","moved","transform","WebkitTransform","transitionDuration","shouldDecode","content","encoded","div","innerHTML","decode","html","decoder","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","advance","parseStartTag","startTagOpen","attr","startTagClose","attribute","unarySlash","handleStartTag","expectHTML","lastTag","isNonPhrasingTag","parseEndTag","canBeLeftOpenTag","unary","isUnaryTag$$1","IS_REGEX_CAPTURING_BROKEN","stack","lowerCasedTag","lowerCasedTagName","isUnaryTag","no","isPlainTextElement","stackedTag","reStackedTag","reCache","endTagLength","rest","all","endTag","chars","textEnd","comment","commentEnd","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","rest$1","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokens","lastIndex","exec","parse","template","endPre","element","pre","inVPre","platformIsPreTag","inPre","warn$2","platformGetTagNamespace","platformMustUseProp","isPreTag","preTransforms","transforms","postTransforms","root","currentParent","preserveWhitespace","checkRootConstraints","guardIESVGBug","makeAttrsMap","isForbiddenTag","forbidden","processPre","processRawAttrs","processFor","processIf","processOnce","processKey","plain","processRef","processSlot","processComponent","processAttrs","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","i$2","lastNode","decodeHTMLCached","checkInFor","inMatch","forAliasRE","for","alias","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","condition","ifConditions","slotName","component","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","optimize","isStaticKey","genStaticKeysCached","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","staticInFor","staticRoot","walkThroughConditionsBlocks","conditionBlocks","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genKeyFilter","genFilterCode","keyVal","parseInt","bind$1","wrapData","generate","ast","prevStaticRenderFns","currentStaticRenderFns","prevOnceCount","onceCount","currentOptions","warn$3","transforms$1","dataGenFns","platformDirectives$1","isPlatformReservedTag$1","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData","genChildren","genIfConditions","conditions","genTernaryExp","shift","genDirectives","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","baseDirectives","inlineRenderFns","genScopedSlot","scope","checkSkip","el$1","getNormalizationType","genNode","needsNormalization","some","maybeComponent","genText","transformSpecialNewlines","bind$$1","componentName","baseCompile","makeFunction","errors","createCompiler","baseOptions","compile","finalOptions","tips","tip$$1","compiled","compileToFunctions","functionCompileCache","fnGenErrors","transformNode","classBinding","genData$1","transformNode$1","styleBinding","genData$2","getOuterHTML","outerHTML","container","cloneNode","_isServer","_Set","camelizeRE","toUpperCase","hyphenateRE","optionMergeStrategies","silent","productionTip","performance","ignoredElements","_lifecycleHooks","_maxUpdateCount","freeze","hasProto","UA","isEdge","isAndroid","isIOS","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","Symbol","nextTickHandler","pending","copies","callbacks","timerFunc","Promise","logError","catch","MutationObserver","counter","observer","textNode","characterData","_resolve","Set","uid$1","subs","addSub","sub","removeSub","addDep","arrayProto","arrayMethods","method","original","observeArray","arrayKeys","getOwnPropertyNames","isSettingProps","walk","items","instanceData","defaultData","raw","prototypeAccessors","defineProperties","uid$2","deep","active","deps","newDeps","depIds","newDepIds","cleanupDeps","tmp","mountedNode","patternTypes","KeepAlive","include","exclude","created","destroyed","version","testEl","acceptValue","svg","math","isHTMLTag","baseModules","klass","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalize","prefixes","upper","prefixed","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","platformModules","patch","vmodel","model$1","v","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","body","offsetHeight","propertyName","_hasMove","clone","platformComponents","singleAttrIdentifier","singleAttrAssign","singleAttrValues","ncname","qnameCapture","&lt;","&gt;","&quot;","&amp;","&#10;","regexEscapeRE","open","close","esc","tab","space","up","right","down","genGuard","stop","prevent","self","ctrl","alt","meta","middle","cloak","klass$1","style$1","modules$1","directives$1","ref$1","idToTemplate","mount","documentElement","4","__WEBPACK_AMD_DEFINE_RESULT__","addMapEntry","pair","addSetEntry","func","thisArg","arrayAggregator","array","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","string","asciiWords","reAsciiWord","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","object","basePropertyOf","baseReduce","baseSortBy","comparer","current","baseTimes","baseToPairs","baseUnary","baseValues","cacheHas","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","escapeStringChar","stringEscapes","hasUnicode","reHasUnicode","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","done","mapToArray","size","overArg","replaceHolders","PLACEHOLDER","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","unicodeWords","reUnicodeWord","VERSION","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","LAZY_WHILE_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","promiseTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsOptJoin","rsOrdLower","rsOrdUpper","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&#39;","\\","\n","\r"," "," ","freeParseFloat","freeParseInt","freeGlobal","freeSelf","freeExports","freeModule","moduleExports","freeProcess","process","nodeUtil","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","lazyValue","isArr","isRight","arrLength","view","getView","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","Hash","entries","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isBuffer","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","baseAssignIn","keysIn","baseAt","skip","lower","baseClone","bitmask","customizer","isDeep","isFlat","isFull","initCloneArray","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","keysFunc","getAllKeysIn","getAllKeys","subValue","baseConforms","baseConformsTo","baseDelay","wait","TypeError","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","baseInverter","baseInvoke","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","baseMatchesProperty","baseMatches","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","basePullAt","indexes","previous","baseUnset","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","buffer","allocUnsafe","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","cloneSet","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","isBind","createCtor","createCaseFirst","methodName","trailing","createCompounder","words","deburr","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","charsLength","createPartial","createRange","toFinite","createRelationalOperation","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","precision","createToPairs","createWrap","baseSetData","customDefaultsAssignIn","objectProto","customDefaultsMerge","customOmitClone","isPartial","arrValue","othValue","compared","message","convert","objProps","objLength","skipCtor","objCtor","othCtor","flatten","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","getWrapDetails","hasPath","hasFunc","input","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","memoizeCapped","memoize","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","reference","updateWrapDetails","shortOut","count","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","separator","nativeJoin","nth","pullAll","pullAllBy","pullAllWith","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","orderBy","reduceRight","negate","sample","sampleSize","shuffle","after","before","curry","curryRight","debounce","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","now","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","flip","resolver","memoized","Cache","spread","throttle","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMatch","isMatchWith","isNumber","isMaskable","isNull","isNil","proto","objectCtorString","isSafeInteger","isUndefined","isWeakMap","isWeakSet","symIterator","remainder","valueOf","isBinary","toSafeInteger","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","setWith","isArrLike","unset","updateWith","valuesIn","clamp","inRange","random","floating","temp","upperFirst","endsWith","position","escape","escapeRegExp","pad","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","trimEnd","trimStart","truncate","omission","search","newEnd","cond","conforms","constant","defaultTo","matchesProperty","methodNames","noConflict","oldDash","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","idCounter","maxBy","mean","meanBy","min","minBy","sum","sumBy","defaults","pick","Date","funcProto","coreJsData","IE_PROTO","Buffer","getPrototypeOf","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","ceil","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ArrayBuffer","ctorString","quote","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","keyBy","partition","sortBy","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extendWith","each","eachRight","first","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","51","ascendingComparator","f","x","ascending","tickStep","step0","abs","step1","pow","log","LN10","e10","e5","e2","translateX","translateY","y","center","scale","bandwidth","entering","__axis","axis","orient","tickValues","ticks","tickArguments","domain","format","tickFormat","identity$1","spacing","tickSizeInner","tickPadding","range0","range1","selection","selectAll","tick","order","tickExit","exit","tickEnter","append","line","select","k","bottom","epsilon","tickSizeOuter","slice$1","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","t","Dispatch","parseTypenames","typenames","types","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","local","local$1","Local","nextId","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","parseTypenames$1","onRemove","typename","__on","o","onAdd","filterEvents","customEvent","that","sourceEvent","none","empty$1","EnterNode","datum","_next","_parent","bindIndex","groupLength","dataLength","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$1","NaN","attrRemove","attrRemoveNS","attrConstant","attrConstantNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","ClassList","_node","_names","classedAdd","names","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textConstant","textFunction","htmlRemove","htmlConstant","htmlFunction","raise","previousSibling","constantNull","params","window$$1","CustomEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","nopropagation","stopImmediatePropagation","yesdrag","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","Color","color","reHex3","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","rgbConvert","rgb","opacity","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","parseCss","identity$2","cssRoot","cssView","defaultView","getPropertyValue","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","cosh","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","restart","timerFlush","frame","taskHead","wake","clockLast","nap","poke","pokeDelay","taskTail","sleep","interval","clearInterval","setInterval","schedule","__transition","state","CREATED","set$1","STARTING","get$1","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","ease","ENDING","tweenRemove","tween0","tween1","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","ownerSVGElement","width","height","local$$1","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","move","point0","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","touches","touchending","keydowned","keyCode","keyupped","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","selection1","selection0","starting","BrushEvent","constant$4","compareValue","compare","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","map$1","createObject","setObject","createMap","setMap","set$2","objectConverter","columns","customConverter","row","inferColumns","rows","columnSet","column","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","leaf_copy","vx","vy","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","align","sign","comma","formatTypes","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","z","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","link$1","clipExtent","visible","a1","corner","comparePoint","compareIntersection","ca","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","clean","startInside","cleanInside","clipPolygon","clipStream","v_","x_","y_","x__","y__","v__","rejoin","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","L","B","circle","l2","p1","l0","l1","enclose1","enclose2","enclose3","r1","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","d3","A","place","ax","ay","da","db","dc","intersects","distance2","Node$1","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","change","executeShifts","nextAncestor","vim","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","cross$1","Queue","_size","_error","_tasks","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","d1","polymap","bisectRight","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pads","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","requoteRe","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","radialLine","point$2","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","hi","ascendingBisect","bisectLeft","cross","ia","ib","ic","na","nb","descending","variance","deviation","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","permute","permutes","scan","xi","xj","transpose","T","namespaces","xlink","xml","xmlns","creator","matcher","selector","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","mouseenter","mouseleave","selection_on","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","clientLeft","clientTop","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","constant$1","selection_data","enterGroup","updateGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","reA","reB","interpolateString","am","bm","bs","bi","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","dsv","delimiter","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","x$$1","y$$1","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","identity$3","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","epsilon2$1","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","sum$1","sinPhi1","absDelta","phiArc","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","lengthRing","_circle","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","notHemisphere","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$3","await","results","awaitAll","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential$1","request","url","respond","status","mimeType","headers","XMLHttpRequest","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","constant$10","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","ka","kr","star","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$5","none$1","none$2","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","randomUniform","randomLogNormal","randomBates","randomExponential","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity"],"mappings":"AAAAA,cAAc,EAAE,IAEVC,EACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA,SACAC,EACAC,EACAC,EACAC,GAEA,GAAAC,GACAC,EAAAL,QAGAM,QAAAN,GAAAO,OACA,YAAAD,GAAA,aAAAA,IACAF,EAAAJ,EACAK,EAAAL,EAAAO,QAIA,IAAAC,GAAA,kBAAAH,GACAA,EAAAG,QACAH,CAcA,IAXAJ,IACAO,EAAAC,OAAAR,EAAAQ,OACAD,EAAAE,gBAAAT,EAAAS,iBAIAR,IACAM,EAAAG,SAAAT,GAIAC,EAAA,CACA,GAAAS,GAAAJ,EAAAI,WAAAJ,EAAAI,YACAC,QAAAC,KAAAX,GAAAY,QAAA,SAAAC,GACA,GAAAlB,GAAAK,EAAAa,EACAJ,GAAAI,GAAA,WAAmC,MAAAlB,MAInC,OACAM,WACAL,QAAAM,EACAG,aDYMS,GACA,SAAUnB,EAAQC,GEzDxB,GAAAmB,EAGAA,GAAA,WACA,MAAAC,QAGA,KAEAD,KAAAE,SAAA,qBAAAC,MAAA,QACC,MAAAC,GAED,gBAAAC,UACAL,EAAAK,QAOAzB,EAAAC,QAAAmB,GFgEMM,IACA,SAAU1B,EAAQC,GGjFxBD,EAAAC,QAAA,SAAA0B,EAAAC,GAGA,OAFAC,MACAC,KACAC,EAAA,EAAiBA,EAAAH,EAAAI,OAAiBD,IAAA,CAClC,GAAAE,GAAAL,EAAAG,GACAG,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,GACAJ,GAAAP,EAAA,IAAAI,EACAI,MACAC,QACAC,YAEAP,GAAAI,GAGAJ,EAAAI,GAAAK,MAAAC,KAAAF,GAFAT,EAAAW,KAAAV,EAAAI,IAAmCA,KAAAK,OAAAD,KAKnC,MAAAT,KH6FMY,IACA,SAAUzC,EAAQC,GIvHxBD,EAAAC,QAAA,SAAAD,GAoBA,MAnBAA,GAAA0C,kBACA1C,EAAA2C,UAAA,aACA3C,EAAA4C,SAEA5C,EAAA6C,WAAA7C,EAAA6C,aACA9B,OAAA+B,eAAA9C,EAAA,UACA+C,YAAA,EACAC,IAAA,WACA,MAAAhD,GAAAiD,KAGAlC,OAAA+B,eAAA9C,EAAA,MACA+C,YAAA,EACAC,IAAA,WACA,MAAAhD,GAAA+B,KAGA/B,EAAA0C,gBAAA,GAEA1C,IJ+HMkD,IACA,SAAUlD,EAAQC,GK/IxBD,EAAAC,QAAA,WACA,GAAA2B,KA0CA,OAvCAA,GAAAuB,SAAA,WAEA,OADAC,MACArB,EAAA,EAAgBA,EAAAV,KAAAW,OAAiBD,IAAA,CACjC,GAAAE,GAAAZ,KAAAU,EACAE,GAAA,GACAmB,EAAAZ,KAAA,UAAAP,EAAA,OAAwCA,EAAA,QAExCmB,EAAAZ,KAAAP,EAAA,IAGA,MAAAmB,GAAAC,KAAA,KAIAzB,EAAAG,EAAA,SAAAuB,EAAAC,GACA,gBAAAD,KACAA,IAAA,KAAAA,EAAA,KAEA,QADAE,MACAzB,EAAA,EAAgBA,EAAAV,KAAAW,OAAiBD,IAAA,CACjC,GAAAG,GAAAb,KAAAU,GAAA,EACA,iBAAAG,KACAsB,EAAAtB,IAAA,GAEA,IAAAH,EAAA,EAAYA,EAAAuB,EAAAtB,OAAoBD,IAAA,CAChC,GAAAE,GAAAqB,EAAAvB,EAKA,iBAAAE,GAAA,IAAAuB,EAAAvB,EAAA,MACAsB,IAAAtB,EAAA,GACAA,EAAA,GAAAsB,EACKA,IACLtB,EAAA,OAAAA,EAAA,aAAAsB,EAAA,KAEA3B,EAAAY,KAAAP,MAIAL,IL4JM6B,IACA,SAAUzD,EAAQC,EAASyD,GM5HjC,QAAAC,GAAA9B,GACA,OAAAE,GAAA,EAAiBA,EAAAF,EAAAG,OAAmBD,IAAA,CACpC,GAAAE,GAAAJ,EAAAE,GACA6B,EAAAC,EAAA5B,EAAAC,GACA,IAAA0B,EAAA,CACAA,EAAAE,MACA,QAAAC,GAAA,EAAqBA,EAAAH,EAAArB,MAAAP,OAA2B+B,IAChDH,EAAArB,MAAAwB,GAAA9B,EAAAM,MAAAwB,GAEA,MAAYA,EAAA9B,EAAAM,MAAAP,OAAuB+B,IACnCH,EAAArB,MAAAC,KAAAwB,EAAA/B,EAAAM,MAAAwB,IAEAH,GAAArB,MAAAP,OAAAC,EAAAM,MAAAP,SACA4B,EAAArB,MAAAP,OAAAC,EAAAM,MAAAP,YAEK,CAEL,OADAO,MACAwB,EAAA,EAAqBA,EAAA9B,EAAAM,MAAAP,OAAuB+B,IAC5CxB,EAAAC,KAAAwB,EAAA/B,EAAAM,MAAAwB,IAEAF,GAAA5B,EAAAC,KAA8BA,GAAAD,EAAAC,GAAA4B,KAAA,EAAAvB,WAK9B,QAAA0B,GAAAtC,EAAAC,GAGA,OAFAC,MACAC,KACAC,EAAA,EAAiBA,EAAAH,EAAAI,OAAiBD,IAAA,CAClC,GAAAE,GAAAL,EAAAG,GACAG,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,GAAgBH,MAAAC,QAAAC,YAChBP,GAAAI,IAIAI,EAAAJ,GAAAP,EAAA,IAAAG,EAAAI,GAAAK,MAAAP,OACAF,EAAAI,GAAAK,MAAAC,KAAAF,KAJAA,EAAAJ,GAAAP,EAAA,KACAE,EAAAW,KAAAV,EAAAI,IAAmCA,KAAAK,OAAAD,MAMnC,MAAAT,GAGA,QAAAqC,KACA,GAAAC,GAAAC,SAAAC,cAAA,QAGA,OAFAF,GAAA3D,KAAA,WACA8D,EAAAC,YAAAJ,GACAA,EAGA,QAAAH,GAAAQ,GACA,GAAAC,GAAAC,EACAP,EAAAC,SAAAO,cAAA,2BAAAH,EAAAtC,GAAA,MACA0C,EAAA,MAAAT,CAIA,IAAAS,GAAAC,EACA,MAAAC,EAGA,IAAAC,EAAA,CAEA,GAAAC,GAAAC,GACAd,GAAAe,MAAAhB,KACAO,EAAAU,EAAAC,KAAA,KAAAjB,EAAAa,GAAA,GACAN,EAAAS,EAAAC,KAAA,KAAAjB,EAAAa,GAAA,OAGAb,MAAAD,IACAO,EAAAY,EAAAD,KAAA,KAAAjB,GACAO,EAAA,WACAP,EAAAmB,WAAAC,YAAApB,GAQA,OAJAS,IACAH,EAAAD,GAGA,SAAAgB,GACA,GAAAA,EAAA,CACA,GAAAA,EAAArD,MAAAqC,EAAArC,KACAqD,EAAApD,QAAAoC,EAAApC,OACAoD,EAAAnD,YAAAmC,EAAAnC,UACA,MAEAoC,GAAAD,EAAAgB,OAEAd,MAcA,QAAAS,GAAAhB,EAAAsB,EAAAf,EAAAF,GACA,GAAArC,GAAAuC,EAAA,GAAAF,EAAArC,GAEA,IAAAgC,EAAAuB,WACAvB,EAAAuB,WAAAC,QAAAC,EAAAH,EAAAtD,OACG,CACH,GAAA0D,GAAAzB,SAAA0B,eAAA3D,GACA4D,EAAA5B,EAAA4B,UACAA,GAAAN,IAAAtB,EAAAoB,YAAAQ,EAAAN,IACAM,EAAA/D,OACAmC,EAAA6B,aAAAH,EAAAE,EAAAN,IAEAtB,EAAAI,YAAAsB,IAKA,QAAAR,GAAAlB,EAAAK,GACA,GAAArC,GAAAqC,EAAArC,IACAC,EAAAoC,EAAApC,MACAC,EAAAmC,EAAAnC,SAcA,IAZAD,GACA+B,EAAA8B,aAAA,QAAA7D,GAGAC,IAGAF,GAAA,mBAAAE,EAAA6D,QAAA,SAEA/D,GAAA,uDAAyDgE,KAAAC,SAAAC,mBAAAC,KAAAC,UAAAlE,MAAA,OAGzD8B,EAAAuB,WACAvB,EAAAuB,WAAAC,QAAAxD,MACG,CACH,KAAAgC,EAAAqC,YACArC,EAAAoB,YAAApB,EAAAqC,WAEArC,GAAAI,YAAAH,SAAA0B,eAAA3D,KA7NA,GAAAsE,GAAA,mBAAArC,SAEA,uBAAAsC,gBACAD,EACA,SAAAE,OACA,0JAKA,IAAA1C,GAAAP,EAAA,KAeAG,KAQAS,EAAAmC,IAAArC,SAAAE,MAAAF,SAAAwC,qBAAA,YACA1B,EAAA,KACAD,EAAA,EACAJ,GAAA,EACAC,EAAA,aAIAC,EAAA,mBAAA8B,YAAA,eAAAC,KAAAD,UAAAE,UAAAC,cAEAhH,GAAAC,QAAA,SAAA0B,EAAAC,EAAAqF,GACApC,EAAAoC,CAEA,IAAApF,GAAAoC,EAAAtC,EAAAC,EAGA,OAFA+B,GAAA9B,GAEA,SAAAqF,GAEA,OADAC,MACApF,EAAA,EAAmBA,EAAAF,EAAAG,OAAmBD,IAAA,CACtC,GAAAE,GAAAJ,EAAAE,GACA6B,EAAAC,EAAA5B,EAAAC,GACA0B,GAAAE,OACAqD,EAAA3E,KAAAoB,GAEAsD,GACArF,EAAAoC,EAAAtC,EAAAuF,GACAvD,EAAA9B,IAEAA,IAEA,QAAAE,GAAA,EAAmBA,EAAAoF,EAAAnF,OAAsBD,IAAA,CACzC,GAAA6B,GAAAuD,EAAApF,EACA,QAAA6B,EAAAE,KAAA,CACA,OAAAC,GAAA,EAAuBA,EAAAH,EAAArB,MAAAP,OAA2B+B,IAClDH,EAAArB,MAAAwB,WAEAF,GAAAD,EAAA1B,OAuGA,IAAA0D,GAAA,WACA,GAAAwB,KAEA,iBAAA3B,EAAA4B,GAEA,MADAD,GAAA3B,GAAA4B,EACAD,EAAAE,OAAAC,SAAAlE,KAAA,WNkQMmE,EACA,SAAUxH,EAAQC,EAASyD,GAEjC,cO5bA,SAAA+D;;;;;AAYA,QAAAC,GAAAC,GACA,aAAAA,EACA,GACA,gBAAAA,GACArB,KAAAC,UAAAoB,EAAA,QACAC,OAAAD,GAOA,QAAAE,GAAAF,GACA,GAAAG,GAAAC,WAAAJ,EACA,OAAAK,OAAAF,GAAAH,EAAAG,EAOA,QAAAG,GACAC,EACAC,GAIA,OAFAC,GAAArH,OAAAsH,OAAA,MACAzG,EAAAsG,EAAAI,MAAA,KACAvG,EAAA,EAAiBA,EAAAH,EAAAI,OAAiBD,IAClCqG,EAAAxG,EAAAG,KAAA,CAEA,OAAAoG,GACA,SAAAR,GAAsB,MAAAS,GAAAT,EAAAX,gBACtB,SAAAW,GAAsB,MAAAS,GAAAT,IAWtB,QAAAjD,GAAA6D,EAAAtG,GACA,GAAAsG,EAAAvG,OAAA,CACA,GAAAyD,GAAA8C,EAAAC,QAAAvG,EACA,IAAAwD,GAAA,EACA,MAAA8C,GAAAE,OAAAhD,EAAA,IASA,QAAAiD,GAAAlE,EAAAtD,GACA,MAAAyH,IAAAC,KAAApE,EAAAtD,GAMA,QAAA2H,GAAAC,GACA,sBAAAA,IAAA,gBAAAA,GAMA,QAAAC,GAAAC,GACA,GAAAC,GAAAlI,OAAAsH,OAAA,KACA,iBAAAH,GAEA,MADAe,GAAAf,KACAe,EAAAf,GAAAc,EAAAd,KAiCA,QAAA9C,GAAA4D,EAAAE,GACA,QAAAC,GAAAC,GACA,GAAAnG,GAAAoG,UAAArH,MACA,OAAAiB,GACAA,EAAA,EACA+F,EAAAM,MAAAJ,EAAAG,WACAL,EAAAJ,KAAAM,EAAAE,GACAJ,EAAAJ,KAAAM,GAIA,MADAC,GAAAI,QAAAP,EAAAhH,OACAmH,EAMA,QAAAK,GAAA5H,EAAA6H,GACAA,KAAA,CAGA,KAFA,GAAA1H,GAAAH,EAAAI,OAAAyH,EACAC,EAAA,GAAAC,OAAA5H,GACAA,KACA2H,EAAA3H,GAAAH,EAAAG,EAAA0H,EAEA,OAAAC,GAMA,QAAAE,GAAAC,EAAAC,GACA,OAAA5I,KAAA4I,GACAD,EAAA3I,GAAA4I,EAAA5I,EAEA,OAAA2I,GAQA,QAAAE,GAAAvF,GACA,cAAAA,GAAA,gBAAAA,GASA,QAAAwF,GAAAxF,GACA,MAAArB,IAAAyF,KAAApE,KAAAyF,GAMA,QAAAC,GAAA3B,GAEA,OADA4B,MACApI,EAAA,EAAiBA,EAAAwG,EAAAvG,OAAgBD,IACjCwG,EAAAxG,IACA6H,EAAAO,EAAA5B,EAAAxG,GAGA,OAAAoI,GAMA,QAAArF,MAeA,QAAAsF,GAAA9G,GACA,MAAAA,GAAA+G,OAAA,SAAArJ,EAAAsJ,GACA,MAAAtJ,GAAAuJ,OAAAD,EAAAE,qBACGnH,KAAA,KAOH,QAAAoH,GAAArB,EAAAsB,GACA,GAAAC,GAAAZ,EAAAX,GACAwB,EAAAb,EAAAW,EACA,KAAAC,IAAAC,EAOG,OAAAD,IAAAC,GACHhD,OAAAwB,KAAAxB,OAAA8C,EAPA,KACA,MAAApE,MAAAC,UAAA6C,KAAA9C,KAAAC,UAAAmE,GACK,MAAAlJ,GAEL,MAAA4H,KAAAsB,GASA,QAAAG,GAAAtC,EAAAZ,GACA,OAAA5F,GAAA,EAAiBA,EAAAwG,EAAAvG,OAAgBD,IACjC,GAAA0I,EAAAlC,EAAAxG,GAAA4F,GAAkC,MAAA5F,EAElC,UAMA,QAAA+I,GAAA9B,GACA,GAAA+B,IAAA,CACA,mBACAA,IACAA,GAAA,EACA/B,MAkHA,QAAAgC,GAAA9C,GACA,GAAA+C,IAAA/C,EAAA,IAAAgD,WAAA,EACA,aAAAD,GAAA,KAAAA,EAMA,QAAAE,GAAA3G,EAAAtD,EAAAyG,EAAA5E,GACAhC,OAAA+B,eAAA0B,EAAAtD,GACA4H,MAAAnB,EACA5E,eACAqI,UAAA,EACAC,cAAA,IAQA,QAAAC,GAAAC,GACA,IAAAC,GAAA1E,KAAAyE,GAAA,CAGA,GAAAE,GAAAF,EAAAjD,MAAA,IACA,iBAAA9D,GACA,OAAAzC,GAAA,EAAmBA,EAAA0J,EAAAzJ,OAAqBD,IAAA,CACxC,IAAAyC,EAAiB,MACjBA,KAAAiH,EAAA1J,IAEA,MAAAyC,KAyCA,QAAAkH,GAAAC,GACA,oBAAA7E,KAAA6E,EAAAxI,YAkNA,QAAAyI,GAAAC,GACAC,GAAAC,QAAmBC,GAAAxJ,KAAAsJ,GAAAC,QACnBD,GAAAC,OAAAF,EAGA,QAAAI,KACAH,GAAAC,OAAAC,GAAAE,MAoHA,QAAAC,GAAAJ,EAAAK,GAEAL,EAAAM,UAAAD,EASA,QAAAE,GAAAP,EAAAK,EAAApL,GACA,OAAAe,GAAA,EAAAkB,EAAAjC,EAAAgB,OAAkCD,EAAAkB,EAAOlB,IAAA,CACzC,GAAAb,GAAAF,EAAAe,EACAoJ,GAAAY,EAAA7K,EAAAkL,EAAAlL,KASA,QAAAqL,GAAAzD,EAAA0D,GACA,GAAAzC,EAAAjB,GAAA,CAGA,GAAA2D,EAeA,OAdA/D,GAAAI,EAAA,WAAAA,EAAA4D,iBAAAC,IACAF,EAAA3D,EAAA4D,OAEAE,GAAAC,gBACAC,OACAnD,MAAAoD,QAAAjE,IAAAkB,EAAAlB,KACA/H,OAAAiM,aAAAlE,KACAA,EAAAmE,SAEAR,EAAA,GAAAE,IAAA7D,IAEA0D,GAAAC,GACAA,EAAAS,UAEAT,GAMA,QAAAU,GACA3I,EACAtD,EACAyG,EACAyF,GAEA,GAAAC,GAAA,GAAAvB,IAEAwB,EAAAvM,OAAAwM,yBAAA/I,EAAAtD,EACA,KAAAoM,KAAAjC,gBAAA,GAKA,GAAAmC,GAAAF,KAAAtK,IACAyK,EAAAH,KAAAI,IAEAC,EAAApB,EAAA5E,EACA5G,QAAA+B,eAAA0B,EAAAtD,GACA6B,YAAA,EACAsI,cAAA,EACArI,IAAA,WACA,GAAA8F,GAAA0E,IAAA5E,KAAApE,GAAAmD,CAUA,OATAmE,IAAAC,SACAsB,EAAAO,SACAD,GACAA,EAAAN,IAAAO,SAEAjE,MAAAoD,QAAAjE,IACA+E,EAAA/E,IAGAA,GAEA4E,IAAA,SAAAI,GACA,GAAAhF,GAAA0E,IAAA5E,KAAApE,GAAAmD,CAEAmG,KAAAhF,GAAAgF,OAAAhF,QAOA2E,EACAA,EAAA7E,KAAApE,EAAAsJ,GAEAnG,EAAAmG,EAEAH,EAAApB,EAAAuB,GACAT,EAAAU,cAUA,QAAAL,GAAA3B,EAAA7K,EAAAyG,GACA,GAAAgC,MAAAoD,QAAAhB,GAGA,MAFAA,GAAA/J,OAAAgM,KAAAC,IAAAlC,EAAA/J,OAAAd,GACA6K,EAAAtD,OAAAvH,EAAA,EAAAyG,GACAA,CAEA,IAAAe,EAAAqD,EAAA7K,GAEA,MADA6K,GAAA7K,GAAAyG,EACAA,CAEA,IAAA8E,GAAAV,EAAAW,MACA,OAAAX,GAAAkB,QAAAR,KAAAS,QAKAvF,EAEA8E,GAIAU,EAAAV,EAAA3D,MAAA5H,EAAAyG,GACA8E,EAAAY,IAAAU,SACApG,IALAoE,EAAA7K,GAAAyG,EACAA,GAUA,QAAAuG,GAAAnC,EAAA7K,GACA,GAAAyI,MAAAoD,QAAAhB,GAEA,WADAA,GAAAtD,OAAAvH,EAAA,EAGA,IAAAuL,GAAAV,EAAAW,MACAX,GAAAkB,QAAAR,KAAAS,SAOAxE,EAAAqD,EAAA7K,WAGA6K,GAAA7K,GACAuL,GAGAA,EAAAY,IAAAU,UAOA,QAAAF,GAAA/E,GACA,OAAAtH,GAAA,OAAAO,EAAA,EAAAkB,EAAA6F,EAAA9G,OAAiDD,EAAAkB,EAAOlB,IACxDP,EAAAsH,EAAA/G,GACAP,KAAAkL,QAAAlL,EAAAkL,OAAAW,IAAAO,SACAjE,MAAAoD,QAAAvL,IACAqM,EAAArM,GAgCA,QAAA2M,GAAAtE,EAAAuE,GACA,IAAAA,EAAc,MAAAvE,EAGd,QAFA3I,GAAAmN,EAAAC,EACAtN,EAAAD,OAAAC,KAAAoN,GACArM,EAAA,EAAiBA,EAAAf,EAAAgB,OAAiBD,IAClCb,EAAAF,EAAAe,GACAsM,EAAAxE,EAAA3I,GACAoN,EAAAF,EAAAlN,GACAwH,EAAAmB,EAAA3I,GAEK8I,EAAAqE,IAAArE,EAAAsE,IACLH,EAAAE,EAAAC,GAFAZ,EAAA7D,EAAA3I,EAAAoN,EAKA,OAAAzE,GA4DA,QAAA0E,GACAC,EACAC,GAEA,MAAAA,GACAD,EACAA,EAAAjE,OAAAkE,GACA9E,MAAAoD,QAAA0B,GACAA,GACAA,GACAD,EAcA,QAAAE,GAAAF,EAAAC,GACA,GAAAtE,GAAApJ,OAAAsH,OAAAmG,GAAA,KACA,OAAAC,GACA7E,EAAAO,EAAAsE,GACAtE,EA0EA,QAAAwE,GAAAjO,GACA,GAAAkO,GAAAlO,EAAAkO,KACA,IAAAA,EAAA,CACA,GACA7M,GAAA4F,EAAAkH,EADA1E,IAEA,IAAAR,MAAAoD,QAAA6B,GAEA,IADA7M,EAAA6M,EAAA5M,OACAD,KAEA,iBADA4F,EAAAiH,EAAA7M,MAEA8M,EAAAC,GAAAnH,GACAwC,EAAA0E,IAAqBrO,KAAA,WAKlB,IAAAwJ,EAAA4E,GACH,OAAA1N,KAAA0N,GACAjH,EAAAiH,EAAA1N,GACA2N,EAAAC,GAAA5N,GACAiJ,EAAA0E,GAAA7E,EAAArC,GACAA,GACWnH,KAAAmH,EAGXjH,GAAAkO,MAAAzE,GAMA,QAAA4E,GAAArO,GACA,GAAAsO,GAAAtO,EAAAuO,UACA,IAAAD,EACA,OAAA9N,KAAA8N,GAAA,CACA,GAAA7D,GAAA6D,EAAA9N,EACA,mBAAAiK,KACA6D,EAAA9N,IAAqBkE,KAAA+F,EAAA1G,OAAA0G,KAUrB,QAAA+D,GACAC,EACAC,EACAC,GAgCA,QAAAC,GAAApO,GACA,GAAAqO,GAAAC,GAAAtO,IAAAuO,EACA/O,GAAAQ,GAAAqO,EAAAJ,EAAAjO,GAAAkO,EAAAlO,GAAAmO,EAAAnO,GA7BAyN,EAAAS,GACAL,EAAAK,EACA,IAAAM,GAAAN,EAAAO,OAMA,IALAD,IACAP,EAAA,kBAAAO,GACAR,EAAAC,EAAAO,EAAAhP,QAAA2O,GACAH,EAAAC,EAAAO,EAAAL,IAEAD,EAAAQ,OACA,OAAA7N,GAAA,EAAAkB,EAAAmM,EAAAQ,OAAA5N,OAA4CD,EAAAkB,EAAOlB,IAAA,CACnD,GAAA8N,GAAAT,EAAAQ,OAAA7N,EACA8N,GAAAC,oBAAAC,MACAF,IAAAnP,SAEAyO,EAAAD,EAAAC,EAAAU,EAAAR,GAGA,GACAnO,GADAR,IAEA,KAAAQ,IAAAiO,GACAG,EAAApO,EAEA,KAAAA,IAAAkO,GACA1G,EAAAyG,EAAAjO,IACAoO,EAAApO,EAOA,OAAAR,GAQA,QAAAsP,GACAtP,EACAF,EACA0B,EACA+N,GAGA,mBAAA/N,GAAA,CAGA,GAAAgO,GAAAxP,EAAAF,EAEA,IAAAkI,EAAAwH,EAAAhO,GAA2B,MAAAgO,GAAAhO,EAC3B,IAAAiO,GAAArB,GAAA5M,EACA,IAAAwG,EAAAwH,EAAAC,GAAoC,MAAAD,GAAAC,EACpC,IAAAC,GAAAC,GAAAF,EACA,IAAAzH,EAAAwH,EAAAE,GAAqC,MAAAF,GAAAE,EASrC,OAPAF,GAAAhO,IAAAgO,EAAAC,IAAAD,EAAAE,IAYA,QAAAE,GACApP,EACAqP,EACAC,EACAnB,GAEA,GAAAoB,GAAAF,EAAArP,GACAwP,GAAAhI,EAAA8H,EAAAtP,GACA4H,EAAA0H,EAAAtP,EAUA,IARAyP,EAAApJ,QAAAkJ,EAAAjQ,QACAkQ,IAAAhI,EAAA+H,EAAA,WACA3H,GAAA,EACK6H,EAAA/I,OAAA6I,EAAAjQ,OAAA,KAAAsI,OAAA8H,GAAA1P,KACL4H,GAAA,IAIA+H,SAAA/H,EAAA,CACAA,EAAAgI,EAAAzB,EAAAoB,EAAAvP,EAGA,IAAA6P,GAAAnE,GAAAC,aACAD,IAAAC,eAAA,EACAN,EAAAzD,GACA8D,GAAAC,cAAAkE,EAKA,MAAAjI,GAMA,QAAAgI,GAAAzB,EAAAoB,EAAAvP,GAEA,GAAAwH,EAAA+H,EAAA,YAGA,GAAAtF,GAAAsF,EAAAhQ,OAYA,OAAA4O,MAAA2B,SAAAR,WACAK,SAAAxB,EAAA2B,SAAAR,UAAAtP,IACA2P,SAAAxB,EAAA4B,OAAA/P,GACAmO,EAAA4B,OAAA/P,GAIA,kBAAAiK,IAAA,aAAA+F,EAAAT,EAAAjQ,MACA2K,EAAAvC,KAAAyG,GACAlE,GAwFA,QAAA+F,GAAAlI,GACA,GAAAmI,GAAAnI,KAAA7F,WAAAgO,MAAA,qBACA,OAAAA,MAAA,GAGA,QAAAR,GAAAnQ,EAAAwI,GACA,IAAAW,MAAAoD,QAAA/D,GACA,MAAAkI,GAAAlI,KAAAkI,EAAA1Q,EAEA,QAAAuB,GAAA,EAAAqP,EAAApI,EAAAhH,OAAkCD,EAAAqP,EAASrP,IAC3C,GAAAmP,EAAAlI,EAAAjH,MAAAmP,EAAA1Q,GACA,QAIA,UAGA,QAAA6Q,GAAAC,EAAAjC,EAAAkC,GACA,GAAAC,GAAAC,aACAD,GAAAC,aAAA7I,KAAA,KAAA0I,EAAAjC,EAAAkC,OACG,CAKH,IAAAG,IAAA,mBAAAC,SAGA,KAAAL,EAFAK,SAAAC,MAAAN,IAwJA,QAAAO,GAAAlK,GACA,UAAAmK,IAAAjB,qBAAAjJ,OAAAD,IAOA,QAAAoK,GAAAC,GACA,GAAAC,GAAA,GAAAH,IACAE,EAAAE,IACAF,EAAAG,KACAH,EAAAnP,SACAmP,EAAAI,KACAJ,EAAAK,IACAL,EAAAM,QACAN,EAAAO,iBAMA,OAJAN,GAAAO,GAAAR,EAAAQ,GACAP,EAAAQ,SAAAT,EAAAS,SACAR,EAAA/Q,IAAA8Q,EAAA9Q,IACA+Q,EAAAS,UAAA,EACAT,EAGA,QAAAU,GAAAC,GAGA,OAFAxB,GAAAwB,EAAA5Q,OACAmI,EAAA,GAAAR,OAAAyH,GACArP,EAAA,EAAiBA,EAAAqP,EAASrP,IAC1BoI,EAAApI,GAAAgQ,EAAAa,EAAA7Q,GAEA,OAAAoI,GAiBA,QAAA0I,GAAAC,GACA,QAAAC,KACA,GAAAC,GAAA3J,UAEAyJ,EAAAC,EAAAD,GACA,KAAAnJ,MAAAoD,QAAA+F,GAMA,MAAAA,GAAAxJ,MAAA,KAAAD,UALA,QAAAtH,GAAA,EAAqBA,EAAA+Q,EAAA9Q,OAAgBD,IACrC+Q,EAAA/Q,GAAAuH,MAAA,KAAA0J,GAQA,MADAD,GAAAD,MACAC,EAGA,QAAAE,GACAC,EACAC,EACAC,EACAC,EACAhE,GAEA,GAAAR,GAAAyE,EAAAC,EAAAC,CACA,KAAA3E,IAAAqE,GACAI,EAAAJ,EAAArE,GACA0E,EAAAJ,EAAAtE,GACA2E,EAAAC,GAAA5E,GACAyE,IAKKC,EAKAD,IAAAC,IACLA,EAAAT,IAAAQ,EACAJ,EAAArE,GAAA0E,IANAD,EAAAR,MACAQ,EAAAJ,EAAArE,GAAAgE,EAAAS,IAEAF,EAAAI,EAAA3E,KAAAyE,EAAAE,EAAA1I,KAAA0I,EAAAE,UAMA,KAAA7E,IAAAsE,GACAD,EAAArE,KACA2E,EAAAC,GAAA5E,GACAwE,EAAAG,EAAA3E,KAAAsE,EAAAtE,GAAA2E,EAAAE,UAOA,QAAAC,GAAAxI,EAAAyI,EAAAC,GAIA,QAAAC,KACAD,EAAAvK,MAAAjI,KAAAgI,WAGA3E,EAAAqO,EAAAD,IAAAgB,GAPA,GAAAf,GACAgB,EAAA5I,EAAAyI,EASAG,GAKAA,EAAAjB,KAAAiB,EAAAC,QAEAjB,EAAAgB,EACAhB,EAAAD,IAAAtQ,KAAAsR,IAGAf,EAAAF,GAAAkB,EAAAD,IATAf,EAAAF,GAAAiB,IAaAf,EAAAiB,QAAA,EACA7I,EAAAyI,GAAAb,EAiBA,QAAAkB,GAAApR,GACA,OAAAd,GAAA,EAAiBA,EAAAc,EAAAb,OAAqBD,IACtC,GAAA4H,MAAAoD,QAAAlK,EAAAd,IACA,MAAA4H,OAAAmG,UAAAvF,OAAAjB,SAAAzG,EAGA,OAAAA,GAOA,QAAAqR,GAAArR,GACA,MAAAgG,GAAAhG,IACAgP,EAAAhP,IACA8G,MAAAoD,QAAAlK,GACAsR,EAAAtR,GACAgO,OAGA,QAAAsD,GAAAtR,EAAAuR,GACA,GACArS,GAAAkJ,EAAAoJ,EADAlK,IAEA,KAAApI,EAAA,EAAaA,EAAAc,EAAAb,OAAqBD,IAElC,OADAkJ,EAAApI,EAAAd,KACA,iBAAAkJ,KACAoJ,EAAAlK,IAAAnI,OAAA,GAEA2H,MAAAoD,QAAA9B,GACAd,EAAA3H,KAAA8G,MAAAa,EAAAgK,EAAAlJ,GAAAmJ,GAAA,QAAArS,IACK8G,EAAAoC,GACLoJ,KAAAjC,KACAiC,EAAAjC,MAAAxK,OAAAqD,GACO,KAAAA,GAEPd,EAAA3H,KAAAqP,EAAA5G,IAGAA,EAAAmH,MAAAiC,KAAAjC,KACAjI,IAAAnI,OAAA,GAAA6P,EAAAwC,EAAAjC,KAAAnH,EAAAmH,OAGAnH,EAAAiH,KAAA,MAAAjH,EAAA/J,KAAA,MAAAkT,IACAnJ,EAAA/J,IAAA,UAAAkT,EAAA,IAAArS,EAAA,MAEAoI,EAAA3H,KAAAyI,IAIA,OAAAd,GAKA,QAAAmK,IAAAzR,GACA,MAAAA,MAAAyE,OAAA,SAAA2D,GAAmD,MAAAA,MAAAsH,mBAAkC,GAKrF,QAAAgC,IAAAlF,GACAA,EAAAmF,QAAAzT,OAAAsH,OAAA,MACAgH,EAAAoF,eAAA,CAEA,IAAAC,GAAArF,EAAA2B,SAAA2D,gBACAD,IACAE,GAAAvF,EAAAqF,GAMA,QAAAtB,IAAAI,EAAAxK,EAAA6L,GACAA,EACA9I,GAAA+I,MAAAtB,EAAAxK,GAEA+C,GAAAgJ,IAAAvB,EAAAxK,GAIA,QAAAgM,IAAAxB,EAAAxK,GACA+C,GAAAkJ,KAAAzB,EAAAxK,GAGA,QAAA4L,IACAvF,EACAqF,EACAQ,GAEAnJ,GAAAsD,EACA4D,EAAAyB,EAAAQ,MAA+C9B,GAAA4B,GAAA3F,GAG/C,QAAA8F,IAAAC,GACA,GAAAC,GAAA,QACAD,GAAAtF,UAAAiF,IAAA,SAAAvB,EAAAxK,GACA,GAAAsM,GAAAjU,KAEAgO,EAAAhO,IACA,IAAAsI,MAAAoD,QAAAyG,GACA,OAAAzR,GAAA,EAAAkB,EAAAuQ,EAAAxR,OAAuCD,EAAAkB,EAAOlB,IAC9CuT,EAAAP,IAAAvB,EAAAzR,GAAAiH,QAGAqG,EAAAmF,QAAAhB,KAAAnE,EAAAmF,QAAAhB,QAAAhR,KAAAwG,GAGAqM,EAAAvO,KAAA0M,KACAnE,EAAAoF,eAAA,EAGA,OAAApF,IAGA+F,EAAAtF,UAAAgF,MAAA,SAAAtB,EAAAxK,GAEA,QAAAkK,KACA7D,EAAA4F,KAAAzB,EAAAN,GACAlK,EAAAM,MAAA+F,EAAAhG,WAHA,GAAAgG,GAAAhO,IAOA,OAFA6R,GAAAlK,KACAqG,EAAA0F,IAAAvB,EAAAN,GACA7D,GAGA+F,EAAAtF,UAAAmF,KAAA,SAAAzB,EAAAxK,GACA,GAAAsM,GAAAjU,KAEAgO,EAAAhO,IAEA,KAAAgI,UAAArH,OAEA,MADAqN,GAAAmF,QAAAzT,OAAAsH,OAAA,MACAgH,CAGA,IAAA1F,MAAAoD,QAAAyG,GAAA,CACA,OAAA+B,GAAA,EAAAtS,EAAAuQ,EAAAxR,OAAyCuT,EAAAtS,EAASsS,IAClDD,EAAAL,KAAAzB,EAAA+B,GAAAvM,EAEA,OAAAqG,GAGA,GAAAmG,GAAAnG,EAAAmF,QAAAhB,EACA,KAAAgC,EACA,MAAAnG,EAEA,QAAAhG,UAAArH,OAEA,MADAqN,GAAAmF,QAAAhB,GAAA,KACAnE,CAKA,KAFA,GAAAoG,GACA1T,EAAAyT,EAAAxT,OACAD,KAEA,IADA0T,EAAAD,EAAAzT,MACAiH,GAAAyM,EAAAzM,OAAA,CACAwM,EAAA/M,OAAA1G,EAAA,EACA,OAGA,MAAAsN,IAGA+F,EAAAtF,UAAA4F,MAAA,SAAAlC,GACA,GAAAnE,GAAAhO,KACAmU,EAAAnG,EAAAmF,QAAAhB,EACA,IAAAgC,EAAA,CACAA,IAAAxT,OAAA,EAAAwH,EAAAgM,IAEA,QADAG,GAAAnM,EAAAH,UAAA,GACAtH,EAAA,EAAAkB,EAAAuS,EAAAxT,OAAqCD,EAAAkB,EAAOlB,IAC5CyT,EAAAzT,GAAAuH,MAAA+F,EAAAsG,GAGA,MAAAtG,IASA,QAAAuG,IACA/S,EACAyP,GAEA,GAAAuD,KACA,KAAAhT,EACA,MAAAgT,EAIA,QADAhH,GAAAO,EADA0G,KAEA/T,EAAA,EAAAkB,EAAAJ,EAAAb,OAAsCD,EAAAkB,EAAOlB,IAI7C,GAHAqN,EAAAvM,EAAAd,IAGAqN,EAAAkD,aAAAlD,EAAA2G,oBAAAzD,IACAlD,EAAA+C,OAAAtD,EAAAO,EAAA+C,KAAA6D,MAAA,CACA,GAAAA,GAAAH,EAAAhH,KAAAgH,EAAAhH,MACA,cAAAO,EAAA8C,IACA8D,EAAAxT,KAAA8G,MAAA0M,EAAA5G,EAAAvM,UAEAmT,EAAAxT,KAAA4M,OAGA0G,GAAAtT,KAAA4M,EAOA,OAHA0G,GAAAG,MAAAC,MACAL,EAAApV,QAAAqV,GAEAD,EAGA,QAAAK,IAAAC,GACA,MAAAA,GAAAC,WAAA,MAAAD,EAAA/D,KAGA,QAAAiE,IACAvD,GAGA,OADA3I,MACApI,EAAA,EAAiBA,EAAA+Q,EAAA9Q,OAAgBD,IACjCoI,EAAA2I,EAAA/Q,GAAA,IAAA+Q,EAAA/Q,GAAA,EAEA,OAAAoI,GAOA,QAAAmM,IAAAjH,GACA,GAAA3O,GAAA2O,EAAA2B,SAGA7B,EAAAzO,EAAAyO,MACA,IAAAA,IAAAzO,EAAA6V,SAAA,CACA,KAAApH,EAAA6B,SAAAuF,UAAApH,EAAAqH,SACArH,IAAAqH,OAEArH,GAAAsH,UAAAjU,KAAA6M,GAGAA,EAAAmH,QAAArH,EACAE,EAAAqH,MAAAvH,IAAAuH,MAAArH,EAEAA,EAAAoH,aACApH,EAAAsH,SAEAtH,EAAAuH,SAAA,KACAvH,EAAAwH,UAAA,KACAxH,EAAAyH,iBAAA,EACAzH,EAAA0H,YAAA,EACA1H,EAAA2H,cAAA,EACA3H,EAAA4H,mBAAA,EAGA,QAAAC,IAAA9B,GACAA,EAAAtF,UAAAqH,QAAA,SAAAnF,EAAAoF,GACA,GAAA/H,GAAAhO,IACAgO,GAAA0H,YACAM,GAAAhI,EAAA,eAEA,IAAAiI,GAAAjI,EAAAkI,IACAC,EAAAnI,EAAAoI,OACAC,EAAAC,EACAA,IAAAtI,EACAA,EAAAoI,OAAAzF,EAYA3C,EAAAkI,IATAC,EASAnI,EAAAuI,UAAAJ,EAAAxF,GAPA3C,EAAAuI,UACAvI,EAAAkI,IAAAvF,EAAAoF,GAAA,EACA/H,EAAA2B,SAAA6G,WACAxI,EAAA2B,SAAA8G,SAMAH,GAAAD,EAEAJ,IACAA,EAAAS,QAAA,MAEA1I,EAAAkI,MACAlI,EAAAkI,IAAAQ,QAAA1I,GAGAA,EAAA2I,QAAA3I,EAAAmH,SAAAnH,EAAA2I,SAAA3I,EAAAmH,QAAAiB,SACApI,EAAAmH,QAAAe,IAAAlI,EAAAkI,MAMAnC,EAAAtF,UAAAmI,aAAA,WACA,GAAA5I,GAAAhO,IACAgO,GAAAuH,UACAvH,EAAAuH,SAAAnS,UAIA2Q,EAAAtF,UAAAoI,SAAA,WACA,GAAA7I,GAAAhO,IACA,KAAAgO,EAAA4H,kBAAA,CAGAI,GAAAhI,EAAA,iBACAA,EAAA4H,mBAAA,CAEA,IAAA9H,GAAAE,EAAAmH,SACArH,KAAA8H,mBAAA5H,EAAA2B,SAAAuF,UACA7R,EAAAyK,EAAAsH,UAAApH,GAGAA,EAAAuH,UACAvH,EAAAuH,SAAAuB,UAGA,KADA,GAAApW,GAAAsN,EAAA+I,UAAApW,OACAD,KACAsN,EAAA+I,UAAArW,GAAAoW,UAIA9I,GAAAgJ,MAAA3L,QACA2C,EAAAgJ,MAAA3L,OAAAQ,UAGAmC,EAAA2H,cAAA,EACAK,GAAAhI,EAAA,aAEAA,EAAA4F,OAEA5F,EAAAkI,MACAlI,EAAAkI,IAAAQ,QAAA,MAGA1I,EAAAuI,UAAAvI,EAAAoI,OAAA,QAIA,QAAAa,IACAjJ,EACAkJ,EACAnB,GAEA/H,EAAAkI,IAAAgB,EACAlJ,EAAA2B,SAAArQ,SACA0O,EAAA2B,SAAArQ,OAAA6X,IAmBAnB,GAAAhI,EAAA,cAEA,IAAAoJ,EAiCA,OAdAA,GAAA,WACApJ,EAAA8H,QAAA9H,EAAAqJ,UAAAtB,IAIA/H,EAAAuH,SAAA,GAAA+B,IAAAtJ,EAAAoJ,EAAA3T,GACAsS,GAAA,EAIA,MAAA/H,EAAA2I,SACA3I,EAAA0H,YAAA,EACAM,GAAAhI,EAAA,YAEAA,EAGA,QAAAuJ,IACAvJ,EACAmB,EACAkE,EACAmE,EACAC,GAIA,GAAAC,MACAD,GACAzJ,EAAA2B,SAAAgI,iBACAH,EAAA1G,KAAA8G,aACA5J,EAAA6J,eAAAC,GAWA,IARA9J,EAAA2B,SAAAoI,aAAAP,EACAxJ,EAAA2I,OAAAa,EACAxJ,EAAAoI,SACApI,EAAAoI,OAAAtI,OAAA0J,GAEAxJ,EAAA2B,SAAAgI,gBAAAF,EAGAtI,GAAAnB,EAAA2B,SAAApC,MAAA,CACAhC,GAAAC,eAAA,CAMA,QAFA+B,GAAAS,EAAA4B,OACAoI,EAAAhK,EAAA2B,SAAAsI,cACAvX,EAAA,EAAmBA,EAAAsX,EAAArX,OAAqBD,IAAA,CACxC,GAAAb,GAAAmY,EAAAtX,EACA6M,GAAA1N,GAAAoP,EAAApP,EAAAmO,EAAA2B,SAAApC,MAAA4B,EAAAnB,GAEAzC,GAAAC,eAAA,EAKAwC,EAAA2B,SAAAR,YAGA,GAAAkE,EAAA,CACA,GAAAQ,GAAA7F,EAAA2B,SAAA2D,gBACAtF,GAAA2B,SAAA2D,iBAAAD,EACAE,GAAAvF,EAAAqF,EAAAQ,GAGA6D,IACA1J,EAAAkK,OAAA3D,GAAAkD,EAAAD,EAAAvG,SACAjD,EAAA4I,gBAIA,QAAAuB,IAAAnK,GACA,KAAAA,QAAAmH,UACA,GAAAnH,EAAAwH,UAAuB,QAEvB,UAGA,QAAA4C,IAAApK,EAAAqK,GACA,GAAAA,GAEA,GADArK,EAAAyH,iBAAA,EACA0C,GAAAnK,GACA,WAEG,IAAAA,EAAAyH,gBACH,MAEA,IAAAzH,EAAAwH,WAAA,MAAAxH,EAAAwH,UAAA,CACAxH,EAAAwH,WAAA,CACA,QAAA9U,GAAA,EAAmBA,EAAAsN,EAAAoH,UAAAzU,OAAyBD,IAC5C0X,GAAApK,EAAAoH,UAAA1U,GAEAsV,IAAAhI,EAAA,cAIA,QAAAsK,IAAAtK,EAAAqK,GACA,KAAAA,IACArK,EAAAyH,iBAAA,EACA0C,GAAAnK,KAIAA,EAAAwH,WAAA,CACAxH,EAAAwH,WAAA,CACA,QAAA9U,GAAA,EAAmBA,EAAAsN,EAAAoH,UAAAzU,OAAyBD,IAC5C4X,GAAAtK,EAAAoH,UAAA1U,GAEAsV,IAAAhI,EAAA,gBAIA,QAAAgI,IAAAhI,EAAAwE,GACA,GAAA+F,GAAAvK,EAAA2B,SAAA6C,EACA,IAAA+F,EACA,OAAA7X,GAAA,EAAAgC,EAAA6V,EAAA5X,OAAwCD,EAAAgC,EAAOhC,IAC/C,IACA6X,EAAA7X,GAAA6G,KAAAyG,GACO,MAAA7N,GACP6P,EAAA7P,EAAA6N,EAAAwE,EAAA,SAIAxE,EAAAoF,eACApF,EAAAqG,MAAA,QAAA7B,GAiBA,QAAAgG,MACAC,GAAA9X,OAAA,EACA+X,MAIAC,GAAAC,IAAA,EAMA,QAAAC,MACAD,IAAA,CACA,IAAAE,GAAAjY,EAAAmN,CAcA,KAJAyK,GAAAM,KAAA,SAAAhR,EAAAsB,GAA8B,MAAAtB,GAAAlH,GAAAwI,EAAAxI,KAI9BuD,GAAA,EAAiBA,GAAAqU,GAAA9X,OAAsByD,KACvC0U,EAAAL,GAAArU,IACAvD,EAAAiY,EAAAjY,GACA6X,GAAA7X,GAAA,KACAiY,EAAAE,KAoBA,KADA5U,GAAAqU,GAAA9X,OACAyD,MACA0U,EAAAL,GAAArU,IACA4J,EAAA8K,EAAA9K,GACAA,EAAAuH,WAAAuD,GAAA9K,EAAA0H,YACAM,GAAAhI,EAAA,UAMAiL,KAAA9I,GAAA8I,UACAA,GAAAC,KAAA,SAGAV,KAQA,QAAAW,IAAAL,GACA,GAAAjY,GAAAiY,EAAAjY,EACA,UAAA6X,GAAA7X,GAAA,CAEA,GADA6X,GAAA7X,IAAA,EACA+X,GAEK,CAIL,IADA,GAAAlY,GAAA+X,GAAA9X,OAAA,EACAD,GAAA,GAAA+X,GAAA/X,GAAAG,GAAAiY,EAAAjY,IACAH,GAEA+X,IAAArR,OAAAuF,KAAAC,IAAAlM,EAAA0D,IAAA,IAAA0U,OARAL,IAAAtX,KAAA2X,EAWAH,MACAA,IAAA,EACAS,GAAAP,MA2NA,QAAAQ,IAAA/S,GACAgT,GAAAC,QACAC,GAAAlT,EAAAgT,IAGA,QAAAE,IAAAlT,EAAAmT,GACA,GAAA/Y,GAAAf,EACA+Z,EAAApR,MAAAoD,QAAApF,EACA,KAAAoT,GAAAhR,EAAApC,KAAA5G,OAAAiM,aAAArF,GAAA,CAGA,GAAAA,EAAA+E,OAAA,CACA,GAAAsO,GAAArT,EAAA+E,OAAAW,IAAAnL,EACA,IAAA4Y,EAAAf,IAAAiB,GACA,MAEAF,GAAA1H,IAAA4H,GAEA,GAAAD,EAEA,IADAhZ,EAAA4F,EAAA3F,OACAD,KAAiB8Y,GAAAlT,EAAA5F,GAAA+Y,OAIjB,KAFA9Z,EAAAD,OAAAC,KAAA2G,GACA5F,EAAAf,EAAAgB,OACAD,KAAiB8Y,GAAAlT,EAAA3G,EAAAe,IAAA+Y,IAajB,QAAAG,IAAAlP,EAAAmP,EAAAha,GACAia,GAAAnY,IAAA,WACA,MAAA3B,MAAA6Z,GAAAha,IAEAia,GAAAzN,IAAA,SAAA/F,GACAtG,KAAA6Z,GAAAha,GAAAyG,GAEA5G,OAAA+B,eAAAiJ,EAAA7K,EAAAia,IAGA,QAAAC,IAAA/L,GACAA,EAAA+I,YACA,IAAAiD,GAAAhM,EAAA2B,QACAqK,GAAAzM,OAAmB0M,GAAAjM,EAAAgM,EAAAzM,OACnByM,EAAAE,SAAqBC,GAAAnM,EAAAgM,EAAAE,SACrBF,EAAAlJ,KACAsJ,GAAApM,GAEA9C,EAAA8C,EAAAgJ,UAAyB,GAEzBgD,EAAAva,UAAsB4a,GAAArM,EAAAgM,EAAAva,UACtBua,EAAAM,OAAmBC,GAAAvM,EAAAgM,EAAAM,OAKnB,QAAAL,IAAAjM,EAAAwM,GACA,GAAArL,GAAAnB,EAAA2B,SAAAR,cACA5B,EAAAS,EAAA4B,UAGAjQ,EAAAqO,EAAA2B,SAAAsI,aACAwC,GAAAzM,EAAAmH,OAEA5J,IAAAC,cAAAiP,CACA,IAAAC,GAAA,SAAA7a,GACAF,EAAAwB,KAAAtB,EACA,IAAA4H,GAAAwH,EAAApP,EAAA2a,EAAArL,EAAAnB,EAqBAlC,GAAAyB,EAAA1N,EAAA4H,GAKA5H,IAAAmO,IACA4L,GAAA5L,EAAA,SAAAnO,GAIA,QAAAA,KAAA2a,GAAAE,EAAA7a,EACA0L,IAAAC,eAAA,EAGA,QAAA4O,IAAApM,GACA,GAAA8C,GAAA9C,EAAA2B,SAAAmB,IACAA,GAAA9C,EAAAgJ,MAAA,kBAAAlG,GACAA,EAAAvJ,KAAAyG,GACA8C,MACAnI,EAAAmI,KACAA,KAWA,KAHA,GAAAnR,GAAAD,OAAAC,KAAAmR,GACAvD,EAAAS,EAAA2B,SAAApC,MACA7M,EAAAf,EAAAgB,OACAD,KACA6M,GAAAlG,EAAAkG,EAAA5N,EAAAe,KAMKiJ,EAAAhK,EAAAe,KACLkZ,GAAA5L,EAAA,QAAArO,EAAAe,GAIAwK,GAAA4F,GAAA,GAKA,QAAAuJ,IAAArM,EAAAvO,GACA,GAAAkb,GAAA3M,EAAA4M,kBAAAlb,OAAAsH,OAAA,KAEA,QAAAnH,KAAAJ,GAAA,CACA,GAAAob,GAAApb,EAAAI,GACAsM,EAAA,kBAAA0O,OAAAlZ,GAEAgZ,GAAA9a,GAAA,GAAAyX,IAAAtJ,EAAA7B,EAAA1I,EAAAqX,IAKAjb,IAAAmO,IACA+M,GAAA/M,EAAAnO,EAAAgb,IAKA,QAAAE,IAAArQ,EAAA7K,EAAAgb,GACA,kBAAAA,IACAf,GAAAnY,IAAAqZ,GAAAnb,GACAia,GAAAzN,IAAA5I,IAEAqW,GAAAnY,IAAAkZ,EAAAlZ,IACAkZ,EAAAjT,SAAA,EACAoT,GAAAnb,GACAgb,EAAAlZ,IACA8B,EACAqW,GAAAzN,IAAAwO,EAAAxO,IACAwO,EAAAxO,IACA5I,GAEA/D,OAAA+B,eAAAiJ,EAAA7K,EAAAia,IAGA,QAAAkB,IAAAnb,GACA,kBACA,GAAAiZ,GAAA9Y,KAAA4a,mBAAA5a,KAAA4a,kBAAA/a,EACA,IAAAiZ,EAOA,MANAA,GAAAmC,OACAnC,EAAAoC,WAEAzQ,GAAAC,QACAoO,EAAAvM,SAEAuM,EAAArR,OAKA,QAAA0S,IAAAnM,EAAAkM,GACAlM,EAAA2B,SAAApC,KACA,QAAA1N,KAAAqa,GACAlM,EAAAnO,GAAA,MAAAqa,EAAAra,GAAA4D,EAAAM,EAAAmW,EAAAra,GAAAmO,GAmBA,QAAAuM,IAAAvM,EAAAsM,GACA,OAAAza,KAAAya,GAAA,CACA,GAAAa,GAAAb,EAAAza,EACA,IAAAyI,MAAAoD,QAAAyP,GACA,OAAAza,GAAA,EAAqBA,EAAAya,EAAAxa,OAAoBD,IACzC0a,GAAApN,EAAAnO,EAAAsb,EAAAza,QAGA0a,IAAApN,EAAAnO,EAAAsb,IAKA,QAAAC,IAAApN,EAAAnO,EAAAsb,GACA,GAAA9b,EACAsJ,GAAAwS,KACA9b,EAAA8b,EACAA,aAEA,gBAAAA,KACAA,EAAAnN,EAAAmN,IAEAnN,EAAAqN,OAAAxb,EAAAsb,EAAA9b,GAGA,QAAAic,IAAAvH,GAIA,GAAAwH,KACAA,GAAA5Z,IAAA,WAA6B,MAAA3B,MAAAgX,MAC7B,IAAAwE,KACAA,GAAA7Z,IAAA,WAA8B,MAAA3B,MAAA4P,QAa9BlQ,OAAA+B,eAAAsS,EAAAtF,UAAA,QAAA8M,GACA7b,OAAA+B,eAAAsS,EAAAtF,UAAA,SAAA+M,GAEAzH,EAAAtF,UAAAgN,KAAApP,EACA0H,EAAAtF,UAAAiN,QAAA7O,EAEAkH,EAAAtF,UAAA4M,OAAA,SACAM,EACAvH,EACA/U,GAEA,GAAA2O,GAAAhO,IACAX,SACAA,EAAAuc,MAAA,CACA,IAAA9C,GAAA,GAAAxB,IAAAtJ,EAAA2N,EAAAvH,EAAA/U,EAIA,OAHAA,GAAAwc,WACAzH,EAAA7M,KAAAyG,EAAA8K,EAAArR,OAEA,WACAqR,EAAAhC,aAiEA,QAAAgF,IACAxR,EACAwG,EACAG,EACAzP,EACAqP,GAEA,GAAAvG,EAAA,CAIA,GAAAyR,GAAA9K,EAAAtB,SAAAqM,KAKA,IAJAtT,EAAA4B,KACAA,EAAAyR,EAAAxT,OAAA+B,IAGA,kBAAAA,GAAA,CAQA,IAAAA,EAAA2R,IACA,GAAA3R,EAAA4R,SACA5R,IAAA4R,aAOA,MALA5R,EAAA6R,GAAA7R,EAAAyR,EAAA,WAGA9K,EAAA2F,kBAKA,MAOAwF,IAAA9R,GAEAwG,QAGAA,EAAAuL,OACAC,GAAAhS,EAAAjL,QAAAyR,EAIA,IAAA3B,GAAAoN,GAAAzL,EAAAxG,EAGA,IAAAA,EAAAjL,QAAAmd,WACA,MAAAC,IAAAnS,EAAA6E,EAAA2B,EAAAG,EAAAzP,EAKA,IAAA6R,GAAAvC,EAAAe,EAEAf,GAAAe,GAAAf,EAAA4L,SAEApS,EAAAjL,QAAA6V,WAGApE,MAIA6L,GAAA7L,EAGA,IAAAtD,GAAAlD,EAAAjL,QAAAmO,MAAAqD,CAMA,OALA,IAAAJ,IACA,iBAAAnG,EAAA,KAAAkD,EAAA,IAAAA,EAAA,IACAsD,EAAAtB,qBAAAyB,GACK3G,OAAA6E,YAAAkE,YAAAxC,MAAArP,eAKL,QAAAib,IACAnS,EACA6E,EACA2B,EACAG,EACAzP,GAEA,GAAA+L,MACA2B,EAAA5E,EAAAjL,QAAAkO,KACA,IAAA2B,EACA,OAAArP,KAAAqP,GACA3B,EAAA1N,GAAAoP,EAAApP,EAAAqP,EAAAC,EAKA,IAAAyN,GAAAld,OAAAsH,OAAAiK,GACA4L,EAAA,SAAA9U,EAAAsB,EAAAO,EAAAkT,GAAiC,MAAA9Z,IAAA4Z,EAAA7U,EAAAsB,EAAAO,EAAAkT,GAAA,IACjCnM,EAAArG,EAAAjL,QAAAC,OAAAiI,KAAA,KAAAsV,GACAtP,QACAuD,OACAhD,OAAAmD,EACAzP,WACAgT,MAAA,WAAwB,MAAAD,IAAA/S,EAAAyP,KAQxB,OANAN,aAAAF,MACAE,EAAA+D,kBAAAzD,EACAH,EAAA6D,QACAhE,EAAAG,OAAAH,EAAAG,UAAqC6D,KAAA7D,EAAA6D,OAGrChE,EAGA,QAAAoM,IACApM,EACA7C,EACAkP,EACAC,GAEA,GAAAC,GAAAvM,EAAAO,iBACA7R,GACA8d,cAAA,EACArP,SACAqB,UAAA+N,EAAA/N,UACAiO,cAAAF,EAAArM,IACAkH,aAAApH,EACA2C,iBAAA4J,EAAA7J,UACAsE,gBAAAuF,EAAA1b,SACAgV,WAAAwG,GAAA,KACAvG,QAAAwG,GAAA,MAGAI,EAAA1M,EAAAG,KAAAuM,cAKA,OAJAA,KACAhe,EAAAC,OAAA+d,EAAA/d,OACAD,EAAAE,gBAAA8d,EAAA9d,iBAEA,GAAA2d,GAAA5S,KAAAjL,GAGA,QAAA8c,IACAmB,EACAvB,EACA3H,GAEA,IAAAkJ,EAAAC,UAGG,CACHD,EAAAC,WAAA,CACA,IAAApJ,GAAAmJ,EAAAE,kBAAApJ,GACAqJ,GAAA,EAEAC,EAAA,SAAA5U,GAQA,GAPAJ,EAAAI,KACAA,EAAAiT,EAAAxT,OAAAO,IAGAwU,EAAApB,SAAApT,GAGA2U,EACA,OAAA/c,GAAA,EAAAkB,EAAAuS,EAAAxT,OAAuCD,EAAAkB,EAAOlB,IAC9CyT,EAAAzT,GAAAoI,IAKA6U,EAAA,SAAAC,KAOA9U,EAAAwU,EAAAI,EAAAC,EASA,OANA7U,IAAA,kBAAAA,GAAA+U,OAAAP,EAAApB,UACApT,EAAA+U,KAAAH,EAAAC,GAGAF,GAAA,EAEAH,EAAApB,SArCAoB,EAAAE,iBAAArc,KAAAiT,GAyCA,QAAAmI,IAAAzL,EAAAxG,GAIA,GAAA4E,GAAA5E,EAAAjL,QAAAkO,KACA,IAAA2B,EAAA,CAGA,GAAApG,MACAgV,EAAAhN,EAAAgN,MACAvQ,EAAAuD,EAAAvD,MACAwQ,EAAAjN,EAAAiN,QACA,IAAAD,GAAAvQ,GAAAwQ,EACA,OAAAle,KAAAqP,GAAA,CACA,GAAA8O,GAAAzO,GAAA1P,EAgBAoe,IAAAnV,EAAAyE,EAAA1N,EAAAme,GAAA,IACAC,GAAAnV,EAAAgV,EAAAje,EAAAme,IACAC,GAAAnV,EAAAiV,EAAAle,EAAAme,GAGA,MAAAlV,IAGA,QAAAmV,IACAnV,EACAoV,EACAre,EACAme,EACAG,GAEA,GAAAD,EAAA,CACA,GAAA7W,EAAA6W,EAAAre,GAKA,MAJAiJ,GAAAjJ,GAAAqe,EAAAre,GACAse,SACAD,GAAAre,IAEA,CACK,IAAAwH,EAAA6W,EAAAF,GAKL,MAJAlV,GAAAjJ,GAAAqe,EAAAF,GACAG,SACAD,GAAAF,IAEA,EAGA,SAGA,QAAArB,IAAA7L,GACAA,EAAA0B,OACA1B,EAAA0B,QAEA,QAAA9R,GAAA,EAAiBA,EAAA0d,GAAAzd,OAAyBD,IAAA,CAC1C,GAAAb,GAAAue,GAAA1d,GACA2d,EAAAvN,EAAA0B,KAAA3S,GACAye,EAAAC,GAAA1e,EACAiR,GAAA0B,KAAA3S,GAAAwe,EAAAG,GAAAF,EAAAD,GAAAC,GAIA,QAAAE,IAAAC,EAAAC,GACA,gBAAA3W,EAAAsB,EAAAO,EAAAkT,GACA2B,EAAA1W,EAAAsB,EAAAO,EAAAkT,GACA4B,EAAA3W,EAAAsB,EAAAO,EAAAkT,IAMA,QAAAR,IAAAjd,EAAAyR,GACA,GAAA1B,GAAA/P,EAAAgd,OAAAhd,EAAAgd,MAAAjN,MAAA,QACA+C,EAAA9S,EAAAgd,OAAAhd,EAAAgd,MAAAlK,OAAA,SAAgErB,EAAAvD,QAAAuD,EAAAvD,WAA+B6B,GAAA0B,EAAAuL,MAAA5U,KAC/F,IAAAoK,GAAAf,EAAAe,KAAAf,EAAAe,MACAA,GAAAM,GACAN,EAAAM,IAAArB,EAAAuL,MAAAsC,UAAAzV,OAAA2I,EAAAM,IAEAN,EAAAM,GAAArB,EAAAuL,MAAAsC,SAWA,QAAA3b,IACAiO,EACAJ,EACAC,EACAtP,EACAod,EACAC,GAQA,OANAvW,MAAAoD,QAAAoF,IAAAtJ,EAAAsJ,MACA8N,EAAApd,EACAA,EAAAsP,EACAA,EAAAtB,QAEAqP,IAAwBD,EAAAE,IACxBC,GAAA9N,EAAAJ,EAAAC,EAAAtP,EAAAod,GAGA,QAAAG,IACA9N,EACAJ,EACAC,EACAtP,EACAod,GAEA,GAAA9N,KAAAzF,OAMA,MAAA8L,KAEA,KAAAtG,EAEA,MAAAsG,KAGA7O,OAAAoD,QAAAlK,IACA,kBAAAA,GAAA,KACAsP,QACAA,EAAA8G,aAAwBxY,QAAAoC,EAAA,IACxBA,EAAAb,OAAA,GAEAie,IAAAE,GACAtd,EAAAqR,EAAArR,GACGod,IAAAI,KACHxd,EAAAoR,EAAApR,GAEA,IAAAmP,GAAAQ,CACA,oBAAAN,GAAA,CACA,GAAAvG,EACA6G,GAAAhB,GAAA8O,gBAAApO,GAGAF,EAFAR,GAAA+O,cAAArO,GAEA,GAAAJ,IACAN,GAAAgP,qBAAAtO,GAAAC,EAAAtP,EACAgO,cAAAyB,IAEK3G,EAAAqE,EAAAsC,EAAAtB,SAAA,aAAAkB,IAELiL,GAAAxR,EAAAwG,EAAAG,EAAAzP,EAAAqP,GAKA,GAAAJ,IACAI,EAAAC,EAAAtP,EACAgO,cAAAyB,OAKAN,GAAAmL,GAAAjL,EAAAC,EAAAG,EAAAzP,EAEA,OAAAmP,IACAQ,GAAaiO,GAAAzO,EAAAQ,GACbR,GAEAwG,KAIA,QAAAiI,IAAAzO,EAAAQ,GAEA,GADAR,EAAAQ,KACA,kBAAAR,EAAAE,KAIAF,EAAAnP,SACA,OAAAd,GAAA,EAAAkB,EAAA+O,EAAAnP,SAAAb,OAA8CD,EAAAkB,EAAOlB,IAAA,CACrD,GAAAqN,GAAA4C,EAAAnP,SAAAd,EACAqN,GAAA8C,MAAA9C,EAAAoD,IACAiO,GAAArR,EAAAoD,IAWA,QAAAkO,IACA/Y,EACAhH,GAEA,GAAA+I,GAAA3H,EAAAkB,EAAAjC,EAAAE,CACA,IAAAyI,MAAAoD,QAAApF,IAAA,gBAAAA,GAEA,IADA+B,EAAA,GAAAC,OAAAhC,EAAA3F,QACAD,EAAA,EAAAkB,EAAA0E,EAAA3F,OAA+BD,EAAAkB,EAAOlB,IACtC2H,EAAA3H,GAAApB,EAAAgH,EAAA5F,UAEG,oBAAA4F,GAEH,IADA+B,EAAA,GAAAC,OAAAhC,GACA5F,EAAA,EAAeA,EAAA4F,EAAS5F,IACxB2H,EAAA3H,GAAApB,EAAAoB,EAAA,EAAAA,OAEG,IAAAgI,EAAApC,GAGH,IAFA3G,EAAAD,OAAAC,KAAA2G,GACA+B,EAAA,GAAAC,OAAA3I,EAAAgB,QACAD,EAAA,EAAAkB,EAAAjC,EAAAgB,OAAgCD,EAAAkB,EAAOlB,IACvCb,EAAAF,EAAAe,GACA2H,EAAA3H,GAAApB,EAAAgH,EAAAzG,KAAAa,EAGA,OAAA2H,GAQA,QAAAiX,IACA9R,EACA+R,EACAhS,EACAiS,GAEA,GAAAC,GAAAzf,KAAA6X,aAAArK,EACA,IAAAiS,EAKA,MAJAlS,SACAiS,GACAjX,EAAAgF,EAAAiS,GAEAC,EAAAlS,IAAAgS,CAEA,IAAAG,GAAA1f,KAAAkY,OAAA1K,EAUA,OAAAkS,IAAAH,EASA,QAAAI,IAAA9e,GACA,MAAA8N,GAAA3O,KAAA2P,SAAA,UAAA9O,GAAA,IAAA+e,GAQA,QAAAC,IACAC,EACAjgB,EACAkgB,GAEA,GAAAC,GAAA7P,GAAA6P,SAAAngB,IAAAkgB,CACA,OAAAzX,OAAAoD,QAAAsU,GACAA,EAAA7Y,QAAA2Y,MAAA,EAEAE,IAAAF,EASA,QAAAG,IACAnP,EACAD,EACApJ,EACAyY,GAEA,GAAAzY,EACA,GAAAiB,EAAAjB,GAKK,CACLa,MAAAoD,QAAAjE,KACAA,EAAAoB,EAAApB,GAEA,IAAAyW,EACA,QAAAre,KAAA4H,GAAA,CACA,aAAA5H,GAAA,UAAAA,EACAqe,EAAApN,MACS,CACT,GAAA3R,GAAA2R,EAAAgN,OAAAhN,EAAAgN,MAAA3e,IACA+e,GAAAgC,GAAA/P,GAAAgQ,YAAAtP,EAAA1R,EAAAU,GACAiR,EAAAiN,WAAAjN,EAAAiN,aACAjN,EAAAgN,QAAAhN,EAAAgN,UAEAje,IAAAqe,KACAA,EAAAre,GAAA4H,EAAA5H,UAKA,MAAAiR,GAQA,QAAAsP,IACAhc,EACAic,GAEA,GAAAC,GAAAtgB,KAAAugB,aAAAnc,EAGA,OAAAkc,KAAAD,EACA/X,MAAAoD,QAAA4U,GACAhP,EAAAgP,GACA5P,EAAA4P,IAGAA,EAAAtgB,KAAAugB,aAAAnc,GACApE,KAAA2P,SAAApQ,gBAAA6E,GAAAmD,KAAAvH,KAAAwgB,cACAC,GAAAH,EAAA,aAAAlc,GAAA,GACAkc,GAOA,QAAAI,IACAJ,EACAlc,EACAvE,GAGA,MADA4gB,IAAAH,EAAA,WAAAlc,GAAAvE,EAAA,IAAAA,EAAA,QACAygB,EAGA,QAAAG,IACAH,EACAzgB,EACA8gB,GAEA,GAAArY,MAAAoD,QAAA4U,GACA,OAAA5f,GAAA,EAAmBA,EAAA4f,EAAA3f,OAAiBD,IACpC4f,EAAA5f,IAAA,gBAAA4f,GAAA5f,IACAkgB,GAAAN,EAAA5f,GAAAb,EAAA,IAAAa,EAAAigB,OAIAC,IAAAN,EAAAzgB,EAAA8gB,GAIA,QAAAC,IAAA9L,EAAAjV,EAAA8gB,GACA7L,EAAA1D,UAAA,EACA0D,EAAAjV,MACAiV,EAAA6L,SAKA,QAAAE,IAAA7S,GACAA,EAAA2I,OAAA,KACA3I,EAAAoI,OAAA,KACApI,EAAAuS,aAAA,IACA,IAAA/I,GAAAxJ,EAAA2B,SAAAoI,aACA+I,EAAAtJ,KAAAvG,OACAjD,GAAAkK,OAAA3D,GAAAvG,EAAA2B,SAAAgI,gBAAAmJ,GACA9S,EAAA6J,aAAAC,GAKA9J,EAAA+S,GAAA,SAAAhZ,EAAAsB,EAAAO,EAAAkT,GAAiC,MAAA9Z,IAAAgL,EAAAjG,EAAAsB,EAAAO,EAAAkT,GAAA,IAGjC9O,EAAAgT,eAAA,SAAAjZ,EAAAsB,EAAAO,EAAAkT,GAA6C,MAAA9Z,IAAAgL,EAAAjG,EAAAsB,EAAAO,EAAAkT,GAAA,IAG7C,QAAAmE,IAAAlN,GACAA,EAAAtF,UAAAyS,UAAA,SAAAvZ,GACA,MAAAyR,IAAAzR,EAAA3H,OAGA+T,EAAAtF,UAAA4I,QAAA,WACA,GAAArJ,GAAAhO,KACAmhB,EAAAnT,EAAA2B,SACArQ,EAAA6hB,EAAA7hB,OACAC,EAAA4hB,EAAA5hB,gBACAwY,EAAAoJ,EAAApJ,YAEA,IAAA/J,EAAA0H,WAEA,OAAA7V,KAAAmO,GAAAkK,OACAlK,EAAAkK,OAAArY,GAAAyR,EAAAtD,EAAAkK,OAAArY,GAIAmO,GAAA6J,aAAAE,KAAAjH,KAAA8G,aAAAE,GAEAvY,IAAAyO,EAAAuS,eACAvS,EAAAuS,iBAIAvS,EAAA2I,OAAAoB,CAEA,IAAApH,EACA,KACAA,EAAArR,EAAAiI,KAAAyG,EAAAwS,aAAAxS,EAAAgT,gBACK,MAAA7gB,GACL6P,EAAA7P,EAAA6N,EAAA,mBASA2C,EAAA3C,EAAAoI,OAgBA,MAZAzF,aAAAF,MAQAE,EAAAwG,MAGAxG,EAAA7C,OAAAiK,EACApH,GAMAoD,EAAAtF,UAAA2S,GAAAV,GACA3M,EAAAtF,UAAA4S,GAAA7a,EACAuN,EAAAtF,UAAA6S,GAAAjb,EACA0N,EAAAtF,UAAA8S,GAAAlC,GACAtL,EAAAtF,UAAA+S,GAAAlC,GACAvL,EAAAtF,UAAAgT,GAAArY,EACA2K,EAAAtF,UAAAiT,GAAAlY,EACAuK,EAAAtF,UAAAkT,GAAAvB,GACArM,EAAAtF,UAAAmT,GAAAjC,GACA5L,EAAAtF,UAAAoT,GAAAhC,GACA9L,EAAAtF,UAAAqT,GAAA7B,GACAlM,EAAAtF,UAAAsT,GAAAvR,EACAuD,EAAAtF,UAAAuT,GAAA7K,GACApD,EAAAtF,UAAAwT,GAAAjN,GAKA,QAAAkN,IAAAlU,GACA,GAAAmU,GAAAnU,EAAA2B,SAAAwS,OACAA,KACAnU,EAAAoU,UAAA,kBAAAD,GACAA,EAAA5a,KAAAyG,GACAmU,GAIA,QAAAE,IAAArU,GACA,GAAAsU,GAAAtU,EAAA2B,SAAA2S,MACA,IAAAA,EAUA,OAPA5W,GAAApD,MAAAoD,QAAA4W,GACA3iB,EAAA+L,EACA4W,EACAC,GACAC,QAAAC,QAAAH,GACA5iB,OAAAC,KAAA2iB,GAEA5hB,EAAA,EAAmBA,EAAAf,EAAAgB,OAAiBD,IAIpC,IAHA,GAAAb,GAAAF,EAAAe,GACAgiB,EAAAhX,EAAA7L,EAAAyiB,EAAAziB,GACA8iB,EAAA3U,EACA2U,GAAA,CACA,GAAAA,EAAAP,WAAAM,IAAAC,GAAAP,UAAA,CACApU,EAAAnO,GAAA8iB,EAAAP,UAAAM,EACA,OAEAC,IAAAxN,SAUA,QAAAyN,IAAA7O,GACAA,EAAAtF,UAAAoU,MAAA,SAAAxjB,GAMA,GAAA2O,GAAAhO,IAEAgO,GAAA8U,KAAAC,KAEA/U,EAAApC,QAAA,EAEAvM,KAAA8d,aAIA6F,GAAAhV,EAAA3O,GAEA2O,EAAA2B,SAAA9B,EACAuO,GAAApO,EAAAiV,aACA5jB,MACA2O,GAOAA,EAAAwS,aAAAxS,EAGAA,EAAAkV,MAAAlV,EACAiH,GAAAjH,GACAkF,GAAAlF,GACA6S,GAAA7S,GACAgI,GAAAhI,EAAA,gBACAqU,GAAArU,GACA+L,GAAA/L,GACAkU,GAAAlU,GACAgI,GAAAhI,EAAA,WASAA,EAAA2B,SAAAuH,IACAlJ,EAAAmV,OAAAnV,EAAA2B,SAAAuH,KAKA,QAAA8L,IAAAhV,EAAA3O,GACA,GAAA2a,GAAAhM,EAAA2B,SAAAjQ,OAAAsH,OAAAgH,EAAAiV,YAAA5jB,QAEA2a,GAAAlM,OAAAzO,EAAAyO,OACAkM,EAAA7K,UAAA9P,EAAA8P,UACA6K,EAAAjC,aAAA1Y,EAAA0Y,aACAiC,EAAA1G,iBAAAjU,EAAAiU,iBACA0G,EAAArC,gBAAAtY,EAAAsY,gBACAqC,EAAAoD,cAAA/d,EAAA+d,cACApD,EAAAxD,WAAAnX,EAAAmX,WACAwD,EAAAvD,QAAApX,EAAAoX,QACApX,EAAAC,SACA0a,EAAA1a,OAAAD,EAAAC,OACA0a,EAAAza,gBAAAF,EAAAE,iBAIA,QAAA6c,IAAA9R,GACA,GAAAjL,GAAAiL,EAAAjL,OACA,IAAAiL,EAAA8Y,MAAA,CACA,GAAAC,GAAAjH,GAAA9R,EAAA8Y,MAEA,IAAAC,IADA/Y,EAAA+Y,aACA,CAGA/Y,EAAA+Y,cAEA,IAAAC,GAAAC,GAAAjZ,EAEAgZ,IACA/a,EAAA+B,EAAAkZ,cAAAF,GAEAjkB,EAAAiL,EAAAjL,QAAAwO,EAAAwV,EAAA/Y,EAAAkZ,eACAnkB,EAAAmO,OACAnO,EAAAokB,WAAApkB,EAAAmO,MAAAlD,IAIA,MAAAjL,GAGA,QAAAkkB,IAAAjZ,GACA,GAAAoZ,GACAC,EAAArZ,EAAAjL,QACAukB,EAAAtZ,EAAAuZ,aACA,QAAAhkB,KAAA8jB,GACAA,EAAA9jB,KAAA+jB,EAAA/jB,KACA6jB,IAAsBA,MACtBA,EAAA7jB,GAAAikB,GAAAH,EAAA9jB,GAAA+jB,EAAA/jB,IAGA,OAAA6jB,GAGA,QAAAI,IAAAH,EAAAC,GAGA,GAAAtb,MAAAoD,QAAAiY,GAAA,CACA,GAAA7a,KACA8a,GAAAtb,MAAAoD,QAAAkY,QACA,QAAAljB,GAAA,EAAmBA,EAAAijB,EAAAhjB,OAAmBD,IACtCkjB,EAAAzc,QAAAwc,EAAAjjB,IAAA,GACAoI,EAAA3H,KAAAwiB,EAAAjjB,GAGA,OAAAoI,GAEA,MAAA6a,GAIA,QAAAjV,IAAArP,GAKAW,KAAA6iB,MAAAxjB,GAWA,QAAA0kB,IAAAhQ,GACAA,EAAAiQ,IAAA,SAAAC,GAEA,IAAAA,EAAAC,UAAA,CAIA,GAAA5P,GAAAnM,EAAAH,UAAA,EAQA,OAPAsM,GAAA6P,QAAAnkB,MACA,kBAAAikB,GAAAG,QACAH,EAAAG,QAAAnc,MAAAgc,EAAA3P,GACK,kBAAA2P,IACLA,EAAAhc,MAAA,KAAAqM,GAEA2P,EAAAC,WAAA,EACAlkB,OAMA,QAAAqkB,IAAAtQ,GACAA,EAAAvF,MAAA,SAAAA,GACAxO,KAAAX,QAAAwO,EAAA7N,KAAAX,QAAAmP,IAMA,QAAA8V,IAAAvQ,GAMAA,EAAAkI,IAAA,CACA,IAAAA,GAAA,CAKAlI,GAAAxL,OAAA,SAAAib,GACAA,OACA,IAAAe,GAAAvkB,KACAwkB,EAAAD,EAAAtI,IACAwI,EAAAjB,EAAAkB,QAAAlB,EAAAkB,SACA,IAAAD,EAAAD,GACA,MAAAC,GAAAD,EAGA,IAAAhX,GAAAgW,EAAAhW,MAAA+W,EAAAllB,QAAAmO,KAWAmX,EAAA,SAAAtlB,GACAW,KAAA6iB,MAAAxjB,GA6CA,OA3CAslB,GAAAlW,UAAA/O,OAAAsH,OAAAud,EAAA9V,WACAkW,EAAAlW,UAAAwU,YAAA0B,EACAA,EAAA1I,QACA0I,EAAAtlB,QAAAwO,EACA0W,EAAAllB,QACAmkB,GAEAmB,EAAA,MAAAJ,EAKAI,EAAAtlB,QAAAkO,OACAqX,GAAAD,GAEAA,EAAAtlB,QAAAI,UACAolB,GAAAF,GAIAA,EAAApc,OAAAgc,EAAAhc,OACAoc,EAAAnW,MAAA+V,EAAA/V,MACAmW,EAAAX,IAAAO,EAAAP,IAIA7T,GAAA2U,YAAAllB,QAAA,SAAAT,GACAwlB,EAAAxlB,GAAAolB,EAAAplB,KAGAqO,IACAmX,EAAAtlB,QAAAokB,WAAAjW,GAAAmX,GAMAA,EAAAtB,aAAAkB,EAAAllB,QACAslB,EAAAnB,gBACAmB,EAAAd,cAAAtb,KAAiCoc,EAAAtlB,SAGjColB,EAAAD,GAAAG,EACAA,GAIA,QAAAC,IAAAG,GACA,GAAAxX,GAAAwX,EAAA1lB,QAAAkO,KACA,QAAA1N,KAAA0N,GACAqM,GAAAmL,EAAAtW,UAAA,SAAA5O,GAIA,QAAAglB,IAAAE,GACA,GAAAtlB,GAAAslB,EAAA1lB,QAAAI,QACA,QAAAI,KAAAJ,GACAsb,GAAAgK,EAAAtW,UAAA5O,EAAAJ,EAAAI,IAMA,QAAAmlB,IAAAjR,GAIA5D,GAAA2U,YAAAllB,QAAA,SAAAT,GACA4U,EAAA5U,GAAA,SACA0B,EACAokB,GAEA,MAAAA,IAYA,cAAA9lB,GAAAwJ,EAAAsc,KACAA,EAAAzX,KAAAyX,EAAAzX,MAAA3M,EACAokB,EAAAjlB,KAAAX,QAAA2c,MAAAzT,OAAA0c,IAEA,cAAA9lB,GAAA,kBAAA8lB,KACAA,GAAwBlhB,KAAAkhB,EAAA7hB,OAAA6hB,IAExBjlB,KAAAX,QAAAF,EAAA,KAAA0B,GAAAokB,EACAA,GAnBAjlB,KAAAX,QAAAF,EAAA,KAAA0B,MA6BA,QAAAqkB,IAAAlL,GACA,MAAAA,OAAA1P,KAAAjL,QAAAmO,MAAAwM,EAAAnJ,KAGA,QAAAsU,IAAAC,EAAA5X,GACA,sBAAA4X,GACAA,EAAAne,MAAA,KAAAE,QAAAqG,IAAA,EACG4X,YAAAC,SACHD,EAAA3f,KAAA+H,GAMA,QAAA8X,IAAA1d,EAAA3B,GACA,OAAApG,KAAA+H,GAAA,CACA,GAAA2d,GAAA3d,EAAA/H,EACA,IAAA0lB,EAAA,CACA,GAAA/X,GAAA0X,GAAAK,EAAArU,iBACA1D,KAAAvH,EAAAuH,KACAgY,GAAAD,GACA3d,EAAA/H,GAAA,QAMA,QAAA2lB,IAAA7U,GACAA,IACAA,EAAA8U,kBAAAjQ,WACAQ,GAAArF,EAAA8U,kBAAA,eAEA9U,EAAA8U,kBAAA5O,YAoEA,QAAA6O,IAAA3R,GAEA,GAAA4R,KACAA,GAAAhkB,IAAA,WAA+B,MAAAwO,KAQ/BzQ,OAAA+B,eAAAsS,EAAA,SAAA4R,GAKA5R,EAAA6R,MACAC,QACAtd,SACAsF,eACAiY,eAAAha,GAGAiI,EAAA1H,MACA0H,EAAAgS,OAAAlZ,EACAkH,EAAAqF,YAEArF,EAAA1U,QAAAK,OAAAsH,OAAA,MACAmJ,GAAA2U,YAAAllB,QAAA,SAAAT,GACA4U,EAAA1U,QAAAF,EAAA,KAAAO,OAAAsH,OAAA,QAKA+M,EAAA1U,QAAA2c,MAAAjI,EAEAxL,EAAAwL,EAAA1U,QAAAokB,WAAAuC,IAEAjC,GAAAhQ,GACAsQ,GAAAtQ,GACAuQ,GAAAvQ,GACAiR,GAAAjR,GAmDA,QAAAkS,IAAAtV,GAIA,IAHA,GAAAG,GAAAH,EAAAG,KACA7M,EAAA0M,EACAuV,EAAAvV,EACAuV,EAAAT,mBACAS,IAAAT,kBAAArP,OACA8P,EAAApV,OACAA,EAAAqV,GAAAD,EAAApV,QAGA,MAAA7M,IAAA6J,QACA7J,EAAA6M,OACAA,EAAAqV,GAAArV,EAAA7M,EAAA6M,MAGA,OAAAsV,IAAAtV,GAGA,QAAAqV,IAAApY,EAAAD,GACA,OACAuY,YAAAnd,GAAA6E,EAAAsY,YAAAvY,EAAAuY,aACAC,MAAAvY,EAAAuY,OACAvY,EAAAuY,MAAAxY,EAAAwY,OACAxY,EAAAwY,OAIA,QAAAF,IAAAtV,GACA,GAAAyV,GAAAzV,EAAAwV,MACAD,EAAAvV,EAAAuV,WACA,OAAAA,IAAAE,EACArd,GAAAmd,EAAAG,GAAAD,IAGA,GAGA,QAAArd,IAAAnB,EAAAsB,GACA,MAAAtB,GAAAsB,EAAAtB,EAAA,IAAAsB,EAAAtB,EAAAsB,GAAA,GAGA,QAAAmd,IAAA/e,GACA,GAAAqB,GAAA,EACA,KAAArB,EACA,MAAAqB,EAEA,oBAAArB,GACA,MAAAA,EAEA,IAAAa,MAAAoD,QAAAjE,GAAA,CAEA,OADAgf,GACA/lB,EAAA,EAAAkB,EAAA6F,EAAA9G,OAAqCD,EAAAkB,EAAOlB,IAC5C+G,EAAA/G,KACA+lB,EAAAD,GAAA/e,EAAA/G,OACAoI,GAAA2d,EAAA,IAIA,OAAA3d,GAAA4d,MAAA,MAEA,GAAAhe,EAAAjB,GAAA,CACA,OAAA5H,KAAA4H,GACAA,EAAA5H,KAAuBiJ,GAAAjJ,EAAA,IAEvB,OAAAiJ,GAAA4d,MAAA,MAGA,MAAA5d,GAuCA,QAAAmW,IAAApO,GACA,MAAA8V,IAAA9V,GACA,MAIA,SAAAA,EACA,OADA,OAMA,QAAA+V,IAAA/V,GAEA,IAAAR,GACA,QAEA,IAAA6O,GAAArO,GACA,QAIA,IAFAA,IAAAlL,cAEA,MAAAkhB,GAAAhW,GACA,MAAAgW,IAAAhW,EAEA,IAAAqG,GAAAnU,SAAAC,cAAA6N,EACA,OAAAA,GAAA1J,QAAA,QAEA0f,GAAAhW,GACAqG,EAAA+L,cAAA7iB,OAAA0mB,oBACA5P,EAAA+L,cAAA7iB,OAAA2mB,YAGAF,GAAAhW,GAAA,qBAAApL,KAAAyR,EAAApV,YASA,QAAAklB,IAAA9P,GACA,mBAAAA,GAAA,CACA,GAAA+P,GAAAlkB,SAAAO,cAAA4T,EACA,OAAA+P,GAMAA,EAFAlkB,SAAAC,cAAA,OAIA,MAAAkU,GAMA,QAAAgQ,IAAAC,EAAAxW,GACA,GAAAK,GAAAjO,SAAAC,cAAAmkB,EACA,kBAAAA,EACAnW,GAGAL,EAAAG,MAAAH,EAAAG,KAAAgN,OAAAtO,SAAAmB,EAAAG,KAAAgN,MAAAsJ,UACApW,EAAApM,aAAA,uBAEAoM,GAGA,QAAAqW,IAAAC,EAAAH,GACA,MAAApkB,UAAAskB,gBAAAE,GAAAD,GAAAH,GAGA,QAAA1iB,IAAAsM,GACA,MAAAhO,UAAA0B,eAAAsM,GAGA,QAAAyW,IAAAzW,GACA,MAAAhO,UAAAykB,cAAAzW,GAGA,QAAApM,IAAAV,EAAAwjB,EAAAC,GACAzjB,EAAAU,aAAA8iB,EAAAC,GAGA,QAAAxjB,IAAA4Q,EAAA/G,GACA+G,EAAA5Q,YAAA6J,GAGA,QAAA7K,IAAA4R,EAAA/G,GACA+G,EAAA5R,YAAA6K,GAGA,QAAA9J,IAAA6Q,GACA,MAAAA,GAAA7Q,WAGA,QAAA0jB,IAAA7S,GACA,MAAAA,GAAA6S,YAGA,QAAAR,IAAArS,GACA,MAAAA,GAAAqS,QAGA,QAAAS,IAAA9S,EAAA/D,GACA+D,EAAA+S,YAAA9W,EAGA,QAAAnM,IAAAkQ,EAAAjV,EAAAyG,GACAwO,EAAAlQ,aAAA/E,EAAAyG,GAoCA,QAAAwhB,IAAAnX,EAAAoX,GACA,GAAAloB,GAAA8Q,EAAAG,KAAAqQ,GACA,IAAAthB,EAAA,CAEA,GAAAmO,GAAA2C,EAAAM,QACAkQ,EAAAxQ,EAAA8U,mBAAA9U,EAAAK,IACAvO,EAAAuL,EAAAsH,KACAyS,GACAzf,MAAAoD,QAAAjJ,EAAA5C,IACAwD,EAAAZ,EAAA5C,GAAAshB,GACK1e,EAAA5C,KAAAshB,IACL1e,EAAA5C,GAAA2P,QAGAmB,EAAAG,KAAAkX,SACA1f,MAAAoD,QAAAjJ,EAAA5C,KAAA4C,EAAA5C,GAAAsH,QAAAga,GAAA,EACA1e,EAAA5C,GAAAsB,KAAAggB,GAEA1e,EAAA5C,IAAAshB,GAGA1e,EAAA5C,GAAAshB,GAuBA,QAAA8G,IAAAC,GACA,aAAAA,EAGA,QAAAC,IAAAD,GACA,aAAAA,EAGA,QAAAE,IAAAC,EAAAC,GACA,MACAD,GAAAxoB,MAAAyoB,EAAAzoB,KACAwoB,EAAAxX,MAAAyX,EAAAzX,KACAwX,EAAAtT,YAAAuT,EAAAvT,YACAsT,EAAAvX,OAAAwX,EAAAxX,KAIA,QAAAyX,IAAA/mB,EAAAgnB,EAAAC,GACA,GAAA/nB,GAAAb,EACAkH,IACA,KAAArG,EAAA8nB,EAAoB9nB,GAAA+nB,IAAa/nB,EACjCb,EAAA2B,EAAAd,GAAAb,IACAsoB,GAAAtoB,KAAqBkH,EAAAlH,GAAAa,EAErB,OAAAqG,GAGA,QAAA2hB,IAAAC,GAcA,QAAAC,GAAA5X,GACA,UAAAP,IAAAoY,EAAA1B,QAAAnW,GAAArL,oBAA2D6J,OAAAwB,GAG3D,QAAA8X,GAAAC,EAAA1V,GACA,QAAArB,KACA,KAAAA,EAAAqB,WACA2V,EAAAD,GAIA,MADA/W,GAAAqB,YACArB,EAGA,QAAAgX,GAAA9R,GACA,GAAApJ,GAAA+a,EAAA5kB,WAAAiT,EAEApJ,IACA+a,EAAA3kB,YAAA4J,EAAAoJ,GAKA,QAAA+R,GAAAtY,EAAAuY,EAAAlM,EAAAC,EAAAkM,GAEA,GADAxY,EAAAyY,cAAAD,GACArN,EAAAnL,EAAAuY,EAAAlM,EAAAC,GAAA,CAIA,GAAAnM,GAAAH,EAAAG,KACAtP,EAAAmP,EAAAnP,SACAqP,EAAAF,EAAAE,GACAsX,IAAAtX,IAmBAF,EAAAK,IAAAL,EAAAQ,GACA0X,EAAAxB,gBAAA1W,EAAAQ,GAAAN,GACAgY,EAAA7lB,cAAA6N,EAAAF,GACA0Y,EAAA1Y,GAIA2Y,EAAA3Y,EAAAnP,EAAA0nB,GACAf,GAAArX,IACAyY,EAAA5Y,EAAAuY,GAEAM,EAAAxM,EAAArM,EAAAK,IAAAiM,IAMKtM,EAAAoE,WACLpE,EAAAK,IAAA6X,EAAArB,cAAA7W,EAAAI,MACAyY,EAAAxM,EAAArM,EAAAK,IAAAiM,KAEAtM,EAAAK,IAAA6X,EAAApkB,eAAAkM,EAAAI,MACAyY,EAAAxM,EAAArM,EAAAK,IAAAiM,KAIA,QAAAnB,GAAAnL,EAAAuY,EAAAlM,EAAAC,GACA,GAAAvc,GAAAiQ,EAAAG,IACA,IAAAqX,GAAAznB,GAAA,CACA,GAAA+oB,GAAAtB,GAAAxX,EAAA8U,oBAAA/kB,EAAAgpB,SAQA,IAPAvB,GAAAznB,IAAA8R,OAAA2V,GAAAznB,IAAAipB,OACAjpB,EAAAiQ,GAAA,EAAAqM,EAAAC,GAMAkL,GAAAxX,EAAA8U,mBAKA,MAJAmE,GAAAjZ,EAAAuY,GACAO,GACAI,EAAAlZ,EAAAuY,EAAAlM,EAAAC,IAEA,GAKA,QAAA2M,GAAAjZ,EAAAuY,GACAvY,EAAAG,KAAAgZ,eACAZ,EAAA/nB,KAAA8G,MAAAihB,EAAAvY,EAAAG,KAAAgZ,eAEAnZ,EAAAK,IAAAL,EAAA8U,kBAAAvP,IACA6T,EAAApZ,IACA4Y,EAAA5Y,EAAAuY,GACAG,EAAA1Y,KAIAmX,GAAAnX,GAEAuY,EAAA/nB,KAAAwP,IAIA,QAAAkZ,GAAAlZ,EAAAuY,EAAAlM,EAAAC,GAOA,IANA,GAAAvc,GAKAspB,EAAArZ,EACAqZ,EAAAvE,mBAEA,GADAuE,IAAAvE,kBAAArP,OACA+R,GAAAznB,EAAAspB,EAAAlZ,OAAAqX,GAAAznB,IAAAupB,YAAA,CACA,IAAAvpB,EAAA,EAAmBA,EAAAyT,EAAA+V,SAAAvpB,SAAyBD,EAC5CyT,EAAA+V,SAAAxpB,GAAAypB,GAAAH,EAEAd,GAAA/nB,KAAA6oB,EACA,OAKAR,EAAAxM,EAAArM,EAAAK,IAAAiM,GAGA,QAAAuM,GAAA1b,EAAAkD,EAAAmQ,GACArT,IACAqT,EACA0H,EAAAlkB,aAAAmJ,EAAAkD,EAAAmQ,GAEA0H,EAAA3lB,YAAA4K,EAAAkD,IAKA,QAAAsY,GAAA3Y,EAAAnP,EAAA0nB,GACA,GAAA5gB,MAAAoD,QAAAlK,GACA,OAAAd,GAAA,EAAqBA,EAAAc,EAAAb,SAAqBD,EAC1CuoB,EAAAznB,EAAAd,GAAAwoB,EAAAvY,EAAAK,IAAA,aAEKxJ,GAAAmJ,EAAAI,OACL8X,EAAA3lB,YAAAyN,EAAAK,IAAA6X,EAAApkB,eAAAkM,EAAAI,OAIA,QAAAgZ,GAAApZ,GACA,KAAAA,EAAA8U,mBACA9U,IAAA8U,kBAAArP,MAEA,OAAA+R,IAAAxX,EAAAE,KAGA,QAAA0Y,GAAA5Y,EAAAuY,GACA,OAAAhV,GAAA,EAAqBA,EAAAC,EAAAnN,OAAArG,SAAyBuT,EAC9CC,EAAAnN,OAAAkN,GAAAiW,GAAAxZ,EAEAjQ,GAAAiQ,EAAAG,KAAA0B,KACA2V,GAAAznB,KACAA,EAAAsG,QAAqBtG,EAAAsG,OAAAmjB,GAAAxZ,GACrBjQ,EAAA8oB,QAAqBN,EAAA/nB,KAAAwP,IAOrB,QAAA0Y,GAAA1Y,GAGA,IAFA,GAAAjQ,GACA0pB,EAAAzZ,EACAyZ,GACAjC,GAAAznB,EAAA0pB,EAAAnZ,UAAAkX,GAAAznB,IAAAiP,SAAAnQ,WACAqpB,EAAAjkB,aAAA+L,EAAAK,IAAAtQ,EAAA,IAEA0pB,IAAAtc,MAGAqa,IAAAznB,EAAA4V,KACA5V,IAAAiQ,EAAAM,SACAkX,GAAAznB,IAAAiP,SAAAnQ,WACAqpB,EAAAjkB,aAAA+L,EAAAK,IAAAtQ,EAAA,IAIA,QAAA2pB,GAAArN,EAAAC,EAAA1L,EAAA+Y,EAAA7B,EAAAS,GACA,KAAUoB,GAAA7B,IAAoB6B,EAC9BrB,EAAA1X,EAAA+Y,GAAApB,EAAAlM,EAAAC,GAIA,QAAAsN,GAAA5Z,GACA,GAAAjQ,GAAAgC,EACAoO,EAAAH,EAAAG,IACA,IAAAqX,GAAArX,GAEA,IADAqX,GAAAznB,EAAAoQ,EAAA0B,OAAA2V,GAAAznB,IAAA8pB,UAAyD9pB,EAAAiQ,GACzDjQ,EAAA,EAAiBA,EAAAyT,EAAAqW,QAAA7pB,SAAwBD,EAAOyT,EAAAqW,QAAA9pB,GAAAiQ,EAEhD,IAAAwX,GAAAznB,EAAAiQ,EAAAnP,UACA,IAAAkB,EAAA,EAAiBA,EAAAiO,EAAAnP,SAAAb,SAA2B+B,EAC5C6nB,EAAA5Z,EAAAnP,SAAAkB,IAKA,QAAA+nB,GAAAzN,EAAAzL,EAAA+Y,EAAA7B,GACA,KAAU6B,GAAA7B,IAAoB6B,EAAA,CAC9B,GAAAI,GAAAnZ,EAAA+Y,EACAnC,IAAAuC,KACAvC,GAAAuC,EAAA7Z,MACA8Z,EAAAD,GACAH,EAAAG,IAEA1B,EAAA0B,EAAA1Z,OAMA,QAAA2Z,GAAAha,EAAAia,GACA,GAAAA,GAAAzC,GAAAxX,EAAAG,MAAA,CACA,GAAAuC,GAAAc,EAAA9Q,OAAA1C,OAAA,CAaA,KAZAiqB,EAMAA,EAAAvX,aAJAuX,EAAA9B,EAAAnY,EAAAK,IAAAqC,GAOA8U,GAAAznB,EAAAiQ,EAAA8U,oBAAA0C,GAAAznB,IAAA0V,SAAA+R,GAAAznB,EAAAoQ,OACA6Z,EAAAjqB,EAAAkqB,GAEAlqB,EAAA,EAAiBA,EAAAyT,EAAA9Q,OAAA1C,SAAuBD,EACxCyT,EAAA9Q,OAAA3C,GAAAiQ,EAAAia,EAEAzC,IAAAznB,EAAAiQ,EAAAG,KAAA0B,OAAA2V,GAAAznB,IAAA2C,QACA3C,EAAAiQ,EAAAia,GAEAA,QAGA5B,GAAArY,EAAAK,KAIA,QAAA6Z,GAAA7N,EAAA8N,EAAAC,EAAA7B,EAAA8B,GAgBA,IAfA,GAQAC,GAAAC,EAAAC,EAAAlO,EARAmO,EAAA,EACAC,EAAA,EACAC,EAAAR,EAAAnqB,OAAA,EACA4qB,EAAAT,EAAA,GACAU,EAAAV,EAAAQ,GACAG,EAAAV,EAAApqB,OAAA,EACA+qB,EAAAX,EAAA,GACAY,EAAAZ,EAAAU,GAMAG,GAAAZ,EAEAI,GAAAE,GAAAD,GAAAI,GACAxD,GAAAsD,GACAA,EAAAT,IAAAM,GACOnD,GAAAuD,GACPA,EAAAV,IAAAQ,GACOlD,GAAAmD,EAAAG,IACPG,EAAAN,EAAAG,EAAAxC,GACAqC,EAAAT,IAAAM,GACAM,EAAAX,IAAAM,IACOjD,GAAAoD,EAAAG,IACPE,EAAAL,EAAAG,EAAAzC,GACAsC,EAAAV,IAAAQ,GACAK,EAAAZ,IAAAU,IACOrD,GAAAmD,EAAAI,IACPE,EAAAN,EAAAI,EAAAzC,GACA0C,GAAA/C,EAAAlkB,aAAAqY,EAAAuO,EAAAva,IAAA6X,EAAAlB,YAAA6D,EAAAxa,MACAua,EAAAT,IAAAM,GACAO,EAAAZ,IAAAU,IACOrD,GAAAoD,EAAAE,IACPG,EAAAL,EAAAE,EAAAxC,GACA0C,GAAA/C,EAAAlkB,aAAAqY,EAAAwO,EAAAxa,IAAAua,EAAAva,KACAwa,EAAAV,IAAAQ,GACAI,EAAAX,IAAAM,KAEApD,GAAAgD,KAAmCA,EAAA1C,GAAAuC,EAAAM,EAAAE,IACnCJ,EAAA/C,GAAAuD,EAAA7rB,KAAAorB,EAAAS,EAAA7rB,KAAA,KACAooB,GAAAiD,IACAjC,EAAAyC,EAAAxC,EAAAlM,EAAAuO,EAAAva,KACA0a,EAAAX,IAAAM,KAEAF,EAAAL,EAAAI,GAQA9C,GAAA+C,EAAAO,IACAG,EAAAV,EAAAO,EAAAxC,GACA4B,EAAAI,GAAA1b,OACAoc,GAAA/C,EAAAlkB,aAAAqY,EAAA0O,EAAA1a,IAAAua,EAAAva,KACA0a,EAAAX,IAAAM,KAGApC,EAAAyC,EAAAxC,EAAAlM,EAAAuO,EAAAva,KACA0a,EAAAX,IAAAM,KAKAD,GAAAE,GACArO,EAAAgL,GAAA8C,EAAAU,EAAA,SAAAV,EAAAU,EAAA,GAAAza,IACAqZ,EAAArN,EAAAC,EAAA8N,EAAAM,EAAAI,EAAAvC,IACKmC,EAAAI,GACLhB,EAAAzN,EAAA8N,EAAAM,EAAAE,GAIA,QAAAO,GAAAC,EAAAnb,EAAAuY,EAAA8B,GACA,GAAAc,IAAAnb,EAAA,CAOA,GAAAA,EAAAS,UACA0a,EAAA1a,UACAT,EAAA9Q,MAAAisB,EAAAjsB,MACA8Q,EAAAU,UAAAV,EAAAgQ,QAGA,MAFAhQ,GAAAK,IAAA8a,EAAA9a,SACAL,EAAA8U,kBAAAqG,EAAArG,kBAGA,IAAA/kB,GACAoQ,EAAAH,EAAAG,KACAib,EAAA5D,GAAArX,EACAib,IAAA5D,GAAAznB,EAAAoQ,EAAA0B,OAAA2V,GAAAznB,IAAAsrB,WACAtrB,EAAAorB,EAAAnb,EAEA,IAAAK,GAAAL,EAAAK,IAAA8a,EAAA9a,IACA8Z,EAAAgB,EAAAtqB,SACAkpB,EAAA/Z,EAAAnP,QACA,IAAAuqB,GAAAhC,EAAApZ,GAAA,CACA,IAAAjQ,EAAA,EAAiBA,EAAAyT,EAAA/Q,OAAAzC,SAAuBD,EAAOyT,EAAA/Q,OAAA1C,GAAAorB,EAAAnb,EAC/CwX,IAAAznB,EAAAoQ,EAAA0B,OAAA2V,GAAAznB,IAAA0C,SAAwD1C,EAAAorB,EAAAnb,GAExDsX,GAAAtX,EAAAI,MACAoX,GAAA2C,IAAA3C,GAAAuC,GACAI,IAAAJ,GAA2BG,EAAA7Z,EAAA8Z,EAAAJ,EAAAxB,EAAA8B,GACpB7C,GAAAuC,IACPvC,GAAA2D,EAAA/a,OAAmC8X,EAAAjB,eAAA5W,EAAA,IACnCqZ,EAAArZ,EAAA,KAAA0Z,EAAA,EAAAA,EAAA/pB,OAAA,EAAAuoB,IACOf,GAAA2C,GACPL,EAAAzZ,EAAA8Z,EAAA,EAAAA,EAAAnqB,OAAA,GACOwnB,GAAA2D,EAAA/a,OACP8X,EAAAjB,eAAA5W,EAAA,IAEK8a,EAAA/a,OAAAJ,EAAAI,MACL8X,EAAAjB,eAAA5W,EAAAL,EAAAI,MAEAgb,GACA5D,GAAAznB,EAAAoQ,EAAA0B,OAAA2V,GAAAznB,IAAAurB,YAA2DvrB,EAAAorB,EAAAnb,IAI3D,QAAAub,GAAAvb,EAAA8H,EAAA0T,GAGA,GAAAA,GAAAxb,EAAA7C,OACA6C,EAAA7C,OAAAgD,KAAAgZ,cAAArR,MAEA,QAAA/X,GAAA,EAAqBA,EAAA+X,EAAA9X,SAAkBD,EACvC+X,EAAA/X,GAAAoQ,KAAA0B,KAAAgX,OAAA/Q,EAAA/X,IAWA,QAAA0rB,GAAApb,EAAAL,EAAAuY,GAMAvY,EAAAK,KACA,IAAAH,GAAAF,EAAAE,IACAC,EAAAH,EAAAG,KACAtP,EAAAmP,EAAAnP,QACA,IAAA2mB,GAAArX,KACAqX,GAAAznB,EAAAoQ,EAAA0B,OAAA2V,GAAAznB,IAAAipB,OAAsDjpB,EAAAiQ,GAAA,GACtDwX,GAAAznB,EAAAiQ,EAAA8U,oBAGA,MADAmE,GAAAjZ,EAAAuY,IACA,CAGA,IAAAf,GAAAtX,GAAA,CACA,GAAAsX,GAAA3mB,GAEA,GAAAwP,EAAAqb,gBAES,CAGT,OAFAC,IAAA,EACApG,EAAAlV,EAAA7L,WACA+O,EAAA,EAA2BA,EAAA1S,EAAAb,OAAuBuT,IAAA,CAClD,IAAAgS,IAAAkG,EAAAlG,EAAA1kB,EAAA0S,GAAAgV,GAAA,CACAoD,GAAA,CACA,OAEApG,IAAAyB,YAIA,IAAA2E,GAAApG,EAQA,aArBAoD,GAAA3Y,EAAAnP,EAAA0nB,EAyBA,IAAAf,GAAArX,GACA,OAAAjR,KAAAiR,GACA,IAAAyb,EAAA1sB,GAAA,CACA0pB,EAAA5Y,EAAAuY,EACA,YAIKlY,GAAAF,OAAAH,EAAAI,OACLC,EAAAF,KAAAH,EAAAI,KAEA,UArdA,GAAArQ,GAAAgC,EACAyR,KAEAlS,EAAA0mB,EAAA1mB,QACA4mB,EAAAF,EAAAE,OAEA,KAAAnoB,EAAA,EAAaA,EAAA8rB,GAAA7rB,SAAkBD,EAE/B,IADAyT,EAAAqY,GAAA9rB,OACAgC,EAAA,EAAeA,EAAAT,EAAAtB,SAAoB+B,EACnC8M,SAAAvN,EAAAS,GAAA8pB,GAAA9rB,KAA+CyT,EAAAqY,GAAA9rB,IAAAS,KAAAc,EAAAS,GAAA8pB,GAAA9rB,IA0B/C,IAqXA6rB,GAAA3lB,EAAA,gDA2EA,iBAAAklB,EAAAnb,EAAAoF,EAAAiV,EAAAhO,EAAAC,GACA,IAAAtM,EAEA,YADAmb,GAAqBvB,EAAAuB,GAIrB,IAAAW,IAAA,EACAvD,IAEA,IAAA4C,EAIK,CACL,GAAAY,GAAAvE,GAAA2D,EAAAa,SACA,KAAAD,GAAAtE,GAAA0D,EAAAnb,GAEAkb,EAAAC,EAAAnb,EAAAuY,EAAA8B,OACO,CACP,GAAA0B,EAAA,CAQA,GAJA,IAAAZ,EAAAa,UAAAb,EAAAc,aAAA,qBACAd,EAAAe,gBAAA,mBACA9W,GAAA,GAEAA,GACAqW,EAAAN,EAAAnb,EAAAuY,GAEA,MADAgD,GAAAvb,EAAAuY,GAAA,GACA4C,CAaAA,GAAAlD,EAAAkD,GAGA,GAAAgB,GAAAhB,EAAA9a,IACA+b,EAAAlE,EAAA5kB,WAAA6oB,EAWA,IAVA7D,EACAtY,EACAuY,EAIA4D,EAAAE,SAAA,KAAAD,EACAlE,EAAAlB,YAAAmF,IAGAnc,EAAA7C,OAAA,CAIA,IADA,GAAAsc,GAAAzZ,EAAA7C,OACAsc,GACAA,EAAApZ,IAAAL,EAAAK,IACAoZ,IAAAtc,MAEA,IAAAic,EAAApZ,GACA,OAAAjQ,GAAA,EAA2BA,EAAAyT,EAAAnN,OAAArG,SAAuBD,EAClDyT,EAAAnN,OAAAtG,GAAAypB,GAAAxZ,EAAA7C,QAKA,OAAAif,EACAtC,EAAAsC,GAAAjB,GAAA,KACS3D,GAAA2D,EAAAjb,MACT0Z,EAAAuB,QAjEAW,IAAA,EACAxD,EAAAtY,EAAAuY,EAAAlM,EAAAC,EAsEA,OADAiP,GAAAvb,EAAAuY,EAAAuD,GACA9b,EAAAK,KAcA,QAAAic,IAAAnB,EAAAnb,IACAmb,EAAAhb,KAAAlD,YAAA+C,EAAAG,KAAAlD,aACAkI,GAAAgW,EAAAnb,GAIA,QAAAmF,IAAAgW,EAAAnb,GACA,GAQA9Q,GAAAqtB,EAAAC,EARAC,EAAAtB,IAAA3B,GACAkD,EAAA1c,IAAAwZ,GACAmD,EAAAC,GAAAzB,EAAAhb,KAAAlD,WAAAke,EAAA7a,SACAuc,EAAAD,GAAA5c,EAAAG,KAAAlD,WAAA+C,EAAAM,SAEAwc,KACAC,IAGA,KAAA7tB,IAAA2tB,GACAN,EAAAI,EAAAztB,GACAstB,EAAAK,EAAA3tB,GACAqtB,GAQAC,EAAAQ,SAAAT,EAAAzlB,MACAmmB,GAAAT,EAAA,SAAAxc,EAAAmb,GACAqB,EAAArjB,KAAAqjB,EAAArjB,IAAA+jB,kBACAH,EAAAvsB,KAAAgsB,KATAS,GAAAT,EAAA,OAAAxc,EAAAmb,GACAqB,EAAArjB,KAAAqjB,EAAArjB,IAAAgkB,UACAL,EAAAtsB,KAAAgsB,GAYA,IAAAM,EAAA9sB,OAAA,CACA,GAAAotB,GAAA,WACA,OAAArtB,GAAA,EAAqBA,EAAA+sB,EAAA9sB,OAA2BD,IAChDktB,GAAAH,EAAA/sB,GAAA,WAAAiQ,EAAAmb,GAGAsB,GACA9a,EAAA3B,EAAAG,KAAA0B,OAAA7B,EAAAG,KAAA0B,SAA6D,SAAAub,GAE7DA,IAYA,GARAL,EAAA/sB,QACA2R,EAAA3B,EAAAG,KAAA0B,OAAA7B,EAAAG,KAAA0B,SAA2D,uBAC3D,OAAA9R,GAAA,EAAqBA,EAAAgtB,EAAA/sB,OAA8BD,IACnDktB,GAAAF,EAAAhtB,GAAA,mBAAAiQ,EAAAmb,MAKAsB,EACA,IAAAvtB,IAAAytB,GACAE,EAAA3tB,IAEA+tB,GAAAN,EAAAztB,GAAA,SAAAisB,IAAAuB,GAQA,QAAAE,IACA5f,EACAK,GAEA,GAAAlF,GAAApJ,OAAAsH,OAAA,KACA,KAAA2G,EACA,MAAA7E,EAEA,IAAApI,GAAAysB,CACA,KAAAzsB,EAAA,EAAaA,EAAAiN,EAAAhN,OAAiBD,IAC9BysB,EAAAxf,EAAAjN,GACAysB,EAAAa,YACAb,EAAAa,UAAAC,IAEAnlB,EAAAolB,GAAAf,MACAA,EAAArjB,IAAA6E,EAAAX,EAAA2B,SAAA,aAAAwd,EAAA3f,MAAA,EAEA,OAAA1E,GAGA,QAAAolB,IAAAf,GACA,MAAAA,GAAAgB,SAAAhB,EAAA,SAAAztB,OAAAC,KAAAwtB,EAAAa,eAA4EhsB,KAAA,KAG5E,QAAA4rB,IAAAT,EAAA3a,EAAA7B,EAAAmb,EAAAuB,GACA,GAAA1lB,GAAAwlB,EAAArjB,KAAAqjB,EAAArjB,IAAA0I,EACA7K,IACAA,EAAAgJ,EAAAK,IAAAmc,EAAAxc,EAAAmb,EAAAuB,GAWA,QAAAe,IAAAtC,EAAAnb,GACA,GAAAmb,EAAAhb,KAAAgN,OAAAnN,EAAAG,KAAAgN,MAAA,CAGA,GAAAje,GAAAoS,EACAjB,EAAAL,EAAAK,IACAqd,EAAAvC,EAAAhb,KAAAgN,UACAA,EAAAnN,EAAAG,KAAAgN,SAEAA,GAAAzS,SACAyS,EAAAnN,EAAAG,KAAAgN,MAAAvV,KAAwCuV,GAGxC,KAAAje,IAAAie,GACA7L,EAAA6L,EAAAje,GACAwuB,EAAAxuB,KACAoS,GACAqc,GAAAtd,EAAAnR,EAAAoS,EAKAsc,KAAAzQ,EAAArW,QAAA4mB,EAAA5mB,OACA6mB,GAAAtd,EAAA,QAAA8M,EAAArW,MAEA,KAAA5H,IAAAwuB,GACA,MAAAvQ,EAAAje,KACA2uB,GAAA3uB,GACAmR,EAAAyd,kBAAAC,GAAAC,GAAA9uB,IACO+uB,GAAA/uB,IACPmR,EAAA6b,gBAAAhtB,KAMA,QAAAyuB,IAAApX,EAAArX,EAAA4H,GACAonB,GAAAhvB,GAGAivB,GAAArnB,GACAyP,EAAA2V,gBAAAhtB,GAEAqX,EAAAtS,aAAA/E,KAEG+uB,GAAA/uB,GACHqX,EAAAtS,aAAA/E,EAAAivB,GAAArnB,IAAA,UAAAA,EAAA,gBACG+mB,GAAA3uB,GACHivB,GAAArnB,GACAyP,EAAAuX,kBAAAC,GAAAC,GAAA9uB,IAEAqX,EAAA6X,eAAAL,GAAA7uB,EAAA4H,GAGAqnB,GAAArnB,GACAyP,EAAA2V,gBAAAhtB,GAEAqX,EAAAtS,aAAA/E,EAAA4H,GAYA,QAAAunB,IAAAlD,EAAAnb,GACA,GAAAuG,GAAAvG,EAAAK,IACAF,EAAAH,EAAAG,KACAme,EAAAnD,EAAAhb,IACA,IAAAA,EAAAuV,aAAAvV,EAAAwV,OACA2I,MAAA5I,aAAA4I,EAAA3I,OADA,CAKA,GAAA4I,GAAAjJ,GAAAtV,GAGAwe,EAAAjY,EAAAkY,kBACAD,KACAD,EAAAhmB,GAAAgmB,EAAA1I,GAAA2I,KAIAD,IAAAhY,EAAAmY,aACAnY,EAAAtS,aAAA,QAAAsqB,GACAhY,EAAAmY,WAAAH,IAaA,QAAAI,IAAAC,GAoEA,QAAAC,MACAC,WAAAtuB,KAAAouB,EAAA7I,MAAAgJ,EAAAhvB,GAAAivB,QACAD,EAAAhvB,EAAA,EArEA,GAQAkJ,GAAAgmB,EAAAlvB,EAAAmvB,EAAAJ,EARAK,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAV,EAAA,CAGA,KAAAhvB,EAAA,EAAaA,EAAA6uB,EAAA5uB,OAAgBD,IAG7B,GAFAkvB,EAAAhmB,EACAA,EAAA2lB,EAAA1lB,WAAAnJ,GACAovB,EACA,KAAAlmB,GAAA,KAAAgmB,IAAwCE,GAAA,OACnC,IAAAC,EACL,KAAAnmB,GAAA,KAAAgmB,IAAwCG,GAAA,OACnC,IAAAC,EACL,KAAApmB,GAAA,KAAAgmB,IAAwCI,GAAA,OACnC,IAAAC,EACL,KAAArmB,GAAA,KAAAgmB,IAAwCK,GAAA,OACnC,IACL,MAAArmB,GACA,MAAA2lB,EAAA1lB,WAAAnJ,EAAA,IACA,MAAA6uB,EAAA1lB,WAAAnJ,EAAA,IACAwvB,GAAAC,GAAAC,EASK,CACL,OAAAxmB,GACA,QAAAmmB,GAAA,CAAmC,MACnC,SAAAD,GAAA,CAAmC,MACnC,SAAAE,GAAA,CAA2C,MAC3C,SAAAI,GAA2B,MAC3B,SAAAA,GAA2B,MAC3B,SAAAD,GAA4B,MAC5B,SAAAA,GAA4B,MAC5B,UAAAD,GAA2B,MAC3B,UAAAA,IAEA,QAAAtmB,EAAA,CAIA,IAHA,GAAAlH,GAAAhC,EAAA,EACA2vB,EAAA,OAEc3tB,GAAA,GAEd,OADA2tB,EAAAd,EAAAe,OAAA5tB,IADsBA,KAItB2tB,GAAAE,GAAA9qB,KAAA4qB,KACAJ,GAAA,QA5BAzgB,UAAAqgB,GAEAH,EAAAhvB,EAAA,EACAmvB,EAAAN,EAAA7I,MAAA,EAAAhmB,GAAAivB,QAEAH,GAwCA,IAXAhgB,SAAAqgB,EACAA,EAAAN,EAAA7I,MAAA,EAAAhmB,GAAAivB,OACG,IAAAD,GACHF,IAQAC,EACA,IAAA/uB,EAAA,EAAeA,EAAA+uB,EAAA9uB,OAAoBD,IACnCmvB,EAAAW,GAAAX,EAAAJ,EAAA/uB,GAIA,OAAAmvB,GAGA,QAAAW,IAAAjB,EAAAtpB,GACA,GAAAvF,GAAAuF,EAAAkB,QAAA,IACA,OAAAzG,GAAA,EAEA,OAAAuF,EAAA,MAAAspB,EAAA,IAIA,OAFAtpB,EAAAygB,MAAA,EAAAhmB,GAEA,MAAA6uB,EAAA,IADAtpB,EAAAygB,MAAAhmB,EAAA,GAOA,QAAA+vB,IAAAC,GACApgB,QAAAC,MAAA,mBAAAmgB,GAGA,QAAAC,IACA1uB,EACApC,GAEA,MAAAoC,GACAA,EAAA8E,IAAA,SAAAkC,GAAgC,MAAAA,GAAApJ,KAAiBoG,OAAA,SAAA2qB,GAAuB,MAAAA,QAIxE,QAAAC,IAAA3Z,EAAA1J,EAAA/F,IACAyP,EAAA3J,QAAA2J,EAAA3J,WAAApM,MAAsCqM,OAAA/F,UAGtC,QAAAqpB,IAAA5Z,EAAA1J,EAAA/F,IACAyP,EAAA4G,QAAA5G,EAAA4G,WAAA3c,MAAsCqM,OAAA/F,UAGtC,QAAAspB,IACA7Z,EACA1J,EACA2gB,EACA1mB,EACAupB,EACAhD,IAEA9W,EAAAtJ,aAAAsJ,EAAAtJ,gBAAAzM,MAAgDqM,OAAA2gB,UAAA1mB,QAAAupB,MAAAhD,cAGhD,QAAAiD,IACA/Z,EACA1J,EACA/F,EACAumB,EACAkD,GAGAlD,KAAA3b,gBACA2b,GAAA3b,QACA7E,EAAA,IAAAA,GAEAwgB,KAAAvkB,aACAukB,GAAAvkB,KACA+D,EAAA,IAAAA,EAEA,IAAA2jB,EACAnD,MAAAoD,cACApD,GAAAoD,OACAD,EAAAja,EAAAma,eAAAna,EAAAma,kBAEAF,EAAAja,EAAAia,SAAAja,EAAAia,UAEA,IAAAG,IAAoB7pB,QAAAumB,aACpBzV,EAAA4Y,EAAA3jB,EAEAlF,OAAAoD,QAAA6M,GACA2Y,EAAA3Y,EAAA4L,QAAAmN,GAAA/Y,EAAApX,KAAAmwB,GAEAH,EAAA3jB,GADG+K,EACH2Y,GAAAI,EAAA/Y,MAAA+Y,GAEAA,EAIA,QAAAC,IACAra,EACA1J,EACAgkB,GAEA,GAAAC,GACAC,GAAAxa,EAAA,IAAA1J,IACAkkB,GAAAxa,EAAA,UAAA1J,EACA,UAAAikB,EACA,MAAAnC,IAAAmC,EACG,IAAAD,KAAA,GACH,GAAAG,GAAAD,GAAAxa,EAAA1J,EACA,UAAAmkB,EACA,MAAA1sB,MAAAC,UAAAysB,IAKA,QAAAD,IAAAxa,EAAA1J,GACA,GAAAlH,EACA,WAAAA,EAAA4Q,EAAA0a,SAAApkB,IAEA,OADAjN,GAAA2W,EAAA2a,UACAnxB,EAAA,EAAAkB,EAAArB,EAAAI,OAAoCD,EAAAkB,EAAOlB,IAC3C,GAAAH,EAAAG,GAAA8M,SAAA,CACAjN,EAAA6G,OAAA1G,EAAA,EACA,OAIA,MAAA4F,GAQA,QAAAwrB,IACA5a,EACAzP,EACAumB,GAEA,GAAA7M,GAAA6M,MACA+D,EAAA5Q,EAAA4Q,OACApC,EAAAxO,EAAAwO,KAEAqC,EAAA,MACAC,EAAAD,CACArC,KACAsC,EACA,WAAAD,EAAA,kBACAA,EAAA,YACAA,EAAA,KAEAD,IACAE,EAAA,MAAAA,EAAA,IAEA,IAAAC,GAAAC,GAAA1qB,EAAAwqB,EAEA/a,GAAAmF,OACA5U,MAAA,IAAAA,EAAA,IACAooB,WAAA,IAAApoB,EAAA,IACAkX,SAAA,aAAAqT,EAAA,MAAwDE,EAAA,KAOxD,QAAAC,IACA1qB,EACAyqB,GAEA,GAAAE,GAAAC,GAAA5qB,EACA,eAAA2qB,EAAAE,IACA7qB,EAAA,IAAAyqB,EAEA,eAAAE,EAAA,iBAAAA,EAAA,mCAEA3qB,EAAA,IAAAyqB,EAAA,gCACYA,EAAA,KAyBZ,QAAAG,IAAA/rB,GAKA,GAJAO,GAAAP,EACAyJ,GAAAlJ,GAAAlG,OACA4xB,GAAAC,GAAAC,GAAA,EAEAnsB,EAAAa,QAAA,QAAAb,EAAAosB,YAAA,KAAA3iB,GAAA,EACA,OACAwf,IAAAjpB,EACAgsB,IAAA,KAIA,OAAAK,MACAC,GAAAC,KAEAC,GAAAF,IACAG,GAAAH,IACK,KAAAA,IACLI,GAAAJ,GAIA,QACArD,IAAAjpB,EAAA2sB,UAAA,EAAAT,IACAF,IAAAhsB,EAAA2sB,UAAAT,GAAA,EAAAC,KAIA,QAAAI,MACA,MAAAhsB,IAAAgD,aAAA0oB,IAGA,QAAAI,MACA,MAAAJ,KAAAxiB,GAGA,QAAA+iB,IAAAF,GACA,YAAAA,GAAA,KAAAA,EAGA,QAAAI,IAAAJ,GACA,GAAAM,GAAA,CAEA,KADAV,GAAAD,IACAI,MAEA,GADAC,EAAAC,KACAC,GAAAF,GACAG,GAAAH,OAKA,IAFA,KAAAA,GAAuBM,IACvB,KAAAN,GAAuBM,IACvB,IAAAA,EAAA,CACAT,GAAAF,EACA,QAKA,QAAAQ,IAAAH,GAEA,IADA,GAAAO,GAAAP,GACAD,OACAC,EAAAC,QACAM,KAeA,QAAA9W,IACAnF,EACAiW,EACAiG,GAEAC,GAAAD,CACA,IAAA3rB,GAAA0lB,EAAA1lB,MACAumB,EAAAb,EAAAa,UACAnd,EAAAqG,EAAArG,IACA1R,EAAA+X,EAAA0a,SAAAzyB,IAoBA,eAAA0R,EACAyiB,GAAApc,EAAAzP,EAAAumB,OACG,cAAAnd,GAAA,aAAA1R,EACHo0B,GAAArc,EAAAzP,EAAAumB,OACG,cAAAnd,GAAA,UAAA1R,EACHq0B,GAAAtc,EAAAzP,EAAAumB,OACG,cAAAnd,GAAA,aAAAA,EACH4iB,GAAAvc,EAAAzP,EAAAumB,OACG,KAAA7d,GAAA+O,cAAArO,GAGH,MAFAihB,IAAA5a,EAAAzP,EAAAumB,IAEA,CAWA,UAGA,QAAAuF,IACArc,EACAzP,EACAumB,GAEA,GAAA+D,GAAA/D,KAAA+D,OACA2B,EAAAnC,GAAAra,EAAA,iBACAyc,EAAApC,GAAAra,EAAA,sBACA0c,EAAArC,GAAAra,EAAA,uBACA2Z,IAAA3Z,EAAA,UACA,iBAAAzP,EAAA,QACAA,EAAA,IAAAisB,EAAA,QACA,SAAAC,EACA,KAAAlsB,EAAA,IACA,OAAAA,EAAA,IAAAksB,EAAA,MAGA1C,GAAA/Z,EAAA2c,GACA,WAAApsB,EAAA,yCAEAksB,EAAA,MAAAC,EAAA,qCAEA7B,EAAA,MAAA2B,EAAA,IAAAA,GAAA,oCAEejsB,EAAA,mCACHA,EAAA,qDACDA,EAAA,QACX,SAIA,QAAA+rB,IACAtc,EACAzP,EACAumB,GAEA,GAAA+D,GAAA/D,KAAA+D,OACA2B,EAAAnC,GAAAra,EAAA,gBACAwc,GAAA3B,EAAA,MAAA2B,EAAA,IAAAA,EACA7C,GAAA3Z,EAAA,gBAAAzP,EAAA,IAAAisB,EAAA,KACAzC,GAAA/Z,EAAA2c,GAAA1B,GAAA1qB,EAAAisB,GAAA,SAGA,QAAAJ,IACApc,EACAzP,EACAumB,GAEA,GAAA+D,GAAA/D,KAAA+D,OACA+B,EAAA,0JAGA/B,EAAA,sBAGAgC,EAAA,uBAAAD,EAAA,GACAC,KAAA,IAAA5B,GAAA1qB,EAFA,6DAGAwpB,GAAA/Z,EAAA,SAAA6c,EAAA,SAGA,QAAAN,IACAvc,EACAzP,EACAumB,GAEA,GAAA7uB,GAAA+X,EAAA0a,SAAAzyB,KACAgiB,EAAA6M,MACAgG,EAAA7S,EAAA6S,KACAjC,EAAA5Q,EAAA4Q,OACApC,EAAAxO,EAAAwO,KACAsE,GAAAD,GAAA,UAAA70B,EACAgT,EAAA6hB,EACA,SACA,UAAA70B,EACA+0B,GACA,QAEAjC,EAAA,qBACAtC,KACAsC,EAAA,8BAEAF,IACAE,EAAA,MAAAA,EAAA,IAGA,IAAA8B,GAAA5B,GAAA1qB,EAAAwqB,EACAgC,KACAF,EAAA,qCAA8CA,GAG9ClD,GAAA3Z,EAAA,YAAAzP,EAAA,KACAwpB,GAAA/Z,EAAA/E,EAAA4hB,EAAA,UACApE,GAAAoC,GAAA,WAAA5yB,IACA8xB,GAAA/Z,EAAA,yBAUA,QAAAid,IAAAtiB,GACA,GAAAM,EAEAN,GAAAqiB,MAEA/hB,EAAAiiB,GAAA,iBACAviB,EAAAM,MAAAjJ,OAAA2I,EAAAqiB,IAAAriB,EAAAM,cACAN,GAAAqiB,KAEAriB,EAAAgiB,MAEA1hB,EAAAkiB,GAAA,iBACAxiB,EAAAM,MAAAjJ,OAAA2I,EAAAgiB,IAAAhiB,EAAAM,cACAN,GAAAgiB,KAMA,QAAAS,IACAniB,EACAgJ,EACA1R,EACA4I,GAEA,GAAA5I,EAAA,CACA,GAAA8qB,GAAApZ,EACA3Q,EAAAgqB,EACArZ,GAAA,SAAAsZ,GAIA,QAHA,IAAAzsB,UAAArH,OACA4zB,EAAAE,GACAF,EAAAtsB,MAAA,KAAAD,aAEA0sB,GAAAviB,EAAAgJ,EAAA9I,EAAA7H,IAIAgqB,GAAAG,iBAAAxiB,EAAAgJ,EAAA9I,GAGA,QAAAqiB,IACAviB,EACAgJ,EACA9I,EACA7H,IAEAA,GAAAgqB,IAAAI,oBAAAziB,EAAAgJ,EAAA9I,GAGA,QAAAwiB,IAAA/I,EAAAnb,GACA,GAAAmb,EAAAhb,KAAAe,IAAAlB,EAAAG,KAAAe,GAAA,CAGA,GAAAA,GAAAlB,EAAAG,KAAAe,OACAC,EAAAga,EAAAhb,KAAAe,MACA2iB,IAAA7jB,EAAAK,IACAmjB,GAAAtiB,GACAD,EAAAC,EAAAC,EAAAwiB,GAAAI,GAAA/jB,EAAAM,UAUA,QAAA6jB,IAAAhJ,EAAAnb,GACA,GAAAmb,EAAAhb,KAAAiN,UAAApN,EAAAG,KAAAiN,SAAA,CAGA,GAAAle,GAAAoS,EACAjB,EAAAL,EAAAK,IACA+jB,EAAAjJ,EAAAhb,KAAAiN,aACAxQ,EAAAoD,EAAAG,KAAAiN,YAEAxQ,GAAAlC,SACAkC,EAAAoD,EAAAG,KAAAiN,SAAAxV,KAA2CgF,GAG3C,KAAA1N,IAAAk1B,GACA,MAAAxnB,EAAA1N,KACAmR,EAAAnR,GAAA,GAGA,KAAAA,IAAA0N,GAKA,GAJA0E,EAAA1E,EAAA1N,GAIA,gBAAAA,GAAA,cAAAA,IACA8Q,EAAAnP,WAA2BmP,EAAAnP,SAAAb,OAAA,GAC3BsR,IAAA8iB,EAAAl1B,IAGA,aAAAA,EAAA,CAGAmR,EAAAgkB,OAAA/iB,CAEA,IAAAgjB,GAAA,MAAAhjB,EAAA,GAAA1L,OAAA0L,EACAijB,IAAAlkB,EAAAL,EAAAskB,KACAjkB,EAAAvJ,MAAAwtB,OAGAjkB,GAAAnR,GAAAoS,GAQA,QAAAijB,IACAlkB,EACAL,EACAwkB,GAEA,OAAAnkB,EAAAokB,YACA,WAAAzkB,EAAAE,KACAwkB,GAAArkB,EAAAmkB,IACAG,GAAAtkB,EAAAmkB,IAIA,QAAAE,IAAArkB,EAAAmkB,GAEA,MAAApyB,UAAAwyB,gBAAAvkB,KAAAvJ,QAAA0tB,EAGA,QAAAG,IAAAtkB,EAAAvE,GACA,GAAAhF,GAAAuJ,EAAAvJ,MACAumB,EAAAhd,EAAAwkB,WACA,OAAAxH,MAAA+D,QAAA,WAAA/gB,EAAA7R,KACAqH,EAAAiB,KAAAjB,EAAAiG,GAEAuhB,KAAA2B,KACAloB,EAAAkoB,SAAAljB,EAAAkjB,OAEAloB,IAAAgF,EAwBA,QAAAgpB,IAAA3kB,GACA,GAAA4kB,GAAAC,GAAA7kB,EAAA4kB,MAGA,OAAA5kB,GAAA8kB,YACArtB,EAAAuI,EAAA8kB,YAAAF,GACAA,EAIA,QAAAC,IAAAE,GACA,MAAAvtB,OAAAoD,QAAAmqB,GACAhtB,EAAAgtB,GAEA,gBAAAA,GACAC,GAAAD,GAEAA,EAOA,QAAAE,IAAAplB,EAAAqlB,GACA,GACAC,GADAntB,IAGA,IAAAktB,EAEA,IADA,GAAA9P,GAAAvV,EACAuV,EAAAT,mBACAS,IAAAT,kBAAArP,OACA8P,EAAApV,OAAAmlB,EAAAR,GAAAvP,EAAApV,QACAvI,EAAAO,EAAAmtB,IAKAA,EAAAR,GAAA9kB,EAAAG,QACAvI,EAAAO,EAAAmtB,EAIA,KADA,GAAAhyB,GAAA0M,EACA1M,IAAA6J,QACA7J,EAAA6M,OAAAmlB,EAAAR,GAAAxxB,EAAA6M,QACAvI,EAAAO,EAAAmtB,EAGA,OAAAntB,GAoCA,QAAAotB,IAAApK,EAAAnb,GACA,GAAAG,GAAAH,EAAAG,KACAme,EAAAnD,EAAAhb,IAEA,IAAAA,EAAA8kB,aAAA9kB,EAAA4kB,OACAzG,EAAA2G,aAAA3G,EAAAyG,MADA,CAKA,GAAAzjB,GAAAzE,EACA0J,EAAAvG,EAAAK,IACAmlB,EAAArK,EAAAhb,KAAA8kB,YACAQ,EAAAtK,EAAAhb,KAAA4kB,UAGAW,EAAAF,GAAAC,EAEAV,EAAAC,GAAAhlB,EAAAG,KAAA4kB,UAEA/kB,GAAAG,KAAA4kB,QAAArqB,OAAA9C,KAA6CmtB,IAE7C,IAAAY,GAAAP,GAAAplB,GAAA,EAEA,KAAAnD,IAAA6oB,GACA,MAAAC,EAAA9oB,IACA+oB,GAAArf,EAAA1J,EAAA,GAGA,KAAAA,IAAA8oB,IACArkB,EAAAqkB,EAAA9oB,MACA6oB,EAAA7oB,IAEA+oB,GAAArf,EAAA1J,EAAA,MAAAyE,EAAA,GAAAA,IAgBA,QAAAukB,IAAAtf,EAAAgY,GAEA,GAAAA,QAAAS,QAKA,GAAAzY,EAAAuf,UACAvH,EAAA/nB,QAAA,QACA+nB,EAAAjoB,MAAA,OAAArH,QAAA,SAAAgK,GAA6C,MAAAsN,GAAAuf,UAAA1kB,IAAAnI,KAE7CsN,EAAAuf,UAAA1kB,IAAAmd,OAEG,CACH,GAAAjd,GAAA,KAAAiF,EAAAwf,aAAA,iBACAzkB,GAAA9K,QAAA,IAAA+nB,EAAA,QACAhY,EAAAtS,aAAA,SAAAqN,EAAAid,GAAAS,SASA,QAAAgH,IAAAzf,EAAAgY,GAEA,GAAAA,QAAAS,QAKA,GAAAzY,EAAAuf,UACAvH,EAAA/nB,QAAA,QACA+nB,EAAAjoB,MAAA,OAAArH,QAAA,SAAAgK,GAA6C,MAAAsN,GAAAuf,UAAApzB,OAAAuG,KAE7CsN,EAAAuf,UAAApzB,OAAA6rB,OAEG,CAGH,IAFA,GAAAjd,GAAA,KAAAiF,EAAAwf,aAAA,kBACAE,EAAA,IAAA1H,EAAA,IACAjd,EAAA9K,QAAAyvB,IAAA,GACA3kB,IAAA4kB,QAAAD,EAAA,IAEA1f,GAAAtS,aAAA,QAAAqN,EAAA0d,SAMA,QAAAmH,IAAAC,GACA,GAAAA,EAAA,CAIA,mBAAAA,GAAA,CACA,GAAAjuB,KAKA,OAJAiuB,GAAAj2B,OAAA,GACAyH,EAAAO,EAAAkuB,GAAAD,EAAAvpB,MAAA,MAEAjF,EAAAO,EAAAiuB,GACAjuB,EACG,sBAAAiuB,GACHC,GAAAD,GADG,QA4CH,QAAAE,IAAAtvB,GACAuvB,GAAA,WACAA,GAAAvvB,KAIA,QAAAwvB,IAAAjgB,EAAAgY,IACAhY,EAAAkY,qBAAAlY,EAAAkY,wBAAAjuB,KAAA+tB,GACAsH,GAAAtf,EAAAgY,GAGA,QAAAkI,IAAAlgB,EAAAgY,GACAhY,EAAAkY,oBACA/rB,EAAA6T,EAAAkY,mBAAAF,GAEAyH,GAAAzf,EAAAgY,GAGA,QAAAmI,IACAngB,EACAogB,EACAljB,GAEA,GAAA+M,GAAAoW,GAAArgB,EAAAogB,GACAn4B,EAAAgiB,EAAAhiB,KACAq4B,EAAArW,EAAAqW,QACAC,EAAAtW,EAAAsW,SACA,KAAAt4B,EAAc,MAAAiV,IACd,IAAAjC,GAAAhT,IAAAu4B,GAAAC,GAAAC,GACAC,EAAA,EACAC,EAAA,WACA5gB,EAAA0d,oBAAAziB,EAAA4lB,GACA3jB,KAEA2jB,EAAA,SAAA53B,GACAA,EAAAuK,SAAAwM,KACA2gB,GAAAJ,GACAK,IAIAE,YAAA,WACAH,EAAAJ,GACAK,KAEGN,EAAA,GACHtgB,EAAAyd,iBAAAxiB,EAAA4lB,GAKA,QAAAR,IAAArgB,EAAAogB,GACA,GAQAn4B,GARAqB,EAAAJ,OAAA63B,iBAAA/gB,GACAghB,EAAA13B,EAAA23B,GAAA,SAAAlxB,MAAA,MACAmxB,EAAA53B,EAAA23B,GAAA,YAAAlxB,MAAA,MACAoxB,EAAAC,GAAAJ,EAAAE,GACAG,EAAA/3B,EAAAg4B,GAAA,SAAAvxB,MAAA,MACAwxB,EAAAj4B,EAAAg4B,GAAA,YAAAvxB,MAAA,MACAyxB,EAAAJ,GAAAC,EAAAE,GAGAjB,EAAA,EACAC,EAAA,CA8BA,OA5BAH,KAAAI,GACAW,EAAA,IACAl5B,EAAAu4B,GACAF,EAAAa,EACAZ,EAAAW,EAAAz3B,QAEG22B,IAAAqB,GACHD,EAAA,IACAv5B,EAAAw5B,GACAnB,EAAAkB,EACAjB,EAAAgB,EAAA93B,SAGA62B,EAAA7qB,KAAAC,IAAAyrB,EAAAK,GACAv5B,EAAAq4B,EAAA,EACAa,EAAAK,EACAhB,GACAiB,GACA,KACAlB,EAAAt4B,EACAA,IAAAu4B,GACAU,EAAAz3B,OACA83B,EAAA93B,OACA,IAMAxB,OACAq4B,UACAC,YACAmB,aANAz5B,IAAAu4B,IACAmB,GAAApzB,KAAAjF,EAAA23B,GAAA,cASA,QAAAG,IAAAQ,EAAAC,GAEA,KAAAD,EAAAn4B,OAAAo4B,EAAAp4B,QACAm4B,IAAA5vB,OAAA4vB,EAGA,OAAAnsB,MAAAC,IAAA3E,MAAA,KAAA8wB,EAAAhyB,IAAA,SAAA+V,EAAApc,GACA,MAAAs4B,IAAAlc,GAAAkc,GAAAF,EAAAp4B,OAIA,QAAAs4B,IAAA9Q,GACA,WAAA+Q,OAAA/Q,EAAAxB,MAAA,OAKA,QAAAwS,IAAAvoB,EAAAwoB,GACA,GAAAjiB,GAAAvG,EAAAK,GAGAkG,GAAA8V,WACA9V,EAAA8V,SAAAoM,WAAA,EACAliB,EAAA8V,WAGA,IAAAlc,GAAAgmB,GAAAnmB,EAAAG,KAAAmZ,WACA,IAAAnZ,IAKAoG,EAAAmiB,UAAA,IAAAniB,EAAAyV,SAAA,CA4BA,IAxBA,GAAA7rB,GAAAgQ,EAAAhQ,IACA3B,EAAA2R,EAAA3R,KACAm6B,EAAAxoB,EAAAwoB,WACAC,EAAAzoB,EAAAyoB,aACAC,EAAA1oB,EAAA0oB,iBACAC,EAAA3oB,EAAA2oB,YACAC,EAAA5oB,EAAA4oB,cACAC,EAAA7oB,EAAA6oB,kBACAC,EAAA9oB,EAAA8oB,YACAV,EAAApoB,EAAAooB,MACAW,EAAA/oB,EAAA+oB,WACAC,EAAAhpB,EAAAgpB,eACAC,EAAAjpB,EAAAipB,aACAC,EAAAlpB,EAAAkpB,OACAC,EAAAnpB,EAAAmpB,YACAC,EAAAppB,EAAAopB,gBACAC,EAAArpB,EAAAqpB,SAMAlpB,EAAAqF,GACA8jB,EAAA9jB,GAAAK,OACAyjB,KAAAtsB,QACAssB,IAAAtsB,OACAmD,EAAAmpB,EAAAnpB,OAGA,IAAAopB,IAAAppB,EAAAyE,aAAA/E,EAAAyY,YAEA,KAAAiR,GAAAL,GAAA,KAAAA,EAAA,CAIA,GAAAM,GAAAD,GAAAZ,EACAA,EACAH,EACAiB,EAAAF,GAAAV,EACAA,EACAH,EACAgB,EAAAH,GAAAX,EACAA,EACAH,EAEAkB,EAAAJ,EACAN,GAAAH,EACAA,EACAc,EAAAL,GACA,kBAAAL,KACAd,EACAyB,EAAAN,EACAJ,GAAAJ,EACAA,EACAe,EAAAP,EACAH,GAAAJ,EACAA,EAEAe,EAAAr0B,EACAkC,EAAAyxB,GACAA,EAAAjB,MACAiB,GAOAW,EAAAh6B,KAAA,IAAAytB,GACAwM,EAAAC,GAAAN,GAEAtmB,EAAA8C,EAAAmiB,SAAA5vB,EAAA,WACAqxB,IACA1D,GAAAlgB,EAAAsjB,GACApD,GAAAlgB,EAAAqjB,IAEAnmB,EAAAglB,WACA0B,GACA1D,GAAAlgB,EAAAojB,GAEAM,KAAA1jB,IAEAyjB,KAAAzjB,GAEAA,EAAAmiB,SAAA,MAGA1oB,GAAAG,KAAAmqB,MAEA3oB,EAAA3B,EAAAG,KAAA0B,OAAA7B,EAAAG,KAAA0B,SAA2D,oBAC3D,GAAA1E,GAAAoJ,EAAAjT,WACAi3B,EAAAptB,KAAAqtB,UAAArtB,EAAAqtB,SAAAxqB,EAAA9Q,IACAq7B,IACAA,EAAArqB,MAAAF,EAAAE,KACAqqB,EAAAlqB,IAAAgc,UACAkO,EAAAlqB,IAAAgc,WAEA0N,KAAAxjB,EAAA9C,KAKAqmB,KAAAvjB,GACA4jB,IACA3D,GAAAjgB,EAAAojB,GACAnD,GAAAjgB,EAAAqjB,GACAtD,GAAA,WACAE,GAAAjgB,EAAAsjB,GACApD,GAAAlgB,EAAAojB,GACAlmB,EAAAglB,WAAA2B,IACAK,GAAAP,GACA7C,WAAA5jB,EAAAymB,GAEAxD,GAAAngB,EAAA/X,EAAAiV,OAMAzD,EAAAG,KAAAmqB,OACA9B,OACAuB,KAAAxjB,EAAA9C,IAGA0mB,GAAAC,GACA3mB,MAIA,QAAAinB,IAAA1qB,EAAAia,GAsEA,QAAA0Q,KAEAlnB,EAAAglB,YAIAzoB,EAAAG,KAAAmqB,QACA/jB,EAAAjT,WAAAk3B,WAAAjkB,EAAAjT,WAAAk3B,cAA6DxqB,EAAA9Q,KAAA8Q,GAE7D4qB,KAAArkB,GACA4jB,IACA3D,GAAAjgB,EAAAskB,GACArE,GAAAjgB,EAAAukB,GACAxE,GAAA,WACAE,GAAAjgB,EAAAwkB,GACAtE,GAAAlgB,EAAAskB,GACApnB,EAAAglB,WAAA2B,IACAK,GAAAO,GACA3D,WAAA5jB,EAAAunB,GAEAtE,GAAAngB,EAAA/X,EAAAiV,OAKAinB,KAAAnkB,EAAA9C,GACA0mB,GAAAC,GACA3mB,KAhGA,GAAA8C,GAAAvG,EAAAK,GAGAkG,GAAAmiB,WACAniB,EAAAmiB,SAAAD,WAAA,EACAliB,EAAAmiB,WAGA,IAAAvoB,GAAAgmB,GAAAnmB,EAAAG,KAAAmZ,WACA,KAAAnZ,EACA,MAAA8Z,IAIA,KAAA1T,EAAA8V,UAAA,IAAA9V,EAAAyV,SAAA,CAIA,GAAA7rB,GAAAgQ,EAAAhQ,IACA3B,EAAA2R,EAAA3R,KACAq8B,EAAA1qB,EAAA0qB,WACAE,EAAA5qB,EAAA4qB,aACAD,EAAA3qB,EAAA2qB,iBACAF,EAAAzqB,EAAAyqB,YACAF,EAAAvqB,EAAAuqB,MACAO,EAAA9qB,EAAA8qB,WACAC,EAAA/qB,EAAA+qB,eACAC,EAAAhrB,EAAAgrB,WACA3B,EAAArpB,EAAAqpB,SAEAW,EAAAh6B,KAAA,IAAAytB,GACAwM,EAAAC,GAAAK,GAEAM,EAAAn1B,EACAkC,EAAAyxB,GACAA,EAAAkB,MACAlB,GAOA/lB,EAAA8C,EAAA8V,SAAAvjB,EAAA,WACAyN,EAAAjT,YAAAiT,EAAAjT,WAAAk3B,WACAjkB,EAAAjT,WAAAk3B,SAAAxqB,EAAA9Q,KAAA,MAEAi7B,IACA1D,GAAAlgB,EAAAwkB,GACAtE,GAAAlgB,EAAAukB,IAEArnB,EAAAglB,WACA0B,GACA1D,GAAAlgB,EAAAskB,GAEAK,KAAA3kB,KAEA0T,IACAgR,KAAA1kB,IAEAA,EAAA8V,SAAA,MAGA8O,GACAA,EAAAR,GAEAA,KAoDA,QAAAF,IAAA90B,GACA,sBAAAA,KAAAK,MAAAL,GASA,QAAA00B,IAAArzB,GACA,IAAAA,EAAY,QACZ,IAAAo0B,GAAAp0B,EAAA8J,GACA,OAAAsqB,GAEAf,GACA1yB,MAAAoD,QAAAqwB,GACAA,EAAA,GACAA,IAGAp0B,EAAAO,SAAAP,EAAAhH,QAAA,EAIA,QAAAq7B,IAAApL,EAAAjgB,GACAA,EAAAG,KAAAmqB,MACA/B,GAAAvoB,GA4FA,QAAAsrB,IAAA/kB,EAAAglB,EAAAluB,GACA,GAAAvG,GAAAy0B,EAAAz0B,MACA00B,EAAAjlB,EAAAkQ,QACA,KAAA+U,GAAA7zB,MAAAoD,QAAAjE,GAAA,CASA,OADAwf,GAAAmV,EACA17B,EAAA,EAAAkB,EAAAsV,EAAA7X,QAAAsB,OAAwCD,EAAAkB,EAAOlB,IAE/C,GADA07B,EAAAllB,EAAA7X,QAAAqB,GACAy7B,EACAlV,EAAAzd,EAAA/B,EAAA40B,GAAAD,KAAA,EACAA,EAAAnV,eACAmV,EAAAnV,gBAGA,IAAA7d,EAAAizB,GAAAD,GAAA30B,GAIA,YAHAyP,EAAAolB,gBAAA57B,IACAwW,EAAAolB,cAAA57B,GAMAy7B,KACAjlB,EAAAolB,eAAA,IAIA,QAAAC,IAAA90B,EAAApI,GACA,OAAAqB,GAAA,EAAAkB,EAAAvC,EAAAsB,OAAqCD,EAAAkB,EAAOlB,IAC5C,GAAA0I,EAAAizB,GAAAh9B,EAAAqB,IAAA+G,GACA,QAGA,UAGA,QAAA40B,IAAAD,GACA,gBAAAA,GACAA,EAAApH,OACAoH,EAAA30B,MAGA,QAAA+0B,IAAAr8B,GACAA,EAAAuK,OAAA0qB,WAAA,EAGA,QAAAqH,IAAAt8B,GACAA,EAAAuK,OAAA0qB,WAAA,EACAsH,GAAAv8B,EAAAuK,OAAA,SAGA,QAAAgyB,IAAAxlB,EAAA/X,GACA,GAAAgB,GAAA4C,SAAA45B,YAAA,aACAx8B,GAAAy8B,UAAAz9B,GAAA,MACA+X,EAAA2lB,cAAA18B,GAMA,QAAA28B,IAAAnsB,GACA,OAAAA,EAAA8U,mBAAA9U,EAAAG,MAAAH,EAAAG,KAAAmZ,WAEAtZ,EADAmsB,GAAAnsB,EAAA8U,kBAAArP,QAyFA,QAAA2mB,IAAApsB,GACA,GAAAqsB,GAAArsB,KAAAO,gBACA,OAAA8rB,MAAA1yB,KAAAjL,QAAA6V,SACA6nB,GAAA9pB,GAAA+pB,EAAAx7B,WAEAmP,EAIA,QAAAssB,IAAAC,GACA,GAAApsB,MACAzR,EAAA69B,EAAAvtB,QAEA,QAAA9P,KAAAR,GAAA8P,UACA2B,EAAAjR,GAAAq9B,EAAAr9B,EAIA,IAAAwT,GAAAhU,EAAAiU,gBACA,QAAA6pB,KAAA9pB,GACAvC,EAAArD,GAAA0vB,IAAA9pB,EAAA8pB,EAEA,OAAArsB,GAGA,QAAAssB,IAAAvgB,EAAAwgB,GACA,uBAAA53B,KAAA43B,EAAAxsB,KACAgM,EAAA,cACA,KAGA,QAAAygB,IAAA3sB,GACA,KAAAA,IAAA7C,QACA,GAAA6C,EAAAG,KAAAmZ,WACA,SAKA,QAAAsT,IAAAxvB,EAAAyvB,GACA,MAAAA,GAAA39B,MAAAkO,EAAAlO,KAAA29B,EAAA3sB,MAAA9C,EAAA8C,IAwPA,QAAA4sB,IAAA7zB,GAEAA,EAAAoH,IAAA0sB,SACA9zB,EAAAoH,IAAA0sB,UAGA9zB,EAAAoH,IAAAqoB,UACAzvB,EAAAoH,IAAAqoB,WAIA,QAAAsE,IAAA/zB,GACAA,EAAAkH,KAAA8sB,OAAAh0B,EAAAoH,IAAA6sB,wBAGA,QAAAC,IAAAl0B,GACA,GAAAm0B,GAAAn0B,EAAAkH,KAAAktB,IACAJ,EAAAh0B,EAAAkH,KAAA8sB,OACAK,EAAAF,EAAAG,KAAAN,EAAAM,KACAC,EAAAJ,EAAAK,IAAAR,EAAAQ,GACA,IAAAH,GAAAE,EAAA,CACAv0B,EAAAkH,KAAAutB,OAAA,CACA,IAAAnW,GAAAte,EAAAoH,IAAA0kB,KACAxN,GAAAoW,UAAApW,EAAAqW,gBAAA,aAAAN,EAAA,MAAAE,EAAA,MACAjW,EAAAsW,mBAAA,MA4DA,QAAAC,IAAAC,EAAAC,GACA,GAAAC,GAAA77B,SAAAC,cAAA,MAEA,OADA47B,GAAAC,UAAA,WAAAH,EAAA,KACAE,EAAAC,UAAA13B,QAAAw3B,GAAA,EAkCA,QAAAG,IAAAC,GAGA,MAFAC,QAAAj8B,SAAAC,cAAA,OACAg8B,GAAAH,UAAAE,EACAC,GAAAnX,YA6DA,QAAAoX,IAAAx3B,EAAAy3B,GACA,GAAAC,GAAAD,EAAAE,GAAAC,EACA,OAAA53B,GAAAovB,QAAAsI,EAAA,SAAArvB,GAA6C,MAAAwvB,IAAAxvB,KAG7C,QAAAyvB,IAAAR,EAAA1/B,GAoHA,QAAAmgC,GAAA/4B,GACArC,GAAAqC,EACAs4B,IAAA9L,UAAAxsB,GAGA,QAAAg5B,KACA,GAAAr3B,GAAA22B,EAAAjvB,MAAA4vB,GACA,IAAAt3B,EAAA,CACA,GAAA0H,IACAqX,QAAA/e,EAAA,GACA0V,SACA1V,MAAAhE,EAEAo7B,GAAAp3B,EAAA,GAAAzH,OAEA,KADA,GAAAm3B,GAAA6H,IACA7H,EAAAiH,EAAAjvB,MAAA8vB,OAAAD,EAAAZ,EAAAjvB,MAAA+vB,MACAL,EAAAG,EAAA,GAAAh/B,QACAmP,EAAAgO,MAAA3c,KAAAw+B,EAEA,IAAA7H,EAIA,MAHAhoB,GAAAgwB,WAAAhI,EAAA,GACA0H,EAAA1H,EAAA,GAAAn3B,QACAmP,EAAAgoB,IAAA1zB,EACA0L,GAKA,QAAAiwB,GAAAjwB,GACA,GAAAqX,GAAArX,EAAAqX,QACA2Y,EAAAhwB,EAAAgwB,UAEAE,KACA,MAAAC,GAAAC,GAAA/Y,IACAgZ,EAAAF,GAEAG,GAAAjZ,IAAA8Y,IAAA9Y,GACAgZ,EAAAhZ,GAQA,QAJAkZ,GAAAC,EAAAnZ,IAAA,SAAAA,GAAA,SAAA8Y,KAAAH,EAEAl+B,EAAAkO,EAAAgO,MAAAnd,OACAmd,EAAA,GAAAxV,OAAA1G,GACAlB,EAAA,EAAmBA,EAAAkB,EAAOlB,IAAA,CAC1B,GAAA4T,GAAAxE,EAAAgO,MAAApd,EAEA6/B,KAAAjsB,EAAA,GAAAnN,QAAA,aACA,KAAAmN,EAAA,UAA6BA,GAAA,GAC7B,KAAAA,EAAA,UAA6BA,GAAA,GAC7B,KAAAA,EAAA,UAA6BA,GAAA,GAE7B,IAAA7M,GAAA6M,EAAA,IAAAA,EAAA,IAAAA,EAAA,MACAwJ,GAAApd,IACA8M,KAAA8G,EAAA,GACA7M,MAAAw3B,GACAx3B,EACApI,EAAA6/B,uBAKAmB,IACAG,EAAAr/B,MAAkB0P,IAAAsW,EAAAsZ,cAAAtZ,EAAAxhB,cAAAmY,UAClBmiB,EAAA9Y,GAGA9nB,EAAA+I,OACA/I,EAAA+I,MAAA+e,EAAArJ,EAAAuiB,EAAAvwB,EAAA1H,MAAA0H,EAAAgoB,KAIA,QAAAqI,GAAAhZ,EAAA/e,EAAA0vB,GACA,GAAAkG,GAAA0C,CASA,IARA,MAAAt4B,IAAwBA,EAAAhE,GACxB,MAAA0zB,IAAsBA,EAAA1zB,GAEtB+iB,IACAuZ,EAAAvZ,EAAAxhB,eAIAwhB,EACA,IAAA6W,EAAAwC,EAAA7/B,OAAA,EAAkCq9B,GAAA,GAClCwC,EAAAxC,GAAAyC,gBAAAC,EAD4C1C,SAO5CA,GAAA,CAGA,IAAAA,GAAA,GAEA,OAAAt9B,GAAA8/B,EAAA7/B,OAAA,EAAoCD,GAAAs9B,EAAUt9B,IAQ9CrB,EAAAy4B,KACAz4B,EAAAy4B,IAAA0I,EAAA9/B,GAAAmQ,IAAAzI,EAAA0vB,EAKA0I,GAAA7/B,OAAAq9B,EACAiC,EAAAjC,GAAAwC,EAAAxC,EAAA,GAAAntB,QACK,OAAA6vB,EACLrhC,EAAA+I,OACA/I,EAAA+I,MAAA+e,MAAA,EAAA/e,EAAA0vB,GAEK,MAAA4I,IACLrhC,EAAA+I,OACA/I,EAAA+I,MAAA+e,MAAA,EAAA/e,EAAA0vB,GAEAz4B,EAAAy4B,KACAz4B,EAAAy4B,IAAA3Q,EAAA/e,EAAA0vB,IAvOA,IALA,GAIA9kB,GAAAitB,EAJAO,KACAR,EAAA3gC,EAAA2gC,WACAM,EAAAjhC,EAAAshC,YAAAC,GACAx8B,EAAA,EAEA26B,GAAA,CAGA,GAFA/rB,EAAA+rB,EAEAkB,GAAAY,GAAAZ,GA0EK,CACL,GAAAa,GAAAb,EAAAt6B,cACAo7B,EAAAC,GAAAF,KAAAE,GAAAF,GAAA,GAAAzb,QAAA,kBAAAyb,EAAA,gBACAG,EAAA,EACAC,EAAAnC,EAAAlI,QAAAkK,EAAA,SAAAI,EAAApwB,EAAAqwB,GAUA,MATAH,GAAAG,EAAAzgC,OACAkgC,GAAAC,IAAA,aAAAA,IACA/vB,IACA8lB,QAAA,2BACAA,QAAA,mCAEAx3B,EAAAgiC,OACAhiC,EAAAgiC,MAAAtwB,GAEA,IAEA3M,IAAA26B,EAAAp+B,OAAAugC,EAAAvgC,OACAo+B,EAAAmC,EACAf,EAAAW,EAAA18B,EAAA68B,EAAA78B,OA5FA,CACA,GAAAk9B,GAAAvC,EAAA53B,QAAA,IACA,QAAAm6B,EAAA,CAEA,GAAAC,GAAA97B,KAAAs5B,GAAA,CACA,GAAAyC,GAAAzC,EAAA53B,QAAA,MAEA,IAAAq6B,GAAA,GACAhC,EAAAgC,EAAA,EACA,WAKA,GAAAC,GAAAh8B,KAAAs5B,GAAA,CACA,GAAA2C,GAAA3C,EAAA53B,QAAA,KAEA,IAAAu6B,GAAA,GACAlC,EAAAkC,EAAA,EACA,WAKA,GAAAC,GAAA5C,EAAAjvB,MAAA8xB,GACA,IAAAD,EAAA,CACAnC,EAAAmC,EAAA,GAAAhhC,OACA,UAIA,GAAAkhC,GAAA9C,EAAAjvB,MAAAsxB,GACA,IAAAS,EAAA,CACA,GAAAC,GAAA19B,CACAo7B,GAAAqC,EAAA,GAAAlhC,QACAw/B,EAAA0B,EAAA,GAAAC,EAAA19B,EACA,UAIA,GAAA29B,GAAAtC,GACA,IAAAsC,EAAA,CACAhC,EAAAgC,EACA,WAIA,GAAAhxB,GAAA,OAAAixB,EAAA,OAAAnP,EAAA,MACA,IAAAyO,GAAA,GAEA,IADAU,EAAAjD,EAAArY,MAAA4a,KAEAF,GAAA37B,KAAAu8B,IACAtC,GAAAj6B,KAAAu8B,IACAT,GAAA97B,KAAAu8B,IACAP,GAAAh8B,KAAAu8B,QAGAnP,EAAAmP,EAAA76B,QAAA,QACA,IACAm6B,GAAAzO,EACAmP,EAAAjD,EAAArY,MAAA4a,EAEAvwB,GAAAguB,EAAA9L,UAAA,EAAAqO,GACA9B,EAAA8B,GAGAA,EAAA,IACAvwB,EAAAguB,EACAA,EAAA,IAGA1/B,EAAAgiC,OAAAtwB,GACA1R,EAAAgiC,MAAAtwB,GAuBA,GAAAguB,IAAA/rB,EAAA,CACA3T,EAAAgiC,OAAAhiC,EAAAgiC,MAAAtC,EAIA,QAKAoB,IA4IA,QAAA8B,IACAlxB,EACAmxB,GAEA,GAAAC,GAAAD,EAAAE,GAAAF,GAAAG,EACA,IAAAF,EAAA18B,KAAAsL,GAAA,CAMA,IAHA,GAEAjB,GAAA1L,EAFAk+B,KACAC,EAAAJ,EAAAI,UAAA,EAEAzyB,EAAAqyB,EAAAK,KAAAzxB,IAAA,CACA3M,EAAA0L,EAAA1L,MAEAA,EAAAm+B,GACAD,EAAAnhC,KAAA8D,KAAAC,UAAA6L,EAAA2V,MAAA6b,EAAAn+B,IAGA,IAAAmrB,GAAAD,GAAAxf,EAAA,GAAA6f,OACA2S,GAAAnhC,KAAA,MAAAouB,EAAA,KACAgT,EAAAn+B,EAAA0L,EAAA,GAAAnP,OAKA,MAHA4hC,GAAAxxB,EAAApQ,QACA2hC,EAAAnhC,KAAA8D,KAAAC,UAAA6L,EAAA2V,MAAA6b,KAEAD,EAAAtgC,KAAA,MA6BA,QAAAygC,IACAC,EACArjC,GA0BA,QAAAsjC,GAAAC,GAEAA,EAAAC,MACAC,GAAA,GAEAC,GAAAH,EAAA/xB,OACAmyB,GAAA,GA9BAC,GAAA5jC,EAAAwmB,MAAA4K,GACAyS,GAAA7jC,EAAA4f,iBAAA2hB,GACAuC,GAAA9jC,EAAA8gB,aAAAygB,GACAmC,GAAA1jC,EAAA+jC,UAAAxC,GACAyC,GAAA1S,GAAAtxB,EAAA4C,QAAA,oBACAqhC,GAAA3S,GAAAtxB,EAAA4C,QAAA,iBACAshC,GAAA5S,GAAAtxB,EAAA4C,QAAA,qBACAigC,GAAA7iC,EAAA6iC,UAEA,IAEAsB,GACAC,EAHAjD,KACAkD,EAAArkC,EAAAqkC,sBAAA,EAGAZ,GAAA,EACAE,GAAA,CAiNA,OA7LAzD,IAAAmD,GACA7c,KAAAod,GACAjD,WAAA3gC,EAAA2gC,WACAW,WAAAthC,EAAAshC,WACAzB,qBAAA7/B,EAAA6/B,qBACA92B,MAAA,SAAAyI,EAAAiN,EAAAuiB,GAmEA,QAAAsD,GAAAzsB,IAhEA,GAAA/F,GAAAsyB,KAAAtyB,IAAA+xB,GAAAryB,EAIAujB,KAAA,QAAAjjB,IACA2M,EAAA8lB,GAAA9lB,GAGA,IAAA8kB,IACAzjC,KAAA,EACA0R,MACAghB,UAAA/T,EACA8T,SAAAiS,GAAA/lB,GACAhQ,OAAA21B,EACAjiC,YAEA2P,KACAyxB,EAAAzxB,MAGA2yB,GAAAlB,KAAAn3B,OACAm3B,EAAAmB,WAAA,EASA,QAAArjC,GAAA,EAAqBA,EAAA2iC,GAAA1iC,OAA0BD,IAC/C2iC,GAAA3iC,GAAAkiC,EAAAvjC,EAYA,IATAyjC,IACAkB,GAAApB,GACAA,EAAAC,MACAC,GAAA,IAGAC,GAAAH,EAAA/xB,OACAmyB,GAAA,GAEAF,EACAmB,GAAArB,OACO,CACPsB,GAAAtB,GACAuB,GAAAvB,GACAwB,GAAAxB,GACAyB,GAAAzB,GAIAA,EAAA0B,OAAA1B,EAAA/iC,MAAAie,EAAAnd,OAEA4jC,GAAA3B,GACA4B,GAAA5B,GACA6B,GAAA7B,EACA,QAAA1uB,GAAA,EAAyBA,EAAAovB,GAAA3iC,OAAyBuT,IAClDovB,GAAApvB,GAAA0uB,EAAAvjC,EAEAqlC,IAAA9B,GAwCA,GAnBAY,EAGOhD,EAAA7/B,QAEP6iC,EAAAmB,KAAA/B,EAAAgC,QAAAhC,EAAAiC,QACAlB,EAAAf,GACAkC,GAAAtB,GACAjU,IAAAqT,EAAAgC,OACAG,MAAAnC,MARAY,EAAAZ,EACAe,EAAAH,IAiBAC,IAAAb,EAAAmB,UACA,GAAAnB,EAAAgC,QAAAhC,EAAAiC,KACAG,GAAApC,EAAAa,OACS,IAAAb,EAAAqC,UAAA,CACTxB,EAAAa,OAAA,CACA,IAAA92B,GAAAo1B,EAAAsC,YAAA,aAAuDzB,EAAA7rB,cAAA6rB,EAAA7rB,iBAA6DpK,GAAAo1B,MAEpHa,GAAAjiC,SAAAL,KAAAyhC,GACAA,EAAA90B,OAAA21B,CAGApD,GAIAsC,EAAAC,IAHAa,EAAAb,EACApC,EAAAr/B,KAAAyhC,GAKA,QAAAuC,GAAA,EAAuBA,EAAA5B,GAAA5iC,OAA6BwkC,IACpD5B,GAAA4B,GAAAvC,EAAAvjC,IAIAy4B,IAAA,WAEA,GAAA8K,GAAApC,IAAA7/B,OAAA,GACAykC,EAAAxC,EAAAphC,SAAAohC,EAAAphC,SAAAb,OAAA,EACAykC,IAAA,IAAAA,EAAAjmC,MAAA,MAAAimC,EAAAr0B,OAAAiyB,GACAJ,EAAAphC,SAAAqJ,MAGA21B,EAAA7/B,QAAA,EACA8iC,EAAAjD,IAAA7/B,OAAA,GACAgiC,EAAAC,IAGAvB,MAAA,SAAAtwB,GACA,GAAA0yB,KAgBArP,IACA,aAAAqP,EAAA5yB,KACA4yB,EAAA7R,SAAAwL,cAAArsB,GAFA,CAKA,GAAAvP,GAAAiiC,EAAAjiC,QAKA,IAJAuP,EAAAiyB,GAAAjyB,EAAA4e,OACA0V,GAAAt0B,GAEA2yB,GAAAliC,EAAAb,OAAA,OACA,CACA,GAAAkvB,IACAiT,GAAA,MAAA/xB,IAAA8e,EAAAoS,GAAAlxB,EAAAmxB,KACA1gC,EAAAL,MACAhC,KAAA,EACA0wB,aACA9e,SAES,MAAAA,GAAAvP,EAAAb,QAAA,MAAAa,IAAAb,OAAA,GAAAoQ,MACTvP,EAAAL,MACAhC,KAAA,EACA4R,cAMAyyB,EAGA,QAAAQ,IAAA9sB,GACA,MAAAwa,GAAAxa,EAAA,WACAA,EAAA2rB,KAAA,GAIA,QAAAoB,IAAA/sB,GACA,GAAAtV,GAAAsV,EAAA2a,UAAAlxB,MACA,IAAAiB,EAEA,OADAkc,GAAA5G,EAAA4G,MAAA,GAAAxV,OAAA1G,GACAlB,EAAA,EAAmBA,EAAAkB,EAAOlB,IAC1Bod,EAAApd,IACA8M,KAAA0J,EAAA2a,UAAAnxB,GAAA8M,KACA/F,MAAAxC,KAAAC,UAAAgS,EAAA2a,UAAAnxB,GAAA+G,YAGGyP,GAAA2rB,MAEH3rB,EAAAotB,OAAA,GAIA,QAAAD,IAAAntB,GACA,GAAAqY,GAAAgC,GAAAra,EAAA,MACAqY,KAIArY,EAAArX,IAAA0vB,GAIA,QAAAgV,IAAArtB,GACA,GAAAiK,GAAAoQ,GAAAra,EAAA,MACAiK,KACAjK,EAAAiK,MACAjK,EAAA8Q,SAAAsd,GAAApuB,IAIA,QAAAgtB,IAAAhtB,GACA,GAAAqY,EACA,IAAAA,EAAAmC,GAAAxa,EAAA,UACA,GAAAquB,GAAAhW,EAAAzf,MAAA01B,GACA,KAAAD,EAIA,MAEAruB,GAAAuuB,IAAAF,EAAA,GAAA5V,MACA,IAAA+V,GAAAH,EAAA,GAAA5V,OACAgW,EAAAD,EAAA51B,MAAA81B,GACAD,IACAzuB,EAAAwuB,MAAAC,EAAA,GAAAhW,OACAzY,EAAA2uB,UAAAF,EAAA,GAAAhW,OACAgW,EAAA,KACAzuB,EAAA4uB,UAAAH,EAAA,GAAAhW,SAGAzY,EAAAwuB,SAKA,QAAAvB,IAAAjtB,GACA,GAAAqY,GAAAmC,GAAAxa,EAAA,OACA,IAAAqY,EACArY,EAAAytB,GAAApV,EACAuV,GAAA5tB,GACAqY,MACAwV,MAAA7tB,QAEG,CACH,MAAAwa,GAAAxa,EAAA,YACAA,EAAA2tB,MAAA,EAEA,IAAAD,GAAAlT,GAAAxa,EAAA,YACA0tB,KACA1tB,EAAA0tB,WAKA,QAAAI,IAAA9tB,EAAApJ,GACA,GAAA8hB,GAAAmW,GAAAj4B,EAAAtM,SACAouB,MAAA+U,IACAG,GAAAlV,GACAL,IAAArY,EAAA0tB,OACAG,MAAA7tB,IAUA,QAAA6uB,IAAAvkC,GAEA,IADA,GAAAd,GAAAc,EAAAb,OACAD,KAAA,CACA,OAAAc,EAAAd,GAAAvB,KACA,MAAAqC,GAAAd,EAQAc,GAAAqJ,OAKA,QAAAi6B,IAAA5tB,EAAA8uB,GACA9uB,EAAA+uB,eACA/uB,EAAA+uB,iBAEA/uB,EAAA+uB,aAAA9kC,KAAA6kC,GAGA,QAAA5B,IAAAltB,GAEA,MADAwa,GAAAxa,EAAA,YAEAA,EAAAzN,MAAA,GAIA,QAAA+6B,IAAAttB,GACA,YAAAA,EAAArG,IACAqG,EAAAgvB,SAAA3U,GAAAra,EAAA,YAQG,CACH,GAAAguB,GAAA3T,GAAAra,EAAA,OACAguB,KACAhuB,EAAAguB,WAAA,OAAAA,EAAA,YAAAA,GAEA,aAAAhuB,EAAArG,MACAqG,EAAA+tB,UAAAvT,GAAAxa,EAAA,WAKA,QAAAutB,IAAAvtB,GACA,GAAAglB,IACAA,EAAA3K,GAAAra,EAAA,SACAA,EAAAivB,UAAAjK,GAEA,MAAAxK,GAAAxa,EAAA,qBACAA,EAAAmG,gBAAA,GAIA,QAAAqnB,IAAAxtB,GACA,GACAxW,GAAAkB,EAAA4L,EAAA2gB,EAAA1mB,EAAAumB,EAAAoY,EADA7lC,EAAA2W,EAAA2a,SAEA,KAAAnxB,EAAA,EAAAkB,EAAArB,EAAAI,OAA8BD,EAAAkB,EAAOlB,IAGrC,GAFA8M,EAAA2gB,EAAA5tB,EAAAG,GAAA8M,KACA/F,EAAAlH,EAAAG,GAAA+G,MACA4+B,GAAA5gC,KAAA+H,GAQA,GANA0J,EAAAovB,aAAA,EAEAtY,EAAAuY,GAAA/4B,GACAwgB,IACAxgB,IAAAqpB,QAAA2P,GAAA,KAEAC,GAAAhhC,KAAA+H,GACAA,IAAAqpB,QAAA4P,GAAA,IACAh/B,EAAA6nB,GAAA7nB,GACA2+B,GAAA,EACApY,IACAA,EAAA5e,OACAg3B,GAAA,EAEA,eADA54B,EAAAC,GAAAD,MACuCA,EAAA,cAEvCwgB,EAAA0Y,QACAl5B,EAAAC,GAAAD,KAGA44B,GAAAjD,GAAAjsB,EAAArG,IAAAqG,EAAA0a,SAAAzyB,KAAAqO,GACAqjB,GAAA3Z,EAAA1J,EAAA/F,GAEAqpB,GAAA5Z,EAAA1J,EAAA/F,OAEO,IAAAk/B,GAAAlhC,KAAA+H,GACPA,IAAAqpB,QAAA8P,GAAA,IACA1V,GAAA/Z,EAAA1J,EAAA/F,EAAAumB,OACO,CACPxgB,IAAAqpB,QAAAwP,GAAA,GAEA,IAAAO,GAAAp5B,EAAAsC,MAAA+2B,IACA7V,EAAA4V,KAAA,EACA5V,KACAxjB,IAAAkZ,MAAA,IAAAsK,EAAArwB,OAAA,KAEAowB,GAAA7Z,EAAA1J,EAAA2gB,EAAA1mB,EAAAupB,EAAAhD,OAKK,CAaL8C,GAAA5Z,EAAA1J,EAAAvI,KAAAC,UAAAuC,KAKA,QAAA69B,IAAApuB,GAEA,IADA,GAAApJ,GAAAoJ,EACApJ,GAAA,CACA,GAAA0B,SAAA1B,EAAA23B,IACA,QAEA33B,YAEA,SAGA,QAAAy4B,IAAA/4B,GACA,GAAAsC,GAAAtC,EAAAsC,MAAA02B,GACA,IAAA12B,EAAA,CACA,GAAAzH,KAEA,OADAyH,GAAAlQ,QAAA,SAAAqJ,GAAgCZ,EAAAY,EAAAyd,MAAA,SAChCre,GAIA,QAAAw7B,IAAA/lB,GAEA,OADA/W,MACArG,EAAA,EAAAkB,EAAAkc,EAAAnd,OAAmCD,EAAAkB,EAAOlB,IAI1CqG,EAAA+W,EAAApd,GAAA8M,MAAAsQ,EAAApd,GAAA+G,KAEA,OAAAV,GAGA,QAAA+8B,IAAA5sB,GACA,MACA,UAAAA,EAAArG,KACA,WAAAqG,EAAArG,OACAqG,EAAA0a,SAAAzyB,MACA,oBAAA+X,EAAA0a,SAAAzyB,MASA,QAAAykC,IAAA9lB,GAEA,OADAhV,MACApI,EAAA,EAAiBA,EAAAod,EAAAnd,OAAkBD,IAAA,CACnC,GAAAi/B,GAAA7hB,EAAApd,EACAomC,IAAArhC,KAAAk6B,EAAAnyB,QACAmyB,EAAAnyB,KAAAmyB,EAAAnyB,KAAAqpB,QAAAkQ,GAAA,IACAj+B,EAAA3H,KAAAw+B,IAGA,MAAA72B,GAqCA,QAAAk+B,IAAAxD,EAAAnkC,GACAmkC,IACAyD,GAAAC,GAAA7nC,EAAA8J,YAAA,IACAg+B,GAAA9nC,EAAA6f,eAAA0hB,GAEAwG,GAAA5D,GAEA6D,GAAA7D,GAAA,IAGA,QAAA8D,IAAA3nC,GACA,MAAAiH,GACA,2DACAjH,EAAA,IAAAA,EAAA,KAIA,QAAAynC,IAAAtyB,GAEA,GADAA,EAAAyyB,OAAAn2B,GAAA0D,GACA,IAAAA,EAAA3V,KAAA,CAIA,IACAgoC,GAAAryB,EAAAjE,MACA,SAAAiE,EAAAjE,KACA,MAAAiE,EAAA8c,SAAA,mBAEA,MAEA,QAAAlxB,GAAA,EAAAkB,EAAAkT,EAAAtT,SAAAb,OAA6CD,EAAAkB,EAAOlB,IAAA,CACpD,GAAAqN,GAAA+G,EAAAtT,SAAAd,EACA0mC,IAAAr5B,GACAA,EAAAw5B,SACAzyB,EAAAyyB,QAAA,KAMA,QAAAF,IAAAvyB,EAAAuL,GACA,OAAAvL,EAAA3V,KAAA,CAOA,IANA2V,EAAAyyB,QAAAzyB,EAAArL,QACAqL,EAAA0yB,YAAAnnB,GAKAvL,EAAAyyB,QAAAzyB,EAAAtT,SAAAb,SACA,IAAAmU,EAAAtT,SAAAb,QACA,IAAAmU,EAAAtT,SAAA,GAAArC,MAGA,YADA2V,EAAA2yB,YAAA,EAKA,IAFA3yB,EAAA2yB,YAAA,EAEA3yB,EAAAtT,SACA,OAAAd,GAAA,EAAAkB,EAAAkT,EAAAtT,SAAAb,OAA+CD,EAAAkB,EAAOlB,IACtD2mC,GAAAvyB,EAAAtT,SAAAd,GAAA2f,KAAAvL,EAAA2wB,IAGA3wB,GAAAmxB,cACAyB,GAAA5yB,EAAAmxB,aAAA5lB,IAKA,QAAAqnB,IAAAC,EAAAtnB,GACA,OAAA3f,GAAA,EAAAqP,EAAA43B,EAAAhnC,OAA+CD,EAAAqP,EAASrP,IACxD2mC,GAAAM,EAAAjnC,GAAAqkC,MAAA1kB,GAIA,QAAAjP,IAAA0D,GACA,WAAAA,EAAA3V,OAGA,IAAA2V,EAAA3V,SAGA2V,EAAA+tB,MACA/tB,EAAAwxB,aACAxxB,EAAA6vB,IAAA7vB,EAAA2wB,KACAmC,GAAA9yB,EAAAjE,OACAs2B,GAAAryB,EAAAjE,MACAg3B,GAAA/yB,KACApV,OAAAC,KAAAmV,GAAAF,MAAAqyB,OAIA,QAAAY,IAAA/yB,GACA,KAAAA,EAAAhH,QAAA,CAEA,GADAgH,IAAAhH,OACA,aAAAgH,EAAAjE,IACA,QAEA,IAAAiE,EAAA2wB,IACA,SAGA,SAuCA,QAAAqC,IAAA3W,EAAAC,GACA,GAAAtoB,GAAAsoB,EAAA,aAAgC,MAChC,QAAA5jB,KAAA2jB,GACAroB,GAAA,IAAA0E,EAAA,KAAAu6B,GAAAv6B,EAAA2jB,EAAA3jB,IAAA,GAEA,OAAA1E,GAAA4d,MAAA,UAGA,QAAAqhB,IACAv6B,EACA2N,GAEA,IAAAA,EACA,oBAGA,IAAA7S,MAAAoD,QAAAyP,GACA,UAAAA,EAAApU,IAAA,SAAAoU,GAAmD,MAAA4sB,IAAAv6B,EAAA2N,KAAoCnZ,KAAA,QAGvF,IAAAgmC,GAAAC,GAAAxiC,KAAA0V,EAAA1T,OACAygC,EAAAC,GAAA1iC,KAAA0V,EAAA1T,MAEA,IAAA0T,EAAA6S,UAIG,CACH,GAAA+F,GAAA,GACAqU,EAAA,GACAzoC,IACA,QAAAE,KAAAsb,GAAA6S,UACAqa,GAAAxoC,IACAuoC,GAAAC,GAAAxoC,GAEAmgB,GAAAngB,IACAF,EAAAwB,KAAAtB,IAGAF,EAAAwB,KAAAtB,EAGAF,GAAAgB,SACAozB,GAAAuU,GAAA3oC,IAGAyoC,IACArU,GAAAqU,EAOA,2BAA8BrU,GAL9BiU,EACA7sB,EAAA1T,MAAA,WACAygC,EACA,IAAA/sB,EAAA,kBACAA,EAAA1T,OAC8B,IA9B9B,MAAAugC,IAAAE,EACA/sB,EAAA1T,MACA,oBAA2B0T,EAAA,UAgC3B,QAAAmtB,IAAA3oC,GACA,mCAAAA,EAAAoH,IAAAwhC,IAAAvmC,KAAA,sBAGA,QAAAumC,IAAA1oC,GACA,GAAA2oC,GAAAC,SAAA5oC,EAAA,GACA,IAAA2oC,EACA,0BAAAA,CAEA,IAAA9C,GAAA1lB,GAAAngB,EACA,4BAAAoF,KAAAC,UAAArF,IAAA6lC,EAAA,IAAAzgC,KAAAC,UAAAwgC,GAAA,QAKA,QAAAgD,IAAAxxB,EAAAiW,GACAjW,EAAAyxB,SAAA,SAAA5U,GACA,YAAAA,EAAA,KAAA7c,EAAA,SAAAiW,EAAA,OAAAA,EAAAa,WAAAb,EAAAa,UAAA5e,KAAA,iBAuBA,QAAAw5B,IACAC,EACAxpC,GAGA,GAAAypC,GAAAvpC,GACAwpC,EAAAxpC,MACAypC,EAAAC,EACAA,IAAA,EACAC,GAAA7pC,EACA8pC,GAAA9pC,EAAAwmB,MAAA4K,GACA2Y,GAAAzY,GAAAtxB,EAAA4C,QAAA,iBACAonC,GAAA1Y,GAAAtxB,EAAA4C,QAAA,WACAqnC,GAAAjqC,EAAAuO,eACA27B,GAAAlqC,EAAA6f,eAAA0hB,EACA,IAAA7M,GAAA8U,EAAAW,GAAAX,GAAA,WAGA,OAFAtpC,IAAAupC,EACAG,GAAAD,GAEA1pC,OAAA,qBAAyBy0B,EAAA,IACzBx0B,gBAAAwpC,GAIA,QAAAS,IAAAtyB,GACA,GAAAA,EAAAuwB,aAAAvwB,EAAAuyB,gBACA,MAAAC,IAAAxyB,EACG,IAAAA,EAAAzN,OAAAyN,EAAAyyB,cACH,MAAAC,IAAA1yB,EACG,IAAAA,EAAAuuB,MAAAvuB,EAAA2yB,aACH,MAAAC,IAAA5yB,EACG,IAAAA,EAAAytB,KAAAztB,EAAA6yB,YACH,MAAAC,IAAA9yB,EACG,iBAAAA,EAAArG,KAAAqG,EAAAguB,WAEA,aAAAhuB,EAAArG,IACH,MAAAo5B,IAAA/yB,EAGA,IAAA6c,EACA,IAAA7c,EAAAivB,UACApS,EAAAmW,GAAAhzB,EAAAivB,UAAAjvB,OACK,CACL,GAAApG,GAAAoG,EAAAotB,MAAA90B,OAAA26B,GAAAjzB,GAEA1V,EAAA0V,EAAAmG,eAAA,KAAA+sB,GAAAlzB,GAAA,EACA6c,GAAA,OAAA7c,EAAA,SAAApG,EAAA,IAAAA,EAAA,KAAAtP,EAAA,IAAAA,EAAA,QAGA,OAAAd,GAAA,EAAmBA,EAAA0oC,GAAAzoC,OAAyBD,IAC5CqzB,EAAAqV,GAAA1oC,GAAAwW,EAAA6c,EAEA,OAAAA,GAlBA,MAAAqW,IAAAlzB,IAAA,SAuBA,QAAAwyB,IAAAxyB,GAGA,MAFAA,GAAAuyB,iBAAA,EACAlqC,GAAA4B,KAAA,qBAAoCqoC,GAAAtyB,GAAA,KACpC,OAAA3X,GAAAoB,OAAA,IAAAuW,EAAAswB,YAAA,gBAIA,QAAAoC,IAAA1yB,GAEA,GADAA,EAAAyyB,eAAA,EACAzyB,EAAAytB,KAAAztB,EAAA6yB,YACA,MAAAC,IAAA9yB,EACG,IAAAA,EAAAswB,YAAA,CAGH,IAFA,GAAA3nC,GAAA,GACAiO,EAAAoJ,EAAApJ,OACAA,GAAA,CACA,GAAAA,EAAA23B,IAAA,CACA5lC,EAAAiO,EAAAjO,GACA,OAEAiO,WAEA,MAAAjO,GAMA,MAAA2pC,GAAAtyB,GAAA,IAAA+xB,MAAAppC,EAAA,IAAAA,EAAA,QAFA2pC,GAAAtyB,GAIA,MAAAwyB,IAAAxyB,GAIA,QAAA8yB,IAAA9yB,GAEA,MADAA,GAAA6yB,aAAA,EACAM,GAAAnzB,EAAA+uB,aAAAvf,SAGA,QAAA2jB,IAAAC,GAaA,QAAAC,GAAArzB,GACA,MAAAA,GAAAzN,KAAAmgC,GAAA1yB,GAAAsyB,GAAAtyB,GAbA,IAAAozB,EAAA3pC,OACA,YAGA,IAAAqlC,GAAAsE,EAAAE,OACA,OAAAxE,GAAAzW,IACA,IAAAyW,EAAA,SAAAuE,EAAAvE,EAAAjB,OAAA,IAAAsF,GAAAC,GAEA,GAAAC,EAAAvE,EAAAjB,OASA,QAAA+E,IAAA5yB,GACA,GAAAqY,GAAArY,EAAAuuB,IACAC,EAAAxuB,EAAAwuB,MACAG,EAAA3uB,EAAA2uB,UAAA,IAAA3uB,EAAA,aACA4uB,EAAA5uB,EAAA4uB,UAAA,IAAA5uB,EAAA,YAeA,OADAA,GAAA2yB,cAAA,EACA,OAAAta,EAAA,cACAmW,EAAAG,EAAAC,EAAA,YACA0D,GAAAtyB,GACA,KAGA,QAAAizB,IAAAjzB,GACA,GAAApG,GAAA,IAIAnD,EAAA88B,GAAAvzB,EACAvJ,KAAamD,GAAAnD,EAAA,KAGbuJ,EAAArX,MACAiR,GAAA,OAAAoG,EAAA,SAGAA,EAAAiK,MACArQ,GAAA,OAAAoG,EAAA,SAEAA,EAAA8Q,WACAlX,GAAA,kBAGAoG,EAAA2rB,MACA/xB,GAAA,aAGAoG,EAAAivB,YACAr1B,GAAA,QAAAoG,EAAA,SAGA,QAAAxW,GAAA,EAAiBA,EAAA2oC,GAAA1oC,OAAuBD,IACxCoQ,GAAAu4B,GAAA3oC,GAAAwW,EA8BA,IA3BAA,EAAA4G,QACAhN,GAAA,UAAoB45B,GAAAxzB,EAAA4G,OAAA,MAGpB5G,EAAA3J,QACAuD,GAAA,aAAuB45B,GAAAxzB,EAAA3J,OAAA,MAGvB2J,EAAAia,SACArgB,GAAAg3B,GAAA5wB,EAAAia,QAAA,KAEAja,EAAAma,eACAvgB,GAAAg3B,GAAA5wB,EAAAma,cAAA,QAGAna,EAAAguB,aACAp0B,GAAA,QAAAoG,EAAA,gBAGAA,EAAAU,cACA9G,GAAA65B,GAAAzzB,EAAAU,aAAA,KAGAV,EAAAmF,QACAvL,GAAA,gBAAoBoG,EAAAmF,MAAA,mBAAAnF,EAAAmF,MAAA,wBAAAnF,EAAAmF,MAAA,iBAGpBnF,EAAAmG,eAAA,CACA,GAAAA,GAAAutB,GAAA1zB,EACAmG,KACAvM,GAAAuM,EAAA,KAQA,MALAvM,KAAA+lB,QAAA,aAEA3f,EAAAyxB,WACA73B,EAAAoG,EAAAyxB,SAAA73B,IAEAA,EAGA,QAAA25B,IAAAvzB,GACA,GAAAvJ,GAAAuJ,EAAAtJ,UACA,IAAAD,EAAA,CACA,GAEAjN,GAAAkB,EAAAurB,EAAA0d,EAFA/hC,EAAA,eACAgiC,GAAA,CAEA,KAAApqC,EAAA,EAAAkB,EAAA+L,EAAAhN,OAA8BD,EAAAkB,EAAOlB,IAAA,CACrCysB,EAAAxf,EAAAjN,GACAmqC,GAAA,CACA,IAAAE,GAAAzB,GAAAnc,EAAA3f,OAAAw9B,GAAA7d,EAAA3f,KACAu9B,KAGAF,IAAAE,EAAA7zB,EAAAiW,EAAAgc,KAEA0B,IACAC,GAAA,EACAhiC,GAAA,UAAeqkB,EAAA,mBAAAA,EAAA,aAAAA,EAAA1lB,MAAA,WAAA0lB,EAAA,sBAAAloB,KAAAC,UAAAioB,EAAA1lB,OAAA,KAAA0lB,EAAA6D,IAAA,SAAA7D,EAAA,aAAAA,EAAAa,UAAA,cAAA/oB,KAAAC,UAAAioB,EAAAa,WAAA,UAGf,MAAA8c,GACAhiC,EAAA4d,MAAA,UADA,QAKA,QAAAkkB,IAAA1zB,GACA,GAAA2xB,GAAA3xB,EAAA1V,SAAA,EAMA,QAAAqnC,EAAA1pC,KAAA,CACA,GAAA8rC,GAAArC,GAAAC,EAAAK,GACA,4CAA+C+B,EAAA,6BAAiCA,EAAA1rC,gBAAAwH,IAAA,SAAAgtB,GAA4E,oBAAqBA,EAAA,MAAkB/xB,KAAA,WAInM,QAAA2oC,IAAAn2B,GACA,yBAAA9U,OAAAC,KAAA6U,GAAAzN,IAAA,SAAAlH,GAAuE,MAAAqrC,IAAArrC,EAAA2U,EAAA3U,MAAyCmC,KAAA,UAGhH,QAAAkpC,IAAArrC,EAAAqX,GACA,UAAArX,EAAA,aAAA0G,OAAA2Q,EAAA0a,SAAAuZ,OAAA,aACA,aAAAj0B,EAAArG,IACAu5B,GAAAlzB,IAAA,SACAsyB,GAAAtyB,IAAA,KAGA,QAAAkzB,IAAAlzB,EAAAk0B,GACA,GAAA5pC,GAAA0V,EAAA1V,QACA,IAAAA,EAAAb,OAAA,CACA,GAAA0qC,GAAA7pC,EAAA,EAEA,QAAAA,EAAAb,QACA0qC,EAAA5F,KACA,aAAA4F,EAAAx6B,KACA,SAAAw6B,EAAAx6B,IACA,MAAA24B,IAAA6B,EAEA,IAAAzsB,GAAAwsB,EAAAE,GAAA9pC,GAAA,CACA,WAAAA,EAAAuF,IAAAwkC,IAAAvpC,KAAA,UAAA4c,EAAA,IAAAA,EAAA,KAQA,QAAA0sB,IAAA9pC,GAEA,OADAsH,GAAA,EACApI,EAAA,EAAiBA,EAAAc,EAAAb,OAAqBD,IAAA,CACtC,GAAAwW,GAAA1V,EAAAd,EACA,QAAAwW,EAAA/X,KAAA,CAGA,GAAAqsC,GAAAt0B,IACAA,EAAA+uB,cAAA/uB,EAAA+uB,aAAAwF,KAAA,SAAA7hC,GAA+D,MAAA4hC,IAAA5hC,EAAAm7B,SAAsC,CACrGj8B,EAAA,CACA,QAEA4iC,GAAAx0B,IACAA,EAAA+uB,cAAA/uB,EAAA+uB,aAAAwF,KAAA,SAAA7hC,GAA+D,MAAA8hC,IAAA9hC,EAAAm7B,YAC/Dj8B,EAAA,IAGA,MAAAA,GAGA,QAAA0iC,IAAAt0B,GACA,MAAA1H,UAAA0H,EAAAuuB,KAAA,aAAAvuB,EAAArG,KAAA,SAAAqG,EAAArG,IAGA,QAAA66B,IAAAx0B,GACA,OAAAqyB,GAAAryB,EAAArG,KAGA,QAAA06B,IAAAz2B,GACA,WAAAA,EAAA3V,KACAqqC,GAAA10B,GAEA62B,GAAA72B,GAIA,QAAA62B,IAAA56B,GACA,iBAAAA,EAAA5R,KACA4R,EAAA8e,WACA+b,GAAA3mC,KAAAC,UAAA6L,UAAA,IAGA,QAAAk5B,IAAA/yB,GACA,GAAAgvB,GAAAhvB,EAAAgvB,UAAA,YACA1kC,EAAA4oC,GAAAlzB,GACApO,EAAA,MAAAo9B,GAAA1kC,EAAA,IAAAA,EAAA,IACAsc,EAAA5G,EAAA4G,OAAA,IAA6B5G,EAAA4G,MAAA/W,IAAA,SAAAgB,GAAgC,MAAA0F,IAAA1F,EAAAyF,MAAA,IAAAzF,EAAA,QAAiD/F,KAAA,SAC9G6pC,EAAA30B,EAAA0a,SAAA,SAUA,QATA9T,IAAA+tB,GAAArqC,IACAsH,GAAA,SAEAgV,IACAhV,GAAA,IAAAgV,GAEA+tB,IACA/iC,IAAAgV,EAAA,gBAAA+tB,GAEA/iC,EAAA,IAIA,QAAAohC,IAAA4B,EAAA50B,GACA,GAAA1V,GAAA0V,EAAAmG,eAAA,KAAA+sB,GAAAlzB,GAAA,EACA,aAAA40B,EAAA,IAAA3B,GAAAjzB,IAAA1V,EAAA,IAAAA,EAAA,QAGA,QAAAkpC,IAAAn9B,GAEA,OADAzE,GAAA,GACApI,EAAA,EAAiBA,EAAA6M,EAAA5M,OAAkBD,IAAA,CACnC,GAAA0O,GAAA7B,EAAA7M,EACAoI,IAAA,IAAAsG,EAAA,UAAAw8B,GAAAx8B,EAAA3H,OAAA,IAEA,MAAAqB,GAAA4d,MAAA,MAIA,QAAAklB,IAAA76B,GACA,MAAAA,GACA8lB,QAAA,qBACAA,QAAA,qBAqGA,QAAAkV,IACArJ,EACArjC,GAEA,GAAAwpC,GAAApG,GAAAC,EAAA/S,OAAAtwB,EACA2nC,IAAA6B,EAAAxpC,EACA,IAAA00B,GAAA6U,GAAAC,EAAAxpC,EACA,QACAwpC,MACAvpC,OAAAy0B,EAAAz0B,OACAC,gBAAAw0B,EAAAx0B,iBAIA,QAAAysC,IAAAjY,EAAAkY,GACA,IACA,UAAAhsC,UAAA8zB,GACG,MAAA9jB,GAEH,MADAg8B,GAAA9qC,MAAiB8O,MAAA8jB,SACjBtwB,GAIA,QAAAyoC,IAAAC,GAGA,QAAAC,GACA1J,EACArjC,GAEA,GAAAgtC,GAAA3sC,OAAAsH,OAAAmlC,GACAF,KACAK,IAKA,IAJAD,EAAAxmB,KAAA,SAAA6K,EAAA6b,IACAA,EAAAD,EAAAL,GAAA9qC,KAAAuvB,IAGArxB,EAAA,CAEAA,EAAA4C,UACAoqC,EAAApqC,SAAAkqC,EAAAlqC,aAAAiH,OAAA7J,EAAA4C,UAGA5C,EAAAuO,aACAy+B,EAAAz+B,WAAArF,EACA7I,OAAAsH,OAAAmlC,EAAAv+B,YACAvO,EAAAuO,YAIA,QAAA/N,KAAAR,GACA,YAAAQ,GAAA,eAAAA,IACAwsC,EAAAxsC,GAAAR,EAAAQ,IAKA,GAAA2sC,GAAAT,GAAArJ,EAAA2J,EAMA,OAFAG,GAAAP,SACAO,EAAAF,OACAE,EAGA,QAAAC,GACA/J,EACArjC,EACA2O,GAEA3O,OAqBA,IAAAQ,GAAAR,EAAA6iC,WACA37B,OAAAlH,EAAA6iC,YAAAQ,EACAA,CACA,IAAAgK,EAAA7sC,GACA,MAAA6sC,GAAA7sC,EAIA,IAAA2sC,GAAAJ,EAAA1J,EAAArjC,GAiBAyJ,KACA6jC,IACA7jC,GAAAxJ,OAAA0sC,GAAAQ,EAAAltC,OAAAqtC,EACA,IAAA/qC,GAAA4qC,EAAAjtC,gBAAAoB,MACAmI,GAAAvJ,gBAAA,GAAA+I,OAAA1G,EACA,QAAAlB,GAAA,EAAmBA,EAAAkB,EAAOlB,IAC1BoI,EAAAvJ,gBAAAmB,GAAAsrC,GAAAQ,EAAAjtC,gBAAAmB,GAAAisC,EAsBA,OAAAD,GAAA7sC,GAAAiJ,EAzHA,GAAA4jC,GAAAhtC,OAAAsH,OAAA,KA4HA,QACAolC,UACAK,sBAMA,QAAAG,IAAA11B,EAAA7X,GACA,GACAgnB,IADAhnB,EAAAwmB,KACA6L,GAAAxa,EAAA,SAYAmP,KACAnP,EAAAmP,YAAAphB,KAAAC,UAAAmhB,GAEA,IAAAwmB,GAAAtb,GAAAra,EAAA,WACA21B,KACA31B,EAAA21B,gBAIA,QAAAC,IAAA51B,GACA,GAAApG,GAAA,EAOA,OANAoG,GAAAmP,cACAvV,GAAA,eAAAoG,EAAA,iBAEAA,EAAA21B,eACA/7B,GAAA,SAAAoG,EAAA,kBAEApG,EAWA,QAAAi8B,IAAA71B,EAAA7X,GACA,GACAu2B,IADAv2B,EAAAwmB,KACA6L,GAAAxa,EAAA,SACA,IAAA0e,EAAA,CAaA1e,EAAA0e,YAAA3wB,KAAAC,UAAA4wB,GAAAF,IAGA,GAAAoX,GAAAzb,GAAAra,EAAA,WACA81B,KACA91B,EAAA81B,gBAIA,QAAAC,IAAA/1B,GACA,GAAApG,GAAA,EAOA,OANAoG,GAAA0e,cACA9kB,GAAA,eAAAoG,EAAA,iBAEAA,EAAA81B,eACAl8B,GAAA,UAAAoG,EAAA,mBAEApG,EAgBA,QAAAC,IAAAmG,EAAAiW,GACAA,EAAA1lB,OACAopB,GAAA3Z,EAAA,oBAAAiW,EAAA,WAMA,QAAA4R,IAAA7nB,EAAAiW,GACAA,EAAA1lB,OACAopB,GAAA3Z,EAAA,kBAAAiW,EAAA,WAyGA,QAAA+f,IAAAh2B,GACA,GAAAA,EAAAi2B,UACA,MAAAj2B,GAAAi2B,SAEA,IAAAC,GAAArqC,SAAAC,cAAA,MAEA,OADAoqC,GAAAlqC,YAAAgU,EAAAm2B,WAAA,IACAD,EAAAvO,UAn+RA,GA6WAyO,IA0GAC,GAvdA3F,GAAAhhC,EAAA,qBAiBAU,GAAA5H,OAAA+O,UAAAnH,eA0BAkmC,GAAA,SACA//B,GAAA/F,EAAA,SAAAb,GACA,MAAAA,GAAAgwB,QAAA2W,GAAA,SAAA5c,EAAAhnB,GAAkD,MAAAA,KAAA6jC,cAAA,OAMlDz+B,GAAAtH,EAAA,SAAAb,GACA,MAAAA,GAAAypB,OAAA,GAAAmd,cAAA5mC,EAAA6f,MAAA,KAMAgnB,GAAA,iBACAn+B,GAAA7H,EAAA,SAAAb,GACA,MAAAA,GACAgwB,QAAA6W,GAAA,SACA7W,QAAA6W,GAAA,SACA/nC,gBAwDA7D,GAAApC,OAAA+O,UAAA3M,SACA8G,GAAA,kBA0BAg4B,GAAA,WAAsB,UAKtBhhB,GAAA,SAAAgR,GAA6B,MAAAA,IAsD7BzgB,IAIAw9B,sBAAAjuC,OAAAsH,OAAA,MAKA4mC,QAAA,EAKAC,eAAA,EAKA50B,UAAA,EAKA60B,aAAA,EAKA19B,aAAA,KAKA29B,mBAKA/tB,SAAAtgB,OAAAsH,OAAA,MAMAkY,cAAA0hB,GAMAha,iBAAAga,GAKA3hB,gBAAAxb,EAKA0b,qBAAAS,GAMAO,YAAAygB,GAKA9b,aACA,YACA,YACA,UAMAkpB,iBACA,eACA,UACA,cACA,UACA,eACA,UACA,gBACA,YACA,YACA,eAMAC,gBAAA,KAKAn2B,GAAApY,OAAAwuC,WAyBA/jC,GAAA,UAmBAgkC,GAAA,gBAGA99B,GAAA,mBAAAjQ,QACAguC,GAAA/9B,IAAAjQ,OAAAoF,UAAAE,UAAAC,cACAyuB,GAAAga,IAAA,eAAA3oC,KAAA2oC,IACA7f,GAAA6f,OAAAjnC,QAAA,cACAknC,GAAAD,OAAAjnC,QAAA,WACAmnC,GAAAF,OAAAjnC,QAAA,aACAonC,GAAAH,IAAA,uBAAA3oC,KAAA2oC,IACA/Z,GAAA+Z,IAAA,cAAA3oC,KAAA2oC,MAAAC,GAKA5iC,GAAA,WAWA,MAVA+D,UAAA89B,KAOAA,IALAj9B,IAAA,SAAAjK,GAGA,WAAAA,EAAA,QAAAooC,IAAAC,SAKAnB,IAIAr0B,GAAA5I,IAAAjQ,OAAAsuC,6BAOAnsB,GACA,mBAAAosB,SAAAtkC,EAAAskC,SACA,mBAAAnsB,UAAAnY,EAAAmY,QAAAC,SAKArJ,GAAA,WAKA,QAAAw1B,KACAC,GAAA,CACA,IAAAC,GAAAC,EAAAroB,MAAA,EACAqoB,GAAApuC,OAAA,CACA,QAAAD,GAAA,EAAmBA,EAAAouC,EAAAnuC,OAAmBD,IACtCouC,EAAApuC,KATA,GAEAsuC,GAFAD,KACAF,GAAA,CAmBA,uBAAAI,UAAA5kC,EAAA4kC,SAAA,CACA,GAAA5e,GAAA4e,QAAAvxB,UACAwxB,EAAA,SAAAj/B,GAAmCK,QAAAC,MAAAN,GACnC++B,GAAA,WACA3e,EAAAxS,KAAA+wB,GAAAO,MAAAD,GAMAX,IAAkBvW,WAAAv0B,QAEf,uBAAA2rC,oBACH/kC,EAAA+kC,mBAEA,yCAAAA,iBAAAttC,WAiBAktC,EAAA,WACAhX,WAAA4W,EAAA,QAjBA,CAGA,GAAAS,GAAA,EACAC,EAAA,GAAAF,kBAAAR,GACAW,EAAAxsC,SAAA0B,eAAA8B,OAAA8oC,GACAC,GAAApkC,QAAAqkC,GACAC,eAAA,IAEAR,EAAA,WACAK,KAAA,KACAE,EAAAz+B,KAAAvK,OAAA8oC,IAUA,gBAAAj7B,EAAAvM,GACA,GAAA4nC,EASA,IARAV,EAAA5tC,KAAA,WACAiT,GAAeA,EAAA7M,KAAAM,GACf4nC,GAAqBA,EAAA5nC,KAErBgnC,IACAA,GAAA,EACAG,MAEA56B,GAAA,mBAAA66B,SACA,UAAAA,SAAA,SAAAvxB,GACA+xB,EAAA/xB,OAUA6vB,IAFA,mBAAAmC,MAAArlC,EAAAqlC,KAEAA,IAGA,WACA,QAAAA,KACA1vC,KAAAqM,IAAA3M,OAAAsH,OAAA,MAYA,MAVA0oC,GAAAjhC,UAAAiK,IAAA,SAAA7Y,GACA,MAAAG,MAAAqM,IAAAxM,MAAA,GAEA6vC,EAAAjhC,UAAAsD,IAAA,SAAAlS,GACAG,KAAAqM,IAAAxM,IAAA,GAEA6vC,EAAAjhC,UAAA8K,MAAA,WACAvZ,KAAAqM,IAAA3M,OAAAsH,OAAA,OAGA0oC,IAIA,IAAA7pB,IAAApiB,EA4DAksC,GAAA,EAMAllC,GAAA,WACAzK,KAAAa,GAAA8uC,KACA3vC,KAAA4vC,QAGAnlC,IAAAgE,UAAAohC,OAAA,SAAAC,GACA9vC,KAAA4vC,KAAAzuC,KAAA2uC,IAGArlC,GAAAgE,UAAAshC,UAAA,SAAAD,GACAzsC,EAAArD,KAAA4vC,KAAAE,IAGArlC,GAAAgE,UAAAlC,OAAA,WACA9B,GAAAC,QACAD,GAAAC,OAAAslC,OAAAhwC,OAIAyK,GAAAgE,UAAA/B,OAAA,WAGA,OADAkjC,GAAA5vC,KAAA4vC,KAAAlpB,QACAhmB,EAAA,EAAAkB,EAAAguC,EAAAjvC,OAAkCD,EAAAkB,EAAOlB,IACzCkvC,EAAAlvC,GAAA0C,UAOAqH,GAAAC,OAAA,IACA,IAAAC,OAgBAslC,GAAA3nC,MAAAmG,UACAyhC,GAAAxwC,OAAAsH,OAAAipC,KACA,OACA,MACA,QACA,UACA,SACA,OACA,WAEArwC,QAAA,SAAAuwC,GAEA,GAAAC,GAAAH,GAAAE,EACArmC,GAAAomC,GAAAC,EAAA,WAOA,IANA,GAAAx+B,GAAA3J,UAIAtH,EAAAsH,UAAArH,OACA2T,EAAA,GAAAhM,OAAA5H,GACAA,KACA4T,EAAA5T,GAAAiR,EAAAjR,EAEA,IAEAotB,GAFA/rB,EAAAquC,EAAAnoC,MAAAjI,KAAAsU,GACAlJ,EAAApL,KAAAqL,MAEA,QAAA8kC,GACA,WACAriB,EAAAxZ,CACA,MACA,eACAwZ,EAAAxZ,CACA,MACA,cACAwZ,EAAAxZ,EAAAoS,MAAA,GAMA,MAHAoH,IAAmB1iB,EAAAilC,aAAAviB,GAEnB1iB,EAAAY,IAAAU,SACA3K,KAMA,IAAAuuC,IAAA5wC,OAAA6wC,oBAAAL,IAQA3kC,IACAC,eAAA,EACAglC,gBAAA,GASAllC,GAAA,SAAA7D,GAKA,GAJAzH,KAAAyH,QACAzH,KAAAgM,IAAA,GAAAvB,IACAzK,KAAA6L,QAAA,EACA/B,EAAArC,EAAA,SAAAzH,MACAsI,MAAAoD,QAAAjE,GAAA,EACA0mC,GACArjC,EACAG,GACAxD,EAAAyoC,GAAAI,IACAtwC,KAAAqwC,aAAA5oC,OAEAzH,MAAAywC,KAAAhpC,GASA6D,IAAAmD,UAAAgiC,KAAA,SAAAttC,GAEA,OADAxD,GAAAD,OAAAC,KAAAwD,GACAzC,EAAA,EAAiBA,EAAAf,EAAAgB,OAAiBD,IAClCoL,EAAA3I,EAAAxD,EAAAe,GAAAyC,EAAAxD,EAAAe,MAOA4K,GAAAmD,UAAA4hC,aAAA,SAAAK,GACA,OAAAhwC,GAAA,EAAAkB,EAAA8uC,EAAA/vC,OAAmCD,EAAAkB,EAAOlB,IAC1CwK,EAAAwlC,EAAAhwC,IAgMA,IAAAyN,IAAAgC,GAAAw9B,qBAwCAx/B,IAAA2C,KAAA,SACA3D,EACAC,EACAY,GAEA,MAAAA,GA4BGb,GAAAC,EACH,WAEA,GAAAujC,GAAA,kBAAAvjC,GACAA,EAAA7F,KAAAyG,GACAZ,EACAwjC,EAAA,kBAAAzjC,GACAA,EAAA5F,KAAAyG,GACAwB,MACA,OAAAmhC,GACA7jC,EAAA6jC,EAAAC,GAEAA,GAZG,OA1BHxjC,EAGA,kBAAAA,GAOAD,EAEAA,EAQA,WACA,MAAAL,GACAM,EAAA7F,KAAAvH,MACAmN,EAAA5F,KAAAvH,QAVAoN,EAZAD,GA2DAgD,GAAA69B,gBAAApuC,QAAA,SAAA4S,GACArE,GAAAqE,GAAAtF,IAiBAiD,GAAA2U,YAAAllB,QAAA,SAAAT,GACAgP,GAAAhP,EAAA,KAAAkO,IASAc,GAAAmM,MAAA,SAAAnN,EAAAC,GAEA,IAAAA,EAAkB,MAAA1N,QAAAsH,OAAAmG,GAAA,KAClB,KAAAA,EAAmB,MAAAC,EACnB,IAAA/E,KACAE,GAAAF,EAAA8E,EACA,QAAAtN,KAAAuN,GAAA,CACA,GAAAU,GAAAzF,EAAAxI,GACAkO,EAAAX,EAAAvN,EACAiO,KAAAxF,MAAAoD,QAAAoC,KACAA,OAEAzF,EAAAxI,GAAAiO,EACAA,EAAA5E,OAAA6E,IACAA,GAEA,MAAA1F,IAMA8F,GAAAZ,MACAY,GAAA+L,QACA/L,GAAA1O,SAAA,SAAA0N,EAAAC,GACA,IAAAA,EAAkB,MAAA1N,QAAAsH,OAAAmG,GAAA,KAClB,KAAAA,EAAmB,MAAAC,EACnB,IAAA/E,GAAA3I,OAAAsH,OAAA,KAGA,OAFAuB,GAAAF,EAAA8E,GACA5E,EAAAF,EAAA+E,GACA/E,EAMA,IAAA+F,IAAA,SAAAjB,EAAAC,GACA,MAAAoC,UAAApC,EACAD,EACAC,GA6aAqD,GAAA,SACAI,EACAC,EACAtP,EACAuP,EACAC,EACAC,EACAC,GAEAlR,KAAA6Q,MACA7Q,KAAA8Q,OACA9Q,KAAAwB,WACAxB,KAAA+Q,OACA/Q,KAAAgR,MACAhR,KAAAmR,GAAA3B,OACAxP,KAAAiR,UACAjR,KAAA0U,kBAAAlF,OACAxP,KAAAH,IAAAiR,KAAAjR,IACAG,KAAAkR,mBACAlR,KAAAylB,kBAAAjW,OACAxP,KAAA8N,OAAA0B,OACAxP,KAAA6wC,KAAA,EACA7wC,KAAAoR,UAAA,EACApR,KAAAopB,cAAA,EACAppB,KAAA+U,WAAA,EACA/U,KAAAqR,UAAA,EACArR,KAAA2gB,QAAA,GAGAmwB,IAA0B/iC,SAI1B+iC,IAAA/iC,MAAApM,IAAA,WACA,MAAA3B,MAAAylB,mBAGA/lB,OAAAqxC,iBAAAtgC,GAAAhC,UAAAqiC,GAEA,IAiOApmC,IAjOAyM,GAAA,WACA,GAAArC,GAAA,GAAArE,GAGA,OAFAqE,GAAA/D,KAAA,GACA+D,EAAAC,WAAA,EACAD,GAuCA1C,GAAA1K,EAAA,SAAA8F,GACA,GAAAgG,GAAA,MAAAhG,EAAA8iB,OAAA,EACA9iB,GAAAgG,EAAAhG,EAAAkZ,MAAA,GAAAlZ,CACA,IAAA6E,GAAA,MAAA7E,EAAA8iB,OAAA,EAEA,OADA9iB,GAAA6E,EAAA7E,EAAAkZ,MAAA,GAAAlZ,GAEAA,OACA/D,KAAA+J,EACAnB,aA+UAiE,GAAA,KAqSAmC,MACAC,MAEAC,IAAA,EACAC,IAAA,EACAxU,GAAA,EAwGA4sC,GAAA,EAOA15B,GAAA,SACAtJ,EACA2N,EACAvH,EACA/U,GAEAW,KAAAgO,KACAA,EAAA+I,UAAA5V,KAAAnB,MAEAX,GACAW,KAAAixC,OAAA5xC,EAAA4xC,KACAjxC,KAAA4b,OAAAvc,EAAAuc,KACA5b,KAAAg0B,OAAA30B,EAAA20B,KACAh0B,KAAAyd,OAAApe,EAAAoe,MAEAzd,KAAAixC,KAAAjxC,KAAA4b,KAAA5b,KAAAg0B,KAAAh0B,KAAAyd,MAAA,EAEAzd,KAAAoU,KACApU,KAAAa,KAAAmwC,GACAhxC,KAAAkxC,QAAA,EACAlxC,KAAAib,MAAAjb,KAAAg0B,KACAh0B,KAAAmxC,QACAnxC,KAAAoxC,WACApxC,KAAAqxC,OAAA,GAAA9D,IACAvtC,KAAAsxC,UAAA,GAAA/D,IACAvtC,KAAA6vB,WAEA,GAEA,kBAAAlU,GACA3b,KAAAmM,OAAAwP,GAEA3b,KAAAmM,OAAAlC,EAAA0R,GACA3b,KAAAmM,SACAnM,KAAAmM,OAAA,eASAnM,KAAAyH,MAAAzH,KAAAg0B,KACAxkB,OACAxP,KAAA2B,MAMA2V,IAAA7I,UAAA9M,IAAA,WACA4I,EAAAvK,KACA,IAAAyH,GACAuG,EAAAhO,KAAAgO,EACA,IAAAhO,KAAA4b,KACA,IACAnU,EAAAzH,KAAAmM,OAAA5E,KAAAyG,KACK,MAAA7N,GACL6P,EAAA7P,EAAA6N,EAAA,uBAAAhO,KAAA,oBAGAyH,GAAAzH,KAAAmM,OAAA5E,KAAAyG,IASA,OALAhO,MAAAixC,MACA53B,GAAA5R,GAEAmD,IACA5K,KAAAuxC,cACA9pC,GAMA6P,GAAA7I,UAAAuhC,OAAA,SAAAhkC,GACA,GAAAnL,GAAAmL,EAAAnL,EACAb,MAAAsxC,UAAA54B,IAAA7X,KACAb,KAAAsxC,UAAAv/B,IAAAlR,GACAb,KAAAoxC,QAAAjwC,KAAA6K,GACAhM,KAAAqxC,OAAA34B,IAAA7X,IACAmL,EAAA6jC,OAAA7vC,QAQAsX,GAAA7I,UAAA8iC,YAAA,WAIA,IAHA,GAAAt9B,GAAAjU,KAEAU,EAAAV,KAAAmxC,KAAAxwC,OACAD,KAAA,CACA,GAAAsL,GAAAiI,EAAAk9B,KAAAzwC,EACAuT,GAAAq9B,UAAA54B,IAAA1M,EAAAnL,KACAmL,EAAA+jC,UAAA97B,GAGA,GAAAu9B,GAAAxxC,KAAAqxC,MACArxC,MAAAqxC,OAAArxC,KAAAsxC,UACAtxC,KAAAsxC,UAAAE,EACAxxC,KAAAsxC,UAAA/3B,QACAi4B,EAAAxxC,KAAAmxC,KACAnxC,KAAAmxC,KAAAnxC,KAAAoxC,QACApxC,KAAAoxC,QAAAI,EACAxxC,KAAAoxC,QAAAzwC,OAAA,GAOA2W,GAAA7I,UAAArL,OAAA,WAEApD,KAAAg0B,KACAh0B,KAAAib,OAAA,EACGjb,KAAAyd,KACHzd,KAAAgZ,MAEAG,GAAAnZ,OAQAsX,GAAA7I,UAAAuK,IAAA,WACA,GAAAhZ,KAAAkxC,OAAA,CACA,GAAAzpC,GAAAzH,KAAA2B,KACA,IACA8F,IAAAzH,KAAAyH,OAIAiB,EAAAjB,IACAzH,KAAAixC,KACA,CAEA,GAAAtjB,GAAA3tB,KAAAyH,KAEA,IADAzH,KAAAyH,QACAzH,KAAA4b,KACA,IACA5b,KAAAoU,GAAA7M,KAAAvH,KAAAgO,GAAAvG,EAAAkmB,GACS,MAAAxtB,GACT6P,EAAA7P,EAAAH,KAAAgO,GAAA,yBAAAhO,KAAA,oBAGAA,MAAAoU,GAAA7M,KAAAvH,KAAAgO,GAAAvG,EAAAkmB,MAUArW,GAAA7I,UAAAyM,SAAA,WACAlb,KAAAyH,MAAAzH,KAAA2B,MACA3B,KAAAib,OAAA,GAMA3D,GAAA7I,UAAAlC,OAAA,WAIA,IAHA,GAAA0H,GAAAjU,KAEAU,EAAAV,KAAAmxC,KAAAxwC,OACAD,KACAuT,EAAAk9B,KAAAzwC,GAAA6L,UAOA+K,GAAA7I,UAAAqI,SAAA,WACA,GAAA7C,GAAAjU,IAEA,IAAAA,KAAAkxC,OAAA,CAIAlxC,KAAAgO,GAAA4H,mBACAvS,EAAArD,KAAAgO,GAAA+I,UAAA/W,KAGA,KADA,GAAAU,GAAAV,KAAAmxC,KAAAxwC,OACAD,KACAuT,EAAAk9B,KAAAzwC,GAAAqvC,UAAA97B,EAEAjU,MAAAkxC,QAAA,GASA,IAAA53B,IAAA,GAAAi0B,IA+BAzzB,IACApY,YAAA,EACAsI,cAAA,EACArI,IAAA8B,EACA4I,IAAA5I,GA2GAqX,IAA8BkZ,MAAA,GAkJ9BzV,IACAoL,KAAA,SACAhZ,EACAoF,EACAiH,EACAC,GAEA,IAAAtM,EAAA8U,mBAAA9U,EAAA8U,kBAAA9P,aAAA,EACAhF,EAAA8U,kBAAA1I,GACApM,EACA2F,GACA0G,EACAC,IAEAkG,OAAApN,EAAApF,EAAAK,IAAAxB,OAAAuG,OACK,IAAApF,EAAAG,KAAA4Y,UAAA,CAEL,GAAA+nB,GAAA9gC,CACA4N,IAAAyN,SAAAylB,OAIAzlB,SAAA,SAAAF,EAAAnb,GACA,GAAAtR,GAAAsR,EAAAO,gBAEAqG,IADA5G,EAAA8U,kBAAAqG,EAAArG,kBAGApmB,EAAA8P,UACA9P,EAAAgU,UACA1C,EACAtR,EAAAmC,WAIAgoB,OAAA,SAAA7Y,GACAA,EAAA8U,kBAAA/P,aACA/E,EAAA8U,kBAAA/P,YAAA,EACAM,GAAArF,EAAA8U,kBAAA,YAEA9U,EAAAG,KAAA4Y,WACAtR,GAAAzH,EAAA8U,mBAAA,IAIA+E,QAAA,SAAA7Z,GACAA,EAAA8U,kBAAA9P,eACAhF,EAAAG,KAAA4Y,UAGApR,GAAA3H,EAAA8U,mBAAA,GAFA9U,EAAA8U,kBAAA5O,cAQAuH,GAAA1e,OAAAC,KAAA4e,IAqSAS,GAAA,EACAF,GAAA,EA+aAiE,GAAA,CAwIAH,IAAAlU,IACA4M,GAAA5M,IACAoF,GAAApF,IACAmH,GAAAnH,IACAuS,GAAAvS,GAwKA,IAAAgjC,KAAAnrC,OAAA8e,QAsCAssB,IACAnkC,KAAA,aACA0H,UAAA,EAEA3H,OACAqkC,QAAAF,GACAG,QAAAH,IAGAI,QAAA,WACA9xC,KAAA4H,MAAAlI,OAAAsH,OAAA,OAGA+qC,UAAA,WACA,GAAA99B,GAAAjU,IAEA,QAAAH,KAAAoU,GAAArM,MACA4d,GAAAvR,EAAArM,MAAA/H,KAIAya,OACAs3B,QAAA,SAAAtrC,GACAgf,GAAAtlB,KAAA4H,MAAA,SAAA4F,GAA8C,MAAA2X,IAAA7e,EAAAkH,MAE9CqkC,QAAA,SAAAvrC,GACAgf,GAAAtlB,KAAA4H,MAAA,SAAA4F,GAA8C,OAAA2X,GAAA7e,EAAAkH,OAI9ClO,OAAA,WACA,GAAAqR,GAAAsC,GAAAjT,KAAAkY,OAAA9Y,SACA8R,EAAAP,KAAAO,gBACA,IAAAA,EAAA,CAEA,GAAA1D,GAAA0X,GAAAhU,EACA,IAAA1D,IACAxN,KAAA4xC,UAAAzsB,GAAAnlB,KAAA4xC,QAAApkC,IACAxN,KAAA6xC,SAAA1sB,GAAAnlB,KAAA6xC,QAAArkC,IAEA,MAAAmD,EAEA,IAAA9Q,GAAA,MAAA8Q,EAAA9Q,IAGAqR,EAAA5G,KAAA2R,KAAA/K,EAAAL,IAAA,KAAAK,EAAA,QACAP,EAAA9Q,GACAG,MAAA4H,MAAA/H,GACA8Q,EAAA8U,kBAAAzlB,KAAA4H,MAAA/H,GAAA4lB,kBAEAzlB,KAAA4H,MAAA/H,GAAA8Q,EAEAA,EAAAG,KAAA4Y,WAAA,EAEA,MAAA/Y,KAIAqV,IACA2rB,aAiDAjsB,IAAAhX,IAEAhP,OAAA+B,eAAAiN,GAAAD,UAAA,aACA9M,IAAA8J,KAGAiD,GAAAsjC,QAAA,OAKA,IAm4CAjiC,IACAlJ,GACA+rB,GACAL,GACAC,GACAC,GAwEAY,GAqLAmB,GAsNAyd,GA31DAC,GAAAtrC,EAAA,gCACAuZ,GAAA,SAAAtP,EAAA1R,EAAAwgC,GACA,MACA,UAAAA,GAAAuS,GAAArhC,IAAA,WAAA1R,GACA,aAAAwgC,GAAA,WAAA9uB,GACA,YAAA8uB,GAAA,UAAA9uB,GACA,UAAA8uB,GAAA,UAAA9uB,GAIA+d,GAAAhoB,EAAA,wCAEAioB,GAAAjoB,EACA,wYAQA8nB,GAAA,+BAEAF,GAAA,SAAAhhB,GACA,YAAAA,EAAA8iB,OAAA,cAAA9iB,EAAAkZ,MAAA,MAGAiI,GAAA,SAAAnhB,GACA,MAAAghB,IAAAhhB,KAAAkZ,MAAA,EAAAlZ,EAAA7M,QAAA,IAGAmuB,GAAA,SAAAxoB,GACA,aAAAA,QAAA,GA6EAihB,IACA4qB,IAAA,6BACAC,KAAA,sCAGAC,GAAAzrC,EACA,slBAeA+f,GAAA/f,EACA,kNAGA,GAGAw8B,GAAA,SAAAvyB,GAA+B,cAAAA,GAE/BqO,GAAA,SAAArO,GACA,MAAAwhC,IAAAxhC,IAAA8V,GAAA9V,IAcAgW,GAAAnnB,OAAAsH,OAAA,MAyGA6hB,GAAAnpB,OAAAwuC,QACAlrC,cAAAkkB,GACAG,mBACA5iB,kBACA+iB,iBACA7iB,gBACAT,eACAhB,eACAe,cACA0jB,eACAR,WACAS,kBACAhjB,kBAKAuc,IACAna,OAAA,SAAA4pB,EAAAjgB,GACAmX,GAAAnX,IAEAvN,OAAA,SAAA0oB,EAAAnb,GACAmb,EAAAhb,KAAAqQ,MAAAxQ,EAAAG,KAAAqQ,MACA2G,GAAAgE,GAAA,GACAhE,GAAAnX,KAGA6Z,QAAA,SAAA7Z,GACAmX,GAAAnX,GAAA,KA4CAwZ,GAAA,GAAA1Z,IAAA,UAEA+b,IAAA,iDAylBA5e,IACA5G,OAAAimB,GACA7pB,OAAA6pB,GACAzC,QAAA,SAAA7Z,GACAsc,GAAAtc,EAAAwZ,MAsEA8D,GAAAvuB,OAAAsH,OAAA,MAiCAsrC,IACAnxB,GACAvT,IAmEAkQ,IACA9W,OAAAonB,GACAhrB,OAAAgrB,IA6BAmkB,IACAvrC,OAAAgoB,GACA5rB,OAAA4rB,IAKAuB,GAAA,gBAwVA2D,GAAA,MACAL,GAAA,MA2NA1C,IACAnqB,OAAA6tB,GACAzxB,OAAAyxB,IAgFA9W,IACA/W,OAAA8tB,GACA1xB,OAAA0xB,IAKAgB,GAAApuB,EAAA,SAAApD,GACA,GAAAwE,MACA0pC,EAAA,gBACAC,EAAA,OAOA,OANAnuC,GAAA2C,MAAAurC,GAAA5yC,QAAA,SAAAgB,GACA,GAAAA,EAAA,CACA,GAAA4wC,GAAA5wC,EAAAqG,MAAAwrC,EACAjB,GAAA7wC,OAAA,IAAAmI,EAAA0oC,EAAA,GAAA7hB,QAAA6hB,EAAA,GAAA7hB,WAGA7mB,IAyDA4pC,GAAA,MACAC,GAAA,iBACApc,GAAA,SAAArf,EAAA1J,EAAAlH,GAEAosC,GAAAjtC,KAAA+H,GACA0J,EAAAwe,MAAAkd,YAAAplC,EAAAlH,GACGqsC,GAAAltC,KAAAa,GACH4Q,EAAAwe,MAAAkd,YAAAplC,EAAAlH,EAAAuwB,QAAA8b,GAAA,iBAEAz7B,EAAAwe,MAAAmd,GAAArlC,IAAAlH,GAIAwsC,IAAA,qBAGAD,GAAAnrC,EAAA,SAAA0H,GAGA,GAFA6iC,OAAAlvC,SAAAC,cAAA,OAEA,YADAoM,EAAA3B,GAAA2B,KACAA,IAAA6iC,IAAAvc,MACA,MAAAtmB,EAGA,QADA2jC,GAAA3jC,EAAAkhB,OAAA,GAAAmd,cAAAr+B,EAAAsX,MAAA,GACAhmB,EAAA,EAAiBA,EAAAoyC,GAAAnyC,OAAqBD,IAAA,CACtC,GAAAsyC,GAAAF,GAAApyC,GAAAqyC,CACA,IAAAC,IAAAf,IAAAvc,MACA,MAAAsd,MA0CAtd,IACA1uB,OAAAkvB,GACA9yB,OAAA8yB,IA4EAc,GAAAtvB,EAAA,SAAA8F,GACA,OACA8rB,WAAA9rB,EAAA,SACA+rB,aAAA/rB,EAAA,YACAgsB,iBAAAhsB,EAAA,gBACAguB,WAAAhuB,EAAA,SACAkuB,aAAAluB,EAAA,YACAiuB,iBAAAjuB,EAAA,mBAIAylC,GAAA5iC,KAAAke,GACAmJ,GAAA,aACAiB,GAAA,YAGAR,GAAA,aACAR,GAAA,gBACAa,GAAA,YACAZ,GAAA,cACAqb,MAEAzjC,SAAApP,OAAA8yC,iBACA1jC,SAAApP,OAAA+yC,wBACAhb,GAAA,mBACAR,GAAA,uBAEAnoB,SAAApP,OAAAgzC,gBACA5jC,SAAApP,OAAAizC,uBACA7a,GAAA,kBACAZ,GAAA,sBAKA,IAAAV,IAAA7mB,IAAAjQ,OAAAkzC,sBACAlzC,OAAAkzC,sBAAAvvC,KAAA3D,QACA43B,WAmDAa,GAAA,yBA8WA5O,GAAA5Z,IACArJ,OAAAg1B,GACA9R,SAAA8R,GACA34B,OAAA,SAAAsN,EAAAia,GAEAja,EAAAG,KAAAmqB,KAGArQ,IAFAyQ,GAAA1qB,EAAAia,QAOA2oB,IACAz1B,GACAy0B,GACAphB,GACApT,GACA2X,GACAzL,IAOAhoB,GAAAsxC,GAAArqC,OAAAopC,IAEAkB,GAAA9qB,IAAiCG,WAAA5mB,YAQjCssB,KAEAxrB,SAAA4xB,iBAAA,6BACA,GAAAzd,GAAAnU,SAAAwyB,aACAre,MAAAu8B,QACA/W,GAAAxlB,EAAA,UAKA,IAAAw8B,KACA5lB,SAAA,SAAA5W,EAAAglB,EAAAvrB,GACA,cAAAA,EAAAE,IAAA,CACA,GAAAuD,GAAA,WACA6nB,GAAA/kB,EAAAglB,EAAAvrB,EAAAM,SAEAmD,MAEAggB,IAAAia,KACArW,WAAA5jB,EAAA,OAEK,aAAAzD,EAAAE,KAAA,SAAAqG,EAAA/X,OACL+X,EAAAse,YAAA0G,EAAAlO,UACAkO,EAAAlO,UAAAgG,OACAsa,KACAp3B,EAAAyd,iBAAA,mBAAA6H,IACAtlB,EAAAyd,iBAAA,iBAAA8H,KAGAlO,KACArX,EAAAu8B,QAAA,MAKA5lB,iBAAA,SAAA3W,EAAAglB,EAAAvrB,GACA,cAAAA,EAAAE,IAAA,CACAorB,GAAA/kB,EAAAglB,EAAAvrB,EAAAM,UAKAiG,EAAAkQ,SACA8U,EAAAz0B,MAAAgkC,KAAA,SAAAkI,GAA2C,MAAApX,IAAAoX,EAAAz8B,EAAA7X,WAC3C68B,EAAAz0B,QAAAy0B,EAAAvO,UAAA4O,GAAAL,EAAAz0B,MAAAyP,EAAA7X,WAEAq9B,GAAAxlB,EAAA,aA8EA+jB,IACAl3B,KAAA,SAAAmT,EAAAiK,EAAAxQ,GACA,GAAAlJ,GAAA0Z,EAAA1Z,KAEAkJ,GAAAmsB,GAAAnsB,EACA,IAAAsZ,GAAAtZ,EAAAG,MAAAH,EAAAG,KAAAmZ,WACA2pB,EAAA18B,EAAA28B,mBACA,SAAA38B,EAAAwe,MAAAoe,QAAA,GAAA58B,EAAAwe,MAAAoe,OACArsC,IAAAwiB,IAAAsE,IACA5d,EAAAG,KAAAmqB,MAAA,EACA/B,GAAAvoB,EAAA,WACAuG,EAAAwe,MAAAoe,QAAAF,KAGA18B,EAAAwe,MAAAoe,QAAArsC,EAAAmsC,EAAA,QAIAxwC,OAAA,SAAA8T,EAAAiK,EAAAxQ,GACA,GAAAlJ,GAAA0Z,EAAA1Z,KAIAA,KAHA0Z,EAAAwM,WAIAhd,EAAAmsB,GAAAnsB,GACAA,EAAAG,MAAAH,EAAAG,KAAAmZ,aACAsE,IACA5d,EAAAG,KAAAmqB,MAAA,EACAxzB,EACAyxB,GAAAvoB,EAAA,WACAuG,EAAAwe,MAAAoe,QAAA58B,EAAA28B,qBAGAxY,GAAA1qB,EAAA,WACAuG,EAAAwe,MAAAoe,QAAA,UAIA58B,EAAAwe,MAAAoe,QAAArsC,EAAAyP,EAAA28B,mBAAA,SAIAE,OAAA,SACA78B,EACAglB,EACAvrB,EACAmb,EACAuB,GAEAA,IACAnW,EAAAwe,MAAAoe,QAAA58B,EAAA28B,sBAKAG,IACA33B,MAAAq3B,GACAzY,SAQAgZ,IACAzmC,KAAAjH,OACAyzB,OAAA9zB,QACApF,IAAAoF,QACAguC,KAAA3tC,OACApH,KAAAoH,OACA+yB,WAAA/yB,OACAi1B,WAAAj1B,OACAgzB,aAAAhzB,OACAm1B,aAAAn1B,OACAizB,iBAAAjzB,OACAk1B,iBAAAl1B,OACAkzB,YAAAlzB,OACAozB,kBAAApzB,OACAmzB,cAAAnzB,OACA4zB,UAAAlB,OAAA1yB,OAAA7G,SAgDAy0C,IACA3mC,KAAA,aACAD,MAAA0mC,GACA/+B,UAAA,EAEA5V,OAAA,SAAAud,GACA,GAAA5I,GAAAjU,KAEAwB,EAAAxB,KAAAkY,OAAA9Y,OACA,IAAAoC,IAKAA,IAAAyE,OAAA,SAAA2D,GAA6C,MAAAA,GAAAiH,MAE7CrP,EAAAb,QAAA,CAaA,GAAAuzC,GAAAl0C,KAAAk0C,KAWA7W,EAAA77B,EAAA,EAIA,IAAA87B,GAAAt9B,KAAA2W,QACA,MAAA0mB,EAKA,IAAAtvB,GAAAgvB,GAAAM,EAEA,KAAAtvB,EACA,MAAAsvB,EAGA,IAAAr9B,KAAAo0C,SACA,MAAAhX,IAAAvgB,EAAAwgB,EAMA,IAAAx8B,GAAA,gBAAAb,KAAA,QACA+N,GAAAlO,IAAA,MAAAkO,EAAAlO,IACAgB,EAAAkN,EAAA8C,IACArJ,EAAAuG,EAAAlO,KACA,IAAA0G,OAAAwH,EAAAlO,KAAAsH,QAAAtG,GAAAkN,EAAAlO,IAAAgB,EAAAkN,EAAAlO,IACAkO,EAAAlO,GAEA,IAAAiR,IAAA/C,EAAA+C,OAAA/C,EAAA+C,UAA8CmZ,WAAAgT,GAAAj9B,MAC9Cq0C,EAAAr0C,KAAAoW,OACAonB,EAAAT,GAAAsX,EAQA,IAJAtmC,EAAA+C,KAAAlD,YAAAG,EAAA+C,KAAAlD,WAAA69B,KAAA,SAAA3uB,GAA0E,eAAAA,EAAAtP,SAC1EO,EAAA+C,KAAAmqB,MAAA,GAGAuC,KAAA1sB,OAAAysB,GAAAxvB,EAAAyvB,GAAA,CAGA,GAAAvO,GAAAuO,MAAA1sB,KAAAmZ,WAAA1hB,KAAqEuI,GAErE,eAAAojC,EAOA,MALAl0C,MAAAo0C,UAAA,EACA9hC,EAAA2c,EAAA,wBACAhb,EAAAmgC,UAAA,EACAngC,EAAA2C,iBAEAwmB,GAAAvgB,EAAAwgB,EACO,eAAA6W,EAAA,CACP,GAAAI,GACAhZ,EAAA,WAAwCgZ,IACxChiC,GAAAxB,EAAA,aAAAwqB,GACAhpB,EAAAxB,EAAA,iBAAAwqB,GACAhpB,EAAA2c,EAAA,sBAAAoM,GAAgEiZ,EAAAjZ,KAIhE,MAAAgC,MAiBA9vB,GAAAhF,GACAsI,IAAAtK,OACAguC,UAAAhuC,QACC0tC,UAED1mC,IAAA2mC,IAEA,IAAAM,KACAjnC,SAEAjO,OAAA,SAAAud,GAQA,OAPAhM,GAAA7Q,KAAA6Q,KAAA7Q,KAAA2W,OAAA7F,KAAAD,KAAA,OACA9J,EAAArH,OAAAsH,OAAA,MACAytC,EAAAz0C,KAAAy0C,aAAAz0C,KAAAwB,SACAkzC,EAAA10C,KAAAkY,OAAA9Y,YACAoC,EAAAxB,KAAAwB,YACAmzC,EAAA1X,GAAAj9B,MAEAU,EAAA,EAAmBA,EAAAg0C,EAAA/zC,OAAwBD,IAAA,CAC3C,GAAAkJ,GAAA8qC,EAAAh0C,EACA,IAAAkJ,EAAAiH,IACA,SAAAjH,EAAA/J,KAAA,IAAA0G,OAAAqD,EAAA/J,KAAAsH,QAAA,WACA3F,EAAAL,KAAAyI,GACA7C,EAAA6C,EAAA/J,KAAA+J,GACWA,EAAAkH,OAAAlH,EAAAkH,UAAuBmZ,WAAA0qB,QASlC,GAAAF,EAAA,CAGA,OAFAG,MACAC,KACA3gC,EAAA,EAAuBA,EAAAugC,EAAA9zC,OAA2BuT,IAAA,CAClD,GAAA4gC,GAAAL,EAAAvgC,EACA4gC,GAAAhkC,KAAAmZ,WAAA0qB,EACAG,EAAAhkC,KAAAktB,IAAA8W,EAAA9jC,IAAA6sB,wBACA92B,EAAA+tC,EAAAj1C,KACA+0C,EAAAzzC,KAAA2zC,GAEAD,EAAA1zC,KAAA2zC,GAGA90C,KAAA40C,KAAA/3B,EAAAhM,EAAA,KAAA+jC,GACA50C,KAAA60C,UAGA,MAAAh4B,GAAAhM,EAAA,KAAArP,IAGAuzC,aAAA,WAEA/0C,KAAAuW,UACAvW,KAAAoW,OACApW,KAAA40C,MACA,GACA,GAEA50C,KAAAoW,OAAApW,KAAA40C,MAGAI,QAAA,WACA,GAAAxzC,GAAAxB,KAAAy0C,aACAF,EAAAv0C,KAAAu0C,YAAAv0C,KAAAwN,MAAA,YACA,IAAAhM,EAAAb,QAAAX,KAAAi1C,QAAAzzC,EAAA,GAAAwP,IAAAujC,GAAA,CAMA/yC,EAAA5B,QAAA69B,IACAj8B,EAAA5B,QAAA+9B,IACAn8B,EAAA5B,QAAAk+B,GAGA,IAAAoX,GAAAnyC,SAAAmyC,IACAA,GAAAC,YAEA3zC,GAAA5B,QAAA,SAAAgK,GACA,GAAAA,EAAAkH,KAAAutB,MAAA,CACA,GAAAnnB,GAAAtN,EAAAoH,IACAkX,EAAAhR,EAAAwe,KACAyB,IAAAjgB,EAAAq9B,GACArsB,EAAAoW,UAAApW,EAAAqW,gBAAArW,EAAAsW,mBAAA,GACAtnB,EAAAyd,iBAAAgD,GAAAzgB,EAAAwmB,QAAA,QAAAtpB,GAAAjU,GACAA,IAAA,aAAAsF,KAAAtF,EAAAi1C,gBACAl+B,EAAA0d,oBAAA+C,GAAAvjB,GACA8C,EAAAwmB,QAAA,KACAtG,GAAAlgB,EAAAq9B,WAOAr6B,SACA+6B,QAAA,SAAA/9B,EAAAq9B,GAEA,IAAAtB,GACA,QAEA,UAAAjzC,KAAAq1C,SACA,MAAAr1C,MAAAq1C,QAOA,IAAAC,GAAAp+B,EAAAm2B,WACAn2B,GAAAkY,oBACAlY,EAAAkY,mBAAAxvB,QAAA,SAAAsvB,GAAsDyH,GAAA2e,EAAApmB,KAEtDsH,GAAA8e,EAAAf,GACAe,EAAA5f,MAAAoe,QAAA,OACA9zC,KAAAkW,IAAAhT,YAAAoyC,EACA,IAAAplC,GAAAqnB,GAAA+d,EAEA,OADAt1C,MAAAkW,IAAAhS,YAAAoxC,GACAt1C,KAAAq1C,SAAAnlC,EAAA0oB,gBAiCA2c,IACApB,cACAK,mBAMA9lC,IAAAyB,OAAAgQ,eACAzR,GAAAyB,OAAA+O,iBACAxQ,GAAAyB,OAAA8O,mBACAvQ,GAAAyB,OAAAyW,oBAGAre,EAAAmG,GAAArP,QAAAuO,WAAAomC,IACAzrC,EAAAmG,GAAArP,QAAAokB,WAAA8xB,IAGA7mC,GAAAD,UAAA8H,UAAAlG,GAAAmjC,GAAA/vC,EAGAiL,GAAAD,UAAA0U,OAAA,SACAjM,EACAnB,GAGA,MADAmB,MAAA7G,GAAA2W,GAAA9P,GAAA1H,OACAyH,GAAAjX,KAAAkX,EAAAnB,IAKAiiB,WAAA,WACA7nB,GAAA8I,UACAA,IACAA,GAAAC,KAAA,OAAAxK,KAiBC,EAaD,IA2BAswB,IA3BAE,KAAA7uB,IAAAouB,GAAA,cAIAkC,GAAA/5B,EACA,6FAMAw5B,GAAAx5B,EACA,2DAKAs5B,GAAAt5B,EACA,mSA6BA4uC,GAAA,kBACAC,GAAA,QACAC,IAEA,aAAA/yB,OAEA,aAAAA,OAEA,iBAAAA,QAEAkd,GAAA,GAAAxa,QACA,QAAAmwB,GAAA7yB,OACA,WAAA8yB,GAAA9yB,OAAA,WACA+yB,GAAA1zC,KAAA,YAKA2zC,GAAA,wBACAC,GAAA,OAAAD,GAAA,QAAAA,GAAA,IACAjW,GAAA,GAAAra,QAAA,KAAAuwB,IACAhW,GAAA,aACAwB,GAAA,GAAA/b,QAAA,QAAAuwB,GAAA,UACAhU,GAAA,qBACAL,GAAA,QACAE,GAAA,QAEAlB,IAAA,CACA,KAAA1J,QAAA,kBAAA5tB,EAAAlJ,GACAwgC,GAAA,KAAAxgC,GAIA,IA0TAkjC,IACAf,GACAoB,GACAD,GACAE,GACAR,GACAI,GACAD,GA0hBA+D,GACAE,GAoPAgC,GACAC,GACAC,GACAC,GACAC,GACAhqC,GACA0pC,GACAC,GAvlCArI,GAAAj6B,EAAA,4BACAo6B,MAEA1B,IACAuW,OAAO,IACPC,OAAO,IACPC,SAAS,IACTC,QAAQ,IACRC,QAAQ,MAER5W,GAAA,wBACAD,GAAA,4BA4PAiD,GAAA,wBACA6T,GAAA,yBAEA9T,GAAA16B,EAAA,SAAAw6B,GACA,GAAAiU,GAAAjU,EAAA,GAAArL,QAAAqf,GAAA,QACAE,EAAAlU,EAAA,GAAArL,QAAAqf,GAAA,OACA,WAAA7wB,QAAA8wB,EAAA,gBAAAC,EAAA,OAiCAzP,GAAA,YACAN,GAAA,YACAb,GAAA,2BACAI,GAAA,6CAEAiB,GAAA,SACAJ,GAAA,cACAD,GAAA,WAEAnB,GAAA39B,EAAAo3B,IAkgBAgI,GAAA,eACAC,GAAA,UAoCAG,GAAAx/B,EAAA4/B,IAuHAa,GAAA,+CACAF,GAAA,+FAGAjoB,IACAq2B,IAAA,GACAC,IAAA,EACApd,MAAA,GACAqd,MAAA,GACAC,GAAA,GACAtY,KAAA,GACAuY,MAAA,GACAC,KAAA,GACA3wB,QAAA,OAMA4wB,GAAA,SAAA3Q,GAAqC,YAAAA,EAAA,iBAErCqC,IACAuO,KAAA,4BACAC,QAAA,2BACAC,KAAAH,GAAA,0CACAI,KAAAJ,GAAA,mBACAnM,MAAAmM,GAAA,oBACAK,IAAAL,GAAA,kBACAM,KAAAN,GAAA,mBACAzY,KAAAyY,GAAA,6CACAO,OAAAP,GAAA,6CACAF,MAAAE,GAAA,8CAoFA3L,IACAjnC,KAAA2kC,GACAyO,MAAA1zC,GAypBA2zC,IA5RA,GAAA/xB,QAAA,uMAIApe,MAAA,KAAAjF,KAAA,kBAGA,GAAAqjB,QAAA,2BAEApe,MAAA,KAAAjF,KAAA,+CAoRAmH,YAAA,eACAyjC,iBACAzC,QAAA2C,KAyCAuK,IACAluC,YAAA,eACAyjC,cAAAG,GACA5C,QAAA8C,IAGAqK,IACAF,GACAC,IAmBAE,IACAl7B,SACAtL,QACAguB,SAKAoN,IACAnM,YAAA,EACA/9B,QAAAq1C,GACA1pC,WAAA2pC,GACAnU,YACAzC,cACAxgB,eACAjB,iBACAD,mBACA9V,WAAAJ,EAAAuuC,KAGAE,GAAAtL,GAAAC,IACAM,GAAA+K,GAAA/K,mBAIAgL,GAAA/vC,EAAA,SAAA7G,GACA,GAAAqW,GAAA8P,GAAAnmB,EACA,OAAAqW,MAAA2nB,YAGA6Y,GAAAhpC,GAAAD,UAAA0U,MACAzU,IAAAD,UAAA0U,OAAA,SACAjM,EACAnB,GAKA,IAHAmB,KAAA8P,GAAA9P,MAGAnU,SAAAmyC,MAAAh+B,IAAAnU,SAAA40C,gBAIA,MAAA33C,KAGA,IAAAX,GAAAW,KAAA2P,QAEA,KAAAtQ,EAAAC,OAAA,CACA,GAAAojC,GAAArjC,EAAAqjC,QACA,IAAAA,EACA,mBAAAA,GACA,MAAAA,EAAApS,OAAA,KACAoS,EAAA+U,GAAA/U,QASO,KAAAA,EAAA/V,SAMP,MAAA3sB,KALA0iC,KAAA7D,cAOK3nB,KACLwrB,EAAAwK,GAAAh2B,GAEA,IAAAwrB,EAAA,CAMA,GAAAvhB,GAAAsrB,GAAA/J,GACAxD,wBACAgD,WAAA7iC,EAAA6iC,YACOliC,MACPV,EAAA6hB,EAAA7hB,OACAC,EAAA4hB,EAAA5hB,eACAF,GAAAC,SACAD,EAAAE,mBASA,MAAAm4C,IAAAnwC,KAAAvH,KAAAkX,EAAAnB,IAiBArH,GAAA09B,QAAAK,GAEA9tC,EAAAC,QAAA8P,KPob6BnH,KAAK3I,EAASyD,EAAoB,MAIzDu1C,EACA,SAAUj5C,EAAQC,EAASyD,IAEL,SAAS+D,EAAQzH,GQt9S7C,GAAAk5C,IAQC,WAqcD,QAAAC,GAAA/wC,EAAAgxC,GAGA,MADAhxC,GAAAsF,IAAA0rC,EAAA,GAAAA,EAAA,IACAhxC,EAWA,QAAAixC,GAAA3rC,EAAA5E,GAGA,MADA4E,GAAA0F,IAAAtK,GACA4E,EAaA,QAAApE,GAAAgwC,EAAAC,EAAA5jC,GACA,OAAAA,EAAA3T,QACA,aAAAs3C,GAAA1wC,KAAA2wC,EACA,cAAAD,GAAA1wC,KAAA2wC,EAAA5jC,EAAA,GACA,cAAA2jC,GAAA1wC,KAAA2wC,EAAA5jC,EAAA,GAAAA,EAAA,GACA,cAAA2jC,GAAA1wC,KAAA2wC,EAAA5jC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,MAAA2jC,GAAAhwC,MAAAiwC,EAAA5jC,GAaA,QAAA6jC,GAAAC,EAAAhsC,EAAAisC,EAAAC,GAIA,IAHA,GAAAl0C,IAAA,EACAzD,EAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,SAEAyD,EAAAzD,GAAA,CACA,GAAA8G,GAAA2wC,EAAAh0C,EACAgI,GAAAksC,EAAA7wC,EAAA4wC,EAAA5wC,GAAA2wC,GAEA,MAAAE,GAYA,QAAAC,GAAAH,EAAAC,GAIA,IAHA,GAAAj0C,IAAA,EACAzD,EAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,SAEAyD,EAAAzD,GACA03C,EAAAD,EAAAh0C,KAAAg0C,MAAA,IAIA,MAAAA,GAYA,QAAAI,GAAAJ,EAAAC,GAGA,IAFA,GAAA13C,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,OAEAA,KACA03C,EAAAD,EAAAz3C,KAAAy3C,MAAA,IAIA,MAAAA,GAaA,QAAAK,GAAAL,EAAAM,GAIA,IAHA,GAAAt0C,IAAA,EACAzD,EAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,SAEAyD,EAAAzD,GACA,IAAA+3C,EAAAN,EAAAh0C,KAAAg0C,GACA,QAGA,UAYA,QAAAO,GAAAP,EAAAM,GAMA,IALA,GAAAt0C,IAAA,EACAzD,EAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,OACAi4C,EAAA,EACA72C,OAEAqC,EAAAzD,GAAA,CACA,GAAA8G,GAAA2wC,EAAAh0C,EACAs0C,GAAAjxC,EAAArD,EAAAg0C,KACAr2C,EAAA62C,KAAAnxC,GAGA,MAAA1F,GAYA,QAAA82C,GAAAT,EAAA3wC,GAEA,SADA,MAAA2wC,EAAA,EAAAA,EAAAz3C,SACAm4C,EAAAV,EAAA3wC,EAAA,MAYA,QAAAsxC,GAAAX,EAAA3wC,EAAAuxC,GAIA,IAHA,GAAA50C,IAAA,EACAzD,EAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,SAEAyD,EAAAzD,GACA,GAAAq4C,EAAAvxC,EAAA2wC,EAAAh0C,IACA,QAGA,UAYA,QAAA60C,GAAAb,EAAAC,GAKA,IAJA,GAAAj0C,IAAA,EACAzD,EAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,OACAoB,EAAAuG,MAAA3H,KAEAyD,EAAAzD,GACAoB,EAAAqC,GAAAi0C,EAAAD,EAAAh0C,KAAAg0C,EAEA,OAAAr2C,GAWA,QAAAm3C,GAAAd,EAAAe,GAKA,IAJA,GAAA/0C,IAAA,EACAzD,EAAAw4C,EAAAx4C,OACAy4C,EAAAhB,EAAAz3C,SAEAyD,EAAAzD,GACAy3C,EAAAgB,EAAAh1C,GAAA+0C,EAAA/0C,EAEA,OAAAg0C,GAeA,QAAAiB,GAAAjB,EAAAC,EAAAC,EAAAgB,GACA,GAAAl1C,IAAA,EACAzD,EAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MAKA,KAHA24C,GAAA34C,IACA23C,EAAAF,IAAAh0C,MAEAA,EAAAzD,GACA23C,EAAAD,EAAAC,EAAAF,EAAAh0C,KAAAg0C,EAEA,OAAAE,GAeA,QAAAiB,GAAAnB,EAAAC,EAAAC,EAAAgB,GACA,GAAA34C,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MAIA,KAHA24C,GAAA34C,IACA23C,EAAAF,IAAAz3C,IAEAA,KACA23C,EAAAD,EAAAC,EAAAF,EAAAz3C,KAAAy3C,EAEA,OAAAE,GAaA,QAAAkB,GAAApB,EAAAM,GAIA,IAHA,GAAAt0C,IAAA,EACAzD,EAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,SAEAyD,EAAAzD,GACA,GAAA+3C,EAAAN,EAAAh0C,KAAAg0C,GACA,QAGA,UAmBA,QAAAqB,GAAAC,GACA,MAAAA,GAAAzyC,MAAA,IAUA,QAAA0yC,GAAAD,GACA,MAAAA,GAAA5pC,MAAA8pC,QAcA,QAAAC,GAAAC,EAAApB,EAAAqB,GACA,GAAAh4C,EAOA,OANAg4C,GAAAD,EAAA,SAAAryC,EAAA5H,EAAAi6C,GACA,GAAApB,EAAAjxC,EAAA5H,EAAAi6C,GAEA,MADA/3C,GAAAlC,GACA,IAGAkC,EAcA,QAAAi4C,GAAA5B,EAAAM,EAAAuB,EAAAC,GAIA,IAHA,GAAAv5C,GAAAy3C,EAAAz3C,OACAyD,EAAA61C,GAAAC,EAAA,MAEAA,EAAA91C,QAAAzD,GACA,GAAA+3C,EAAAN,EAAAh0C,KAAAg0C,GACA,MAAAh0C,EAGA,UAYA,QAAA00C,GAAAV,EAAA3wC,EAAAwyC,GACA,MAAAxyC,OACA0yC,EAAA/B,EAAA3wC,EAAAwyC,GACAD,EAAA5B,EAAAgC,EAAAH,GAaA,QAAAI,GAAAjC,EAAA3wC,EAAAwyC,EAAAjB,GAIA,IAHA,GAAA50C,GAAA61C,EAAA,EACAt5C,EAAAy3C,EAAAz3C,SAEAyD,EAAAzD,GACA,GAAAq4C,EAAAZ,EAAAh0C,GAAAqD,GACA,MAAArD,EAGA,UAUA,QAAAg2C,GAAA3yC,GACA,MAAAA,OAYA,QAAA6yC,GAAAlC,EAAAC,GACA,GAAA13C,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MACA,OAAAA,GAAA45C,EAAAnC,EAAAC,GAAA13C,EAAA65C,GAUA,QAAAC,GAAA56C,GACA,gBAAA66C,GACA,aAAAA,EAAAlrC,GAAAkrC,EAAA76C,IAWA,QAAA86C,GAAAD,GACA,gBAAA76C,GACA,aAAA66C,EAAAlrC,GAAAkrC,EAAA76C,IAiBA,QAAA+6C,GAAAd,EAAAzB,EAAAC,EAAAgB,EAAAS,GAMA,MALAA,GAAAD,EAAA,SAAAryC,EAAArD,EAAA01C,GACAxB,EAAAgB,GACAA,GAAA,EAAA7xC,GACA4wC,EAAAC,EAAA7wC,EAAArD,EAAA01C,KAEAxB,EAaA,QAAAuC,GAAAzC,EAAA0C,GACA,GAAAn6C,GAAAy3C,EAAAz3C,MAGA,KADAy3C,EAAAr/B,KAAA+hC,GACAn6C,KACAy3C,EAAAz3C,GAAAy3C,EAAAz3C,GAAA8G,KAEA,OAAA2wC,GAYA,QAAAmC,GAAAnC,EAAAC,GAKA,IAJA,GAAAt2C,GACAqC,GAAA,EACAzD,EAAAy3C,EAAAz3C,SAEAyD,EAAAzD,GAAA,CACA,GAAAo6C,GAAA1C,EAAAD,EAAAh0C,GACA22C,KAAAvrC,KACAzN,MAAAyN,GAAAurC,EAAAh5C,EAAAg5C,GAGA,MAAAh5C,GAYA,QAAAi5C,GAAAv0C,EAAA4xC,GAIA,IAHA,GAAAj0C,IAAA,EACArC,EAAAuG,MAAA7B,KAEArC,EAAAqC,GACA1E,EAAAqC,GAAAi0C,EAAAj0C,EAEA,OAAArC,GAYA,QAAAk5C,GAAAP,EAAAntC,GACA,MAAA0rC,GAAA1rC,EAAA,SAAA1N,GACA,OAAAA,EAAA66C,EAAA76C,MAWA,QAAAq7C,GAAAjD,GACA,gBAAAxwC,GACA,MAAAwwC,GAAAxwC,IAcA,QAAA0zC,GAAAT,EAAAntC,GACA,MAAA0rC,GAAA1rC,EAAA,SAAA1N,GACA,MAAA66C,GAAA76C,KAYA,QAAAu7C,GAAAxzC,EAAA/H,GACA,MAAA+H,GAAA8Q,IAAA7Y,GAYA,QAAAw7C,GAAAC,EAAAC,GAIA,IAHA,GAAAn3C,IAAA,EACAzD,EAAA26C,EAAA36C,SAEAyD,EAAAzD,GAAAm4C,EAAAyC,EAAAD,EAAAl3C,GAAA,QACA,MAAAA,GAYA,QAAAo3C,GAAAF,EAAAC,GAGA,IAFA,GAAAn3C,GAAAk3C,EAAA36C,OAEAyD,KAAA00C,EAAAyC,EAAAD,EAAAl3C,GAAA,QACA,MAAAA,GAWA,QAAAq3C,GAAArD,EAAAhb,GAIA,IAHA,GAAAz8B,GAAAy3C,EAAAz3C,OACAoB,EAAA,EAEApB,KACAy3C,EAAAz3C,KAAAy8B,KACAr7B,CAGA,OAAAA,GA6BA,QAAA25C,GAAA9oB,GACA,WAAA+oB,GAAA/oB,GAWA,QAAAyJ,GAAAqe,EAAA76C,GACA,aAAA66C,EAAAlrC,GAAAkrC,EAAA76C,GAUA,QAAA+7C,GAAAlC,GACA,MAAAmC,IAAAp2C,KAAAi0C,GAUA,QAAAoC,GAAApC,GACA,MAAAqC,IAAAt2C,KAAAi0C,GAUA,QAAAsC,GAAAC,GAIA,IAHA,GAAAnrC,GACA/O,OAEA+O,EAAAmrC,EAAAppB,QAAAqpB,MACAn6C,EAAAZ,KAAA2P,EAAArJ,MAEA,OAAA1F,GAUA,QAAAo6C,GAAAp1C,GACA,GAAA3C,IAAA,EACArC,EAAAuG,MAAAvB,EAAAq1C,KAKA,OAHAr1C,GAAAnH,QAAA,SAAA6H,EAAA5H,GACAkC,IAAAqC,IAAAvE,EAAA4H,KAEA1F,EAWA,QAAAs6C,GAAApE,EAAA3Z,GACA,gBAAAtN,GACA,MAAAinB,GAAA3Z,EAAAtN,KAaA,QAAAsrB,GAAAlE,EAAAhb,GAMA,IALA,GAAAh5B,IAAA,EACAzD,EAAAy3C,EAAAz3C,OACAi4C,EAAA,EACA72C,OAEAqC,EAAAzD,GAAA,CACA,GAAA8G,GAAA2wC,EAAAh0C,EACAqD,KAAA21B,GAAA31B,IAAA80C,KACAnE,EAAAh0C,GAAAm4C,GACAx6C,EAAA62C,KAAAx0C,GAGA,MAAArC,GAUA,QAAAy6C,GAAAnwC,GACA,GAAAjI,IAAA,EACArC,EAAAuG,MAAA+D,EAAA+vC,KAKA,OAHA/vC,GAAAzM,QAAA,SAAA6H,GACA1F,IAAAqC,GAAAqD,IAEA1F,EAUA,QAAA06C,GAAApwC,GACA,GAAAjI,IAAA,EACArC,EAAAuG,MAAA+D,EAAA+vC,KAKA,OAHA/vC,GAAAzM,QAAA,SAAA6H,GACA1F,IAAAqC,IAAAqD,OAEA1F,EAaA,QAAAo4C,GAAA/B,EAAA3wC,EAAAwyC,GAIA,IAHA,GAAA71C,GAAA61C,EAAA,EACAt5C,EAAAy3C,EAAAz3C,SAEAyD,EAAAzD,GACA,GAAAy3C,EAAAh0C,KAAAqD,EACA,MAAArD,EAGA,UAaA,QAAAs4C,GAAAtE,EAAA3wC,EAAAwyC,GAEA,IADA,GAAA71C,GAAA61C,EAAA,EACA71C,KACA,GAAAg0C,EAAAh0C,KAAAqD,EACA,MAAArD,EAGA,OAAAA,GAUA,QAAAu4C,GAAAjD,GACA,MAAAkC,GAAAlC,GACAkD,GAAAlD,GACAmD,GAAAnD,GAUA,QAAAoD,IAAApD,GACA,MAAAkC,GAAAlC,GACAqD,GAAArD,GACAD,EAAAC,GAmBA,QAAAkD,IAAAlD,GAEA,IADA,GAAA33C,GAAAi7C,GAAAza,UAAA,EACAya,GAAAv3C,KAAAi0C,MACA33C,CAEA,OAAAA,GAUA,QAAAg7C,IAAArD,GACA,MAAAA,GAAA5pC,MAAAktC,QAUA,QAAAC,IAAAvD,GACA,MAAAA,GAAA5pC,MAAAotC,QAr2CA,GAAA1tC,IAGA2tC,GAAA,SAGAC,GAAA,IAGAC,GAAA,kEACAC,GAAA,sBAGAC,GAAA,4BAGAC,GAAA,IAGAjB,GAAA,yBAGAkB,GAAA,EACAC,GAAA,EACAC,GAAA,EAGAC,GAAA,EACAC,GAAA,EAGAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IAGAC,GAAA,GACAC,GAAA,MAGAC,GAAA,IACAC,GAAA,GAGAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAGAC,GAAA,IACAC,GAAA,iBACAC,GAAA,uBACAzE,GAAA,IAGA0E,GAAA,WACAC,GAAAD,GAAA,EACAE,GAAAF,KAAA,EAGAG,KACA,MAAAhB,KACA,OAAAP,KACA,UAAAC,KACA,QAAAE,KACA,aAAAC,KACA,OAAAK,KACA,UAAAJ,KACA,eAAAC,KACA,QAAAE,KAIAgB,GAAA,qBACAC,GAAA,iBACAC,GAAA,yBACAC,GAAA,mBACAC,GAAA,gBACAC,GAAA,wBACAC,GAAA,iBACAC,GAAA,oBACAC,GAAA,6BACAC,GAAA,eACAC,GAAA,kBACAC,GAAA,gBACAC,GAAA,kBACAC,GAAA,mBACAC,GAAA,iBACAC,GAAA,kBACAC,GAAA,eACAC,GAAA,kBACAC,GAAA,kBACAC,GAAA,qBACAC,GAAA,mBACAC,GAAA,mBAEAC,GAAA,uBACAC,GAAA,oBACAC,GAAA,wBACAC,GAAA,wBACAC,GAAA,qBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,6BACAC,GAAA,uBACAC,GAAA,uBAGAC,GAAA,iBACAC,GAAA,qBACAC,GAAA,gCAGAC,GAAA,4BACAC,GAAA,WACAC,GAAAv8B,OAAAq8B,GAAA/+B,QACAk/B,GAAAx8B,OAAAs8B,GAAAh/B,QAGAm/B,GAAA,mBACAC,GAAA,kBACAC,GAAA,mBAGAC,GAAA,mDACAC,GAAA,QACAC,GAAA,MACAC,GAAA,mGAMAC,GAAA,sBACAC,GAAAj9B,OAAAg9B,GAAA1/B,QAGA4/B,GAAA,aACAC,GAAA,OACAC,GAAA,OAGAC,GAAA,4CACAC,GAAA,oCACAC,GAAA,QAGAhJ,GAAA,4CAGAiJ,GAAA,WAMAC,GAAA,kCAGAC,GAAA,OAGAC,GAAA,qBAGAC,GAAA,aAGAC,GAAA,8BAGAC,GAAA,cAGAC,GAAA,mBAGAC,GAAA,8CAGAC,GAAA,OAGAC,GAAA,yBAGAC,GAAA,kBACAC,GAAA,kBACAC,GAAA,kBACAC,GAAA,kBACAC,GAAAH,GAAAC,GAAAC,GACAE,GAAA,kBACAC,GAAA,4BACAC,GAAA,uBACAC,GAAA,+CACAC,GAAA,kBACAC,GAAA,+JACAC,GAAA,4BACAC,GAAA,iBACAC,GAAAN,GAAAC,GAAAC,GAAAC,GAGAI,GAAA,OACAC,GAAA,IAAAf,GAAA,IACAgB,GAAA,IAAAH,GAAA,IACAI,GAAA,IAAAb,GAAA,IACAc,GAAA,OACAC,GAAA,IAAAd,GAAA,IACAe,GAAA,IAAAd,GAAA,IACAe,GAAA,KAAArB,GAAAa,GAAAK,GAAAb,GAAAC,GAAAK,GAAA,IACAW,GAAA,2BACAC,GAAA,MAAAN,GAAA,IAAAK,GAAA,IACAE,GAAA,KAAAxB,GAAA,IACAyB,GAAA,kCACAC,GAAA,qCACAC,GAAA,IAAAhB,GAAA,IACAiB,GAAA,UAGAC,GAAA,MAAAT,GAAA,IAAAC,GAAA,IACAS,GAAA,MAAAH,GAAA,IAAAN,GAAA,IACAU,GAAA,MAAAjB,GAAA,yBACAkB,GAAA,MAAAlB,GAAA,yBACAmB,GAAAV,GAAA,IACAW,GAAA,IAAAtB,GAAA,KACAuB,GAAA,MAAAP,GAAA,OAAAJ,GAAAC,GAAAC,IAAAljD,KAAA,SAAA0jD,GAAAD,GAAA,KACAG,GAAA,4CACAC,GAAA,4CACAC,GAAAJ,GAAAD,GAAAE,GACAI,GAAA,OAAApB,GAAAM,GAAAC,IAAAljD,KAAA,SAAA8jD,GACAE,GAAA,OAAAhB,GAAAP,GAAA,IAAAA,GAAAQ,GAAAC,GAAAX,IAAAviD,KAAA,SAGAikD,GAAA5gC,OAAAi/B,GAAA,KAMA4B,GAAA7gC,OAAAo/B,GAAA,KAGAzH,GAAA33B,OAAAy/B,GAAA,MAAAA,GAAA,KAAAkB,GAAAF,GAAA,KAGA5I,GAAA73B,QACA8/B,GAAA,IAAAP,GAAA,IAAAW,GAAA,OAAAf,GAAAW,GAAA,KAAAnjD,KAAA,SACAsjD,GAAA,IAAAE,GAAA,OAAAhB,GAAAW,GAAAE,GAAA,KAAArjD,KAAA,SACAmjD,GAAA,IAAAE,GAAA,IAAAE,GACAJ,GAAA,IAAAK,GACAK,GACAD,GACAlB,GACAqB,IACA/jD,KAAA,UAGA65C,GAAAx2B,OAAA,IAAA+/B,GAAA5B,GAAAI,GAAAQ,GAAA,KAGArI,GAAA,sEAGAoK,IACA,yEACA,uEACA,oEACA,0DACA,uDAIAC,IAAA,EAGAC,KACAA,IAAAvF,IAAAuF,GAAAtF,IACAsF,GAAArF,IAAAqF,GAAApF,IACAoF,GAAAnF,IAAAmF,GAAAlF,IACAkF,GAAAjF,IAAAiF,GAAAhF,IACAgF,GAAA/E,KAAA,EACA+E,GAAA/G,IAAA+G,GAAA9G,IACA8G,GAAAzF,IAAAyF,GAAA5G,IACA4G,GAAAxF,IAAAwF,GAAA3G,IACA2G,GAAAzG,IAAAyG,GAAAxG,IACAwG,GAAAtG,IAAAsG,GAAArG,IACAqG,GAAAnG,IAAAmG,GAAAhG,IACAgG,GAAA/F,IAAA+F,GAAA9F,IACA8F,GAAA3F,KAAA,CAGA,IAAA4F,MACAA,IAAAhH,IAAAgH,GAAA/G,IACA+G,GAAA1F,IAAA0F,GAAAzF,IACAyF,GAAA7G,IAAA6G,GAAA5G,IACA4G,GAAAxF,IAAAwF,GAAAvF,IACAuF,GAAAtF,IAAAsF,GAAArF,IACAqF,GAAApF,IAAAoF,GAAAvG,IACAuG,GAAAtG,IAAAsG,GAAApG,IACAoG,GAAAjG,IAAAiG,GAAAhG,IACAgG,GAAA/F,IAAA+F,GAAA9F,IACA8F,GAAAnF,IAAAmF,GAAAlF,IACAkF,GAAAjF,IAAAiF,GAAAhF,KAAA,EACAgF,GAAA1G,IAAA0G,GAAAzG,IACAyG,GAAA5F,KAAA,CAGA,IAAA6F,KAEAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAEAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KAIAC,IACAC,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACAC,IAAA,SAIAC,IACA5c,QAAU,IACVH,OAAS,IACTC,OAAS,IACTC,SAAW,IACX8c,QAAU,KAIVlX,IACAmX,KAAA,KACAH,IAAA,IACAI,KAAA,IACAC,KAAA,IACAC,SAAA,QACAC,SAAA,SAIAC,GAAAzsD,WACA0sD,GAAA3qB,SAGA4qB,GAAA,gBAAAjtD,SAAA1G,iBAAA0G,EAGAktD,GAAA,gBAAAxc,kBAAAp3C,iBAAAo3C,KAGAtT,GAAA6vB,IAAAC,IAAArzD,SAAA,iBAGAszD,GAAA,gBAAA30D,UAAA+tB,UAAA/tB,EAGA40D,GAAAD,IAAA,gBAAA50D,UAAAguB,UAAAhuB,EAGA80D,GAAAD,OAAA50D,UAAA20D,GAGAG,GAAAD,IAAAJ,GAAAM,QAGAC,GAAA,WACA,IACA,MAAAF,QAAAx3B,SAAAw3B,GAAAx3B,QAAA,QACK,MAAA/7B,QAIL0zD,GAAAD,OAAAE,cACAC,GAAAH,OAAAI,OACAC,GAAAL,OAAAM,MACAC,GAAAP,OAAAQ,SACAC,GAAAT,OAAAU,MACAC,GAAAX,OAAAY,aAuTA3X,GAAApC,EAAA,UAsWAga,GAAA9Z,EAAA4L,IASAmO,GAAA/Z,EAAA2X,IAqOAqC,GAAAha,EAAAiY,IAsEAgC,GAAA,QAAAA,GAAA3jD,GAkPA,QAAA4jD,GAAAptD,GACA,GAAAqtD,GAAArtD,KAAAiE,GAAAjE,kBAAAstD,IAAA,CACA,GAAAttD,YAAAutD,GACA,MAAAvtD,EAEA,IAAAH,GAAAC,KAAAE,EAAA,eACA,MAAAwtD,IAAAxtD,GAGA,UAAAutD,GAAAvtD,GAgCA,QAAAytD,MAWA,QAAAF,GAAAvtD,EAAA0tD,GACAn1D,KAAAo1D,YAAA3tD,EACAzH,KAAAq1D,eACAr1D,KAAAs1D,YAAAH,EACAn1D,KAAAu1D,UAAA,EACAv1D,KAAAw1D,WAAAhmD,GAgFA,QAAAulD,GAAAttD,GACAzH,KAAAo1D,YAAA3tD,EACAzH,KAAAq1D,eACAr1D,KAAAy1D,QAAA,EACAz1D,KAAA01D,cAAA,EACA11D,KAAA21D,iBACA31D,KAAA41D,cAAA1W,GACAl/C,KAAA61D,aAWA,QAAAC,KACA,GAAA/zD,GAAA,GAAAgzD,GAAA/0D,KAAAo1D,YAOA,OANArzD,GAAAszD,YAAAU,GAAA/1D,KAAAq1D,aACAtzD,EAAA0zD,QAAAz1D,KAAAy1D,QACA1zD,EAAA2zD,aAAA11D,KAAA01D,aACA3zD,EAAA4zD,cAAAI,GAAA/1D,KAAA21D,eACA5zD,EAAA6zD,cAAA51D,KAAA41D,cACA7zD,EAAA8zD,UAAAE,GAAA/1D,KAAA61D,WACA9zD,EAWA,QAAAi0D,KACA,GAAAh2D,KAAA01D,aAAA,CACA,GAAA3zD,GAAA,GAAAgzD,GAAA/0D,KACA+B,GAAA0zD,SAAA,EACA1zD,EAAA2zD,cAAA,MAEA3zD,GAAA/B,KAAAs1C,QACAvzC,EAAA0zD,UAAA,CAEA,OAAA1zD,GAWA,QAAAk0D,MACA,GAAA7d,GAAAp4C,KAAAo1D,YAAA3tD,QACA0lB,EAAAntB,KAAAy1D,QACAS,EAAAxqD,GAAA0sC,GACA+d,EAAAhpC,EAAA,EACAipC,EAAAF,EAAA9d,EAAAz3C,OAAA,EACA01D,EAAAC,GAAA,EAAAF,EAAAp2D,KAAA61D,WACAztD,EAAAiuD,EAAAjuD,MACA0vB,EAAAu+B,EAAAv+B,IACAn3B,EAAAm3B,EAAA1vB,EACAhE,EAAA+xD,EAAAr+B,EAAA1vB,EAAA,EACAmuD,EAAAv2D,KAAA21D,cACAa,EAAAD,EAAA51D,OACAi4C,EAAA,EACA6d,EAAAC,GAAA/1D,EAAAX,KAAA41D,cAEA,KAAAM,IAAAC,GAAAC,GAAAz1D,GAAA81D,GAAA91D,EACA,MAAAg2D,IAAAve,EAAAp4C,KAAAq1D,YAEA,IAAAtzD,KAEA60D,GACA,KAAAj2D,KAAAi4C,EAAA6d,GAAA,CACAryD,GAAA+oB,CAKA,KAHA,GAAA0pC,IAAA,EACApvD,EAAA2wC,EAAAh0C,KAEAyyD,EAAAL,GAAA,CACA,GAAA1lD,GAAAylD,EAAAM,GACAxe,EAAAvnC,EAAAunC,SACAl5C,EAAA2R,EAAA3R,KACAM,EAAA44C,EAAA5wC,EAEA,IAAAtI,GAAA0/C,GACAp3C,EAAAhI,MACW,KAAAA,EAAA,CACX,GAAAN,GAAAy/C,GACA,QAAAgY,EAEA,MAAAA,IAIA70D,EAAA62C,KAAAnxC,EAEA,MAAA1F,GAgBA,QAAA+0D,IAAAC,GACA,GAAA3yD,IAAA,EACAzD,EAAA,MAAAo2D,EAAA,EAAAA,EAAAp2D,MAGA,KADAX,KAAAuZ,UACAnV,EAAAzD,GAAA,CACA,GAAAq2D,GAAAD,EAAA3yD,EACApE,MAAAqM,IAAA2qD,EAAA,GAAAA,EAAA,KAWA,QAAAC,MACAj3D,KAAAk3D,SAAAC,MAAA,SACAn3D,KAAAo8C,KAAA,EAaA,QAAAgb,IAAAv3D,GACA,GAAAkC,GAAA/B,KAAA0Y,IAAA7Y,UAAAG,MAAAk3D,SAAAr3D,EAEA,OADAG,MAAAo8C,MAAAr6C,EAAA,IACAA,EAYA,QAAAs1D,IAAAx3D,GACA,GAAAiR,GAAA9Q,KAAAk3D,QACA,IAAAC,GAAA,CACA,GAAAp1D,GAAA+O,EAAAjR,EACA,OAAAkC,KAAAw7C,GAAA/tC,GAAAzN,EAEA,MAAAuF,IAAAC,KAAAuJ,EAAAjR,GAAAiR,EAAAjR,GAAA2P,GAYA,QAAA8nD,IAAAz3D,GACA,GAAAiR,GAAA9Q,KAAAk3D,QACA,OAAAC,IAAArmD,EAAAjR,KAAA2P,GAAAlI,GAAAC,KAAAuJ,EAAAjR,GAaA,QAAA03D,IAAA13D,EAAA4H,GACA,GAAAqJ,GAAA9Q,KAAAk3D,QAGA,OAFAl3D,MAAAo8C,MAAAp8C,KAAA0Y,IAAA7Y,GAAA,IACAiR,EAAAjR,GAAAs3D,IAAA1vD,IAAA+H,GAAA+tC,GAAA91C,EACAzH,KAmBA,QAAAw3D,IAAAT,GACA,GAAA3yD,IAAA,EACAzD,EAAA,MAAAo2D,EAAA,EAAAA,EAAAp2D,MAGA,KADAX,KAAAuZ,UACAnV,EAAAzD,GAAA,CACA,GAAAq2D,GAAAD,EAAA3yD,EACApE,MAAAqM,IAAA2qD,EAAA,GAAAA,EAAA,KAWA,QAAAS,MACAz3D,KAAAk3D,YACAl3D,KAAAo8C,KAAA,EAYA,QAAAsb,IAAA73D,GACA,GAAAiR,GAAA9Q,KAAAk3D,SACA9yD,EAAAuzD,GAAA7mD,EAAAjR,EAEA,SAAAuE,EAAA,KAIAA,GADA0M,EAAAnQ,OAAA,EAEAmQ,EAAAjG,MAEAzD,GAAAG,KAAAuJ,EAAA1M,EAAA,KAEApE,KAAAo8C,MACA,GAYA,QAAAwb,IAAA/3D,GACA,GAAAiR,GAAA9Q,KAAAk3D,SACA9yD,EAAAuzD,GAAA7mD,EAAAjR,EAEA,OAAAuE,GAAA,EAAAoL,GAAAsB,EAAA1M,GAAA,GAYA,QAAAyzD,IAAAh4D,GACA,MAAA83D,IAAA33D,KAAAk3D,SAAAr3D,IAAA,EAaA,QAAAi4D,IAAAj4D,EAAA4H,GACA,GAAAqJ,GAAA9Q,KAAAk3D,SACA9yD,EAAAuzD,GAAA7mD,EAAAjR,EAQA,OANAuE,GAAA,KACApE,KAAAo8C,KACAtrC,EAAA3P,MAAAtB,EAAA4H,KAEAqJ,EAAA1M,GAAA,GAAAqD,EAEAzH,KAmBA,QAAA+3D,IAAAhB,GACA,GAAA3yD,IAAA,EACAzD,EAAA,MAAAo2D,EAAA,EAAAA,EAAAp2D,MAGA,KADAX,KAAAuZ,UACAnV,EAAAzD,GAAA,CACA,GAAAq2D,GAAAD,EAAA3yD,EACApE,MAAAqM,IAAA2qD,EAAA,GAAAA,EAAA,KAWA,QAAAgB,MACAh4D,KAAAo8C,KAAA,EACAp8C,KAAAk3D,UACAh5C,KAAA,GAAA44C,IACA/vD,IAAA,IAAAkxD,IAAAT,IACA9d,OAAA,GAAAod,KAaA,QAAAoB,IAAAr4D,GACA,GAAAkC,GAAAo2D,GAAAn4D,KAAAH,GAAA,OAAAA,EAEA,OADAG,MAAAo8C,MAAAr6C,EAAA,IACAA,EAYA,QAAAq2D,IAAAv4D,GACA,MAAAs4D,IAAAn4D,KAAAH,GAAA8B,IAAA9B,GAYA,QAAAw4D,IAAAx4D,GACA,MAAAs4D,IAAAn4D,KAAAH,GAAA6Y,IAAA7Y,GAaA,QAAAy4D,IAAAz4D,EAAA4H,GACA,GAAAqJ,GAAAqnD,GAAAn4D,KAAAH,GACAu8C,EAAAtrC,EAAAsrC,IAIA,OAFAtrC,GAAAzE,IAAAxM,EAAA4H,GACAzH,KAAAo8C,MAAAtrC,EAAAsrC,QAAA,IACAp8C,KAoBA,QAAAu4D,IAAApf,GACA,GAAA/0C,IAAA,EACAzD,EAAA,MAAAw4C,EAAA,EAAAA,EAAAx4C,MAGA,KADAX,KAAAk3D,SAAA,GAAAa,MACA3zD,EAAAzD,GACAX,KAAA+R,IAAAonC,EAAA/0C,IAcA,QAAAo0D,IAAA/wD,GAEA,MADAzH,MAAAk3D,SAAA7qD,IAAA5E,EAAA81C,IACAv9C,KAYA,QAAAy4D,IAAAhxD,GACA,MAAAzH,MAAAk3D,SAAAx+C,IAAAjR,GAgBA,QAAAixD,IAAA3B,GACA,GAAAjmD,GAAA9Q,KAAAk3D,SAAA,GAAAM,IAAAT,EACA/2D,MAAAo8C,KAAAtrC,EAAAsrC,KAUA,QAAAuc,MACA34D,KAAAk3D,SAAA,GAAAM,IACAx3D,KAAAo8C,KAAA,EAYA,QAAAwc,IAAA/4D,GACA,GAAAiR,GAAA9Q,KAAAk3D,SACAn1D,EAAA+O,EAAA,OAAAjR,EAGA,OADAG,MAAAo8C,KAAAtrC,EAAAsrC,KACAr6C,EAYA,QAAA82D,IAAAh5D,GACA,MAAAG,MAAAk3D,SAAAv1D,IAAA9B,GAYA,QAAAi5D,IAAAj5D,GACA,MAAAG,MAAAk3D,SAAAx+C,IAAA7Y,GAaA,QAAAk5D,IAAAl5D,EAAA4H,GACA,GAAAqJ,GAAA9Q,KAAAk3D,QACA,IAAApmD,YAAA0mD,IAAA,CACA,GAAAwB,GAAAloD,EAAAomD,QACA,KAAAe,IAAAe,EAAAr4D,OAAAy8C,GAAA,EAGA,MAFA4b,GAAA73D,MAAAtB,EAAA4H,IACAzH,KAAAo8C,OAAAtrC,EAAAsrC,KACAp8C,IAEA8Q,GAAA9Q,KAAAk3D,SAAA,GAAAa,IAAAiB,GAIA,MAFAloD,GAAAzE,IAAAxM,EAAA4H,GACAzH,KAAAo8C,KAAAtrC,EAAAsrC,KACAp8C,KAoBA,QAAAi5D,IAAAxxD,EAAAyxD,GACA,GAAAhD,GAAAxqD,GAAAjE,GACA0xD,GAAAjD,GAAAkD,GAAA3xD,GACA4xD,GAAAnD,IAAAiD,GAAAG,GAAA7xD,GACA6H,GAAA4mD,IAAAiD,IAAAE,GAAA7E,GAAA/sD,GACA8xD,EAAArD,GAAAiD,GAAAE,GAAA/pD,EACAvN,EAAAw3D,EAAAve,EAAAvzC,EAAA9G,OAAA4F,OACA5F,EAAAoB,EAAApB,MAEA,QAAAd,KAAA4H,IACAyxD,IAAA5xD,GAAAC,KAAAE,EAAA5H,IACA05D,IAEA,UAAA15D,GAEAw5D,IAAA,UAAAx5D,GAAA,UAAAA,IAEAyP,IAAA,UAAAzP,GAAA,cAAAA,GAAA,cAAAA,IAEA25D,GAAA35D,EAAAc,KAEAoB,EAAAZ,KAAAtB,EAGA,OAAAkC,GAUA,QAAA03D,IAAArhB,GACA,GAAAz3C,GAAAy3C,EAAAz3C,MACA,OAAAA,GAAAy3C,EAAAshB,GAAA,EAAA/4D,EAAA,IAAA6O,GAWA,QAAAmqD,IAAAvhB,EAAA3xC,GACA,MAAAmzD,IAAA7D,GAAA3d,GAAAyhB,GAAApzD,EAAA,EAAA2xC,EAAAz3C,SAUA,QAAAm5D,IAAA1hB,GACA,MAAAwhB,IAAA7D,GAAA3d,IAYA,QAAA2hB,IAAArf,EAAA76C,EAAA4H,IACAA,IAAA+H,IAAAwqD,GAAAtf,EAAA76C,GAAA4H,MACAA,IAAA+H,IAAA3P,IAAA66C,KACAuf,GAAAvf,EAAA76C,EAAA4H,GAcA,QAAAyyD,IAAAxf,EAAA76C,EAAA4H,GACA,GAAA0yD,GAAAzf,EAAA76C,EACAyH,IAAAC,KAAAmzC,EAAA76C,IAAAm6D,GAAAG,EAAA1yD,KACAA,IAAA+H,IAAA3P,IAAA66C,KACAuf,GAAAvf,EAAA76C,EAAA4H,GAYA,QAAAkwD,IAAAvf,EAAAv4C,GAEA,IADA,GAAAc,GAAAy3C,EAAAz3C,OACAA,KACA,GAAAq5D,GAAA5hB,EAAAz3C,GAAA,GAAAd,GACA,MAAAc,EAGA,UAcA,QAAAy5D,IAAAtgB,EAAA1tC,EAAAisC,EAAAC,GAIA,MAHA+hB,IAAAvgB,EAAA,SAAAryC,EAAA5H,EAAAi6C,GACA1tC,EAAAksC,EAAA7wC,EAAA4wC,EAAA5wC,GAAAqyC,KAEAxB,EAYA,QAAAgiB,IAAA5f,EAAA/3B,GACA,MAAA+3B,IAAA6f,GAAA53C,EAAAhjB,GAAAgjB,GAAA+3B,GAYA,QAAA8f,IAAA9f,EAAA/3B,GACA,MAAA+3B,IAAA6f,GAAA53C,EAAA83C,GAAA93C,GAAA+3B,GAYA,QAAAuf,IAAAvf,EAAA76C,EAAA4H,GACA,aAAA5H,GAAA4B,GACAA,GAAAi5C,EAAA76C,GACAmK,cAAA,EACAtI,YAAA,EACA+F,QACAsC,UAAA,IAGA2wC,EAAA76C,GAAA4H,EAYA,QAAAizD,IAAAhgB,EAAAn5C,GAMA,IALA,GAAA6C,IAAA,EACAzD,EAAAY,EAAAZ,OACAoB,EAAAuG,GAAA3H,GACAg6D,EAAA,MAAAjgB,IAEAt2C,EAAAzD,GACAoB,EAAAqC,GAAAu2D,EAAAnrD,GAAA7N,GAAA+4C,EAAAn5C,EAAA6C,GAEA,OAAArC,GAYA,QAAA83D,IAAA9nC,EAAA6oC,EAAA7nB,GASA,MARAhhB,SACAghB,IAAAvjC,KACAuiB,KAAAghB,EAAAhhB,EAAAghB,GAEA6nB,IAAAprD,KACAuiB,KAAA6oC,EAAA7oC,EAAA6oC,IAGA7oC,EAmBA,QAAA8oC,IAAApzD,EAAAqzD,EAAAC,EAAAl7D,EAAA66C,EAAAla,GACA,GAAAz+B,GACAi5D,EAAAF,EAAArd,GACAwd,EAAAH,EAAApd,GACAwd,EAAAJ,EAAAnd,EAKA,IAHAod,IACAh5D,EAAA24C,EAAAqgB,EAAAtzD,EAAA5H,EAAA66C,EAAAla,GAAAu6B,EAAAtzD,IAEA1F,IAAAyN,GACA,MAAAzN,EAEA,KAAA2G,GAAAjB,GACA,MAAAA,EAEA,IAAAyuD,GAAAxqD,GAAAjE,EACA,IAAAyuD,GAEA,GADAn0D,EAAAo5D,GAAA1zD,IACAuzD,EACA,MAAAjF,IAAAtuD,EAAA1F,OAEO,CACP,GAAA8O,GAAAuqD,GAAA3zD,GACA4zD,EAAAxqD,GAAAgvC,IAAAhvC,GAAAivC,EAEA,IAAAwZ,GAAA7xD,GACA,MAAA6zD,IAAA7zD,EAAAuzD,EAEA,IAAAnqD,GAAAqvC,IAAArvC,GAAAyuC,IAAA+b,IAAA3gB,GAEA,GADA34C,EAAAk5D,GAAAI,KAA0CE,GAAA9zD,IAC1CuzD,EACA,MAAAC,GACAO,GAAA/zD,EAAA+yD,GAAAz4D,EAAA0F,IACAg0D,GAAAh0D,EAAA6yD,GAAAv4D,EAAA0F,QAES,CACT,IAAA6+C,GAAAz1C,GACA,MAAA6pC,GAAAjzC,IAEA1F,GAAA25D,GAAAj0D,EAAAoJ,EAAAgqD,GAAAG,IAIAx6B,MAAA,GAAAk4B,IACA,IAAAiD,GAAAn7B,EAAA7+B,IAAA8F,EACA,IAAAk0D,EACA,MAAAA,EAEAn7B,GAAAn0B,IAAA5E,EAAA1F,EAEA,IAAA65D,GAAAV,EACAD,EAAAY,GAAAC,GACAb,EAAAR,GAAA96D,GAEA4N,EAAA2oD,EAAA1mD,GAAAosD,EAAAn0D,EASA,OARA8wC,GAAAhrC,GAAA9F,EAAA,SAAAs0D,EAAAl8D,GACA0N,IACA1N,EAAAk8D,EACAA,EAAAt0D,EAAA5H,IAGAq6D,GAAAn4D,EAAAlC,EAAAg7D,GAAAkB,EAAAjB,EAAAC,EAAAl7D,EAAA4H,EAAA+4B,MAEAz+B,EAUA,QAAAi6D,IAAAr5C,GACA,GAAApV,GAAA5N,GAAAgjB,EACA,iBAAA+3B,GACA,MAAAuhB,IAAAvhB,EAAA/3B,EAAApV,IAYA,QAAA0uD,IAAAvhB,EAAA/3B,EAAApV,GACA,GAAA5M,GAAA4M,EAAA5M,MACA,UAAA+5C,EACA,OAAA/5C,CAGA,KADA+5C,EAAAh7C,GAAAg7C,GACA/5C,KAAA,CACA,GAAAd,GAAA0N,EAAA5M,GACA+3C,EAAA/1B,EAAA9iB,GACA4H,EAAAizC,EAAA76C,EAEA,IAAA4H,IAAA+H,MAAA3P,IAAA66C,MAAAhC,EAAAjxC,GACA,SAGA,SAaA,QAAAy0D,IAAAjkB,EAAAkkB,EAAA7nD,GACA,qBAAA2jC,GACA,SAAAmkB,IAAA9e,GAEA,OAAAtlB,IAAA,WAAoCigB,EAAAhwC,MAAAuH,GAAA8E,IAA+B6nD,GAcnE,QAAAE,IAAAjkB,EAAAe,EAAAd,EAAAW,GACA,GAAA50C,IAAA,EACAk4D,EAAAzjB,EACA0jB,GAAA,EACA57D,EAAAy3C,EAAAz3C,OACAoB,KACAy6D,EAAArjB,EAAAx4C,MAEA,KAAAA,EACA,MAAAoB,EAEAs2C,KACAc,EAAAF,EAAAE,EAAA+B,EAAA7C,KAEAW,GACAsjB,EAAAvjB,EACAwjB,GAAA,GAEApjB,EAAAx4C,QAAAy8C,KACAkf,EAAAlhB,EACAmhB,GAAA,EACApjB,EAAA,GAAAof,IAAApf,GAEAyd,GACA,OAAAxyD,EAAAzD,GAAA,CACA,GAAA8G,GAAA2wC,EAAAh0C,GACA3E,EAAA,MAAA44C,EAAA5wC,EAAA4wC,EAAA5wC,EAGA,IADAA,EAAAuxC,GAAA,IAAAvxC,IAAA,EACA80D,GAAA98D,MAAA,CAEA,IADA,GAAAg9D,GAAAD,EACAC,KACA,GAAAtjB,EAAAsjB,KAAAh9D,EACA,QAAAm3D,EAGA70D,GAAAZ,KAAAsG,OAEA60D,GAAAnjB,EAAA15C,EAAAu5C,IACAj3C,EAAAZ,KAAAsG,GAGA,MAAA1F,GAgCA,QAAA26D,IAAA5iB,EAAApB,GACA,GAAA32C,IAAA,CAKA,OAJAs4D,IAAAvgB,EAAA,SAAAryC,EAAArD,EAAA01C,GAEA,MADA/3C,KAAA22C,EAAAjxC,EAAArD,EAAA01C,KAGA/3C,EAaA,QAAA46D,IAAAvkB,EAAAC,EAAAW,GAIA,IAHA,GAAA50C,IAAA,EACAzD,EAAAy3C,EAAAz3C,SAEAyD,EAAAzD,GAAA,CACA,GAAA8G,GAAA2wC,EAAAh0C,GACA22C,EAAA1C,EAAA5wC,EAEA,UAAAszC,IAAAt7C,IAAA+P,GACAurC,QAAA6hB,GAAA7hB,GACA/B,EAAA+B,EAAAt7C,IAEA,GAAAA,GAAAs7C,EACAh5C,EAAA0F,EAGA,MAAA1F,GAaA,QAAA86D,IAAAzkB,EAAA3wC,EAAAW,EAAA0vB,GACA,GAAAn3B,GAAAy3C,EAAAz3C,MAWA,KATAyH,EAAA00D,GAAA10D,GACAA,EAAA,IACAA,KAAAzH,EAAA,EAAAA,EAAAyH,GAEA0vB,MAAAtoB,IAAAsoB,EAAAn3B,IAAAm8D,GAAAhlC,GACAA,EAAA,IACAA,GAAAn3B,GAEAm3B,EAAA1vB,EAAA0vB,EAAA,EAAAilC,GAAAjlC,GACA1vB,EAAA0vB,GACAsgB,EAAAhwC,KAAAX,CAEA,OAAA2wC,GAWA,QAAA4kB,IAAAljB,EAAApB,GACA,GAAA32C,KAMA,OALAs4D,IAAAvgB,EAAA,SAAAryC,EAAArD,EAAA01C,GACApB,EAAAjxC,EAAArD,EAAA01C,IACA/3C,EAAAZ,KAAAsG,KAGA1F,EAcA,QAAAk7D,IAAA7kB,EAAA8kB,EAAAxkB,EAAAykB,EAAAp7D,GACA,GAAAqC,IAAA,EACAzD,EAAAy3C,EAAAz3C,MAKA,KAHA+3C,MAAA0kB,IACAr7D,YAEAqC,EAAAzD,GAAA,CACA,GAAA8G,GAAA2wC,EAAAh0C,EACA84D,GAAA,GAAAxkB,EAAAjxC,GACAy1D,EAAA,EAEAD,GAAAx1D,EAAAy1D,EAAA,EAAAxkB,EAAAykB,EAAAp7D,GAEAm3C,EAAAn3C,EAAA0F,GAES01D,IACTp7D,IAAApB,QAAA8G,GAGA,MAAA1F,GAoCA,QAAAs7D,IAAA3iB,EAAArC,GACA,MAAAqC,IAAA4iB,GAAA5iB,EAAArC,EAAA14C,IAWA,QAAA49D,IAAA7iB,EAAArC,GACA,MAAAqC,IAAA8iB,GAAA9iB,EAAArC,EAAA14C,IAYA,QAAA89D,IAAA/iB,EAAAntC,GACA,MAAAorC,GAAAprC,EAAA,SAAA1N,GACA,MAAA69D,IAAAhjB,EAAA76C,MAYA,QAAA89D,IAAAjjB,EAAAxwC,GACAA,EAAA0zD,GAAA1zD,EAAAwwC,EAKA,KAHA,GAAAt2C,GAAA,EACAzD,EAAAuJ,EAAAvJ,OAEA,MAAA+5C,GAAAt2C,EAAAzD,GACA+5C,IAAAmjB,GAAA3zD,EAAA9F,MAEA,OAAAA,OAAAzD,EAAA+5C,EAAAlrC,GAcA,QAAAsuD,IAAApjB,EAAAkhB,EAAAmC,GACA,GAAAh8D,GAAA65D,EAAAlhB,EACA,OAAAhvC,IAAAgvC,GAAA34C,EAAAm3C,EAAAn3C,EAAAg8D,EAAArjB,IAUA,QAAAsjB,IAAAv2D,GACA,aAAAA,EACAA,IAAA+H,GAAAixC,GAAAR,GAEAge,SAAAv+D,IAAA+H,GACAy2D,GAAAz2D,GACA02D,GAAA12D,GAYA,QAAA22D,IAAA32D,EAAA42D,GACA,MAAA52D,GAAA42D,EAWA,QAAAC,IAAA5jB,EAAA76C,GACA,aAAA66C,GAAApzC,GAAAC,KAAAmzC,EAAA76C,GAWA,QAAA0+D,IAAA7jB,EAAA76C,GACA,aAAA66C,GAAA76C,IAAAH,IAAAg7C,GAYA,QAAA8jB,IAAAzsC,EAAA3pB,EAAA0vB,GACA,MAAA/F,IAAA2kC,GAAAtuD,EAAA0vB,IAAA/F,EAAA0sC,GAAAr2D,EAAA0vB,GAaA,QAAA4mC,IAAAC,EAAAtmB,EAAAW,GASA,IARA,GAAAsjB,GAAAtjB,EAAAD,EAAAF,EACAl4C,EAAAg+D,EAAA,GAAAh+D,OACAi+D,EAAAD,EAAAh+D,OACAk+D,EAAAD,EACAE,EAAAx2D,GAAAs2D,GACAG,EAAAC,IACAj9D,KAEA88D,KAAA,CACA,GAAAzmB,GAAAumB,EAAAE,EACAA,IAAAxmB,IACAD,EAAAa,EAAAb,EAAA8C,EAAA7C,KAEA0mB,EAAArI,GAAAte,EAAAz3C,OAAAo+D,GACAD,EAAAD,IAAA7lB,IAAAX,GAAA13C,GAAA,KAAAy3C,EAAAz3C,QAAA,KACA,GAAA43D,IAAAsG,GAAAzmB,GACA5oC,GAEA4oC,EAAAumB,EAAA,EAEA,IAAAv6D,IAAA,EACAqV,EAAAqlD,EAAA,EAEAlI,GACA,OAAAxyD,EAAAzD,GAAAoB,EAAApB,OAAAo+D,GAAA,CACA,GAAAt3D,GAAA2wC,EAAAh0C,GACA3E,EAAA44C,IAAA5wC,IAGA,IADAA,EAAAuxC,GAAA,IAAAvxC,IAAA,IACAgS,EACA2hC,EAAA3hC,EAAAha,GACA68D,EAAAv6D,EAAAtC,EAAAu5C,IACA,CAEA,IADA6lB,EAAAD,IACAC,GAAA,CACA,GAAAj3D,GAAAk3D,EAAAD,EACA,MAAAj3D,EACAwzC,EAAAxzC,EAAAnI,GACA68D,EAAAqC,EAAAE,GAAAp/D,EAAAu5C,IAEA,QAAA4d,GAGAn9C,GACAA,EAAAtY,KAAA1B,GAEAsC,EAAAZ,KAAAsG,IAGA,MAAA1F,GAcA,QAAAk9D,IAAAvkB,EAAAtuC,EAAAisC,EAAAC,GAIA,MAHA+kB,IAAA3iB,EAAA,SAAAjzC,EAAA5H,EAAA66C,GACAtuC,EAAAksC,EAAAD,EAAA5wC,GAAA5H,EAAA66C,KAEApC,EAaA,QAAA4mB,IAAAxkB,EAAAxwC,EAAAoK,GACApK,EAAA0zD,GAAA1zD,EAAAwwC,GACAA,EAAA5sC,GAAA4sC,EAAAxwC,EACA,IAAA+tC,GAAA,MAAAyC,MAAAmjB,GAAA7qD,GAAA9I,IACA,cAAA+tC,EAAAzoC,GAAAvH,EAAAgwC,EAAAyC,EAAApmC,GAUA,QAAA6qD,IAAA13D,GACA,MAAAqtD,IAAArtD,IAAAu2D,GAAAv2D,IAAA63C,GAUA,QAAA8f,IAAA33D,GACA,MAAAqtD,IAAArtD,IAAAu2D,GAAAv2D,IAAAm5C,GAUA,QAAAye,IAAA53D,GACA,MAAAqtD,IAAArtD,IAAAu2D,GAAAv2D,IAAAi4C,GAiBA,QAAA4f,IAAA73D,EAAA42D,EAAAvD,EAAAC,EAAAv6B,GACA,MAAA/4B,KAAA42D,IAGA,MAAA52D,GAAA,MAAA42D,IAAAvJ,GAAArtD,KAAAqtD,GAAAuJ,GACA52D,OAAA42D,MAEAkB,GAAA93D,EAAA42D,EAAAvD,EAAAC,EAAAuE,GAAA9+B,IAiBA,QAAA++B,IAAA7kB,EAAA2jB,EAAAvD,EAAAC,EAAAyE,EAAAh/B,GACA,GAAAi/B,GAAA/zD,GAAAgvC,GACAglB,EAAAh0D,GAAA2yD,GACAsB,EAAAF,EAAAlgB,GAAA6b,GAAA1gB,GACAklB,EAAAF,EAAAngB,GAAA6b,GAAAiD,EAEAsB,MAAArgB,GAAAY,GAAAyf,EACAC,KAAAtgB,GAAAY,GAAA0f,CAEA,IAAAC,GAAAF,GAAAzf,GACA4f,EAAAF,GAAA1f,GACA6f,EAAAJ,GAAAC,CAEA,IAAAG,GAAAzG,GAAA5e,GAAA,CACA,IAAA4e,GAAA+E,GACA,QAEAoB,IAAA,EACAI,GAAA,EAEA,GAAAE,IAAAF,EAEA,MADAr/B,OAAA,GAAAk4B,KACA+G,GAAAjL,GAAA9Z,GACAslB,GAAAtlB,EAAA2jB,EAAAvD,EAAAC,EAAAyE,EAAAh/B,GACAy/B,GAAAvlB,EAAA2jB,EAAAsB,EAAA7E,EAAAC,EAAAyE,EAAAh/B,EAEA,MAAAs6B,EAAAld,IAAA,CACA,GAAAsiB,GAAAL,GAAAv4D,GAAAC,KAAAmzC,EAAA,eACAylB,EAAAL,GAAAx4D,GAAAC,KAAA82D,EAAA,cAEA,IAAA6B,GAAAC,EAAA,CACA,GAAAC,GAAAF,EAAAxlB,EAAAjzC,QAAAizC,EACA2lB,EAAAF,EAAA9B,EAAA52D,QAAA42D,CAGA,OADA79B,OAAA,GAAAk4B,KACA8G,EAAAY,EAAAC,EAAAvF,EAAAC,EAAAv6B,IAGA,QAAAu/B,IAGAv/B,MAAA,GAAAk4B,KACA4H,GAAA5lB,EAAA2jB,EAAAvD,EAAAC,EAAAyE,EAAAh/B,IAUA,QAAA+/B,IAAA94D,GACA,MAAAqtD,IAAArtD,IAAA2zD,GAAA3zD,IAAAs4C,GAaA,QAAAygB,IAAA9lB,EAAA/3B,EAAA89C,EAAA1F,GACA,GAAA32D,GAAAq8D,EAAA9/D,OACAA,EAAAyD,EACAs8D,GAAA3F,CAEA,UAAArgB,EACA,OAAA/5C,CAGA,KADA+5C,EAAAh7C,GAAAg7C,GACAt2C,KAAA,CACA,GAAA0M,GAAA2vD,EAAAr8D,EACA,IAAAs8D,GAAA5vD,EAAA,GACAA,EAAA,KAAA4pC,EAAA5pC,EAAA,MACAA,EAAA,IAAA4pC,IAEA,SAGA,OAAAt2C,EAAAzD,GAAA,CACAmQ,EAAA2vD,EAAAr8D,EACA,IAAAvE,GAAAiR,EAAA,GACAqpD,EAAAzf,EAAA76C,GACA8gE,EAAA7vD,EAAA,EAEA,IAAA4vD,GAAA5vD,EAAA,IACA,GAAAqpD,IAAA3qD,MAAA3P,IAAA66C,IACA,aAES,CACT,GAAAla,GAAA,GAAAk4B,GACA,IAAAqC,EACA,GAAAh5D,GAAAg5D,EAAAZ,EAAAwG,EAAA9gE,EAAA66C,EAAA/3B,EAAA6d,EAEA,MAAAz+B,IAAAyN,GACA8vD,GAAAqB,EAAAxG,EAAAvc,GAAAC,GAAAkd,EAAAv6B,GACAz+B,GAEA,UAIA,SAWA,QAAA6+D,IAAAn5D,GACA,SAAAiB,GAAAjB,IAAAo5D,GAAAp5D,MAGAi2D,GAAAj2D,GAAAq5D,GAAA5d,IACAz9C,KAAAs7D,GAAAt5D,IAUA,QAAAu5D,IAAAv5D,GACA,MAAAqtD,IAAArtD,IAAAu2D,GAAAv2D,IAAA44C,GAUA,QAAA4gB,IAAAx5D,GACA,MAAAqtD,IAAArtD,IAAA2zD,GAAA3zD,IAAA64C,GAUA,QAAA4gB,IAAAz5D,GACA,MAAAqtD,IAAArtD,IACA05D,GAAA15D,EAAA9G,WAAA0lD,GAAA2X,GAAAv2D,IAUA,QAAA25D,IAAA35D,GAGA,wBAAAA,GACAA,EAEA,MAAAA,EACAmY,GAEA,gBAAAnY,GACAiE,GAAAjE,GACA45D,GAAA55D,EAAA,GAAAA,EAAA,IACA65D,GAAA75D,GAEAwE,GAAAxE,GAUA,QAAA85D,IAAA7mB,GACA,IAAA8mB,GAAA9mB,GACA,MAAA+mB,IAAA/mB,EAEA,IAAA34C,KACA,QAAAlC,KAAAH,IAAAg7C,GACApzC,GAAAC,KAAAmzC,EAAA76C,IAAA,eAAAA,GACAkC,EAAAZ,KAAAtB,EAGA,OAAAkC,GAUA,QAAA2/D,IAAAhnB,GACA,IAAAhyC,GAAAgyC,GACA,MAAAinB,IAAAjnB,EAEA,IAAAknB,GAAAJ,GAAA9mB,GACA34C,IAEA,QAAAlC,KAAA66C,IACA,eAAA76C,IAAA+hE,GAAAt6D,GAAAC,KAAAmzC,EAAA76C,KACAkC,EAAAZ,KAAAtB,EAGA,OAAAkC,GAYA,QAAA8/D,IAAAp6D,EAAA42D,GACA,MAAA52D,GAAA42D,EAWA,QAAAyD,IAAAhoB,EAAAzB,GACA,GAAAj0C,IAAA,EACArC,EAAAggE,GAAAjoB,GAAAxxC,GAAAwxC,EAAAn5C,UAKA,OAHA05D,IAAAvgB,EAAA,SAAAryC,EAAA5H,EAAAi6C,GACA/3C,IAAAqC,GAAAi0C,EAAA5wC,EAAA5H,EAAAi6C,KAEA/3C,EAUA,QAAAu/D,IAAA3+C,GACA,GAAA89C,GAAAuB,GAAAr/C,EACA,WAAA89C,EAAA9/D,QAAA8/D,EAAA,MACAwB,GAAAxB,EAAA,MAAAA,EAAA,OAEA,SAAA/lB,GACA,MAAAA,KAAA/3B,GAAA69C,GAAA9lB,EAAA/3B,EAAA89C,IAYA,QAAAY,IAAAn3D,EAAAy2D,GACA,MAAAuB,IAAAh4D,IAAAi4D,GAAAxB,GACAsB,GAAApE,GAAA3zD,GAAAy2D,GAEA,SAAAjmB,GACA,GAAAyf,GAAAx4D,GAAA+4C,EAAAxwC,EACA,OAAAiwD,KAAA3qD,IAAA2qD,IAAAwG,EACAyB,GAAA1nB,EAAAxwC,GACAo1D,GAAAqB,EAAAxG,EAAAvc,GAAAC,KAeA,QAAAwkB,IAAA3nB,EAAA/3B,EAAA2/C,EAAAvH,EAAAv6B,GACAka,IAAA/3B,GAGA26C,GAAA36C,EAAA,SAAAg+C,EAAA9gE,GACA,GAAA6I,GAAAi4D,GACAngC,MAAA,GAAAk4B,KACA6J,GAAA7nB,EAAA/3B,EAAA9iB,EAAAyiE,EAAAD,GAAAtH,EAAAv6B,OAEA,CACA,GAAAgiC,GAAAzH,EACAA,EAAArgB,EAAA76C,GAAA8gE,EAAA9gE,EAAA,GAAA66C,EAAA/3B,EAAA6d,GACAhxB,EAEAgzD,KAAAhzD,KACAgzD,EAAA7B,GAEA5G,GAAArf,EAAA76C,EAAA2iE,KAEO/H,IAkBP,QAAA8H,IAAA7nB,EAAA/3B,EAAA9iB,EAAAyiE,EAAAG,EAAA1H,EAAAv6B,GACA,GAAA25B,GAAAzf,EAAA76C,GACA8gE,EAAAh+C,EAAA9iB,GACA87D,EAAAn7B,EAAA7+B,IAAAg/D,EAEA,IAAAhF,EAEA,WADA5B,IAAArf,EAAA76C,EAAA87D,EAGA,IAAA6G,GAAAzH,EACAA,EAAAZ,EAAAwG,EAAA9gE,EAAA,GAAA66C,EAAA/3B,EAAA6d,GACAhxB,GAEA+sD,EAAAiG,IAAAhzD,EAEA,IAAA+sD,EAAA,CACA,GAAArG,GAAAxqD,GAAAi1D,GACAtH,GAAAnD,GAAAoD,GAAAqH,GACA+B,GAAAxM,IAAAmD,GAAA7E,GAAAmM,EAEA6B,GAAA7B,EACAzK,GAAAmD,GAAAqJ,EACAh3D,GAAAyuD,GACAqI,EAAArI,EAEAwI,GAAAxI,GACAqI,EAAAzM,GAAAoE,GAEAd,GACAkD,GAAA,EACAiG,EAAAlH,GAAAqF,GAAA,IAEA+B,GACAnG,GAAA,EACAiG,EAAAI,GAAAjC,GAAA,IAGA6B,KAGA75D,GAAAg4D,IAAAvH,GAAAuH,IACA6B,EAAArI,EACAf,GAAAe,GACAqI,EAAAK,GAAA1I,KAEAzxD,GAAAyxD,IAAAmI,GAAA5E,GAAAvD,MACAqI,EAAAjH,GAAAoF,KAIApE,GAAA,EAGAA,IAEA/7B,EAAAn0B,IAAAs0D,EAAA6B,GACAC,EAAAD,EAAA7B,EAAA2B,EAAAvH,EAAAv6B,GACAA,EAAA,OAAAmgC,IAEA5G,GAAArf,EAAA76C,EAAA2iE,GAWA,QAAAM,IAAA1qB,EAAA3xC,GACA,GAAA9F,GAAAy3C,EAAAz3C,MACA,IAAAA,EAIA,MADA8F,MAAA,EAAA9F,EAAA,EACA64D,GAAA/yD,EAAA9F,GAAAy3C,EAAA3xC,GAAA+I,GAYA,QAAAuzD,IAAAjpB,EAAAyc,EAAAyM,GACA,GAAA5+D,IAAA,CAUA,OATAmyD,GAAAtd,EAAAsd,EAAA51D,OAAA41D,GAAA32C,IAAAs7B,EAAA+nB,OASApoB,EAPAinB,GAAAhoB,EAAA,SAAAryC,EAAA5H,EAAAi6C,GAIA,OAAgBopB,SAHhBjqB,EAAAsd,EAAA,SAAAle,GACA,MAAAA,GAAA5wC,KAEgBrD,UAAAqD,WAGhB,SAAAizC,EAAA2jB,GACA,MAAA8E,IAAAzoB,EAAA2jB,EAAA2E,KAaA,QAAAI,IAAA1oB,EAAAn5C,GACA,MAAA8hE,IAAA3oB,EAAAn5C,EAAA,SAAAkG,EAAAyC,GACA,MAAAk4D,IAAA1nB,EAAAxwC,KAaA,QAAAm5D,IAAA3oB,EAAAn5C,EAAAm3C,GAKA,IAJA,GAAAt0C,IAAA,EACAzD,EAAAY,EAAAZ,OACAoB,OAEAqC,EAAAzD,GAAA,CACA,GAAAuJ,GAAA3I,EAAA6C,GACAqD,EAAAk2D,GAAAjjB,EAAAxwC,EAEAwuC,GAAAjxC,EAAAyC,IACAo5D,GAAAvhE,EAAA67D,GAAA1zD,EAAAwwC,GAAAjzC,GAGA,MAAA1F,GAUA,QAAAwhE,IAAAr5D,GACA,gBAAAwwC,GACA,MAAAijB,IAAAjjB,EAAAxwC,IAeA,QAAAs5D,IAAAprB,EAAAe,EAAAd,EAAAW,GACA,GAAA7xC,GAAA6xC,EAAAqB,EAAAvB,EACA10C,GAAA,EACAzD,EAAAw4C,EAAAx4C,OACA8Y,EAAA2+B,CAQA,KANAA,IAAAe,IACAA,EAAA4c,GAAA5c,IAEAd,IACA5+B,EAAAw/B,EAAAb,EAAA8C,EAAA7C,OAEAj0C,EAAAzD,GAKA,IAJA,GAAAs5C,GAAA,EACAxyC,EAAA0xC,EAAA/0C,GACA3E,EAAA44C,IAAA5wC,MAEAwyC,EAAA9yC,EAAAsS,EAAAha,EAAAw6C,EAAAjB,KAAA,GACAv/B,IAAA2+B,GACAhxC,GAAAG,KAAAkS,EAAAwgC,EAAA,GAEA7yC,GAAAG,KAAA6wC,EAAA6B,EAAA,EAGA,OAAA7B,GAYA,QAAAqrB,IAAArrB,EAAAsrB,GAIA,IAHA,GAAA/iE,GAAAy3C,EAAAsrB,EAAA/iE,OAAA,EACA4hC,EAAA5hC,EAAA,EAEAA,KAAA,CACA,GAAAyD,GAAAs/D,EAAA/iE,EACA,IAAAA,GAAA4hC,GAAAn+B,IAAAu/D,EAAA,CACA,GAAAA,GAAAv/D,CACAo1D,IAAAp1D,GACAgD,GAAAG,KAAA6wC,EAAAh0C,EAAA,GAEAw/D,GAAAxrB,EAAAh0C,IAIA,MAAAg0C,GAYA,QAAAshB,IAAAkB,EAAA7nB,GACA,MAAA6nB,GAAAiJ,GAAAC,MAAA/wB,EAAA6nB,EAAA,IAcA,QAAAmJ,IAAA37D,EAAA0vB,EAAAksC,EAAA9pB,GAKA,IAJA,GAAA91C,IAAA,EACAzD,EAAA89D,GAAAwF,IAAAnsC,EAAA1vB,IAAA47D,GAAA,OACAjiE,EAAAuG,GAAA3H,GAEAA,KACAoB,EAAAm4C,EAAAv5C,IAAAyD,GAAAgE,EACAA,GAAA47D,CAEA,OAAAjiE,GAWA,QAAAmiE,IAAAxqB,EAAAjzC,GACA,GAAA1E,GAAA,EACA,KAAA23C,GAAAjzC,EAAA,GAAAA,EAAAu4C,GACA,MAAAj9C,EAIA,IACA0E,EAAA,IACA1E,GAAA23C,IAEAjzC,EAAAo9D,GAAAp9D,EAAA,MAEAizC,YAEOjzC,EAEP,OAAA1E,GAWA,QAAAoiE,IAAAlsB,EAAA7vC,GACA,MAAAg8D,IAAAC,GAAApsB,EAAA7vC,EAAAwX,IAAAq4B,EAAA,IAUA,QAAAqsB,IAAAxqB,GACA,MAAA2f,IAAAtgB,GAAAW,IAWA,QAAAyqB,IAAAzqB,EAAArzC,GACA,GAAA2xC,GAAAe,GAAAW,EACA,OAAA8f,IAAAxhB,EAAAyhB,GAAApzD,EAAA,EAAA2xC,EAAAz3C,SAaA,QAAA2iE,IAAA5oB,EAAAxwC,EAAAzC,EAAAszD,GACA,IAAAryD,GAAAgyC,GACA,MAAAA,EAEAxwC,GAAA0zD,GAAA1zD,EAAAwwC,EAOA,KALA,GAAAt2C,IAAA,EACAzD,EAAAuJ,EAAAvJ,OACA4hC,EAAA5hC,EAAA,EACAwoB,EAAAuxB,EAEA,MAAAvxB,KAAA/kB,EAAAzD,GAAA,CACA,GAAAd,GAAAg+D,GAAA3zD,EAAA9F,IACAo+D,EAAA/6D,CAEA,IAAArD,GAAAm+B,EAAA,CACA,GAAA43B,GAAAhxC,EAAAtpB,EACA2iE,GAAAzH,IAAAZ,EAAAt6D,EAAAspB,GAAA3Z,GACAgzD,IAAAhzD,KACAgzD,EAAA95D,GAAAyxD,GACAA,EACAX,GAAAtvD,EAAA9F,EAAA,WAGA81D,GAAA/wC,EAAAtpB,EAAA2iE,GACAr5C,IAAAtpB,GAEA,MAAA66C,GAwCA,QAAA8pB,IAAA1qB,GACA,MAAA8f,IAAAzgB,GAAAW,IAYA,QAAA2qB,IAAArsB,EAAAhwC,EAAA0vB,GACA,GAAA1zB,IAAA,EACAzD,EAAAy3C,EAAAz3C,MAEAyH,GAAA,IACAA,KAAAzH,EAAA,EAAAA,EAAAyH,GAEA0vB,IAAAn3B,IAAAm3B,EACAA,EAAA,IACAA,GAAAn3B,GAEAA,EAAAyH,EAAA0vB,EAAA,EAAAA,EAAA1vB,IAAA,EACAA,KAAA,CAGA,KADA,GAAArG,GAAAuG,GAAA3H,KACAyD,EAAAzD,GACAoB,EAAAqC,GAAAg0C,EAAAh0C,EAAAgE,EAEA,OAAArG,GAYA,QAAA2iE,IAAA5qB,EAAApB,GACA,GAAA32C,EAMA,OAJAs4D,IAAAvgB,EAAA,SAAAryC,EAAArD,EAAA01C,GAEA,QADA/3C,EAAA22C,EAAAjxC,EAAArD,EAAA01C,QAGA/3C,EAeA,QAAA4iE,IAAAvsB,EAAA3wC,EAAAm9D,GACA,GAAAC,GAAA,EACAC,EAAA,MAAA1sB,EAAAysB,EAAAzsB,EAAAz3C,MAEA,oBAAA8G,WAAAq9D,GAAA1lB,GAAA,CACA,KAAAylB,EAAAC,GAAA,CACA,GAAAC,GAAAF,EAAAC,IAAA,EACArlE,EAAA24C,EAAA2sB,EAEA,QAAAtlE,IAAAm9D,GAAAn9D,KACAmlE,EAAAnlE,GAAAgI,EAAAhI,EAAAgI,GACAo9D,EAAAE,EAAA,EAEAD,EAAAC,EAGA,MAAAD,GAEA,MAAAE,IAAA5sB,EAAA3wC,EAAAmY,GAAAglD,GAgBA,QAAAI,IAAA5sB,EAAA3wC,EAAA4wC,EAAAusB,GACAn9D,EAAA4wC,EAAA5wC,EASA,KAPA,GAAAo9D,GAAA,EACAC,EAAA,MAAA1sB,EAAA,EAAAA,EAAAz3C,OACAskE,EAAAx9D,MACAy9D,EAAA,OAAAz9D,EACA09D,EAAAvI,GAAAn1D,GACA29D,EAAA39D,IAAA+H,GAEAq1D,EAAAC,GAAA,CACA,GAAAC,GAAAlB,IAAAgB,EAAAC,GAAA,GACArlE,EAAA44C,EAAAD,EAAA2sB,IACAM,EAAA5lE,IAAA+P,GACA81D,EAAA,OAAA7lE,EACA8lE,EAAA9lE,MACA+lE,EAAA5I,GAAAn9D,EAEA,IAAAwlE,EACA,GAAAQ,GAAAb,GAAAW,MAEAE,GADSL,EACTG,IAAAX,GAAAS,GACSH,EACTK,GAAAF,IAAAT,IAAAU,GACSH,EACTI,GAAAF,IAAAC,IAAAV,IAAAY,IACSF,IAAAE,IAGTZ,EAAAnlE,GAAAgI,EAAAhI,EAAAgI,EAEAg+D,GACAZ,EAAAE,EAAA,EAEAD,EAAAC,EAGA,MAAArO,IAAAoO,EAAA3lB,IAYA,QAAAumB,IAAAttB,EAAAC,GAMA,IALA,GAAAj0C,IAAA,EACAzD,EAAAy3C,EAAAz3C,OACAi4C,EAAA,EACA72C,OAEAqC,EAAAzD,GAAA,CACA,GAAA8G,GAAA2wC,EAAAh0C,GACA3E,EAAA44C,IAAA5wC,IAEA,KAAArD,IAAA41D,GAAAv6D,EAAAga,GAAA,CACA,GAAAA,GAAAha,CACAsC,GAAA62C,KAAA,IAAAnxC,EAAA,EAAAA,GAGA,MAAA1F,GAWA,QAAA4jE,IAAAl+D,GACA,sBAAAA,GACAA,EAEAm1D,GAAAn1D,GACA+yC,IAEA/yC,EAWA,QAAAm+D,IAAAn+D,GAEA,mBAAAA,GACA,MAAAA,EAEA,IAAAiE,GAAAjE,GAEA,MAAAwxC,GAAAxxC,EAAAm+D,IAAA,EAEA,IAAAhJ,GAAAn1D,GACA,MAAAo+D,OAAAt+D,KAAAE,GAAA,EAEA,IAAA1F,GAAA0F,EAAA,EACA,YAAA1F,GAAA,EAAA0F,IAAAs3C,GAAA,KAAAh9C,EAYA,QAAA+jE,IAAA1tB,EAAAC,EAAAW,GACA,GAAA50C,IAAA,EACAk4D,EAAAzjB,EACAl4C,EAAAy3C,EAAAz3C,OACA47D,GAAA,EACAx6D,KACA0X,EAAA1X,CAEA,IAAAi3C,EACAujB,GAAA,EACAD,EAAAvjB,MAEA,IAAAp4C,GAAAy8C,GAAA,CACA,GAAA/wC,GAAAgsC,EAAA,KAAA0tB,GAAA3tB,EACA,IAAA/rC,EACA,MAAAmwC,GAAAnwC,EAEAkwD,IAAA,EACAD,EAAAlhB,EACA3hC,EAAA,GAAA8+C,QAGA9+C,GAAA4+B,KAAAt2C,CAEA60D,GACA,OAAAxyD,EAAAzD,GAAA,CACA,GAAA8G,GAAA2wC,EAAAh0C,GACA3E,EAAA44C,IAAA5wC,IAGA,IADAA,EAAAuxC,GAAA,IAAAvxC,IAAA,EACA80D,GAAA98D,MAAA,CAEA,IADA,GAAAumE,GAAAvsD,EAAA9Y,OACAqlE,KACA,GAAAvsD,EAAAusD,KAAAvmE,EACA,QAAAm3D,EAGAve,IACA5+B,EAAAtY,KAAA1B,GAEAsC,EAAAZ,KAAAsG,OAEA60D,GAAA7iD,EAAAha,EAAAu5C,KACAv/B,IAAA1X,GACA0X,EAAAtY,KAAA1B,GAEAsC,EAAAZ,KAAAsG,IAGA,MAAA1F,GAWA,QAAA6hE,IAAAlpB,EAAAxwC,GAGA,MAFAA,GAAA0zD,GAAA1zD,EAAAwwC,GAEA,OADAA,EAAA5sC,GAAA4sC,EAAAxwC,WACAwwC,GAAAmjB,GAAA7qD,GAAA9I,KAaA,QAAA+7D,IAAAvrB,EAAAxwC,EAAAg8D,EAAAnL,GACA,MAAAuI,IAAA5oB,EAAAxwC,EAAAg8D,EAAAvI,GAAAjjB,EAAAxwC,IAAA6wD,GAcA,QAAAoL,IAAA/tB,EAAAM,EAAA0tB,EAAAlsB,GAIA,IAHA,GAAAv5C,GAAAy3C,EAAAz3C,OACAyD,EAAA81C,EAAAv5C,GAAA,GAEAu5C,EAAA91C,QAAAzD,IACA+3C,EAAAN,EAAAh0C,KAAAg0C,KAEA,MAAAguB,GACA3B,GAAArsB,EAAA8B,EAAA,EAAA91C,EAAA81C,EAAA91C,EAAA,EAAAzD,GACA8jE,GAAArsB,EAAA8B,EAAA91C,EAAA,IAAA81C,EAAAv5C,EAAAyD,GAaA,QAAAuyD,IAAAlvD,EAAA4+D,GACA,GAAAtkE,GAAA0F,CAIA,OAHA1F,aAAAgzD,KACAhzD,IAAA0F,SAEA4xC,EAAAgtB,EAAA,SAAAtkE,EAAAukE,GACA,MAAAA,GAAAruB,KAAAhwC,MAAAq+D,EAAApuB,QAAAgB,GAAAn3C,GAAAukE,EAAAhyD,QACOvS,GAaP,QAAAwkE,IAAA5H,EAAAtmB,EAAAW,GACA,GAAAr4C,GAAAg+D,EAAAh+D,MACA,IAAAA,EAAA,EACA,MAAAA,GAAAmlE,GAAAnH,EAAA,MAKA,KAHA,GAAAv6D,IAAA,EACArC,EAAAuG,GAAA3H,KAEAyD,EAAAzD,GAIA,IAHA,GAAAy3C,GAAAumB,EAAAv6D,GACAy6D,GAAA,IAEAA,EAAAl+D,GACAk+D,GAAAz6D,IACArC,EAAAqC,GAAAi4D,GAAAt6D,EAAAqC,IAAAg0C,EAAAumB,EAAAE,GAAAxmB,EAAAW,GAIA,OAAA8sB,IAAA7I,GAAAl7D,EAAA,GAAAs2C,EAAAW,GAYA,QAAAwtB,IAAAj5D,EAAA4rC,EAAAstB,GAMA,IALA,GAAAriE,IAAA,EACAzD,EAAA4M,EAAA5M,OACA+lE,EAAAvtB,EAAAx4C,OACAoB,OAEAqC,EAAAzD,GAAA,CACA,GAAA8G,GAAArD,EAAAsiE,EAAAvtB,EAAA/0C,GAAAoL,EACAi3D,GAAA1kE,EAAAwL,EAAAnJ,GAAAqD,GAEA,MAAA1F,GAUA,QAAA4kE,IAAAl/D,GACA,MAAAk7D,IAAAl7D,QAUA,QAAAm/D,IAAAn/D,GACA,wBAAAA,KAAAmY,GAWA,QAAAg+C,IAAAn2D,EAAAizC,GACA,MAAAhvC,IAAAjE,GACAA,EAEAy6D,GAAAz6D,EAAAizC,IAAAjzC,GAAAo/D,GAAA/kE,GAAA2F,IAuBA,QAAAq/D,IAAA1uB,EAAAhwC,EAAA0vB,GACA,GAAAn3B,GAAAy3C,EAAAz3C,MAEA,OADAm3B,OAAAtoB,GAAA7O,EAAAm3B,GACA1vB,GAAA0vB,GAAAn3B,EAAAy3C,EAAAqsB,GAAArsB,EAAAhwC,EAAA0vB,GAqBA,QAAAwjC,IAAAyL,EAAA/L,GACA,GAAAA,EACA,MAAA+L,GAAArgD,OAEA,IAAA/lB,GAAAomE,EAAApmE,OACAoB,EAAAilE,MAAArmE,GAAA,GAAAomE,GAAA9jD,YAAAtiB,EAGA,OADAomE,GAAAE,KAAAllE,GACAA,EAUA,QAAAmlE,IAAAC,GACA,GAAAplE,GAAA,GAAAolE,GAAAlkD,YAAAkkD,EAAAC,WAEA,OADA,IAAAC,IAAAtlE,GAAAsK,IAAA,GAAAg7D,IAAAF,IACAplE,EAWA,QAAAulE,IAAAC,EAAAvM,GACA,GAAA+L,GAAA/L,EAAAkM,GAAAK,EAAAR,QAAAQ,EAAAR,MACA,WAAAQ,GAAAtkD,YAAA8jD,EAAAQ,EAAAC,WAAAD,EAAAH,YAYA,QAAAK,IAAA1gE,EAAAi0D,EAAA0M,GAEA,MAAAruB,GADA2hB,EAAA0M,EAAAvrB,EAAAp1C,GAAA02C,IAAAtB,EAAAp1C,GACA+wC,EAAA,GAAA/wC,GAAAkc,aAUA,QAAA0kD,IAAAC,GACA,GAAA7lE,GAAA,GAAA6lE,GAAA3kD,YAAA2kD,EAAAjlD,OAAAogC,GAAAvgB,KAAAolC,GAEA,OADA7lE,GAAAwgC,UAAAqlC,EAAArlC,UACAxgC,EAYA,QAAA8lE,IAAAx7D,EAAA2uD,EAAA0M,GAEA,MAAAruB,GADA2hB,EAAA0M,EAAAlrB,EAAAnwC,GAAAoxC,IAAAjB,EAAAnwC,GACA2rC,EAAA,GAAA3rC,GAAA4W,aAUA,QAAA6kD,IAAAC,GACA,MAAAC,IAAAtoE,GAAAsoE,GAAAzgE,KAAAwgE,OAWA,QAAAnF,IAAAqF,EAAAjN,GACA,GAAA+L,GAAA/L,EAAAkM,GAAAe,EAAAlB,QAAAkB,EAAAlB,MACA,WAAAkB,GAAAhlD,YAAA8jD,EAAAkB,EAAAT,WAAAS,EAAAtnE,QAWA,QAAAunE,IAAAzgE,EAAA42D,GACA,GAAA52D,IAAA42D,EAAA,CACA,GAAA8J,GAAA1gE,IAAA+H,GACA01D,EAAA,OAAAz9D,EACA2gE,EAAA3gE,MACA09D,EAAAvI,GAAAn1D,GAEA49D,EAAAhH,IAAA7uD,GACA81D,EAAA,OAAAjH,EACAkH,EAAAlH,MACAmH,EAAA5I,GAAAyB,EAEA,KAAAiH,IAAAE,IAAAL,GAAA19D,EAAA42D,GACA8G,GAAAE,GAAAE,IAAAD,IAAAE,GACAN,GAAAG,GAAAE,IACA4C,GAAA5C,IACA6C,EACA,QAEA,KAAAlD,IAAAC,IAAAK,GAAA/9D,EAAA42D,GACAmH,GAAA2C,GAAAC,IAAAlD,IAAAC,GACAG,GAAA6C,GAAAC,IACA/C,GAAA+C,IACA7C,EACA,SAGA,SAiBA,QAAApC,IAAAzoB,EAAA2jB,EAAA2E,GAOA,IANA,GAAA5+D,IAAA,EACAikE,EAAA3tB,EAAAwoB,SACAoF,EAAAjK,EAAA6E,SACAviE,EAAA0nE,EAAA1nE,OACA4nE,EAAAvF,EAAAriE,SAEAyD,EAAAzD,GAAA,CACA,GAAAoB,GAAAmmE,GAAAG,EAAAjkE,GAAAkkE,EAAAlkE,GACA,IAAArC,EAAA,CACA,GAAAqC,GAAAmkE,EACA,MAAAxmE,EAGA,OAAAA,IAAA,QADAihE,EAAA5+D,IACA,MAUA,MAAAs2C,GAAAt2C,MAAAi6D,EAAAj6D,MAcA,QAAAokE,IAAAl0D,EAAAm0D,EAAAC,EAAAC,GAUA,IATA,GAAAC,IAAA,EACAC,EAAAv0D,EAAA3T,OACAmoE,EAAAJ,EAAA/nE,OACAooE,GAAA,EACAC,EAAAP,EAAA9nE,OACAsoE,EAAAxK,GAAAoK,EAAAC,EAAA,GACA/mE,EAAAuG,GAAA0gE,EAAAC,GACAC,GAAAP,IAEAI,EAAAC,GACAjnE,EAAAgnE,GAAAN,EAAAM,EAEA,QAAAH,EAAAE,IACAI,GAAAN,EAAAC,KACA9mE,EAAA2mE,EAAAE,IAAAt0D,EAAAs0D,GAGA,MAAAK,KACAlnE,EAAAgnE,KAAAz0D,EAAAs0D,IAEA,OAAA7mE,GAcA,QAAAonE,IAAA70D,EAAAm0D,EAAAC,EAAAC,GAWA,IAVA,GAAAC,IAAA,EACAC,EAAAv0D,EAAA3T,OACAyoE,GAAA,EACAN,EAAAJ,EAAA/nE,OACA0oE,GAAA,EACAC,EAAAb,EAAA9nE,OACAsoE,EAAAxK,GAAAoK,EAAAC,EAAA,GACA/mE,EAAAuG,GAAA2gE,EAAAK,GACAJ,GAAAP,IAEAC,EAAAK,GACAlnE,EAAA6mE,GAAAt0D,EAAAs0D,EAGA,KADA,GAAAxvB,GAAAwvB,IACAS,EAAAC,GACAvnE,EAAAq3C,EAAAiwB,GAAAZ,EAAAY,EAEA,QAAAD,EAAAN,IACAI,GAAAN,EAAAC,KACA9mE,EAAAq3C,EAAAsvB,EAAAU,IAAA90D,EAAAs0D,KAGA,OAAA7mE,GAWA,QAAAg0D,IAAApzC,EAAAy1B,GACA,GAAAh0C,IAAA,EACAzD,EAAAgiB,EAAAhiB,MAGA,KADAy3C,MAAA9vC,GAAA3H,MACAyD,EAAAzD,GACAy3C,EAAAh0C,GAAAue,EAAAve,EAEA,OAAAg0C,GAaA,QAAAmiB,IAAA53C,EAAApV,EAAAmtC,EAAAqgB,GACA,GAAAwO,IAAA7uB,CACAA,UAKA,KAHA,GAAAt2C,IAAA,EACAzD,EAAA4M,EAAA5M,SAEAyD,EAAAzD,GAAA,CACA,GAAAd,GAAA0N,EAAAnJ,GAEAo+D,EAAAzH,EACAA,EAAArgB,EAAA76C,GAAA8iB,EAAA9iB,KAAA66C,EAAA/3B,GACAnT,EAEAgzD,KAAAhzD,KACAgzD,EAAA7/C,EAAA9iB,IAEA0pE,EACAtP,GAAAvf,EAAA76C,EAAA2iE,GAEAtI,GAAAxf,EAAA76C,EAAA2iE,GAGA,MAAA9nB,GAWA,QAAA+gB,IAAA94C,EAAA+3B,GACA,MAAA6f,IAAA53C,EAAA6mD,GAAA7mD,GAAA+3B,GAWA,QAAA8gB,IAAA74C,EAAA+3B,GACA,MAAA6f,IAAA53C,EAAA8mD,GAAA9mD,GAAA+3B,GAWA,QAAAgvB,IAAAt9D,EAAAu9D,GACA,gBAAA7vB,EAAAzB,GACA,GAAAJ,GAAAvsC,GAAAouC,GAAA3B,EAAAiiB,GACA9hB,EAAAqxB,QAEA,OAAA1xB,GAAA6B,EAAA1tC,EAAA62D,GAAA5qB,EAAA,GAAAC,IAWA,QAAAsxB,IAAAC,GACA,MAAA1F,IAAA,SAAAzpB,EAAA71C,GACA,GAAAT,IAAA,EACAzD,EAAAkE,EAAAlE,OACAo6D,EAAAp6D,EAAA,EAAAkE,EAAAlE,EAAA,GAAA6O,GACAs6D,EAAAnpE,EAAA,EAAAkE,EAAA,GAAA2K,EAWA,KATAurD,EAAA8O,EAAAlpE,OAAA,qBAAAo6D,IACAp6D,IAAAo6D,GACAvrD,GAEAs6D,GAAAC,GAAAllE,EAAA,GAAAA,EAAA,GAAAilE,KACA/O,EAAAp6D,EAAA,EAAA6O,GAAAurD,EACAp6D,EAAA,GAEA+5C,EAAAh7C,GAAAg7C,KACAt2C,EAAAzD,GAAA,CACA,GAAAgiB,GAAA9d,EAAAT,EACAue,IACAknD,EAAAnvB,EAAA/3B,EAAAve,EAAA22D,GAGA,MAAArgB,KAYA,QAAAsvB,IAAAjwB,EAAAG,GACA,gBAAAJ,EAAAzB,GACA,SAAAyB,EACA,MAAAA,EAEA,KAAAioB,GAAAjoB,GACA,MAAAC,GAAAD,EAAAzB,EAMA,KAJA,GAAA13C,GAAAm5C,EAAAn5C,OACAyD,EAAA81C,EAAAv5C,GAAA,EACAspE,EAAAvqE,GAAAo6C,IAEAI,EAAA91C,QAAAzD,IACA03C,EAAA4xB,EAAA7lE,KAAA6lE,MAAA,IAIA,MAAAnwB,IAWA,QAAAowB,IAAAhwB,GACA,gBAAAQ,EAAArC,EAAAujB,GAMA,IALA,GAAAx3D,IAAA,EACA6lE,EAAAvqE,GAAAg7C,GACAntC,EAAAquD,EAAAlhB,GACA/5C,EAAA4M,EAAA5M,OAEAA,KAAA,CACA,GAAAd,GAAA0N,EAAA2sC,EAAAv5C,IAAAyD,EACA,IAAAi0C,EAAA4xB,EAAApqE,KAAAoqE,MAAA,EACA,MAGA,MAAAvvB,IAcA,QAAAyvB,IAAAlyB,EAAA6iB,EAAA5iB,GAIA,QAAAkyB,KAEA,OADApqE,aAAAwjC,IAAAxjC,eAAAoqE,GAAA9/D,EAAA2tC,GACAhwC,MAAAoiE,EAAAnyB,EAAAl4C,KAAAgI,WALA,GAAAqiE,GAAAvP,EAAAhd,GACAxzC,EAAAggE,GAAAryB,EAMA,OAAAmyB,GAUA,QAAAG,IAAAC,GACA,gBAAA9wB,GACAA,EAAA53C,GAAA43C,EAEA,IAAA4B,GAAAM,EAAAlC,GACAoD,GAAApD,GACAlqC,GAEAojB,EAAA0oB,EACAA,EAAA,GACA5B,EAAAppB,OAAA,GAEAm6C,EAAAnvB,EACAwrB,GAAAxrB,EAAA,GAAAt5C,KAAA,IACA03C,EAAAhzB,MAAA,EAEA,OAAAkM,GAAA43C,KAAAC,GAWA,QAAAC,IAAA/rD,GACA,gBAAA+6B,GACA,MAAAL,GAAAsxB,GAAAC,GAAAlxB,GAAA7iB,QAAAovB,GAAA,KAAAtnC,EAAA,KAYA,QAAA2rD,IAAAhgE,GACA,kBAIA,GAAAgK,GAAAtM,SACA,QAAAsM,EAAA3T,QACA,iBAAA2J,EACA,kBAAAA,GAAAgK,EAAA,GACA,kBAAAhK,GAAAgK,EAAA,GAAAA,EAAA,GACA,kBAAAhK,GAAAgK,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAAhK,GAAAgK,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAAhK,GAAAgK,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAAhK,GAAAgK,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAAhK,GAAAgK,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,GAAAu2D,GAAAC,GAAAxgE,EAAAmE,WACA1M,EAAAuI,EAAArC,MAAA4iE,EAAAv2D,EAIA,OAAA5L,IAAA3G,KAAA8oE,GAaA,QAAAE,IAAA9yB,EAAA6iB,EAAAkQ,GAGA,QAAAZ,KAMA,IALA,GAAAzpE,GAAAqH,UAAArH,OACA2T,EAAAhM,GAAA3H,GACAyD,EAAAzD,EACAy8B,EAAA6tC,GAAAb,GAEAhmE,KACAkQ,EAAAlQ,GAAA4D,UAAA5D,EAEA,IAAAskE,GAAA/nE,EAAA,GAAA2T,EAAA,KAAA8oB,GAAA9oB,EAAA3T,EAAA,KAAAy8B,KAEAkf,EAAAhoC,EAAA8oB,EAGA,QADAz8B,GAAA+nE,EAAA/nE,QACAqqE,EACAE,GACAjzB,EAAA6iB,EAAAqQ,GAAAf,EAAAhtC,YAAA5tB,GACA8E,EAAAo0D,EAAAl5D,MAAAw7D,EAAArqE,GAGAsH,EADAjI,aAAAwjC,IAAAxjC,eAAAoqE,GAAA9/D,EAAA2tC,EACAj4C,KAAAsU,GAtBA,GAAAhK,GAAAggE,GAAAryB,EAwBA,OAAAmyB,GAUA,QAAAgB,IAAAC,GACA,gBAAAvxB,EAAApB,EAAAuB,GACA,GAAAgwB,GAAAvqE,GAAAo6C,EACA,KAAAioB,GAAAjoB,GAAA,CACA,GAAAzB,GAAA4qB,GAAAvqB,EAAA,EACAoB,GAAAn6C,GAAAm6C,GACApB,EAAA,SAAA74C,GAAqC,MAAAw4C,GAAA4xB,EAAApqE,KAAAoqE,IAErC,GAAA7lE,GAAAinE,EAAAvxB,EAAApB,EAAAuB,EACA,OAAA71C,IAAA,EAAA6lE,EAAA5xB,EAAAyB,EAAA11C,MAAAoL,IAWA,QAAA87D,IAAApxB,GACA,MAAAqxB,IAAA,SAAAC,GACA,GAAA7qE,GAAA6qE,EAAA7qE,OACAyD,EAAAzD,EACA8qE,EAAAzW,EAAAvmD,UAAAi9D,IAKA,KAHAxxB,GACAsxB,EAAAG,UAEAvnE,KAAA,CACA,GAAA6zC,GAAAuzB,EAAApnE,EACA,sBAAA6zC,GACA,SAAAmkB,IAAA9e,GAEA,IAAAmuB,IAAArB,GAAA,WAAAwB,GAAA3zB,GACA,GAAAmyB,GAAA,GAAApV,OAAA,GAIA,IADA5wD,EAAAgmE,EAAAhmE,EAAAzD,IACAyD,EAAAzD,GAAA,CACAs3C,EAAAuzB,EAAApnE,EAEA,IAAAynE,GAAAD,GAAA3zB,GACAnnC,EAAA,WAAA+6D,EAAAC,GAAA7zB,GAAAzoC,EAMA46D,GAJAt5D,GAAAi7D,GAAAj7D,EAAA,KACAA,EAAA,KAAAutC,GAAAJ,GAAAE,GAAAG,MACAxtC,EAAA,GAAAnQ,QAAA,GAAAmQ,EAAA,GAEAs5D,EAAAwB,GAAA96D,EAAA,KAAA7I,MAAAmiE,EAAAt5D,EAAA,IAEA,GAAAmnC,EAAAt3C,QAAAorE,GAAA9zB,GACAmyB,EAAAyB,KACAzB,EAAAsB,KAAAzzB,GAGA,kBACA,GAAA3jC,GAAAtM,UACAP,EAAA6M,EAAA,EAEA,IAAA81D,GAAA,GAAA91D,EAAA3T,QAAA+K,GAAAjE,GACA,MAAA2iE,GAAA4B,MAAAvkE,UAKA,KAHA,GAAArD,GAAA,EACArC,EAAApB,EAAA6qE,EAAApnE,GAAA6D,MAAAjI,KAAAsU,GAAA7M,IAEArD,EAAAzD,GACAoB,EAAAypE,EAAApnE,GAAAmD,KAAAvH,KAAA+B,EAEA,OAAAA,MAwBA,QAAAopE,IAAAlzB,EAAA6iB,EAAA5iB,EAAAuwB,EAAAC,EAAAuD,EAAAC,EAAAC,EAAAC,EAAApB,GAQA,QAAAZ,KAKA,IAJA,GAAAzpE,GAAAqH,UAAArH,OACA2T,EAAAhM,GAAA3H,GACAyD,EAAAzD,EAEAyD,KACAkQ,EAAAlQ,GAAA4D,UAAA5D,EAEA,IAAAukE,EACA,GAAAvrC,GAAA6tC,GAAAb,GACAiC,EAAA5wB,EAAAnnC,EAAA8oB,EASA,IAPAqrC,IACAn0D,EAAAk0D,GAAAl0D,EAAAm0D,EAAAC,EAAAC,IAEAsD,IACA33D,EAAA60D,GAAA70D,EAAA23D,EAAAC,EAAAvD,IAEAhoE,GAAA0rE,EACA1D,GAAAhoE,EAAAqqE,EAAA,CACA,GAAAsB,GAAAhwB,EAAAhoC,EAAA8oB,EACA,OAAA8tC,IACAjzB,EAAA6iB,EAAAqQ,GAAAf,EAAAhtC,YAAA8a,EACA5jC,EAAAg4D,EAAAH,EAAAC,EAAApB,EAAArqE,GAGA,GAAAkqE,GAAAR,EAAAnyB,EAAAl4C,KACA2H,EAAA4kE,EAAA1B,EAAA5yB,IAcA,OAZAt3C,GAAA2T,EAAA3T,OACAwrE,EACA73D,EAAAk4D,GAAAl4D,EAAA63D,GACSM,GAAA9rE,EAAA,GACT2T,EAAAq3D,UAEAe,GAAAN,EAAAzrE,IACA2T,EAAA3T,OAAAyrE,GAEApsE,aAAAwjC,IAAAxjC,eAAAoqE,KACAziE,EAAA2C,GAAAggE,GAAA3iE,IAEAA,EAAAM,MAAA4iE,EAAAv2D,GAhDA,GAAAo4D,GAAA5R,EAAAzc,GACAgsB,EAAAvP,EAAAhd,GACAyuB,EAAAzR,EAAA/c,GACA4qB,EAAA7N,GAAA7c,GAAAC,IACAuuB,EAAA3R,EAAAvc,GACAj0C,EAAAiiE,EAAA/8D,GAAA86D,GAAAryB,EA6CA,OAAAmyB,GAWA,QAAAuC,IAAAvgE,EAAAwgE,GACA,gBAAAlyB,EAAArC,GACA,MAAA4mB,IAAAvkB,EAAAtuC,EAAAwgE,EAAAv0B,QAYA,QAAAw0B,IAAAC,EAAAC,GACA,gBAAAtlE,EAAA42D,GACA,GAAAt8D,EACA,IAAA0F,IAAA+H,IAAA6uD,IAAA7uD,GACA,MAAAu9D,EAKA,IAHAtlE,IAAA+H,KACAzN,EAAA0F,GAEA42D,IAAA7uD,GAAA,CACA,GAAAzN,IAAAyN,GACA,MAAA6uD,EAEA,iBAAA52D,IAAA,gBAAA42D,IACA52D,EAAAm+D,GAAAn+D,GACA42D,EAAAuH,GAAAvH,KAEA52D,EAAAk+D,GAAAl+D,GACA42D,EAAAsH,GAAAtH,IAEAt8D,EAAA+qE,EAAArlE,EAAA42D,GAEA,MAAAt8D,IAWA,QAAAirE,IAAAC,GACA,MAAA1B,IAAA,SAAAhV,GAEA,MADAA,GAAAtd,EAAAsd,EAAArb,EAAA+nB,OACAkB,GAAA,SAAA7vD,GACA,GAAA4jC,GAAAl4C,IACA,OAAAitE,GAAA1W,EAAA,SAAAle,GACA,MAAApwC,GAAAowC,EAAAH,EAAA5jC,SAeA,QAAA44D,IAAAvsE,EAAA0gC,GACAA,MAAA7xB,GAAA,IAAAo2D,GAAAvkC,EAEA,IAAA8rC,GAAA9rC,EAAA1gC,MACA,IAAAwsE,EAAA,EACA,MAAAA,GAAAjJ,GAAA7iC,EAAA1gC,GAAA0gC,CAEA,IAAAt/B,GAAAmiE,GAAA7iC,EAAA4iC,GAAAtjE,EAAAg8C,EAAAtb,IACA,OAAAua,GAAAva,GACAylC,GAAAhqB,GAAA/6C,GAAA,EAAApB,GAAAqB,KAAA,IACAD,EAAA2kB,MAAA,EAAA/lB,GAeA,QAAAysE,IAAAn1B,EAAA6iB,EAAA5iB,EAAAuwB,GAIA,QAAA2B,KAQA,IAPA,GAAAxB,IAAA,EACAC,EAAA7gE,UAAArH,OACAooE,GAAA,EACAC,EAAAP,EAAA9nE,OACA2T,EAAAhM,GAAA0gE,EAAAH,GACAlhE,EAAA3H,aAAAwjC,IAAAxjC,eAAAoqE,GAAA9/D,EAAA2tC,IAEA8wB,EAAAC,GACA10D,EAAAy0D,GAAAN,EAAAM,EAEA,MAAAF,KACAv0D,EAAAy0D,KAAA/gE,YAAA4gE,EAEA,OAAA3gE,GAAAN,EAAA0iE,EAAAnyB,EAAAl4C,KAAAsU,GAjBA,GAAA+1D,GAAAvP,EAAAhd,GACAxzC,EAAAggE,GAAAryB,EAkBA,OAAAmyB,GAUA,QAAAiD,IAAAnzB,GACA,gBAAA9xC,EAAA0vB,EAAAksC,GAaA,MAZAA,IAAA,gBAAAA,IAAA+F,GAAA3hE,EAAA0vB,EAAAksC,KACAlsC,EAAAksC,EAAAx0D,IAGApH,EAAAklE,GAAAllE,GACA0vB,IAAAtoB,IACAsoB,EAAA1vB,EACAA,EAAA,GAEA0vB,EAAAw1C,GAAAx1C,GAEAksC,MAAAx0D,GAAApH,EAAA0vB,EAAA,KAAAw1C,GAAAtJ,GACAD,GAAA37D,EAAA0vB,EAAAksC,EAAA9pB,IAWA,QAAAqzB,IAAAT,GACA,gBAAArlE,EAAA42D,GAKA,MAJA,gBAAA52D,IAAA,gBAAA42D,KACA52D,EAAAjB,GAAAiB,GACA42D,EAAA73D,GAAA63D,IAEAyO,EAAArlE,EAAA42D,IAqBA,QAAA6M,IAAAjzB,EAAA6iB,EAAA0S,EAAApwC,EAAA8a,EAAAuwB,EAAAC,EAAAyD,EAAAC,EAAApB,GACA,GAAAyC,GAAA3S,EAAA7c,GACAquB,EAAAmB,EAAA/E,EAAAl5D,GACAk+D,EAAAD,EAAAj+D,GAAAk5D,EACAiF,EAAAF,EAAAhF,EAAAj5D,GACAo+D,EAAAH,EAAAj+D,GAAAi5D,CAEA3N,IAAA2S,EAAAtvB,GAAAC,IACA0c,KAAA2S,EAAArvB,GAAAD,KAEAH,KACA8c,KAAAhd,GAAAC,IAEA,IAAA8vB,IACA51B,EAAA6iB,EAAA5iB,EAAAy1B,EAAArB,EAAAsB,EACAF,EAAAvB,EAAAC,EAAApB,GAGAjpE,EAAAyrE,EAAAvlE,MAAAuH,GAAAq+D,EAKA,OAJA9B,IAAA9zB,IACA61B,GAAA/rE,EAAA8rE,GAEA9rE,EAAAq7B,cACA2wC,GAAAhsE,EAAAk2C,EAAA6iB,GAUA,QAAAkT,IAAAxD,GACA,GAAAvyB,GAAAtrC,GAAA69D,EACA,iBAAAz4C,EAAAk8C,GAGA,GAFAl8C,EAAAvrB,GAAAurB,GACAk8C,EAAA,MAAAA,EAAA,EAAAvX,GAAAoG,GAAAmR,GAAA,KACA,CAGA,GAAAl2B,IAAAj2C,GAAAiwB,GAAA,KAAA9qB,MAAA,IAIA,OADA8wC,IAAAj2C,GAFAm2C,EAAAF,EAAA,SAAAA,EAAA,GAAAk2B,KAEA,KAAAhnE,MAAA,OACA8wC,EAAA,SAAAA,EAAA,GAAAk2B,IAEA,MAAAh2B,GAAAlmB,IAsBA,QAAAm8C,IAAAtS,GACA,gBAAAlhB,GACA,GAAA7pC,GAAAuqD,GAAA1gB,EACA,OAAA7pC,IAAAkvC,GACA5D,EAAAzB,GAEA7pC,GAAAyvC,GACA7D,EAAA/B,GAEAO,EAAAP,EAAAkhB,EAAAlhB,KA6BA,QAAAyzB,IAAAl2B,EAAA6iB,EAAA5iB,EAAAuwB,EAAAC,EAAAyD,EAAAC,EAAApB,GACA,GAAAuB,GAAAzR,EAAA/c,EACA,KAAAwuB,GAAA,kBAAAt0B,GACA,SAAAmkB,IAAA9e,GAEA,IAAA38C,GAAA8nE,IAAA9nE,OAAA,CASA,IARAA,IACAm6D,KAAA3c,GAAAC,IACAqqB,EAAAC,EAAAl5D,IAEA48D,MAAA58D,GAAA48D,EAAA3N,GAAA3B,GAAAsP,GAAA,GACApB,MAAAx7D,GAAAw7D,EAAAlO,GAAAkO,GACArqE,GAAA+nE,IAAA/nE,OAAA,EAEAm6D,EAAA1c,GAAA,CACA,GAAA6tB,GAAAxD,EACAyD,EAAAxD,CAEAD,GAAAC,EAAAl5D,GAEA,GAAAsB,GAAAy7D,EAAA/8D,GAAAs8D,GAAA7zB,GAEA41B,GACA51B,EAAA6iB,EAAA5iB,EAAAuwB,EAAAC,EAAAuD,EAAAC,EACAC,EAAAC,EAAApB,EAkBA,IAfAl6D,GACAhE,GAAA+gE,EAAA/8D,GAEAmnC,EAAA41B,EAAA,GACA/S,EAAA+S,EAAA,GACA31B,EAAA21B,EAAA,GACApF,EAAAoF,EAAA,GACAnF,EAAAmF,EAAA,GACA7C,EAAA6C,EAAA,GAAAA,EAAA,KAAAr+D,GACA+8D,EAAA,EAAAt0B,EAAAt3C,OACA89D,GAAAoP,EAAA,GAAAltE,EAAA,IAEAqqE,GAAAlQ,GAAA7c,GAAAC,MACA4c,KAAA7c,GAAAC,KAEA4c,MAAAhd,GAGA/7C,EADO+4D,GAAA7c,IAAA6c,GAAA5c,GACP6sB,GAAA9yB,EAAA6iB,EAAAkQ,GACOlQ,GAAA3c,IAAA2c,IAAAhd,GAAAK,KAAAuqB,EAAA/nE,OAGPwqE,GAAAljE,MAAAuH,GAAAq+D,GAFAT,GAAAn1B,EAAA6iB,EAAA5iB,EAAAuwB,OAJA,IAAA1mE,GAAAooE,GAAAlyB,EAAA6iB,EAAA5iB,EASA,OAAA61B,KADAj9D,EAAAs9D,GAAAN,IACA/rE,EAAA8rE,GAAA51B,EAAA6iB,GAeA,QAAAuT,IAAAlU,EAAAwG,EAAA9gE,EAAA66C,GACA,MAAAyf,KAAA3qD,IACAwqD,GAAAG,EAAAmU,GAAAzuE,MAAAyH,GAAAC,KAAAmzC,EAAA76C,GACA8gE,EAEAxG,EAiBA,QAAAoU,IAAApU,EAAAwG,EAAA9gE,EAAA66C,EAAA/3B,EAAA6d,GAOA,MANA93B,IAAAyxD,IAAAzxD,GAAAi4D,KAEAngC,EAAAn0B,IAAAs0D,EAAAxG,GACAkI,GAAAlI,EAAAwG,EAAAnxD,GAAA++D,GAAA/tC,GACAA,EAAA,OAAAmgC,IAEAxG,EAYA,QAAAqU,IAAA/mE,GACA,MAAAkB,IAAAlB,GAAA+H,GAAA/H,EAgBA,QAAAu4D,IAAA5nB,EAAAimB,EAAAvD,EAAAC,EAAAyE,EAAAh/B,GACA,GAAAiuC,GAAA3T,EAAAld,GACAwY,EAAAhe,EAAAz3C,OACAi+D,EAAAP,EAAA19D,MAEA,IAAAy1D,GAAAwI,KAAA6P,GAAA7P,EAAAxI,GACA,QAGA,IAAAuF,GAAAn7B,EAAA7+B,IAAAy2C,EACA,IAAAujB,GAAAn7B,EAAA7+B,IAAA08D,GACA,MAAA1C,IAAA0C,CAEA,IAAAj6D,IAAA,EACArC,GAAA,EACA0X,EAAAqhD,EAAAjd,GAAA,GAAA0a,IAAA/oD,EAMA,KAJAgxB,EAAAn0B,IAAA+rC,EAAAimB,GACA79B,EAAAn0B,IAAAgyD,EAAAjmB,KAGAh0C,EAAAgyD,GAAA,CACA,GAAAsY,GAAAt2B,EAAAh0C,GACAuqE,EAAAtQ,EAAAj6D,EAEA,IAAA22D,EACA,GAAA6T,GAAAH,EACA1T,EAAA4T,EAAAD,EAAAtqE,EAAAi6D,EAAAjmB,EAAA5X,GACAu6B,EAAA2T,EAAAC,EAAAvqE,EAAAg0C,EAAAimB,EAAA79B,EAEA,IAAAouC,IAAAp/D,GAAA,CACA,GAAAo/D,EACA,QAEA7sE,IAAA,CACA,OAGA,GAAA0X,GACA,IAAA+/B,EAAA6kB,EAAA,SAAAsQ,EAAA9P,GACA,IAAAzjB,EAAA3hC,EAAAolD,KACA6P,IAAAC,GAAAnP,EAAAkP,EAAAC,EAAA7T,EAAAC,EAAAv6B,IACA,MAAA/mB,GAAAtY,KAAA09D,KAEe,CACf98D,GAAA,CACA,YAES,IACT2sE,IAAAC,IACAnP,EAAAkP,EAAAC,EAAA7T,EAAAC,EAAAv6B,GACA,CACAz+B,GAAA,CACA,QAKA,MAFAy+B,GAAA,OAAA4X,GACA5X,EAAA,OAAA69B,GACAt8D,EAoBA,QAAAk+D,IAAAvlB,EAAA2jB,EAAAxtD,EAAAiqD,EAAAC,EAAAyE,EAAAh/B,GACA,OAAA3vB,GACA,IAAAgwC,IACA,GAAAnG,EAAA0sB,YAAA/I,EAAA+I,YACA1sB,EAAA8sB,YAAAnJ,EAAAmJ,WACA,QAEA9sB,KAAAqsB,OACA1I,IAAA0I,MAEA,KAAAnmB,IACA,QAAAlG,EAAA0sB,YAAA/I,EAAA+I,aACA5H,EAAA,GAAA6H,IAAA3sB,GAAA,GAAA2sB,IAAAhJ,IAKA,KAAA5e,IACA,IAAAC,IACA,IAAAM,IAGA,MAAAga,KAAAtf,GAAA2jB,EAEA,KAAAze,IACA,MAAAlF,GAAAltC,MAAA6wD,EAAA7wD,MAAAktC,EAAAm0B,SAAAxQ,EAAAwQ,OAEA,KAAAxuB,IACA,IAAAE,IAIA,MAAA7F,IAAA2jB,EAAA,EAEA,KAAAte,IACA,GAAA+uB,GAAA3yB,CAEA,KAAAmE,IACA,GAAAmuB,GAAA3T,EAAAld,EAGA,IAFAkxB,MAAAtyB,GAEA9B,EAAA0B,MAAAiiB,EAAAjiB,OAAAqyB,EACA,QAGA,IAAA9S,GAAAn7B,EAAA7+B,IAAA+4C,EACA,IAAAihB,EACA,MAAAA,IAAA0C,CAEAvD,IAAAjd,GAGArd,EAAAn0B,IAAAquC,EAAA2jB,EACA,IAAAt8D,GAAAi+D,GAAA8O,EAAAp0B,GAAAo0B,EAAAzQ,GAAAvD,EAAAC,EAAAyE,EAAAh/B,EAEA,OADAA,GAAA,OAAAka,GACA34C,CAEA,KAAAy+C,IACA,GAAAwnB,GACA,MAAAA,IAAAzgE,KAAAmzC,IAAAstB,GAAAzgE,KAAA82D,GAGA,SAgBA,QAAAiC,IAAA5lB,EAAA2jB,EAAAvD,EAAAC,EAAAyE,EAAAh/B,GACA,GAAAiuC,GAAA3T,EAAAld,GACAmxB,EAAAjT,GAAAphB,GACAs0B,EAAAD,EAAApuE,MAIA,IAAAquE,GAHAlT,GAAAuC,GACA19D,SAEA8tE,EACA,QAGA,KADA,GAAArqE,GAAA4qE,EACA5qE,KAAA,CACA,GAAAvE,GAAAkvE,EAAA3qE,EACA,MAAAqqE,EAAA5uE,IAAAw+D,GAAA/2D,GAAAC,KAAA82D,EAAAx+D,IACA,SAIA,GAAA87D,GAAAn7B,EAAA7+B,IAAA+4C,EACA,IAAAihB,GAAAn7B,EAAA7+B,IAAA08D,GACA,MAAA1C,IAAA0C,CAEA,IAAAt8D,IAAA,CACAy+B,GAAAn0B,IAAAquC,EAAA2jB,GACA79B,EAAAn0B,IAAAgyD,EAAA3jB,EAGA,KADA,GAAAu0B,GAAAR,IACArqE,EAAA4qE,GAAA,CACAnvE,EAAAkvE,EAAA3qE,EACA,IAAA+1D,GAAAzf,EAAA76C,GACA8uE,EAAAtQ,EAAAx+D,EAEA,IAAAk7D,EACA,GAAA6T,GAAAH,EACA1T,EAAA4T,EAAAxU,EAAAt6D,EAAAw+D,EAAA3jB,EAAAla,GACAu6B,EAAAZ,EAAAwU,EAAA9uE,EAAA66C,EAAA2jB,EAAA79B,EAGA,MAAAouC,IAAAp/D,GACA2qD,IAAAwU,GAAAnP,EAAArF,EAAAwU,EAAA7T,EAAAC,EAAAv6B,GACAouC,GACA,CACA7sE,GAAA,CACA,OAEAktE,MAAA,eAAApvE,GAEA,GAAAkC,IAAAktE,EAAA,CACA,GAAAC,GAAAx0B,EAAAz3B,YACAksD,EAAA9Q,EAAAp7C,WAGAisD,IAAAC,GACA,eAAAz0B,IAAA,eAAA2jB,MACA,kBAAA6Q,oBACA,kBAAAC,sBACAptE,GAAA,GAKA,MAFAy+B,GAAA,OAAAka,GACAla,EAAA,OAAA69B,GACAt8D,EAUA,QAAAwpE,IAAAtzB,GACA,MAAAmsB,IAAAC,GAAApsB,EAAAzoC,GAAA4/D,IAAAn3B,EAAA,IAUA,QAAA6jB,IAAAphB,GACA,MAAAojB,IAAApjB,EAAA/6C,GAAA6pE,IAWA,QAAA3N,IAAAnhB,GACA,MAAAojB,IAAApjB,EAAA+f,GAAAgP,IAqBA,QAAAmC,IAAA3zB,GAKA,IAJA,GAAAl2C,GAAAk2C,EAAAzqC,KAAA,GACA4qC,EAAAi3B,GAAAttE,GACApB,EAAA2G,GAAAC,KAAA8nE,GAAAttE,GAAAq2C,EAAAz3C,OAAA,EAEAA,KAAA,CACA,GAAAmQ,GAAAsnC,EAAAz3C,GACA2uE,EAAAx+D,EAAAmnC,IACA,UAAAq3B,MAAAr3B,EACA,MAAAnnC,GAAAtD,KAGA,MAAAzL,GAUA,QAAAkpE,IAAAhzB,GAEA,OADA3wC,GAAAC,KAAAstD,EAAA,eAAAA,EAAA5c,GACA7a,YAcA,QAAA6lC,MACA,GAAAlhE,GAAA8yD,EAAAxc,YAEA,OADAt2C,OAAAs2C,GAAA+oB,GAAAr/D,EACAiG,UAAArH,OAAAoB,EAAAiG,UAAA,GAAAA,UAAA,IAAAjG,EAWA,QAAAo2D,IAAApxD,EAAAlH,GACA,GAAAiR,GAAA/J,EAAAmwD,QACA,OAAAqY,IAAA1vE,GACAiR,EAAA,gBAAAjR,GAAA,iBACAiR,EAAA/J,IAUA,QAAAi7D,IAAAtnB,GAIA,IAHA,GAAA34C,GAAApC,GAAA+6C,GACA/5C,EAAAoB,EAAApB,OAEAA,KAAA,CACA,GAAAd,GAAAkC,EAAApB,GACA8G,EAAAizC,EAAA76C,EAEAkC,GAAApB,IAAAd,EAAA4H,EAAA06D,GAAA16D,IAEA,MAAA1F,GAWA,QAAAytE,IAAA90B,EAAA76C,GACA,GAAA4H,GAAA40B,EAAAqe,EAAA76C,EACA,OAAA+gE,IAAAn5D,KAAA+H,GAUA,QAAA0uD,IAAAz2D,GACA,GAAAgoE,GAAAnoE,GAAAC,KAAAE,EAAAw2D,IACAptD,EAAApJ,EAAAw2D,GAEA,KACAx2D,EAAAw2D,IAAAzuD,EACA,IAAAkgE,IAAA,EACO,MAAAvvE,IAEP,GAAA4B,GAAA4tE,GAAApoE,KAAAE,EAQA,OAPAioE,KACAD,EACAhoE,EAAAw2D,IAAAptD,QAEApJ,GAAAw2D,KAGAl8D,EA+EA,QAAAu0D,IAAAluD,EAAA0vB,EAAAwL,GAIA,IAHA,GAAAl/B,IAAA,EACAzD,EAAA2iC,EAAA3iC,SAEAyD,EAAAzD,GAAA,CACA,GAAAmQ,GAAAwyB,EAAAl/B,GACAg4C,EAAAtrC,EAAAsrC,IAEA,QAAAtrC,EAAA3R,MACA,WAAAiJ,GAAAg0C,CAA0C,MAC1C,iBAAAtkB,GAAAskB,CAAwC,MACxC,YAAAtkB,EAAA4+B,GAAA5+B,EAAA1vB,EAAAg0C,EAA+D,MAC/D,iBAAAh0C,EAAAq2D,GAAAr2D,EAAA0vB,EAAAskB,IAGA,OAAch0C,QAAA0vB,OAUd,QAAA83C,IAAAjtD,GACA,GAAA7S,GAAA6S,EAAA7S,MAAA6yC,GACA,OAAA7yC,KAAA,GAAA7I,MAAA27C,OAYA,QAAAitB,IAAAn1B,EAAAxwC,EAAA4lE,GACA5lE,EAAA0zD,GAAA1zD,EAAAwwC,EAMA,KAJA,GAAAt2C,IAAA,EACAzD,EAAAuJ,EAAAvJ,OACAoB,GAAA,IAEAqC,EAAAzD,GAAA,CACA,GAAAd,GAAAg+D,GAAA3zD,EAAA9F,GACA,MAAArC,EAAA,MAAA24C,GAAAo1B,EAAAp1B,EAAA76C,IACA,KAEA66C,KAAA76C,GAEA,MAAAkC,MAAAqC,GAAAzD,EACAoB,KAEApB,EAAA,MAAA+5C,EAAA,EAAAA,EAAA/5C,SACAwgE,GAAAxgE,IAAA64D,GAAA35D,EAAAc,KACA+K,GAAAgvC,IAAA0e,GAAA1e,IAUA,QAAAygB,IAAA/iB,GACA,GAAAz3C,GAAAy3C,EAAAz3C,OACAoB,EAAAq2C,EAAAn1B,YAAAtiB,EAOA,OAJAA,IAAA,gBAAAy3C,GAAA,IAAA9wC,GAAAC,KAAA6wC,EAAA,WACAr2C,EAAAqC,MAAAg0C,EAAAh0C,MACArC,EAAAguE,MAAA33B,EAAA23B,OAEAhuE,EAUA,QAAAw5D,IAAA7gB,GACA,wBAAAA,GAAAz3B,aAAAu+C,GAAA9mB,MACAowB,GAAAkF,GAAAt1B,IAiBA,QAAAghB,IAAAhhB,EAAA7pC,EAAA62D,EAAA1M,GACA,GAAA1wD,GAAAowC,EAAAz3B,WACA,QAAApS,GACA,IAAA+vC,IACA,MAAAsmB,IAAAxsB,EAEA,KAAA+E,IACA,IAAAC,IACA,UAAAp1C,IAAAowC,EAEA,KAAAmG,IACA,MAAAymB,IAAA5sB,EAAAsgB,EAEA,KAAAla,IAAA,IAAAC,IACA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IACA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IACA,MAAAshB,IAAAloB,EAAAsgB,EAEA,KAAAjb,IACA,MAAA0nB,IAAA/sB,EAAAsgB,EAAA0M,EAEA,KAAA1nB,IACA,IAAAO,IACA,UAAAj2C,GAAAowC,EAEA,KAAA2F,IACA,MAAAsnB,IAAAjtB,EAEA,KAAA4F,IACA,MAAAunB,IAAAntB,EAAAsgB,EAAA0M,EAEA,KAAAlnB,IACA,MAAAsnB,IAAAptB,IAYA,QAAAu1B,IAAAttD,EAAAutD,GACA,GAAAvvE,GAAAuvE,EAAAvvE,MACA,KAAAA,EACA,MAAAgiB,EAEA,IAAA4f,GAAA5hC,EAAA,CAGA,OAFAuvE,GAAA3tC,IAAA5hC,EAAA,WAAAuvE,EAAA3tC,GACA2tC,IAAAluE,KAAArB,EAAA,YACAgiB,EAAAkU,QAAA6rB,GAAA,uBAA6CwtB,EAAA,UAU7C,QAAA9S,IAAA31D,GACA,MAAAiE,IAAAjE,IAAA2xD,GAAA3xD,OACA0oE,IAAA1oE,KAAA0oE,KAWA,QAAA3W,IAAA/xD,EAAA9G,GAEA,SADAA,EAAA,MAAAA,EAAAq+C,GAAAr+C,KAEA,gBAAA8G,IAAA27C,GAAA39C,KAAAgC,KACAA,GAAA,GAAAA,EAAA,MAAAA,EAAA9G,EAaA,QAAAopE,IAAAtiE,EAAArD,EAAAs2C,GACA,IAAAhyC,GAAAgyC,GACA,QAEA,IAAAv7C,SAAAiF,EACA,oBAAAjF,EACA4iE,GAAArnB,IAAA8e,GAAAp1D,EAAAs2C,EAAA/5C,QACA,UAAAxB,GAAAiF,IAAAs2C,KAEAsf,GAAAtf,EAAAt2C,GAAAqD,GAaA,QAAAy6D,IAAAz6D,EAAAizC,GACA,GAAAhvC,GAAAjE,GACA,QAEA,IAAAtI,SAAAsI,EACA,mBAAAtI,GAAA,UAAAA,GAAA,WAAAA,GACA,MAAAsI,IAAAm1D,GAAAn1D,MAGAy6C,GAAAz8C,KAAAgC,KAAAw6C,GAAAx8C,KAAAgC,IACA,MAAAizC,GAAAjzC,IAAA/H,IAAAg7C,IAUA,QAAA60B,IAAA9nE,GACA,GAAAtI,SAAAsI,EACA,iBAAAtI,GAAA,UAAAA,GAAA,UAAAA,GAAA,WAAAA,EACA,cAAAsI,EACA,OAAAA,EAWA,QAAAskE,IAAA9zB,GACA,GAAA4zB,GAAAD,GAAA3zB,GACAomB,EAAAxJ,EAAAgX,EAEA,sBAAAxN,MAAAwN,IAAA9W,GAAAtmD,WACA,QAEA,IAAAwpC,IAAAomB,EACA,QAEA,IAAAvtD,GAAAg7D,GAAAzN,EACA,SAAAvtD,GAAAmnC,IAAAnnC,EAAA,GAUA,QAAA+vD,IAAA5oB,GACA,QAAAm4B,SAAAn4B,GAmBA,QAAAupB,IAAA/5D,GACA,GAAA6C,GAAA7C,KAAAwb,WAGA,OAAAxb,MAFA,kBAAA6C,MAAAmE,WAAA6/D,IAaA,QAAAnM,IAAA16D,GACA,MAAAA,SAAAiB,GAAAjB,GAYA,QAAAw6D,IAAApiE,EAAA8gE,GACA,gBAAAjmB,GACA,aAAAA,IAGAA,EAAA76C,KAAA8gE,IACAA,IAAAnxD,IAAA3P,IAAAH,IAAAg7C,MAYA,QAAA21B,IAAAp4B,GACA,GAAAl2C,GAAAuuE,GAAAr4B,EAAA,SAAAp4C,GAIA,MAHA+H,GAAAw0C,OAAAoB,IACA51C,EAAA2R,QAEA1Z,IAGA+H,EAAA7F,EAAA6F,KACA,OAAA7F,GAmBA,QAAA+K,IAAAgE,EAAA6R,GACA,GAAAm4C,GAAAhqD,EAAA,GACAy/D,EAAA5tD,EAAA,GACA6tD,EAAA1V,EAAAyV,EACAhU,EAAAiU,GAAA1yB,GAAAC,GAAAM,IAEAoyB,EACAF,GAAAlyB,IAAAyc,GAAA7c,IACAsyB,GAAAlyB,IAAAyc,GAAAxc,IAAAxtC,EAAA,GAAAnQ,QAAAgiB,EAAA,IACA4tD,IAAAlyB,GAAAC,KAAA37B,EAAA,GAAAhiB,QAAAgiB,EAAA,IAAAm4C,GAAA7c,EAGA,KAAAse,IAAAkU,EACA,MAAA3/D,EAGAy/D,GAAAzyB,KACAhtC,EAAA,GAAA6R,EAAA,GAEA6tD,GAAA1V,EAAAhd,GAAA,EAAAE,GAGA,IAAAv2C,GAAAkb,EAAA,EACA,IAAAlb,EAAA,CACA,GAAAghE,GAAA33D,EAAA,EACAA,GAAA,GAAA23D,EAAAD,GAAAC,EAAAhhE,EAAAkb,EAAA,IAAAlb,EACAqJ,EAAA,GAAA23D,EAAAnsB,EAAAxrC,EAAA,GAAAyrC,IAAA55B,EAAA,GA0BA,MAvBAlb,GAAAkb,EAAA,GACAlb,IACAghE,EAAA33D,EAAA,GACAA,EAAA,GAAA23D,EAAAU,GAAAV,EAAAhhE,EAAAkb,EAAA,IAAAlb,EACAqJ,EAAA,GAAA23D,EAAAnsB,EAAAxrC,EAAA,GAAAyrC,IAAA55B,EAAA,IAGAlb,EAAAkb,EAAA,GACAlb,IACAqJ,EAAA,GAAArJ,GAGA8oE,EAAAlyB,KACAvtC,EAAA,SAAAA,EAAA,GAAA6R,EAAA,GAAA+zC,GAAA5lD,EAAA,GAAA6R,EAAA,KAGA,MAAA7R,EAAA,KACAA,EAAA,GAAA6R,EAAA,IAGA7R,EAAA,GAAA6R,EAAA,GACA7R,EAAA,GAAA0/D,EAEA1/D,EAYA,QAAA6wD,IAAAjnB,GACA,GAAA34C,KACA,UAAA24C,EACA,OAAA76C,KAAAH,IAAAg7C,GACA34C,EAAAZ,KAAAtB,EAGA,OAAAkC,GAUA,QAAAo8D,IAAA12D,GACA,MAAAkoE,IAAApoE,KAAAE,GAYA,QAAA48D,IAAApsB,EAAA7vC,EAAAk2B,GAEA,MADAl2B,GAAAq2D,GAAAr2D,IAAAoH,GAAAyoC,EAAAt3C,OAAA,EAAAyH,EAAA,GACA,WAMA,IALA,GAAAkM,GAAAtM,UACA5D,GAAA,EACAzD,EAAA89D,GAAAnqD,EAAA3T,OAAAyH,EAAA,GACAgwC,EAAA9vC,GAAA3H,KAEAyD,EAAAzD,GACAy3C,EAAAh0C,GAAAkQ,EAAAlM,EAAAhE,EAEAA,IAAA,CAEA,KADA,GAAAssE,GAAApoE,GAAAF,EAAA,KACAhE,EAAAgE,GACAsoE,EAAAtsE,GAAAkQ,EAAAlQ,EAGA,OADAssE,GAAAtoE,GAAAk2B,EAAA8Z,GACAnwC,EAAAgwC,EAAAj4C,KAAA0wE,IAYA,QAAA5iE,IAAA4sC,EAAAxwC,GACA,MAAAA,GAAAvJ,OAAA,EAAA+5C,EAAAijB,GAAAjjB,EAAA+pB,GAAAv6D,EAAA,OAaA,QAAAsiE,IAAAp0B,EAAAsrB,GAKA,IAJA,GAAAtN,GAAAhe,EAAAz3C,OACAA,EAAA+1D,GAAAgN,EAAA/iE,OAAAy1D,GACAua,EAAA5a,GAAA3d,GAEAz3C,KAAA,CACA,GAAAyD,GAAAs/D,EAAA/iE,EACAy3C,GAAAz3C,GAAA64D,GAAAp1D,EAAAgyD,GAAAua,EAAAvsE,GAAAoL,GAEA,MAAA4oC,GAmDA,QAAA21B,IAAA3D,EAAAwG,EAAA9V,GACA,GAAAn4C,GAAAiuD,EAAA,EACA,OAAAxM,IAAAgG,EAAA6F,GAAAttD,EAAAkuD,GAAAjB,GAAAjtD,GAAAm4C,KAYA,QAAAgW,IAAA74B,GACA,GAAA84B,GAAA,EACAC,EAAA,CAEA,mBACA,GAAAC,GAAAC,KACAC,EAAAxyB,IAAAsyB,EAAAD,EAGA,IADAA,EAAAC,EACAE,EAAA,GACA,KAAAJ,GAAAryB,GACA,MAAA12C,WAAA,OAGA+oE,GAAA,CAEA,OAAA94B,GAAAhwC,MAAAuH,GAAAxH,YAYA,QAAA4xD,IAAAxhB,EAAAgE,GACA,GAAAh4C,IAAA,EACAzD,EAAAy3C,EAAAz3C,OACA4hC,EAAA5hC,EAAA,CAGA,KADAy7C,MAAA5sC,GAAA7O,EAAAy7C,IACAh4C,EAAAg4C,GAAA,CACA,GAAAg1B,GAAA1X,GAAAt1D,EAAAm+B,GACA96B,EAAA2wC,EAAAg5B,EAEAh5B,GAAAg5B,GAAAh5B,EAAAh0C,GACAg0C,EAAAh0C,GAAAqD,EAGA,MADA2wC,GAAAz3C,OAAAy7C,EACAhE,EA4BA,QAAAylB,IAAAp2D,GACA,mBAAAA,IAAAm1D,GAAAn1D,GACA,MAAAA,EAEA,IAAA1F,GAAA0F,EAAA,EACA,YAAA1F,GAAA,EAAA0F,IAAAs3C,GAAA,KAAAh9C,EAUA,QAAAg/D,IAAA9oB,GACA,SAAAA,EAAA,CACA,IACA,MAAAo5B,IAAA9pE,KAAA0wC,GACS,MAAA93C,IACT,IACA,MAAA83C,GAAA,GACS,MAAA93C,KAET,SAWA,QAAA0wE,IAAAX,EAAApV,GAOA,MANAviB,GAAA8G,GAAA,SAAAtH,GACA,GAAAtwC,GAAA,KAAAswC,EAAA,EACA+iB,GAAA/iB,EAAA,KAAAc,EAAAq3B,EAAAzoE,IACAyoE,EAAA/uE,KAAAsG,KAGAyoE,EAAAn3D,OAUA,QAAAk8C,IAAAmV,GACA,GAAAA,YAAArV,GACA,MAAAqV,GAAA90B,OAEA,IAAAvzC,GAAA,GAAAizD,GAAAoV,EAAAhV,YAAAgV,EAAA9U,UAIA,OAHAvzD,GAAAszD,YAAAU,GAAAqU,EAAA/U,aACAtzD,EAAAwzD,UAAA6U,EAAA7U,UACAxzD,EAAAyzD,WAAA4U,EAAA5U,WACAzzD,EA0BA,QAAAuvE,IAAAl5B,EAAAgE,EAAA0tB,GAEA1tB,GADA0tB,EAAAC,GAAA3xB,EAAAgE,EAAA0tB,GAAA1tB,IAAA5sC,IACA,EAEAivD,GAAA3B,GAAA1gB,GAAA,EAEA,IAAAz7C,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MACA,KAAAA,GAAAy7C,EAAA,EACA,QAMA,KAJA,GAAAh4C,GAAA,EACAw0C,EAAA,EACA72C,EAAAuG,GAAA27D,GAAAtjE,EAAAy7C,IAEAh4C,EAAAzD,GACAoB,EAAA62C,KAAA6rB,GAAArsB,EAAAh0C,KAAAg4C,EAEA,OAAAr6C,GAkBA,QAAAwvE,IAAAn5B,GAMA,IALA,GAAAh0C,IAAA,EACAzD,EAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,OACAi4C,EAAA,EACA72C,OAEAqC,EAAAzD,GAAA,CACA,GAAA8G,GAAA2wC,EAAAh0C,EACAqD,KACA1F,EAAA62C,KAAAnxC,GAGA,MAAA1F,GAyBA,QAAAmH,MACA,GAAAvI,GAAAqH,UAAArH,MACA,KAAAA,EACA,QAMA,KAJA,GAAA2T,GAAAhM,GAAA3H,EAAA,GACAy3C,EAAApwC,UAAA,GACA5D,EAAAzD,EAEAyD,KACAkQ,EAAAlQ,EAAA,GAAA4D,UAAA5D,EAEA,OAAA80C,GAAAxtC,GAAA0sC,GAAA2d,GAAA3d,OAAA6kB,GAAA3oD,EAAA,IA4HA,QAAAk9D,IAAAp5B,EAAA3xC,EAAAqjE,GACA,GAAAnpE,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MACA,OAAAA,IAGA8F,EAAAqjE,GAAArjE,IAAA+I,GAAA,EAAAstD,GAAAr2D,GACAg+D,GAAArsB,EAAA3xC,EAAA,IAAAA,EAAA9F,OA4BA,QAAA8wE,IAAAr5B,EAAA3xC,EAAAqjE,GACA,GAAAnpE,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MACA,OAAAA,IAGA8F,EAAAqjE,GAAArjE,IAAA+I,GAAA,EAAAstD,GAAAr2D,GACAA,EAAA9F,EAAA8F,EACAg+D,GAAArsB,EAAA,EAAA3xC,EAAA,IAAAA,OAsCA,QAAAirE,IAAAt5B,EAAAM,GACA,MAAAN,MAAAz3C,OACAwlE,GAAA/tB,EAAA6qB,GAAAvqB,EAAA,aAuCA,QAAAi5B,IAAAv5B,EAAAM,GACA,MAAAN,MAAAz3C,OACAwlE,GAAA/tB,EAAA6qB,GAAAvqB,EAAA,UAiCA,QAAAk5B,IAAAx5B,EAAA3wC,EAAAW,EAAA0vB,GACA,GAAAn3B,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MACA,OAAAA,IAGAyH,GAAA,gBAAAA,IAAA2hE,GAAA3xB,EAAA3wC,EAAAW,KACAA,EAAA,EACA0vB,EAAAn3B,GAEAk8D,GAAAzkB,EAAA3wC,EAAAW,EAAA0vB,OAsCA,QAAA+5C,IAAAz5B,EAAAM,EAAAuB,GACA,GAAAt5C,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MACA,KAAAA,EACA,QAEA,IAAAyD,GAAA,MAAA61C,EAAA,EAAA6iB,GAAA7iB,EAIA,OAHA71C,GAAA,IACAA,EAAAq6D,GAAA99D,EAAAyD,EAAA,IAEA41C,EAAA5B,EAAA6qB,GAAAvqB,EAAA,GAAAt0C,GAsCA,QAAA0tE,IAAA15B,EAAAM,EAAAuB,GACA,GAAAt5C,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MACA,KAAAA,EACA,QAEA,IAAAyD,GAAAzD,EAAA,CAOA,OANAs5C,KAAAzqC,KACApL,EAAA04D,GAAA7iB,GACA71C,EAAA61C,EAAA,EACAwkB,GAAA99D,EAAAyD,EAAA,GACAsyD,GAAAtyD,EAAAzD,EAAA,IAEAq5C,EAAA5B,EAAA6qB,GAAAvqB,EAAA,GAAAt0C,GAAA,GAiBA,QAAAgrE,IAAAh3B,GAEA,OADA,MAAAA,EAAA,EAAAA,EAAAz3C,QACAs8D,GAAA7kB,EAAA,MAiBA,QAAA25B,IAAA35B,GAEA,OADA,MAAAA,EAAA,EAAAA,EAAAz3C,QACAs8D,GAAA7kB,EAAA2G,OAuBA,QAAAizB,IAAA55B,EAAA8kB,GAEA,OADA,MAAA9kB,EAAA,EAAAA,EAAAz3C,SAIAu8D,MAAA1tD,GAAA,EAAAstD,GAAAI,GACAD,GAAA7kB,EAAA8kB,OAkBA,QAAA+U,IAAAjZ,GAKA,IAJA,GAAA50D,IAAA,EACAzD,EAAA,MAAAq4D,EAAA,EAAAA,EAAAr4D,OACAoB,OAEAqC,EAAAzD,GAAA,CACA,GAAAo3C,GAAAihB,EAAA50D,EACArC,GAAAg2C,EAAA,IAAAA,EAAA,GAEA,MAAAh2C,GAqBA,QAAAkB,IAAAm1C,GACA,MAAAA,MAAAz3C,OAAAy3C,EAAA,GAAA5oC,GA0BA,QAAArI,IAAAixC,EAAA3wC,EAAAwyC,GACA,GAAAt5C,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MACA,KAAAA,EACA,QAEA,IAAAyD,GAAA,MAAA61C,EAAA,EAAA6iB,GAAA7iB,EAIA,OAHA71C,GAAA,IACAA,EAAAq6D,GAAA99D,EAAAyD,EAAA,IAEA00C,EAAAV,EAAA3wC,EAAArD,GAiBA,QAAA+nB,IAAAisB,GAEA,OADA,MAAAA,EAAA,EAAAA,EAAAz3C,QACA8jE,GAAArsB,EAAA,SAiHA,QAAAp2C,IAAAo2C,EAAA85B,GACA,aAAA95B,EAAA,GAAA+5B,GAAA5qE,KAAA6wC,EAAA85B,GAiBA,QAAAl/D,IAAAolC,GACA,GAAAz3C,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MACA,OAAAA,GAAAy3C,EAAAz3C,EAAA,GAAA6O,GAwBA,QAAAkjB,IAAA0lB,EAAA3wC,EAAAwyC,GACA,GAAAt5C,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MACA,KAAAA,EACA,QAEA,IAAAyD,GAAAzD,CAKA,OAJAs5C,KAAAzqC,KACApL,EAAA04D,GAAA7iB,GACA71C,IAAA,EAAAq6D,GAAA99D,EAAAyD,EAAA,GAAAsyD,GAAAtyD,EAAAzD,EAAA,IAEA8G,MACAi1C,EAAAtE,EAAA3wC,EAAArD,GACA41C,EAAA5B,EAAAgC,EAAAh2C,GAAA,GAwBA,QAAAguE,IAAAh6B,EAAA3xC,GACA,MAAA2xC,MAAAz3C,OAAAmiE,GAAA1qB,EAAA0kB,GAAAr2D,IAAA+I,GAgDA,QAAA6iE,IAAAj6B,EAAAe,GACA,MAAAf,MAAAz3C,QAAAw4C,KAAAx4C,OACA6iE,GAAAprB,EAAAe,GACAf,EA0BA,QAAAk6B,IAAAl6B,EAAAe,EAAAd,GACA,MAAAD,MAAAz3C,QAAAw4C,KAAAx4C,OACA6iE,GAAAprB,EAAAe,EAAA8pB,GAAA5qB,EAAA,IACAD,EA0BA,QAAAm6B,IAAAn6B,EAAAe,EAAAH,GACA,MAAAZ,MAAAz3C,QAAAw4C,KAAAx4C,OACA6iE,GAAAprB,EAAAe,EAAA3pC,GAAAwpC,GACAZ,EAkEA,QAAA/0C,IAAA+0C,EAAAM,GACA,GAAA32C,KACA,KAAAq2C,MAAAz3C,OACA,MAAAoB,EAEA,IAAAqC,IAAA,EACAs/D,KACA/iE,EAAAy3C,EAAAz3C,MAGA,KADA+3C,EAAAuqB,GAAAvqB,EAAA,KACAt0C,EAAAzD,GAAA,CACA,GAAA8G,GAAA2wC,EAAAh0C,EACAs0C,GAAAjxC,EAAArD,EAAAg0C,KACAr2C,EAAAZ,KAAAsG,GACAi8D,EAAAviE,KAAAiD,IAIA,MADAq/D,IAAArrB,EAAAsrB,GACA3hE,EA0BA,QAAA4pE,IAAAvzB,GACA,aAAAA,IAAAo6B,GAAAjrE,KAAA6wC,GAmBA,QAAA1xB,IAAA0xB,EAAAhwC,EAAA0vB,GACA,GAAAn3B,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MACA,OAAAA,IAGAm3B,GAAA,gBAAAA,IAAAiyC,GAAA3xB,EAAAhwC,EAAA0vB,IACA1vB,EAAA,EACA0vB,EAAAn3B,IAGAyH,EAAA,MAAAA,EAAA,EAAA00D,GAAA10D,GACA0vB,MAAAtoB,GAAA7O,EAAAm8D,GAAAhlC,IAEA2sC,GAAArsB,EAAAhwC,EAAA0vB,OAoBA,QAAA26C,IAAAr6B,EAAA3wC,GACA,MAAAk9D,IAAAvsB,EAAA3wC,GA4BA,QAAAirE,IAAAt6B,EAAA3wC,EAAA4wC,GACA,MAAA2sB,IAAA5sB,EAAA3wC,EAAAw7D,GAAA5qB,EAAA,IAmBA,QAAAs6B,IAAAv6B,EAAA3wC,GACA,GAAA9G,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MACA,IAAAA,EAAA,CACA,GAAAyD,GAAAugE,GAAAvsB,EAAA3wC,EACA,IAAArD,EAAAzD,GAAAq5D,GAAA5hB,EAAAh0C,GAAAqD,GACA,MAAArD,GAGA,SAqBA,QAAAwuE,IAAAx6B,EAAA3wC,GACA,MAAAk9D,IAAAvsB,EAAA3wC,GAAA,GA4BA,QAAAorE,IAAAz6B,EAAA3wC,EAAA4wC,GACA,MAAA2sB,IAAA5sB,EAAA3wC,EAAAw7D,GAAA5qB,EAAA,OAmBA,QAAAy6B,IAAA16B,EAAA3wC,GAEA,GADA,MAAA2wC,EAAA,EAAAA,EAAAz3C,OACA,CACA,GAAAyD,GAAAugE,GAAAvsB,EAAA3wC,GAAA,IACA,IAAAuyD,GAAA5hB,EAAAh0C,GAAAqD,GACA,MAAArD,GAGA,SAkBA,QAAA2uE,IAAA36B,GACA,MAAAA,MAAAz3C,OACA+kE,GAAAttB,MAoBA,QAAA46B,IAAA56B,EAAAC,GACA,MAAAD,MAAAz3C,OACA+kE,GAAAttB,EAAA6qB,GAAA5qB,EAAA,OAkBA,QAAA46B,IAAA76B,GACA,GAAAz3C,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MACA,OAAAA,GAAA8jE,GAAArsB,EAAA,EAAAz3C,MA4BA,QAAAuyE,IAAA96B,EAAA3xC,EAAAqjE,GACA,MAAA1xB,MAAAz3C,QAGA8F,EAAAqjE,GAAArjE,IAAA+I,GAAA,EAAAstD,GAAAr2D,GACAg+D,GAAArsB,EAAA,EAAA3xC,EAAA,IAAAA,OA4BA,QAAA0sE,IAAA/6B,EAAA3xC,EAAAqjE,GACA,GAAAnpE,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,MACA,OAAAA,IAGA8F,EAAAqjE,GAAArjE,IAAA+I,GAAA,EAAAstD,GAAAr2D,GACAA,EAAA9F,EAAA8F,EACAg+D,GAAArsB,EAAA3xC,EAAA,IAAAA,EAAA9F,OAsCA,QAAAyyE,IAAAh7B,EAAAM,GACA,MAAAN,MAAAz3C,OACAwlE,GAAA/tB,EAAA6qB,GAAAvqB,EAAA,aAuCA,QAAA26B,IAAAj7B,EAAAM,GACA,MAAAN,MAAAz3C,OACAwlE,GAAA/tB,EAAA6qB,GAAAvqB,EAAA,OAoGA,QAAA46B,IAAAl7B,GACA,MAAAA,MAAAz3C,OAAAmlE,GAAA1tB,MA0BA,QAAAm7B,IAAAn7B,EAAAC,GACA,MAAAD,MAAAz3C,OAAAmlE,GAAA1tB,EAAA6qB,GAAA5qB,EAAA,OAuBA,QAAAm7B,IAAAp7B,EAAAY,GAEA,MADAA,GAAA,kBAAAA,KAAAxpC,GACA4oC,KAAAz3C,OAAAmlE,GAAA1tB,EAAA5oC,GAAAwpC,MAsBA,QAAAy6B,IAAAr7B,GACA,IAAAA,MAAAz3C,OACA,QAEA,IAAAA,GAAA,CAOA,OANAy3C,GAAAO,EAAAP,EAAA,SAAAs7B,GACA,GAAA/Q,GAAA+Q,GAEA,MADA/yE,GAAA89D,GAAAiV,EAAA/yE,WACA,IAGAq6C,EAAAr6C,EAAA,SAAAyD,GACA,MAAA60C,GAAAb,EAAAqC,EAAAr2C,MAyBA,QAAAuvE,IAAAv7B,EAAAC,GACA,IAAAD,MAAAz3C,OACA,QAEA,IAAAoB,GAAA0xE,GAAAr7B,EACA,cAAAC,EACAt2C,EAEAk3C,EAAAl3C,EAAA,SAAA2xE,GACA,MAAAzrE,GAAAowC,EAAA7oC,GAAAkkE,KAgJA,QAAAE,IAAArmE,EAAA4rC,GACA,MAAAqtB,IAAAj5D,MAAA4rC,MAAA+gB,IAkBA,QAAA2Z,IAAAtmE,EAAA4rC,GACA,MAAAqtB,IAAAj5D,MAAA4rC,MAAAmqB,IA8DA,QAAAwQ,IAAArsE,GACA,GAAA1F,GAAA8yD,EAAAptD,EAEA,OADA1F,GAAAuzD,WAAA,EACAvzD,EA0BA,QAAAgyE,IAAAtsE,EAAAusE,GAEA,MADAA,GAAAvsE,GACAA,EA0BA,QAAAikE,IAAAjkE,EAAAusE,GACA,MAAAA,GAAAvsE,GAsEA,QAAAwsE,MACA,MAAAH,IAAA9zE,MA6BA,QAAAk0E,MACA,UAAAlf,GAAAh1D,KAAAyH,QAAAzH,KAAAs1D,WAyBA,QAAA6e,MACAn0E,KAAAw1D,aAAAhmD,KACAxP,KAAAw1D,WAAArtD,GAAAnI,KAAAyH,SAEA,IAAAy0C,GAAAl8C,KAAAu1D,WAAAv1D,KAAAw1D,WAAA70D,MAGA,QAAcu7C,OAAAz0C,MAFdy0C,EAAA1sC,GAAAxP,KAAAw1D,WAAAx1D,KAAAu1D,cAuBA,QAAA6e,MACA,MAAAp0E,MA2BA,QAAAq0E,IAAA5sE,GAIA,IAHA,GAAA1F,GACA+L,EAAA9N,KAEA8N,YAAAonD,IAAA,CACA,GAAA5f,GAAA2f,GAAAnnD,EACAwnC,GAAAigB,UAAA,EACAjgB,EAAAkgB,WAAAhmD,GACAzN,EACA4hE,EAAAvO,YAAA9f,EAEAvzC,EAAAuzC,CAEA,IAAAquB,GAAAruB,CACAxnC,KAAAsnD,YAGA,MADAuO,GAAAvO,YAAA3tD,EACA1F,EAuBA,QAAAuyE,MACA,GAAA7sE,GAAAzH,KAAAo1D,WACA,IAAA3tD,YAAAstD,GAAA,CACA,GAAAwf,GAAA9sE,CAUA,OATAzH,MAAAq1D,YAAA10D,SACA4zE,EAAA,GAAAxf,GAAA/0D,OAEAu0E,IAAA5I,UACA4I,EAAAlf,YAAAl0D,MACA82C,KAAAyzB,GACAp3D,MAAAq3D,IACAzzB,QAAA1oC,KAEA,GAAAwlD,GAAAuf,EAAAv0E,KAAAs1D,WAEA,MAAAt1D,MAAA0rE,KAAAC,IAiBA,QAAA6I,MACA,MAAA7d,IAAA32D,KAAAo1D,YAAAp1D,KAAAq1D,aA4EA,QAAAzgD,IAAAklC,EAAApB,EAAAoxB,GACA,GAAA7xB,GAAAvsC,GAAAouC,GAAArB,EAAAikB,EAIA,OAHAoN,IAAAC,GAAAjwB,EAAApB,EAAAoxB,KACApxB,EAAAlpC,IAEAyoC,EAAA6B,EAAAmpB,GAAAvqB,EAAA,IAwCA,QAAAzyC,IAAA6zC,EAAApB,GAEA,OADAhtC,GAAAouC,GAAAnB,EAAAqkB,IACAljB,EAAAmpB,GAAAvqB,EAAA,IAmFA,QAAA+7B,IAAA36B,EAAAzB,GACA,MAAA4kB,IAAAl2D,GAAA+yC,EAAAzB,GAAA,GAuBA,QAAAq8B,IAAA56B,EAAAzB,GACA,MAAA4kB,IAAAl2D,GAAA+yC,EAAAzB,GAAA0G,IAwBA,QAAA41B,IAAA76B,EAAAzB,EAAA6kB,GAEA,MADAA,OAAA1tD,GAAA,EAAAstD,GAAAI,GACAD,GAAAl2D,GAAA+yC,EAAAzB,GAAA6kB,GAiCA,QAAAt9D,IAAAk6C,EAAAzB,GAEA,OADA3sC,GAAAouC,GAAAvB,EAAA8hB,IACAvgB,EAAAmpB,GAAA5qB,EAAA,IAuBA,QAAAu8B,IAAA96B,EAAAzB,GAEA,OADA3sC,GAAAouC,GAAAtB,EAAAq8B,IACA/6B,EAAAmpB,GAAA5qB,EAAA,IAgEA,QAAAikB,IAAAxiB,EAAAryC,EAAAwyC,EAAA6vB,GACAhwB,EAAAioB,GAAAjoB,KAAAX,GAAAW,GACAG,MAAA6vB,EAAAhN,GAAA7iB,GAAA,CAEA,IAAAt5C,GAAAm5C,EAAAn5C,MAIA,OAHAs5C,GAAA,IACAA,EAAAwkB,GAAA99D,EAAAs5C,EAAA,IAEA66B,GAAAh7B,GACAG,GAAAt5C,GAAAm5C,EAAA3yC,QAAAM,EAAAwyC,IAAA,IACAt5C,GAAAm4C,EAAAgB,EAAAryC,EAAAwyC,IAAA,EA+GA,QAAAlzC,IAAA+yC,EAAAzB,GAEA,OADA3sC,GAAAouC,GAAAb,EAAA6oB,IACAhoB,EAAAmpB,GAAA5qB,EAAA,IAgCA,QAAA08B,IAAAj7B,EAAAyc,EAAAyM,EAAA8G,GACA,aAAAhwB,MAGApuC,GAAA6qD,KACAA,EAAA,MAAAA,UAEAyM,EAAA8G,EAAAt6D,GAAAwzD,EACAt3D,GAAAs3D,KACAA,EAAA,MAAAA,UAEAD,GAAAjpB,EAAAyc,EAAAyM,IAgFA,QAAAh6D,IAAA8wC,EAAAzB,EAAAC,GACA,GAAAL,GAAAvsC,GAAAouC,GAAAT,EAAAuB,EACAtB,EAAAtxC,UAAArH,OAAA,CAEA,OAAAs3C,GAAA6B,EAAAmpB,GAAA5qB,EAAA,GAAAC,EAAAgB,EAAA+gB,IAyBA,QAAA2a,IAAAl7B,EAAAzB,EAAAC,GACA,GAAAL,GAAAvsC,GAAAouC,GAAAP,EAAAqB,EACAtB,EAAAtxC,UAAArH,OAAA,CAEA,OAAAs3C,GAAA6B,EAAAmpB,GAAA5qB,EAAA,GAAAC,EAAAgB,EAAAu7B,IAqCA,QAAAl3D,IAAAm8B,EAAApB,GAEA,OADAhtC,GAAAouC,GAAAnB,EAAAqkB,IACAljB,EAAAm7B,GAAAhS,GAAAvqB,EAAA,KAiBA,QAAAw8B,IAAAp7B,GAEA,OADApuC,GAAAouC,GAAA2f,GAAA6K,IACAxqB,GAuBA,QAAAq7B,IAAAr7B,EAAArzC,EAAAqjE,GAOA,MALArjE,IADAqjE,EAAAC,GAAAjwB,EAAArzC,EAAAqjE,GAAArjE,IAAA+I,IACA,EAEAstD,GAAAr2D,IAEAiF,GAAAouC,GAAA6f,GAAA4K,IACAzqB,EAAArzC,GAkBA,QAAA2uE,IAAAt7B,GAEA,OADApuC,GAAAouC,GAAAggB,GAAA0K,IACA1qB,GAwBA,QAAAsC,IAAAtC,GACA,SAAAA,EACA,QAEA,IAAAioB,GAAAjoB,GACA,MAAAg7B,IAAAh7B,GAAA6C,EAAA7C,KAAAn5C,MAEA,IAAAkQ,GAAAuqD,GAAAthB,EACA,OAAAjpC,IAAAkvC,IAAAlvC,GAAAyvC,GACAxG,EAAAsC,KAEAmlB,GAAAznB,GAAAn5C,OAuCA,QAAA8qC,IAAAqO,EAAApB,EAAAoxB,GACA,GAAA7xB,GAAAvsC,GAAAouC,GAAAN,EAAAkrB,EAIA,OAHAoF,IAAAC,GAAAjwB,EAAApB,EAAAoxB,KACApxB,EAAAlpC,IAEAyoC,EAAA6B,EAAAmpB,GAAAvqB,EAAA,IA6FA,QAAA28B,IAAA5uE,EAAAwxC,GACA,qBAAAA,GACA,SAAAmkB,IAAA9e,GAGA,OADA72C,GAAAq2D,GAAAr2D,GACA,WACA,KAAAA,EAAA,EACA,MAAAwxC,GAAAhwC,MAAAjI,KAAAgI,YAsBA,QAAAokE,IAAAn0B,EAAAxxC,EAAAqjE,GAGA,MAFArjE,GAAAqjE,EAAAt6D,GAAA/I,EACAA,EAAAwxC,GAAA,MAAAxxC,EAAAwxC,EAAAt3C,OAAA8F,EACA0nE,GAAAl2B,EAAAoG,GAAA7uC,YAAA/I,GAoBA,QAAA6uE,IAAA7uE,EAAAwxC,GACA,GAAAl2C,EACA,sBAAAk2C,GACA,SAAAmkB,IAAA9e,GAGA,OADA72C,GAAAq2D,GAAAr2D,GACA,WAOA,QANAA,EAAA,IACA1E,EAAAk2C,EAAAhwC,MAAAjI,KAAAgI,YAEAvB,GAAA,IACAwxC,EAAAzoC,IAEAzN,GA+IA,QAAAwzE,IAAAt9B,EAAA+yB,EAAAlB,GACAkB,EAAAlB,EAAAt6D,GAAAw7D,CACA,IAAAjpE,GAAAosE,GAAAl2B,EAAAgG,GAAAzuC,eAAAw7D,EAEA,OADAjpE,GAAAq7B,YAAAm4C,GAAAn4C,YACAr7B,EAyCA,QAAAyzE,IAAAv9B,EAAA+yB,EAAAlB,GACAkB,EAAAlB,EAAAt6D,GAAAw7D,CACA,IAAAjpE,GAAAosE,GAAAl2B,EAAAiG,GAAA1uC,eAAAw7D,EAEA,OADAjpE,GAAAq7B,YAAAo4C,GAAAp4C,YACAr7B,EAyDA,QAAA0zE,IAAAx9B,EAAAkkB,EAAA98D,GAuBA,QAAAq2E,GAAAC,GACA,GAAArhE,GAAAshE,EACA19B,EAAA29B,CAKA,OAHAD,GAAAC,EAAArmE,GACAsmE,EAAAH,EACA5zE,EAAAk2C,EAAAhwC,MAAAiwC,EAAA5jC,GAIA,QAAAyhE,GAAAJ,GAMA,MAJAG,GAAAH,EAEAK,EAAAh+C,GAAAi+C,EAAA9Z,GAEA+Z,EAAAR,EAAAC,GAAA5zE,EAGA,QAAAo0E,GAAAR,GACA,GAAAS,GAAAT,EAAAU,EACAC,EAAAX,EAAAG,EACA/zE,EAAAo6D,EAAAia,CAEA,OAAAG,GAAA7f,GAAA30D,EAAAy0E,EAAAF,GAAAv0E,EAGA,QAAA00E,GAAAd,GACA,GAAAS,GAAAT,EAAAU,EACAC,EAAAX,EAAAG,CAKA,OAAAO,KAAA7mE,IAAA4mE,GAAAja,GACAia,EAAA,GAAAG,GAAAD,GAAAE,EAGA,QAAAP,KACA,GAAAN,GAAAe,IACA,IAAAD,EAAAd,GACA,MAAAgB,GAAAhB,EAGAK,GAAAh+C,GAAAi+C,EAAAE,EAAAR,IAGA,QAAAgB,GAAAhB,GAKA,MAJAK,GAAAxmE,GAIAi7D,GAAAmL,EACAF,EAAAC,IAEAC,EAAAC,EAAArmE,GACAzN,GAGA,QAAA60E,KACAZ,IAAAxmE,IACAqnE,GAAAb,GAEAF,EAAA,EACAF,EAAAS,EAAAR,EAAAG,EAAAxmE,GAGA,QAAAsnE,KACA,MAAAd,KAAAxmE,GAAAzN,EAAA40E,EAAAD,MAGA,QAAAK,KACA,GAAApB,GAAAe,KACAM,EAAAP,EAAAd,EAMA,IAJAC,EAAA5tE,UACA6tE,EAAA71E,KACAq2E,EAAAV,EAEAqB,EAAA,CACA,GAAAhB,IAAAxmE,GACA,MAAAumE,GAAAM,EAEA,IAAAE,EAGA,MADAP,GAAAh+C,GAAAi+C,EAAA9Z,GACAuZ,EAAAW,GAMA,MAHAL,KAAAxmE,KACAwmE,EAAAh+C,GAAAi+C,EAAA9Z,IAEAp6D,EAlHA,GAAA6zE,GACAC,EACAW,EACAz0E,EACAi0E,EACAK,EACAP,EAAA,EACAI,GAAA,EACAK,GAAA,EACA9L,GAAA,CAEA,sBAAAxyB,GACA,SAAAmkB,IAAA9e,GA0GA,OAxGA6e,GAAA31D,GAAA21D,IAAA,EACAzzD,GAAArJ,KACA62E,IAAA72E,EAAA62E,QACAK,EAAA,WAAAl3E,GACAm3E,EAAAD,EAAA9X,GAAAj4D,GAAAnH,EAAAm3E,UAAA,EAAAra,GAAAqa,EACA/L,EAAA,YAAAprE,OAAAorE,YAiGAsM,EAAAH,SACAG,EAAAD,QACAC,EAkEA,QAAAE,IAAAh/B,GACA,MAAAk2B,IAAAl2B,EAAAsG,IA+CA,QAAA+xB,IAAAr4B,EAAAi/B,GACA,qBAAAj/B,IAAA,MAAAi/B,GAAA,kBAAAA,GACA,SAAA9a,IAAA9e,GAEA,IAAA65B,GAAA,WACA,GAAA7iE,GAAAtM,UACAnI,EAAAq3E,IAAAjvE,MAAAjI,KAAAsU,KAAA,GACA1M,EAAAuvE,EAAAvvE,KAEA,IAAAA,EAAA8Q,IAAA7Y,GACA,MAAA+H,GAAAjG,IAAA9B,EAEA,IAAAkC,GAAAk2C,EAAAhwC,MAAAjI,KAAAsU,EAEA,OADA6iE,GAAAvvE,QAAAyE,IAAAxM,EAAAkC,IAAA6F,EACA7F,EAGA,OADAo1E,GAAAvvE,MAAA,IAAA0oE,GAAA8G,OAAArf,IACAof,EA0BA,QAAAlC,IAAAv8B,GACA,qBAAAA,GACA,SAAA0jB,IAAA9e,GAEA,mBACA,GAAAhpC,GAAAtM,SACA,QAAAsM,EAAA3T,QACA,cAAA+3C,EAAAnxC,KAAAvH,KACA,eAAA04C,EAAAnxC,KAAAvH,KAAAsU,EAAA,GACA,eAAAokC,EAAAnxC,KAAAvH,KAAAsU,EAAA,GAAAA,EAAA,GACA,eAAAokC,EAAAnxC,KAAAvH,KAAAsU,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,OAAAokC,EAAAzwC,MAAAjI,KAAAsU,IAsBA,QAAA7K,IAAAwuC,GACA,MAAAq9B,IAAA,EAAAr9B,GAiLA,QAAA/W,IAAA+W,EAAA7vC,GACA,qBAAA6vC,GACA,SAAAmkB,IAAA9e,GAGA,OADAl1C,OAAAoH,GAAApH,EAAA00D,GAAA10D,GACA+7D,GAAAlsB,EAAA7vC,GAqCA,QAAAivE,IAAAp/B,EAAA7vC,GACA,qBAAA6vC,GACA,SAAAmkB,IAAA9e,GAGA,OADAl1C,GAAA,MAAAA,EAAA,EAAAq2D,GAAA3B,GAAA10D,GAAA,GACA+7D,GAAA,SAAA7vD,GACA,GAAA8jC,GAAA9jC,EAAAlM,GACAsoE,EAAA5J,GAAAxyD,EAAA,EAAAlM,EAKA,OAHAgwC,IACAc,EAAAw3B,EAAAt4B,GAEAnwC,EAAAgwC,EAAAj4C,KAAA0wE,KAgDA,QAAA4G,IAAAr/B,EAAAkkB,EAAA98D,GACA,GAAA62E,IAAA,EACAzL,GAAA,CAEA,sBAAAxyB,GACA,SAAAmkB,IAAA9e,GAMA,OAJA50C,IAAArJ,KACA62E,EAAA,WAAA72E,OAAA62E,UACAzL,EAAA,YAAAprE,OAAAorE,YAEAgL,GAAAx9B,EAAAkkB,GACA+Z,UACAM,QAAAra,EACAsO,aAmBA,QAAApqC,IAAA4X,GACA,MAAAm0B,IAAAn0B,EAAA,GAyBA,QAAAs/B,IAAA9vE,EAAA2iE,GACA,MAAAoN,IAAA5Q,GAAAwD,GAAA3iE,GAsCA,QAAAgwE,MACA,IAAAzvE,UAAArH,OACA,QAEA,IAAA8G,GAAAO,UAAA,EACA,OAAA0D,IAAAjE,SA6BA,QAAA6tC,IAAA7tC,GACA,MAAAozD,IAAApzD,EAAAk2C,IAkCA,QAAA+5B,IAAAjwE,EAAAszD,GAEA,MADAA,GAAA,kBAAAA,KAAAvrD,GACAqrD,GAAApzD,EAAAk2C,GAAAod,GAqBA,QAAA4c,IAAAlwE,GACA,MAAAozD,IAAApzD,EAAAg2C,GAAAE,IA+BA,QAAAi6B,IAAAnwE,EAAAszD,GAEA,MADAA,GAAA,kBAAAA,KAAAvrD,GACAqrD,GAAApzD,EAAAg2C,GAAAE,GAAAod,GA2BA,QAAA8c,IAAAn9B,EAAA/3B,GACA,aAAAA,GAAAs5C,GAAAvhB,EAAA/3B,EAAAhjB,GAAAgjB,IAmCA,QAAAq3C,IAAAvyD,EAAA42D,GACA,MAAA52D,KAAA42D,GAAA52D,OAAA42D,MAmJA,QAAA0D,IAAAt6D,GACA,aAAAA,GAAA05D,GAAA15D,EAAA9G,UAAA+8D,GAAAj2D,GA4BA,QAAAk7D,IAAAl7D,GACA,MAAAqtD,IAAArtD,IAAAs6D,GAAAt6D,GAoBA,QAAAqwE,IAAArwE,GACA,MAAAA,MAAA,GAAAA,KAAA,GACAqtD,GAAArtD,IAAAu2D,GAAAv2D,IAAAg4C,GA0DA,QAAAs4B,IAAAtwE,GACA,MAAAqtD,IAAArtD,IAAA,IAAAA,EAAAklB,WAAAhkB,GAAAlB,GAoCA,QAAAuwE,IAAAvwE,GACA,SAAAA,EACA,QAEA,IAAAs6D,GAAAt6D,KACAiE,GAAAjE,IAAA,gBAAAA,IAAA,kBAAAA,GAAAL,QACAkyD,GAAA7xD,IAAA+sD,GAAA/sD,IAAA2xD,GAAA3xD,IACA,OAAAA,EAAA9G,MAEA,IAAAkQ,GAAAuqD,GAAA3zD,EACA,IAAAoJ,GAAAkvC,IAAAlvC,GAAAyvC,GACA,OAAA74C,EAAA20C,IAEA,IAAAolB,GAAA/5D,GACA,OAAA85D,GAAA95D,GAAA9G,MAEA,QAAAd,KAAA4H,GACA,GAAAH,GAAAC,KAAAE,EAAA5H,GACA,QAGA,UA+BA,QAAAo4E,IAAAxwE,EAAA42D,GACA,MAAAiB,IAAA73D,EAAA42D,GAmCA,QAAA6Z,IAAAzwE,EAAA42D,EAAAtD,GACAA,EAAA,kBAAAA,KAAAvrD,EACA,IAAAzN,GAAAg5D,IAAAtzD,EAAA42D,GAAA7uD,EACA,OAAAzN,KAAAyN,GAAA8vD,GAAA73D,EAAA42D,EAAA7uD,GAAAurD,KAAAh5D,EAqBA,QAAAo2E,IAAA1wE,GACA,IAAAqtD,GAAArtD,GACA,QAEA,IAAAoJ,GAAAmtD,GAAAv2D,EACA,OAAAoJ,IAAA+uC,IAAA/uC,GAAA8uC,IACA,gBAAAl4C,GAAAonE,SAAA,gBAAApnE,GAAA+F,OAAA7E,GAAAlB,GA6BA,QAAA2wE,IAAA3wE,GACA,sBAAAA,IAAA4wE,GAAA5wE,GAoBA,QAAAi2D,IAAAj2D,GACA,IAAAiB,GAAAjB,GACA,QAIA,IAAAoJ,GAAAmtD,GAAAv2D,EACA,OAAAoJ,IAAAgvC,IAAAhvC,GAAAivC,IAAAjvC,GAAA2uC,IAAA3uC,GAAAuvC,GA6BA,QAAAk4B,IAAA7wE,GACA,sBAAAA,OAAAq1D,GAAAr1D,GA6BA,QAAA05D,IAAA15D,GACA,sBAAAA,IACAA,GAAA,GAAAA,EAAA,MAAAA,GAAAu3C,GA4BA,QAAAt2C,IAAAjB,GACA,GAAAtI,SAAAsI,EACA,cAAAA,IAAA,UAAAtI,GAAA,YAAAA,GA2BA,QAAA21D,IAAArtD,GACA,aAAAA,GAAA,gBAAAA,GAkDA,QAAA8wE,IAAA79B,EAAA/3B,GACA,MAAA+3B,KAAA/3B,GAAA69C,GAAA9lB,EAAA/3B,EAAAq/C,GAAAr/C,IAmCA,QAAA61D,IAAA99B,EAAA/3B,EAAAo4C,GAEA,MADAA,GAAA,kBAAAA,KAAAvrD,GACAgxD,GAAA9lB,EAAA/3B,EAAAq/C,GAAAr/C,GAAAo4C,GA+BA,QAAAp0D,IAAAc,GAIA,MAAAgxE,IAAAhxE,UA6BA,QAAA4C,IAAA5C,GACA,GAAAixE,GAAAjxE,GACA,SAAAnC,IAAA+3C,GAEA,OAAAujB,IAAAn5D,GAoBA,QAAAkxE,IAAAlxE,GACA,cAAAA,EAuBA,QAAAmxE,IAAAnxE,GACA,aAAAA,EA6BA,QAAAgxE,IAAAhxE,GACA,sBAAAA,IACAqtD,GAAArtD,IAAAu2D,GAAAv2D,IAAAu4C,GA+BA,QAAAr3C,IAAAlB,GACA,IAAAqtD,GAAArtD,IAAAu2D,GAAAv2D,IAAAy4C,GACA,QAEA,IAAA24B,GAAA7I,GAAAvoE,EACA,WAAAoxE,EACA,QAEA,IAAAvuE,GAAAhD,GAAAC,KAAAsxE,EAAA,gBAAAA,EAAA51D,WACA,yBAAA3Y,oBACA+mE,GAAA9pE,KAAA+C,IAAAwuE,GAiDA,QAAAC,IAAAtxE,GACA,MAAA6wE,IAAA7wE,QAAAu3C,IAAAv3C,GAAAu3C,GAuCA,QAAA81B,IAAArtE,GACA,sBAAAA,KACAiE,GAAAjE,IAAAqtD,GAAArtD,IAAAu2D,GAAAv2D,IAAA84C,GAoBA,QAAAqc,IAAAn1D,GACA,sBAAAA,IACAqtD,GAAArtD,IAAAu2D,GAAAv2D,IAAA+4C,GAuCA,QAAAw4B,IAAAvxE,GACA,MAAAA,KAAA+H,GAoBA,QAAAypE,IAAAxxE,GACA,MAAAqtD,IAAArtD,IAAA2zD,GAAA3zD,IAAAi5C,GAoBA,QAAAw4B,IAAAzxE,GACA,MAAAqtD,IAAArtD,IAAAu2D,GAAAv2D,IAAAk5C,GA8EA,QAAAx4C,IAAAV,GACA,IAAAA,EACA,QAEA,IAAAs6D,GAAAt6D,GACA,MAAAqtE,IAAArtE,GAAAq1C,GAAAr1C,GAAAsuD,GAAAtuD,EAEA,IAAA0xE,IAAA1xE,EAAA0xE,IACA,MAAAn9B,GAAAv0C,EAAA0xE,MAEA,IAAAtoE,GAAAuqD,GAAA3zD,EAGA,QAFAoJ,GAAAkvC,GAAA5D,EAAAtrC,GAAAyvC,GAAA9D,EAAArD,IAEA1xC,GA0BA,QAAA6lE,IAAA7lE,GACA,IAAAA,EACA,WAAAA,IAAA,CAGA,KADAA,EAAAjB,GAAAiB,MACAs3C,IAAAt3C,KAAAs3C,GAAA,CAEA,OADAt3C,EAAA,QACAw3C,GAEA,MAAAx3C,SAAA,EA6BA,QAAAq1D,IAAAr1D,GACA,GAAA1F,GAAAurE,GAAA7lE,GACA2xE,EAAAr3E,EAAA,CAEA,OAAAA,OAAAq3E,EAAAr3E,EAAAq3E,EAAAr3E,EAAA,EA8BA,QAAAg7D,IAAAt1D,GACA,MAAAA,GAAAoyD,GAAAiD,GAAAr1D,GAAA,EAAAy3C,IAAA,EA0BA,QAAA14C,IAAAiB,GACA,mBAAAA,GACA,MAAAA,EAEA,IAAAm1D,GAAAn1D,GACA,MAAA+yC,GAEA,IAAA9xC,GAAAjB,GAAA,CACA,GAAA42D,GAAA,kBAAA52D,GAAA4xE,QAAA5xE,EAAA4xE,UAAA5xE,CACAA,GAAAiB,GAAA21D,KAAA,GAAAA,EAEA,mBAAA52D,GACA,WAAAA,MAEAA,KAAAovB,QAAA0rB,GAAA,GACA,IAAA+2B,GAAAr2B,GAAAx9C,KAAAgC,EACA,OAAA6xE,IAAAn2B,GAAA19C,KAAAgC,GACA2rD,GAAA3rD,EAAAif,MAAA,GAAA4yD,EAAA,KACAt2B,GAAAv9C,KAAAgC,GAAA+yC,IAAA/yC,EA2BA,QAAAo7D,IAAAp7D,GACA,MAAA8yD,IAAA9yD,EAAAgzD,GAAAhzD,IA2BA,QAAA8xE,IAAA9xE,GACA,MAAAA,GACAoyD,GAAAiD,GAAAr1D,IAAAu3C,OACA,IAAAv3C,IAAA,EAwBA,QAAA3F,IAAA2F,GACA,aAAAA,EAAA,GAAAm+D,GAAAn+D,GA0MA,QAAAT,IAAAyH,EAAA+qE,GACA,GAAAz3E,GAAA+oE,GAAAr8D,EACA,cAAA+qE,EAAAz3E,EAAAu4D,GAAAv4D,EAAAy3E,GAwFA,QAAAC,IAAA/+B,EAAAhC,GACA,MAAAmB,GAAAa,EAAAuoB,GAAAvqB,EAAA,GAAA2kB,IAsCA,QAAAqc,IAAAh/B,EAAAhC,GACA,MAAAmB,GAAAa,EAAAuoB,GAAAvqB,EAAA,GAAA6kB,IA+BA,QAAAoc,IAAAj/B,EAAArC,GACA,aAAAqC,EACAA,EACA4iB,GAAA5iB,EAAAuoB,GAAA5qB,EAAA,GAAAoiB,IA6BA,QAAAmf,IAAAl/B,EAAArC,GACA,aAAAqC,EACAA,EACA8iB,GAAA9iB,EAAAuoB,GAAA5qB,EAAA,GAAAoiB,IA+BA,QAAAof,IAAAn/B,EAAArC,GACA,MAAAqC,IAAA2iB,GAAA3iB,EAAAuoB,GAAA5qB,EAAA,IA6BA,QAAAyhC,IAAAp/B,EAAArC,GACA,MAAAqC,IAAA6iB,GAAA7iB,EAAAuoB,GAAA5qB,EAAA,IA0BA,QAAA0hC,IAAAr/B,GACA,aAAAA,KAAA+iB,GAAA/iB,EAAA/6C,GAAA+6C,IA0BA,QAAAs/B,IAAAt/B,GACA,aAAAA,KAAA+iB,GAAA/iB,EAAA+f,GAAA/f,IA4BA,QAAA/4C,IAAA+4C,EAAAxwC,EAAA6iE,GACA,GAAAhrE,GAAA,MAAA24C,EAAAlrC,GAAAmuD,GAAAjjB,EAAAxwC,EACA,OAAAnI,KAAAyN,GAAAu9D,EAAAhrE,EA8BA,QAAA2W,IAAAgiC,EAAAxwC,GACA,aAAAwwC,GAAAm1B,GAAAn1B,EAAAxwC,EAAAo0D,IA6BA,QAAA8D,IAAA1nB,EAAAxwC,GACA,aAAAwwC,GAAAm1B,GAAAn1B,EAAAxwC,EAAAq0D,IA2GA,QAAA5+D,IAAA+6C,GACA,MAAAqnB,IAAArnB,GAAAue,GAAAve,GAAA6mB,GAAA7mB,GA0BA,QAAA+f,IAAA/f,GACA,MAAAqnB,IAAArnB,GAAAue,GAAAve,GAAA,GAAAgnB,GAAAhnB,GAwBA,QAAAu/B,IAAAv/B,EAAArC,GACA,GAAAt2C,KAMA,OALAs2C,GAAA4qB,GAAA5qB,EAAA,GAEAglB,GAAA3iB,EAAA,SAAAjzC,EAAA5H,EAAA66C,GACAuf,GAAAl4D,EAAAs2C,EAAA5wC,EAAA5H,EAAA66C,GAAAjzC,KAEA1F,EA+BA,QAAAm4E,IAAAx/B,EAAArC,GACA,GAAAt2C,KAMA,OALAs2C,GAAA4qB,GAAA5qB,EAAA,GAEAglB,GAAA3iB,EAAA,SAAAjzC,EAAA5H,EAAA66C,GACAuf,GAAAl4D,EAAAlC,EAAAw4C,EAAA5wC,EAAA5H,EAAA66C,MAEA34C,EAuIA,QAAAo4E,IAAAz/B,EAAAhC,GACA,MAAA0hC,IAAA1/B,EAAAu6B,GAAAhS,GAAAvqB,KA0CA,QAAA0hC,IAAA1/B,EAAAhC,GACA,SAAAgC,EACA,QAEA,IAAAntC,GAAA0rC,EAAA4iB,GAAAnhB,GAAA,SAAAtrC,GACA,OAAAA,IAGA,OADAspC,GAAAuqB,GAAAvqB,GACA2qB,GAAA3oB,EAAAntC,EAAA,SAAA9F,EAAAyC,GACA,MAAAwuC,GAAAjxC,EAAAyC,EAAA,MAiCA,QAAAnI,IAAA24C,EAAAxwC,EAAA6iE,GACA7iE,EAAA0zD,GAAA1zD,EAAAwwC,EAEA,IAAAt2C,IAAA,EACAzD,EAAAuJ,EAAAvJ,MAOA,KAJAA,IACAA,EAAA,EACA+5C,EAAAlrC,MAEApL,EAAAzD,GAAA,CACA,GAAA8G,GAAA,MAAAizC,EAAAlrC,GAAAkrC,EAAAmjB,GAAA3zD,EAAA9F,IACAqD,KAAA+H,KACApL,EAAAzD,EACA8G,EAAAslE,GAEAryB,EAAAgjB,GAAAj2D,KAAAF,KAAAmzC,GAAAjzC,EAEA,MAAAizC,GA+BA,QAAAruC,IAAAquC,EAAAxwC,EAAAzC,GACA,aAAAizC,IAAA4oB,GAAA5oB,EAAAxwC,EAAAzC,GA2BA,QAAA4yE,IAAA3/B,EAAAxwC,EAAAzC,EAAAszD,GAEA,MADAA,GAAA,kBAAAA,KAAAvrD,GACA,MAAAkrC,IAAA4oB,GAAA5oB,EAAAxwC,EAAAzC,EAAAszD,GAqFA,QAAAz8B,IAAAoc,EAAArC,EAAAC,GACA,GAAA4d,GAAAxqD,GAAAgvC,GACA4/B,EAAApkB,GAAAoD,GAAA5e,IAAA8Z,GAAA9Z,EAGA,IADArC,EAAA4qB,GAAA5qB,EAAA,GACA,MAAAC,EAAA,CACA,GAAAhuC,GAAAowC,KAAAz3B,WAEAq1B,GADAgiC,EACApkB,EAAA,GAAA5rD,MAEA5B,GAAAgyC,IACAgjB,GAAApzD,GAAAwgE,GAAAkF,GAAAt1B,OASA,OAHA4/B,EAAA/hC,EAAA8kB,IAAA3iB,EAAA,SAAAjzC,EAAArD,EAAAs2C,GACA,MAAArC,GAAAC,EAAA7wC,EAAArD,EAAAs2C,KAEApC,EA8BA,QAAAiiC,IAAA7/B,EAAAxwC,GACA,aAAAwwC,GAAAkpB,GAAAlpB,EAAAxwC,GA8BA,QAAA9G,IAAAs3C,EAAAxwC,EAAAg8D,GACA,aAAAxrB,IAAAurB,GAAAvrB,EAAAxwC,EAAA08D,GAAAV,IA2BA,QAAAsU,IAAA9/B,EAAAxwC,EAAAg8D,EAAAnL,GAEA,MADAA,GAAA,kBAAAA,KAAAvrD,GACA,MAAAkrC,IAAAurB,GAAAvrB,EAAAxwC,EAAA08D,GAAAV,GAAAnL,GA6BA,QAAA5hB,IAAAuB,GACA,aAAAA,KAAAS,EAAAT,EAAA/6C,GAAA+6C,IA2BA,QAAA+/B,IAAA//B,GACA,aAAAA,KAAAS,EAAAT,EAAA+f,GAAA/f,IAwBA,QAAAggC,IAAA3oD,EAAA6oC,EAAA7nB,GAaA,MAZAA,KAAAvjC,KACAujC,EAAA6nB,EACAA,EAAAprD,IAEAujC,IAAAvjC,KACAujC,EAAAvsC,GAAAusC,GACAA,UAAA,GAEA6nB,IAAAprD,KACAorD,EAAAp0D,GAAAo0D,GACAA,UAAA,GAEAf,GAAArzD,GAAAurB,GAAA6oC,EAAA7nB,GAyCA,QAAA4nC,IAAA5oD,EAAA3pB,EAAA0vB,GASA,MARA1vB,GAAAklE,GAAAllE,GACA0vB,IAAAtoB,IACAsoB,EAAA1vB,EACAA,EAAA,GAEA0vB,EAAAw1C,GAAAx1C,GAEA/F,EAAAvrB,GAAAurB,GACAysC,GAAAzsC,EAAA3pB,EAAA0vB,GAkCA,QAAA8iD,IAAAhgB,EAAA7nB,EAAA8nC,GA2BA,GA1BAA,GAAA,iBAAAA,IAAA9Q,GAAAnP,EAAA7nB,EAAA8nC,KACA9nC,EAAA8nC,EAAArrE,IAEAqrE,IAAArrE,KACA,iBAAAujC,IACA8nC,EAAA9nC,EACAA,EAAAvjC,IAEA,iBAAAorD,KACAigB,EAAAjgB,EACAA,EAAAprD,KAGAorD,IAAAprD,IAAAujC,IAAAvjC,IACAorD,EAAA,EACA7nB,EAAA,IAGA6nB,EAAA0S,GAAA1S,GACA7nB,IAAAvjC,IACAujC,EAAA6nB,EACAA,EAAA,GAEA7nB,EAAAu6B,GAAAv6B,IAGA6nB,EAAA7nB,EAAA,CACA,GAAA+nC,GAAAlgB,CACAA,GAAA7nB,EACAA,EAAA+nC,EAEA,GAAAD,GAAAjgB,EAAA,GAAA7nB,EAAA,GACA,GAAAq+B,GAAAtN,IACA,OAAApN,IAAAkE,EAAAwW,GAAAr+B,EAAA6nB,EAAAzH,GAAA,QAAAie,EAAA,IAAAzwE,OAAA,KAAAoyC,GAEA,MAAA2mB,IAAAkB,EAAA7nB,GA6CA,QAAA/jC,IAAA0qC,GACA,MAAAqhC,IAAAj5E,GAAA43C,GAAA/zC,eAqBA,QAAAilE,IAAAlxB,GAEA,OADAA,EAAA53C,GAAA43C,KACAA,EAAA7iB,QAAAwsB,GAAAoR,IAAA59B,QAAAqvB,GAAA,IA0BA,QAAA80B,IAAAthC,EAAAhvC,EAAAuwE,GACAvhC,EAAA53C,GAAA43C,GACAhvC,EAAAk7D,GAAAl7D,EAEA,IAAA/J,GAAA+4C,EAAA/4C,MACAs6E,OAAAzrE,GACA7O,EACAk5D,GAAAiD,GAAAme,GAAA,EAAAt6E,EAEA,IAAAm3B,GAAAmjD,CAEA,QADAA,GAAAvwE,EAAA/J,SACA,GAAA+4C,EAAAhzB,MAAAu0D,EAAAnjD,IAAAptB,EA+BA,QAAAwwE,IAAAxhC,GAEA,MADAA,GAAA53C,GAAA43C,GACAA,GAAAmI,GAAAp8C,KAAAi0C,GACAA,EAAA7iB,QAAA8qB,GAAA+S,IACAhb,EAkBA,QAAAyhC,IAAAzhC,GAEA,MADAA,GAAA53C,GAAA43C,GACAA,GAAA4I,GAAA78C,KAAAi0C,GACAA,EAAA7iB,QAAAwrB,GAAA,QACA3I,EA8FA,QAAA0hC,IAAA1hC,EAAA/4C,EAAA0gC,GACAqY,EAAA53C,GAAA43C,GACA/4C,EAAAm8D,GAAAn8D,EAEA,IAAA06E,GAAA16E,EAAAg8C,EAAAjD,GAAA,CACA,KAAA/4C,GAAA06E,GAAA16E,EACA,MAAA+4C,EAEA,IAAAqrB,IAAApkE,EAAA06E,GAAA,CACA,OACAnO,IAAArJ,GAAAkB,GAAA1jC,GACAqY,EACAwzB,GAAAjJ,GAAAc,GAAA1jC,GA2BA,QAAAi6C,IAAA5hC,EAAA/4C,EAAA0gC,GACAqY,EAAA53C,GAAA43C,GACA/4C,EAAAm8D,GAAAn8D,EAEA,IAAA06E,GAAA16E,EAAAg8C,EAAAjD,GAAA,CACA,OAAA/4C,IAAA06E,EAAA16E,EACA+4C,EAAAwzB,GAAAvsE,EAAA06E,EAAAh6C,GACAqY,EA0BA,QAAA6hC,IAAA7hC,EAAA/4C,EAAA0gC,GACAqY,EAAA53C,GAAA43C,GACA/4C,EAAAm8D,GAAAn8D,EAEA,IAAA06E,GAAA16E,EAAAg8C,EAAAjD,GAAA,CACA,OAAA/4C,IAAA06E,EAAA16E,EACAusE,GAAAvsE,EAAA06E,EAAAh6C,GAAAqY,EACAA,EA2BA,QAAAjR,IAAAiR,EAAA8hC,EAAA1R,GAMA,MALAA,IAAA,MAAA0R,EACAA,EAAA,EACOA,IACPA,MAEAC,GAAA35E,GAAA43C,GAAA7iB,QAAA2rB,GAAA,IAAAg5B,GAAA,GAyBA,QAAAE,IAAAhiC,EAAAjzC,EAAAqjE,GAMA,MAJArjE,IADAqjE,EAAAC,GAAArwB,EAAAjzC,EAAAqjE,GAAArjE,IAAA+I,IACA,EAEAstD,GAAAr2D,GAEAy9D,GAAApiE,GAAA43C,GAAAjzC,GAsBA,QAAAowB,MACA,GAAAviB,GAAAtM,UACA0xC,EAAA53C,GAAAwS,EAAA,GAEA,OAAAA,GAAA3T,OAAA,EAAA+4C,IAAA7iB,QAAAviB,EAAA,GAAAA,EAAA,IA+CA,QAAArN,IAAAyyC,EAAAw4B,EAAAyJ,GAKA,MAJAA,IAAA,gBAAAA,IAAA5R,GAAArwB,EAAAw4B,EAAAyJ,KACAzJ,EAAAyJ,EAAAnsE,KAEAmsE,MAAAnsE,GAAA0vC,GAAAy8B,IAAA,IAIAjiC,EAAA53C,GAAA43C,GACAA,IACA,gBAAAw4B,IACA,MAAAA,IAAA9d,GAAA8d,OAEAA,EAAAtM,GAAAsM,KACAt2B,EAAAlC,GACAotB,GAAAhqB,GAAApD,GAAA,EAAAiiC,GAGAjiC,EAAAzyC,MAAAirE,EAAAyJ,OAmDA,QAAAC,IAAAliC,EAAAhvC,EAAAuwE,GAOA,MANAvhC,GAAA53C,GAAA43C,GACAuhC,EAAA,MAAAA,EACA,EACAphB,GAAAiD,GAAAme,GAAA,EAAAvhC,EAAA/4C,QAEA+J,EAAAk7D,GAAAl7D,GACAgvC,EAAAhzB,MAAAu0D,IAAAvwE,EAAA/J,SAAA+J,EA2GA,QAAAg4B,IAAAgX,EAAAr6C,EAAAyqE,GAIA,GAAA+R,GAAAhnB,EAAAinB,gBAEAhS,IAAAC,GAAArwB,EAAAr6C,EAAAyqE,KACAzqE,EAAAmQ,IAEAkqC,EAAA53C,GAAA43C,GACAr6C,EAAA08E,MAA+B18E,EAAAw8E,EAAAxN,GAE/B,IAIA2N,GACAC,EALAC,EAAAH,MAAmC18E,EAAA68E,QAAAL,EAAAK,QAAA7N,IACnC8N,EAAAx8E,GAAAu8E,GACAE,EAAAjhC,EAAA+gC,EAAAC,GAIA/3E,EAAA,EACAi4E,EAAAh9E,EAAAg9E,aAAA/4B,GACA3gC,EAAA,WAGA25D,EAAAj3D,IACAhmB,EAAA67E,QAAA53B,IAAA3gC,OAAA,IACA05D,EAAA15D,OAAA,KACA05D,IAAAr6B,GAAAc,GAAAQ,IAAA3gC,OAAA,KACAtjB,EAAA6b,UAAAooC,IAAA3gC,OAAA,KACA,KAGA45D,EAAA,kBACA,aAAAl9E,GACAA,EAAAk9E,UACA,6BAAAn2B,GAAA,KACA,IAEA1M,GAAA7iB,QAAAylD,EAAA,SAAAxsE,EAAA0sE,EAAAC,EAAAC,EAAAC,EAAAvjC,GAsBA,MArBAqjC,OAAAC,GAGA/5D,GAAA+2B,EAAAhzB,MAAAtiB,EAAAg1C,GAAAviB,QAAA0sB,GAAA7H,GAGA8gC,IACAR,GAAA,EACAr5D,GAAA,YAAA65D,EAAA,UAEAG,IACAV,GAAA,EACAt5D,GAAA,OAAuBg6D,EAAA,eAEvBF,IACA95D,GAAA,iBAAA85D,EAAA,+BAEAr4E,EAAAg1C,EAAAtpC,EAAAnP,OAIAmP,IAGA6S,GAAA,MAIA,IAAAi6D,GAAAv9E,EAAAu9E,QACAA,KACAj6D,EAAA,iBAA8BA,EAAA,SAG9BA,GAAAs5D,EAAAt5D,EAAAkU,QAAA0qB,GAAA,IAAA5+B,GACAkU,QAAA2qB,GAAA,MACA3qB,QAAA4qB,GAAA,OAGA9+B,EAAA,aAAAi6D,GAAA,gBACAA,EACA,GACA,wBAEA,qBACAZ,EACA,mBACA,KAEAC,EACA,uFAEA,OAEAt5D,EACA,eAEA,IAAA5gB,GAAA86E,GAAA,WACA,MAAA58E,IAAAk8E,EAAAI,EAAA,UAAA55D,GACA1a,MAAAuH,GAAA4sE,IAMA,IADAr6E,EAAA4gB,SACAw1D,GAAAp2E,GACA,KAAAA,EAEA,OAAAA,GAwBA,QAAA+6E,IAAAr1E,GACA,MAAA3F,IAAA2F,GAAA9B,cAwBA,QAAAo3E,IAAAt1E,GACA,MAAA3F,IAAA2F,GAAAgmC,cAyBA,QAAA9d,IAAA+pB,EAAArY,EAAAyoC,GAEA,IADApwB,EAAA53C,GAAA43C,MACAowB,GAAAzoC,IAAA7xB,IACA,MAAAkqC,GAAA7iB,QAAA0rB,GAAA,GAEA,KAAA7I,KAAArY,EAAAukC,GAAAvkC,IACA,MAAAqY,EAEA,IAAA4B,GAAAwB,GAAApD,GACA6B,EAAAuB,GAAAzb,EAIA,OAAAylC,IAAAxrB,EAHAD,EAAAC,EAAAC,GACAC,EAAAF,EAAAC,GAAA,GAEAv5C,KAAA,IAsBA,QAAAg7E,IAAAtjC,EAAArY,EAAAyoC,GAEA,IADApwB,EAAA53C,GAAA43C,MACAowB,GAAAzoC,IAAA7xB,IACA,MAAAkqC,GAAA7iB,QAAA4rB,GAAA,GAEA,KAAA/I,KAAArY,EAAAukC,GAAAvkC,IACA,MAAAqY,EAEA,IAAA4B,GAAAwB,GAAApD,EAGA,OAAAotB,IAAAxrB,EAAA,EAFAE,EAAAF,EAAAwB,GAAAzb,IAAA,GAEAr/B,KAAA,IAsBA,QAAAi7E,IAAAvjC,EAAArY,EAAAyoC,GAEA,IADApwB,EAAA53C,GAAA43C,MACAowB,GAAAzoC,IAAA7xB,IACA,MAAAkqC,GAAA7iB,QAAA2rB,GAAA,GAEA,KAAA9I,KAAArY,EAAAukC,GAAAvkC,IACA,MAAAqY,EAEA,IAAA4B,GAAAwB,GAAApD,EAGA,OAAAotB,IAAAxrB,EAFAD,EAAAC,EAAAwB,GAAAzb,KAEAr/B,KAAA,IAwCA,QAAAk7E,IAAAxjC,EAAAr6C,GACA,GAAAsB,GAAA69C,GACA2+B,EAAA1+B,EAEA,IAAA/1C,GAAArJ,GAAA,CACA,GAAA6yE,GAAA,aAAA7yE,KAAA6yE,WACAvxE,GAAA,UAAAtB,GAAAy9D,GAAAz9D,EAAAsB,UACAw8E,EAAA,YAAA99E,GAAAumE,GAAAvmE,EAAA89E,YAEAzjC,EAAA53C,GAAA43C,EAEA,IAAA2hC,GAAA3hC,EAAA/4C,MACA,IAAAi7C,EAAAlC,GAAA,CACA,GAAA4B,GAAAwB,GAAApD,EACA2hC,GAAA//B,EAAA36C,OAEA,GAAAA,GAAA06E,EACA,MAAA3hC,EAEA,IAAA5hB,GAAAn3B,EAAAg8C,EAAAwgC,EACA,IAAArlD,EAAA,EACA,MAAAqlD,EAEA,IAAAp7E,GAAAu5C,EACAwrB,GAAAxrB,EAAA,EAAAxjB,GAAA91B,KAAA,IACA03C,EAAAhzB,MAAA,EAAAoR,EAEA,IAAAo6C,IAAA1iE,GACA,MAAAzN,GAAAo7E,CAKA,IAHA7hC,IACAxjB,GAAA/1B,EAAApB,OAAAm3B,GAEAs8B,GAAA8d,IACA,GAAAx4B,EAAAhzB,MAAAoR,GAAAslD,OAAAlL,GAAA,CACA,GAAApiE,GACAmjB,EAAAlxB,CAMA,KAJAmwE,EAAA9rE,SACA8rE,EAAA7sD,GAAA6sD,EAAAvvD,OAAA7gB,GAAAihD,GAAAvgB,KAAA0vC,IAAA,MAEAA,EAAA3vC,UAAA,EACAzyB,EAAAoiE,EAAA1vC,KAAAvP,IACA,GAAAoqD,GAAAvtE,EAAA1L,KAEArC,KAAA2kB,MAAA,EAAA22D,IAAA7tE,GAAAsoB,EAAAulD,QAEO,IAAA3jC,EAAAvyC,QAAAy+D,GAAAsM,GAAAp6C,MAAA,CACP,GAAA1zB,GAAArC,EAAA2wB,YAAAw/C,EACA9tE,IAAA,IACArC,IAAA2kB,MAAA,EAAAtiB,IAGA,MAAArC,GAAAo7E,EAsBA,QAAAp4E,IAAA20C,GAEA,MADAA,GAAA53C,GAAA43C,GACAA,GAAAkI,GAAAn8C,KAAAi0C,GACAA,EAAA7iB,QAAA6qB,GAAAiT,IACAjb,EAiEA,QAAAixB,IAAAjxB,EAAAt0B,EAAA0kD,GAIA,MAHApwB,GAAA53C,GAAA43C,GACAt0B,EAAA0kD,EAAAt6D,GAAA4V,EAEAA,IAAA5V,GACAssC,EAAApC,GAAAuD,GAAAvD,GAAAC,EAAAD,GAEAA,EAAA5pC,MAAAsV,OAkGA,QAAAk4D,IAAAtkB,GACA,GAAAr4D,GAAA,MAAAq4D,EAAA,EAAAA,EAAAr4D,OACAisE,EAAA3J,IASA,OAPAjK,GAAAr4D,EAAAs4C,EAAA+f,EAAA,SAAAjhB,GACA,qBAAAA,GAAA,GACA,SAAAqkB,IAAA9e,GAEA,QAAAsvB,EAAA70B,EAAA,IAAAA,EAAA,SAGAosB,GAAA,SAAA7vD,GAEA,IADA,GAAAlQ,IAAA,IACAA,EAAAzD,GAAA,CACA,GAAAo3C,GAAAihB,EAAA50D,EACA,IAAA6D,EAAA8vC,EAAA,GAAA/3C,KAAAsU,GACA,MAAArM,GAAA8vC,EAAA,GAAA/3C,KAAAsU,MA8BA,QAAAipE,IAAA56D,GACA,MAAAq5C,IAAAnB,GAAAl4C,EAAA86B,KAsBA,QAAA+/B,IAAA/1E,GACA,kBACA,MAAAA,IAwBA,QAAAg2E,IAAAh2E,EAAAslE,GACA,aAAAtlE,SAAAslE,EAAAtlE,EAkEA,QAAAmY,IAAAnY,GACA,MAAAA,GA6CA,QAAA4wC,IAAAJ,GACA,MAAAmpB,IAAA,kBAAAnpB,KAAA4iB,GAAA5iB,EAAAwF,KA+BA,QAAAt4B,IAAAxC,GACA,MAAA2+C,IAAAzG,GAAAl4C,EAAA86B,KA6BA,QAAAigC,IAAAxzE,EAAAy2D,GACA,MAAAU,IAAAn3D,EAAA2wD,GAAA8F,EAAAljB,KAkGA,QAAAjvC,IAAAksC,EAAA/3B,EAAAtjB,GACA,GAAAkO,GAAA5N,GAAAgjB,GACAg7D,EAAAlgB,GAAA96C,EAAApV,EAEA,OAAAlO,GACAqJ,GAAAia,KAAAg7D,EAAAh9E,SAAA4M,EAAA5M,UACAtB,EAAAsjB,EACAA,EAAA+3B,EACAA,EAAA16C,KACA29E,EAAAlgB,GAAA96C,EAAAhjB,GAAAgjB,IAEA,IAAAmxD,KAAAprE,GAAArJ,IAAA,SAAAA,OAAAy0E,OACAzY,EAAAqC,GAAAhjB,EAqBA,OAnBAnC,GAAAolC,EAAA,SAAAnT,GACA,GAAAvyB,GAAAt1B,EAAA6nD,EACA9vB,GAAA8vB,GAAAvyB,EACAojB,IACA3gB,EAAAjsC,UAAA+7D,GAAA,WACA,GAAArV,GAAAn1D,KAAAs1D,SACA,IAAAwe,GAAA3e,EAAA,CACA,GAAApzD,GAAA24C,EAAA16C,KAAAo1D,YAKA,QAJArzD,EAAAszD,YAAAU,GAAA/1D,KAAAq1D,cAEAl0D,MAA4B82C,OAAA3jC,KAAAtM,UAAAkwC,QAAAwC,IAC5B34C,EAAAuzD,UAAAH,EACApzD,EAEA,MAAAk2C,GAAAhwC,MAAAyyC,EAAAxB,GAAAl5C,KAAAyH,SAAAO,gBAKA0yC,EAgBA,QAAAkjC,MAIA,MAHAp6C,IAAA5S,IAAA5wB,OACAwjC,GAAA5S,EAAAitD,IAEA79E,KAeA,QAAAyD,OAwBA,QAAAq6E,IAAAr3E,GAEA,MADAA,GAAAq2D,GAAAr2D,GACA09D,GAAA,SAAA7vD,GACA,MAAAwuD,IAAAxuD,EAAA7N,KAkGA,QAAAwF,IAAA/B,GACA,MAAAg4D,IAAAh4D,GAAAuwC,EAAAojB,GAAA3zD,IAAAq5D,GAAAr5D,GAwBA,QAAA6zE,IAAArjC,GACA,gBAAAxwC,GACA,aAAAwwC,EAAAlrC,GAAAmuD,GAAAjjB,EAAAxwC,IAuGA,QAAA8zE,MACA,SAgBA,QAAAC,MACA,SAqBA,QAAAC,MACA,SAgBA,QAAAC,MACA,SAgBA,QAAAC,MACA,SAsBA,QAAAC,IAAA53E,EAAA4xC,GAEA,IADA5xC,EAAAq2D,GAAAr2D,IACA,GAAAA,EAAAu4C,GACA,QAEA,IAAA56C,GAAA86C,GACAv+C,EAAA+1D,GAAAjwD,EAAAy4C,GAEA7G,GAAA4qB,GAAA5qB,GACA5xC,GAAAy4C,EAGA,KADA,GAAAn9C,GAAAi5C,EAAAr6C,EAAA03C,KACAj0C,EAAAqC,GACA4xC,EAAAj0C,EAEA,OAAArC,GAoBA,QAAAu8E,IAAA72E,GACA,MAAAiE,IAAAjE,GACAwxC,EAAAxxC,EAAAo2D,IAEAjB,GAAAn1D,OAAAsuD,GAAA8Q,GAAA/kE,GAAA2F,KAoBA,QAAA82E,IAAAC,GACA,GAAA39E,KAAA49E,EACA,OAAA38E,IAAA08E,GAAA39E,EA2GA,QAAA+L,IAAAwrC,GACA,MAAAA,MAAAz3C,OACAg8D,GAAAvkB,EAAAx4B,GAAAw+C,IACA5uD,GA0BA,QAAAkvE,IAAAtmC,EAAAC,GACA,MAAAD,MAAAz3C,OACAg8D,GAAAvkB,EAAA6qB,GAAA5qB,EAAA,GAAA+lB,IACA5uD,GAiBA,QAAAmvE,IAAAvmC,GACA,MAAAkC,GAAAlC,EAAAx4B,IA0BA,QAAAg/D,IAAAxmC,EAAAC,GACA,MAAAiC,GAAAlC,EAAA6qB,GAAA5qB,EAAA,IAqBA,QAAAwmC,IAAAzmC,GACA,MAAAA,MAAAz3C,OACAg8D,GAAAvkB,EAAAx4B,GAAAiiD,IACAryD,GA0BA,QAAAsvE,IAAA1mC,EAAAC,GACA,MAAAD,MAAAz3C,OACAg8D,GAAAvkB,EAAA6qB,GAAA5qB,EAAA,GAAAwpB,IACAryD,GA8EA,QAAAuvE,IAAA3mC,GACA,MAAAA,MAAAz3C,OACA45C,EAAAnC,EAAAx4B,IACA,EA0BA,QAAAo/D,IAAA5mC,EAAAC,GACA,MAAAD,MAAAz3C,OACA45C,EAAAnC,EAAA6qB,GAAA5qB,EAAA,IACA,EAxtdApnC,EAAA,MAAAA,EAAAuyB,GAAA5S,GAAAquD,SAAAz7C,GAAA9jC,SAAAuR,EAAA2f,GAAAsuD,KAAA17C,GAAA2iB,IAGA,IAAA79C,IAAA2I,EAAA3I,MACA62E,GAAAluE,EAAAkuE,KACA75E,GAAA2L,EAAA3L,MACArF,GAAAgR,EAAAhR,SACA0M,GAAAsE,EAAAtE,KACAjN,GAAAuR,EAAAvR,OACA2lB,GAAApU,EAAAoU,OACA9e,GAAA0K,EAAA1K,OACA61D,GAAAnrD,EAAAmrD,UAGAnsB,GAAA3nC,GAAAmG,UACA2wE,GAAAn/E,GAAAwO,UACA6/D,GAAA5uE,GAAA+O,UAGA4wE,GAAApuE,EAAA,sBAGAogE,GAAA+N,GAAAt9E,SAGAwF,GAAAgnE,GAAAhnE,eAGAm3E,GAAA,EAGArO,GAAA,WACA,GAAArtD,GAAA,SAAAyf,KAAA68C,OAAA1/E,MAAA0/E,GAAA1/E,KAAA2/E,UAAA,GACA,OAAAv8D,GAAA,iBAAAA,EAAA,MAQA4sD,GAAArB,GAAAxsE,SAGAg3E,GAAAzH,GAAA9pE,KAAA7H,IAGAm+E,GAAAr6C,GAAA5S,EAGAkwC,GAAAz7C,GAAA,IACAgsD,GAAA9pE,KAAAD,IAAAuvB,QAAAwrB,GAAA,QACAxrB,QAAA,uEAIA0oD,GAAA9rB,GAAAxiD,EAAAsuE,OAAA/vE,GACAm/B,GAAA19B,EAAA09B,OACA04B,GAAAp2D,EAAAo2D,WACAL,GAAAuY,MAAAvY,YAAAx3D,GACAwgE,GAAA3zB,EAAA38C,GAAA8/E,eAAA9/E,IACA+/E,GAAA//E,GAAAsH,OACA04E,GAAApR,GAAAoR,qBACAt4E,GAAA6oC,GAAA7oC,OACA+oE,GAAAxhC,MAAAgxC,mBAAAnwE,GACA2pE,GAAAxqC,MAAAsN,SAAAzsC,GACAyuD,GAAAtvB,MAAAixC,YAAApwE,GAEA/N,GAAA,WACA,IACA,GAAAw2C,GAAAu3B,GAAA9vE,GAAA,iBAEA,OADAu4C,MAAe,OACfA,EACO,MAAA93C,QAIP0/E,GAAA5uE,EAAA4lE,eAAArzC,GAAAqzC,cAAA5lE,EAAA4lE,aACAiJ,GAAAX,OAAAzI,MAAAlzC,GAAA27C,KAAAzI,KAAAyI,GAAAzI,IACAqJ,GAAA9uE,EAAA+mB,aAAAwL,GAAAxL,YAAA/mB,EAAA+mB,WAGAisC,GAAAt3D,GAAAqzE,KACAnc,GAAAl3D,GAAAszE,MACAC,GAAAxgF,GAAAygF,sBACAC,GAAAb,MAAAjmB,SAAA9pD,GACA6oE,GAAApnE,EAAAmnE,SACAjG,GAAAliC,GAAAjuC,KACAy/D,GAAAplB,EAAA38C,GAAAC,KAAAD,IACA++D,GAAA9xD,GAAAC,IACA8pD,GAAA/pD,GAAAkyE,IACA3N,GAAAiO,GAAAzI,IACA+E,GAAAxqE,EAAAw3B,SACAq7B,GAAAn3D,GAAAiuE,OACApI,GAAAviC,GAAA07B,QAGA0U,GAAA7Q,GAAAv+D,EAAA,YACAgnD,GAAAuX,GAAAv+D,EAAA,OACAg+B,GAAAugC,GAAAv+D,EAAA,WACAy+B,GAAA8/B,GAAAv+D,EAAA,OACAqvE,GAAA9Q,GAAAv+D,EAAA,WACAkmD,GAAAqY,GAAA9vE,GAAA,UAGA6gF,GAAAD,IAAA,GAAAA,IAGAjR,MAGAmR,GAAAzf,GAAAsf,IACAI,GAAA1f,GAAA9I,IACAyoB,GAAA3f,GAAA9xB,IACA0xC,GAAA5f,GAAArxB,IACAkxC,GAAA7f,GAAAuf,IAGAO,GAAAlyC,MAAAlgC,UAAAe,GACAw4D,GAAA6Y,MAAAxH,QAAA7pE,GACAq2D,GAAAgb,MAAA/+E,SAAA0N,GA6IAs7D,GAAA,WACA,QAAApwB,MACA,gBAAAm+B,GACA,IAAAnwE,GAAAmwE,GACA,QAEA,IAAA4G,GACA,MAAAA,IAAA5G,EAEAn+B,GAAAjsC,UAAAoqE,CACA,IAAA92E,GAAA,GAAA24C,EAEA,OADAA,GAAAjsC,UAAAe,GACAzN,KAqCA8yD,GAAAinB,kBAQAZ,OAAAp5B,GAQA5mC,SAAA6mC,GAQAs6B,YAAAr6B,GAQA46B,SAAA,GAQAV,SAQAtrD,EAAAikC,IAKAA,EAAApmD,UAAAymD,EAAAzmD,UACAomD,EAAApmD,UAAAwU,YAAA4xC,EAEAG,EAAAvmD,UAAAq8D,GAAA5V,EAAAzmD,WACAumD,EAAAvmD,UAAAwU,YAAA+xC,EAsHAD,EAAAtmD,UAAAq8D,GAAA5V,EAAAzmD,WACAsmD,EAAAtmD,UAAAwU,YAAA8xC,EAoGA+B,GAAAroD,UAAA8K,MAAA09C,GACAH,GAAAroD,UAAA,OAAA2oD,GACAN,GAAAroD,UAAA9M,IAAA01D,GACAP,GAAAroD,UAAAiK,IAAA4+C,GACAR,GAAAroD,UAAApC,IAAAkrD,GAiHAC,GAAA/oD,UAAA8K,MAAAk+C,GACAD,GAAA/oD,UAAA,OAAAipD,GACAF,GAAA/oD,UAAA9M,IAAAi2D,GACAJ,GAAA/oD,UAAAiK,IAAAm/C,GACAL,GAAA/oD,UAAApC,IAAAyrD,GAmGAC,GAAAtpD,UAAA8K,MAAAy+C,GACAD,GAAAtpD,UAAA,OAAAypD,GACAH,GAAAtpD,UAAA9M,IAAAy2D,GACAL,GAAAtpD,UAAAiK,IAAA2/C,GACAN,GAAAtpD,UAAApC,IAAAisD,GAmDAC,GAAA9pD,UAAAsD,IAAAwmD,GAAA9pD,UAAAtN,KAAAq3D,GACAD,GAAA9pD,UAAAiK,IAAA+/C,GAkGAC,GAAAjqD,UAAA8K,MAAAo/C,GACAD,GAAAjqD,UAAA,OAAAmqD,GACAF,GAAAjqD,UAAA9M,IAAAk3D,GACAH,GAAAjqD,UAAAiK,IAAAogD,GACAJ,GAAAjqD,UAAApC,IAAA0sD,EAobA,IAAAsB,IAAA2P,GAAA3M,IAUAwX,GAAA7K,GAAAzM,IAAA,GA4IAD,GAAA4M,KAYA1M,GAAA0M,IAAA,GAggCAkE,GAAAmS,GAAA,SAAAtoC,EAAAnnC,GAEA,MADAyvE,IAAAl0E,IAAA4rC,EAAAnnC,GACAmnC,GAFAr4B,GAaAkhE,GAAAr/E,GAAA,SAAAw2C,EAAAyB,GACA,MAAAj4C,IAAAw2C,EAAA,YACAjuC,cAAA,EACAtI,YAAA,EACA+F,MAAA+1E,GAAA9jC,GACA3vC,UAAA,KALA6V,GAucAmhE,GAAA5c,GAuBA0S,GAAAgJ,IAAA,SAAAh/E,GACA,MAAA2iC,IAAAqzC,aAAAh2E,IA48BAklE,GAAAr2B,IAAA,EAAA8M,EAAA,GAAA9M,KAAA,WAAAqP,GAAA,SAAA5F,GACA,UAAAzJ,IAAAyJ,IADA11C,GAmbAqoE,GAAAyU,GAAA,SAAAtoC,GACA,MAAAsoC,IAAA5+E,IAAAs2C,IADAx0C,GAyIA+lE,GAAA0W,GAAA,SAAAxlC,GACA,aAAAA,MAGAA,EAAAh7C,GAAAg7C,GACA/B,EAAAunC,GAAAxlC,GAAA,SAAAqtB,GACA,MAAA2X,IAAAn4E,KAAAmzC,EAAAqtB,OANAiW,GAiBAvU,GAAAyW,GAAA,SAAAxlC,GAEA,IADA,GAAA34C,MACA24C,GACAxB,EAAAn3C,EAAAynE,GAAA9uB,IACAA,EAAAs1B,GAAAt1B,EAEA,OAAA34C,IANAi8E,GAgBA5iB,GAAA4C,IAGAqiB,IAAAjlB,GAAA,GAAAilB,IAAA,GAAAW,aAAA,MAAAngC,IACAoX,IAAAmD,GAAA,GAAAnD,MAAAlY,IACA9Q,IAAAmsB,GAAAnsB,GAAAvxB,YAAAyiC,IACAzQ,IAAA0rB,GAAA,GAAA1rB,MAAA4Q,IACAggC,IAAAllB,GAAA,GAAAklB,MAAA5/B,MACA0a,GAAA,SAAA3zD,GACA,GAAA1F,GAAAi8D,GAAAv2D,GACA6C,EAAAvI,GAAAm+C,GAAAz4C,EAAAwb,YAAAzT,GACAyxE,EAAA32E,EAAAy2D,GAAAz2D,GAAA,EAEA,IAAA22E,EACA,OAAAA,GACA,IAAAT,IAAA,MAAA3/B,GACA,KAAA4/B,IAAA,MAAA1gC,GACA,KAAA2gC,IAAA,MAAAvgC,GACA,KAAAwgC,IAAA,MAAArgC,GACA,KAAAsgC,IAAA,MAAAlgC,IAGA,MAAA3+C,IA6SA,IAAA22E,IAAA2G,GAAA3hB,GAAAugB,GAsPAnQ,GAAAgD,GAAA1C,IAUAp2C,GAAA+nD,IAAA,SAAA9nC,EAAAkkB,GACA,MAAA34B,IAAAxL,WAAAigB,EAAAkkB,IAWAiI,GAAA0M,GAAAgQ,IA8EAja,GAAAwJ,GAAA,SAAA32B,GACA,GAAA33C,KAOA,OANAogD,IAAA18C,KAAAi0C,IACA33C,EAAAZ,KAAA,IAEAu4C,EAAA7iB,QAAAurB,GAAA,SAAAtyC,EAAAiiB,EAAAmvD,EAAAxnC,GACA33C,EAAAZ,KAAA+/E,EAAAxnC,EAAA7iB,QAAAgsB,GAAA,MAAA9wB,GAAAjiB,KAEA/N,IA4MAo/E,GAAAhd,GAAA,SAAA/rB,EAAAe,GACA,MAAAwpB,IAAAvqB,GACAikB,GAAAjkB,EAAA6kB,GAAA9jB,EAAA,EAAAwpB,IAAA,SA8BAye,GAAAjd,GAAA,SAAA/rB,EAAAe,GACA,GAAAd,GAAArlC,GAAAmmC,EAIA,OAHAwpB,IAAAtqB,KACAA,EAAA7oC,IAEAmzD,GAAAvqB,GACAikB,GAAAjkB,EAAA6kB,GAAA9jB,EAAA,EAAAwpB,IAAA,GAAAM,GAAA5qB,EAAA,SA2BAgpC,GAAAld,GAAA,SAAA/rB,EAAAe,GACA,GAAAH,GAAAhmC,GAAAmmC,EAIA,OAHAwpB,IAAA3pB,KACAA,EAAAxpC,IAEAmzD,GAAAvqB,GACAikB,GAAAjkB,EAAA6kB,GAAA9jB,EAAA,EAAAwpB,IAAA,GAAAnzD,GAAAwpC,QAgeAsoC,GAAAnd,GAAA,SAAAxF,GACA,GAAA4iB,GAAAtoC,EAAA0lB,EAAAgI,GACA,OAAA4a,GAAA5gF,QAAA4gF,EAAA,KAAA5iB,EAAA,GACAD,GAAA6iB,QA2BAC,GAAArd,GAAA,SAAAxF,GACA,GAAAtmB,GAAArlC,GAAA2rD,GACA4iB,EAAAtoC,EAAA0lB,EAAAgI,GAOA,OALAtuB,KAAArlC,GAAAuuE,GACAlpC,EAAA7oC,GAEA+xE,EAAA12E,MAEA02E,EAAA5gF,QAAA4gF,EAAA,KAAA5iB,EAAA,GACAD,GAAA6iB,EAAAte,GAAA5qB,EAAA,SAyBAopC,GAAAtd,GAAA,SAAAxF,GACA,GAAA3lB,GAAAhmC,GAAA2rD,GACA4iB,EAAAtoC,EAAA0lB,EAAAgI,GAMA,OAJA3tB,GAAA,kBAAAA,KAAAxpC,GACAwpC,GACAuoC,EAAA12E,MAEA02E,EAAA5gF,QAAA4gF,EAAA,KAAA5iB,EAAA,GACAD,GAAA6iB,EAAA/xE,GAAAwpC,QA8HA0oC,GAAAvd,GAAAkO,IA8GAsP,GAAApW,GAAA,SAAAnzB,EAAAsrB,GACA,GAAA/iE,GAAA,MAAAy3C,EAAA,EAAAA,EAAAz3C,OACAoB,EAAA24D,GAAAtiB,EAAAsrB,EAMA,OAJAD,IAAArrB,EAAAa,EAAAyqB,EAAA,SAAAt/D,GACA,MAAAo1D,IAAAp1D,EAAAzD,IAAAyD,MACO2U,KAAAmvD,KAEPnmE,IA8eA6/E,GAAAzd,GAAA,SAAAxF,GACA,MAAAmH,IAAA7I,GAAA0B,EAAA,EAAAgE,IAAA,MA0BAkf,GAAA1d,GAAA,SAAAxF,GACA,GAAAtmB,GAAArlC,GAAA2rD,EAIA,OAHAgE,IAAAtqB,KACAA,EAAA7oC,IAEAs2D,GAAA7I,GAAA0B,EAAA,EAAAgE,IAAA,GAAAM,GAAA5qB,EAAA,MAwBAypC,GAAA3d,GAAA,SAAAxF,GACA,GAAA3lB,GAAAhmC,GAAA2rD,EAEA,OADA3lB,GAAA,kBAAAA,KAAAxpC,GACAs2D,GAAA7I,GAAA0B,EAAA,EAAAgE,IAAA,GAAAnzD,GAAAwpC,KAsKA+oC,GAAA5d,GAAA,SAAA/rB,EAAAe,GACA,MAAAwpB,IAAAvqB,GACAikB,GAAAjkB,EAAAe,QAsBA6oC,GAAA7d,GAAA,SAAAxF,GACA,MAAA4H,IAAA5tB,EAAAgmB,EAAAgE,OA0BAsf,GAAA9d,GAAA,SAAAxF,GACA,GAAAtmB,GAAArlC,GAAA2rD,EAIA,OAHAgE,IAAAtqB,KACAA,EAAA7oC,IAEA+2D,GAAA5tB,EAAAgmB,EAAAgE,IAAAM,GAAA5qB,EAAA,MAwBA6pC,GAAA/d,GAAA,SAAAxF,GACA,GAAA3lB,GAAAhmC,GAAA2rD,EAEA,OADA3lB,GAAA,kBAAAA,KAAAxpC,GACA+2D,GAAA5tB,EAAAgmB,EAAAgE,IAAAnzD,GAAAwpC,KAmBAmpC,GAAAhe,GAAAsP,IA6DA2O,GAAAje,GAAA,SAAAxF,GACA,GAAAh+D,GAAAg+D,EAAAh+D,OACA03C,EAAA13C,EAAA,EAAAg+D,EAAAh+D,EAAA,GAAA6O,EAGA,OADA6oC,GAAA,kBAAAA,IAAAsmB,EAAA9zD,MAAAwtC,GAAA7oC,GACAmkE,GAAAhV,EAAAtmB,KA+GAgqC,GAAA9W,GAAA,SAAAhqE,GACA,GAAAZ,GAAAY,EAAAZ,OACAyH,EAAAzH,EAAAY,EAAA,KACAkG,EAAAzH,KAAAo1D,YACA4e,EAAA,SAAAt5B,GAA0C,MAAAggB,IAAAhgB,EAAAn5C,GAE1C,SAAAZ,EAAA,GAAAX,KAAAq1D,YAAA10D,SACA8G,YAAAstD,IAAAyE,GAAApxD,IAGAX,IAAAif,MAAAte,MAAAzH,EAAA,MACA8G,EAAA4tD,YAAAl0D,MACA82C,KAAAyzB,GACAp3D,MAAA0/D,GACA97B,QAAA1oC,KAEA,GAAAwlD,GAAAvtD,EAAAzH,KAAAs1D,WAAAoW,KAAA,SAAAtzB,GAIA,MAHAz3C,KAAAy3C,EAAAz3C,QACAy3C,EAAAj3C,KAAAqO,IAEA4oC,KAZAp4C,KAAA0rE,KAAAsI,KA+PAsO,GAAA5Y,GAAA,SAAA3nE,EAAA0F,EAAA5H,GACAyH,GAAAC,KAAAxF,EAAAlC,KACAkC,EAAAlC,GAEAo6D,GAAAl4D,EAAAlC,EAAA,KAmIA0iF,GAAAnX,GAAAyG,IAqBA2Q,GAAApX,GAAA0G,IAgKA2Q,GAAA/Y,GAAA,SAAA3nE,EAAA0F,EAAA5H,GACAyH,GAAAC,KAAAxF,EAAAlC,GACAkC,EAAAlC,GAAAsB,KAAAsG,GAEAwyD,GAAAl4D,EAAAlC,GAAA4H,MAsEAi7E,GAAAve,GAAA,SAAArqB,EAAA5vC,EAAAoK,GACA,GAAAlQ,IAAA,EACAi3D,EAAA,kBAAAnxD,GACAnI,EAAAggE,GAAAjoB,GAAAxxC,GAAAwxC,EAAAn5C,UAKA,OAHA05D,IAAAvgB,EAAA,SAAAryC,GACA1F,IAAAqC,GAAAi3D,EAAApzD,EAAAiC,EAAAzC,EAAA6M,GAAA4qD,GAAAz3D,EAAAyC,EAAAoK,KAEAvS,IA+BA4gF,GAAAjZ,GAAA,SAAA3nE,EAAA0F,EAAA5H,GACAo6D,GAAAl4D,EAAAlC,EAAA4H,KAiIAm7E,GAAAlZ,GAAA,SAAA3nE,EAAA0F,EAAA5H,GACAkC,EAAAlC,EAAA,KAAAsB,KAAAsG,IACK,WAAc,gBAmSnBo7E,GAAA1e,GAAA,SAAArqB,EAAAyc,GACA,SAAAzc,EACA,QAEA,IAAAn5C,GAAA41D,EAAA51D,MAMA,OALAA,GAAA,GAAAopE,GAAAjwB,EAAAyc,EAAA,GAAAA,EAAA,IACAA,KACO51D,EAAA,GAAAopE,GAAAxT,EAAA,GAAAA,EAAA,GAAAA,EAAA,MACPA,KAAA,KAEAwM,GAAAjpB,EAAAmjB,GAAA1G,EAAA,SAqBAmgB,GAAAoJ,IAAA,WACA,MAAAt8C,IAAA27C,KAAAzI,OAqIA3yE,GAAAogE,GAAA,SAAAlsB,EAAAC,EAAAuwB,GACA,GAAA3N,GAAAhd,EACA,IAAA2qB,EAAA9nE,OAAA,CACA,GAAA+nE,GAAApsB,EAAAmsB,EAAAwC,GAAAlnE,IACA+2D,IAAA3c,GAEA,MAAAgwB,IAAAl2B,EAAA6iB,EAAA5iB,EAAAuwB,EAAAC,KAgDAoa,GAAA3e,GAAA,SAAAzpB,EAAA76C,EAAA4oE,GACA,GAAA3N,GAAAhd,GAAAC,EACA,IAAA0qB,EAAA9nE,OAAA,CACA,GAAA+nE,GAAApsB,EAAAmsB,EAAAwC,GAAA6X,IACAhoB,IAAA3c,GAEA,MAAAgwB,IAAAtuE,EAAAi7D,EAAApgB,EAAA+tB,EAAAC,KAkSAqa,GAAA5e,GAAA,SAAAlsB,EAAA3jC,GACA,MAAA4nD,IAAAjkB,EAAA,EAAA3jC,KAsBA0uE,GAAA7e,GAAA,SAAAlsB,EAAAkkB,EAAA7nD,GACA,MAAA4nD,IAAAjkB,EAAAzxC,GAAA21D,IAAA,EAAA7nD,IA0FAg8D,IAAA8G,MAAArf,EA2FA,IAAAkrB,IAAAlC,GAAA,SAAA9oC,EAAA3U,GACAA,EAAA,GAAAA,EAAA3iC,QAAA+K,GAAA43B,EAAA,IACA2V,EAAA3V,EAAA,GAAA4X,EAAA+nB,OACAhqB,EAAAgkB,GAAA35B,EAAA,GAAA4X,EAAA+nB,MAEA,IAAAigB,GAAA5/C,EAAA3iC,MACA,OAAAwjE,IAAA,SAAA7vD,GAIA,IAHA,GAAAlQ,IAAA,EACAzD,EAAA+1D,GAAApiD,EAAA3T,OAAAuiF,KAEA9+E,EAAAzD,GACA2T,EAAAlQ,GAAAk/B,EAAAl/B,GAAAmD,KAAAvH,KAAAsU,EAAAlQ,GAEA,OAAA6D,GAAAgwC,EAAAj4C,KAAAsU,OAqCAkjE,GAAArT,GAAA,SAAAlsB,EAAAwwB,GAEA,MAAA0F,IAAAl2B,EAAAkG,GAAA3uC,GAAAi5D,EADAnsB,EAAAmsB,EAAAwC,GAAAuM,QAoCA2L,GAAAhf,GAAA,SAAAlsB,EAAAwwB,GAEA,MAAA0F,IAAAl2B,EAAAmG,GAAA5uC,GAAAi5D,EADAnsB,EAAAmsB,EAAAwC,GAAAkY,QA0BAC,GAAA7X,GAAA,SAAAtzB,EAAAyrB,GACA,MAAAyK,IAAAl2B,EAAAqG,GAAA9uC,SAAAk0D,KA4bA2f,GAAA9V,GAAAnP,IAyBAklB,GAAA/V,GAAA,SAAA9lE,EAAA42D,GACA,MAAA52D,IAAA42D,IAqBAjF,GAAA+F,GAAA,WAAkD,MAAAn3D,eAAoBm3D,GAAA,SAAA13D,GACtE,MAAAqtD,IAAArtD,IAAAH,GAAAC,KAAAE,EAAA,YACAi4E,GAAAn4E,KAAAE,EAAA,WA0BAiE,GAAApD,GAAAoD,QAmBAooD,GAAAD,GAAA3Y,EAAA2Y,IAAAuL,GAmGA9F,GAAA8mB,IAAAnC,GAmBAjqB,GAAAD,GAAA7Y,EAAA6Y,IAAAsL,GAkXAnL,GAAAD,GAAA/Y,EAAA+Y,IAAAsM,GAiRAnM,GAAAD,GAAAjZ,EAAAiZ,IAAA6M,GAkDA1M,GAAAD,GAAAnZ,EAAAmZ,IAAA4M,GA+DAzM,GAAAD,GAAArZ,EAAAqZ,IAAA2M,GAwFAqiB,GAAAhW,GAAA1L,IAyBA2hB,GAAAjW,GAAA,SAAA9lE,EAAA42D,GACA,MAAA52D,IAAA42D,IA8SAolB,GAAA7Z,GAAA,SAAAlvB,EAAA/3B,GACA,GAAA6+C,GAAA7+C,IAAAo/C,GAAAp/C,GAEA,WADA43C,IAAA53C,EAAAhjB,GAAAgjB,GAAA+3B,EAGA,QAAA76C,KAAA8iB,GACArb,GAAAC,KAAAob,EAAA9iB,IACAq6D,GAAAxf,EAAA76C,EAAA8iB,EAAA9iB,MAoCA6jF,GAAA9Z,GAAA,SAAAlvB,EAAA/3B,GACA43C,GAAA53C,EAAA83C,GAAA93C,GAAA+3B,KAgCAqhC,GAAAnS,GAAA,SAAAlvB,EAAA/3B,EAAA2/C,EAAAvH,GACAR,GAAA53C,EAAA83C,GAAA93C,GAAA+3B,EAAAqgB,KA+BA4oB,GAAA/Z,GAAA,SAAAlvB,EAAA/3B,EAAA2/C,EAAAvH,GACAR,GAAA53C,EAAAhjB,GAAAgjB,GAAA+3B,EAAAqgB,KAoBA6oB,GAAArY,GAAA7Q,IA8DAukB,GAAA9a,GAAA,SAAA7vD,GAEA,MADAA,GAAAnT,KAAAqO,GAAA6+D,IACApmE,EAAA8zE,GAAAvsE,GAAA8E,KAsBAuvE,GAAA1f,GAAA,SAAA7vD,GAEA,MADAA,GAAAnT,KAAAqO,GAAA++D,IACAtmE,EAAA67E,GAAAt0E,GAAA8E,KAoXAyvE,GAAApX,GAAA,SAAA5qE,EAAA0F,EAAA5H,GACAkC,EAAA0F,GAAA5H,GACK29E,GAAA59D,KA4BLokE,GAAArX,GAAA,SAAA5qE,EAAA0F,EAAA5H,GACAyH,GAAAC,KAAAxF,EAAA0F,GACA1F,EAAA0F,GAAAtG,KAAAtB,GAEAkC,EAAA0F,IAAA5H,IAEKojE,IAoBLghB,GAAA9f,GAAAjF,IAiKAglB,GAAAta,GAAA,SAAAlvB,EAAA/3B,EAAA2/C,GACAD,GAAA3nB,EAAA/3B,EAAA2/C,KAkCAwhB,GAAAla,GAAA,SAAAlvB,EAAA/3B,EAAA2/C,EAAAvH,GACAsH,GAAA3nB,EAAA/3B,EAAA2/C,EAAAvH,KAuBAopB,GAAA5Y,GAAA,SAAA7wB,EAAAn5C,GACA,GAAAQ,KACA,UAAA24C,EACA,MAAA34C,EAEA,IAAAi5D,IAAA,CACAz5D,GAAA03C,EAAA13C,EAAA,SAAA2I,GAGA,MAFAA,GAAA0zD,GAAA1zD,EAAAwwC,GACAsgB,MAAA9wD,EAAAvJ,OAAA,GACAuJ,IAEAqwD,GAAA7f,EAAAmhB,GAAAnhB,GAAA34C,GACAi5D,IACAj5D,EAAA84D,GAAA94D,EAAA07C,GAAAC,GAAAC,GAAA6wB,IAGA,KADA,GAAA7tE,GAAAY,EAAAZ,OACAA,KACAijE,GAAA7hE,EAAAR,EAAAZ,GAEA,OAAAoB,KA4CAm9E,GAAA3T,GAAA,SAAA7wB,EAAAn5C,GACA,aAAAm5C,KAAgC0oB,GAAA1oB,EAAAn5C,KA0KhC6iF,GAAAlW,GAAAvuE,IA0BA0kF,GAAAnW,GAAAzT,IA+XA6pB,GAAA5Z,GAAA,SAAA3oE,EAAAwiF,EAAAngF,GAEA,MADAmgF,KAAA5+E,cACA5D,GAAAqC,EAAA4K,GAAAu1E,QAgKAC,GAAA9Z,GAAA,SAAA3oE,EAAAwiF,EAAAngF,GACA,MAAArC,IAAAqC,EAAA,QAAAmgF,EAAA5+E,gBAuBA8+E,GAAA/Z,GAAA,SAAA3oE,EAAAwiF,EAAAngF,GACA,MAAArC,IAAAqC,EAAA,QAAAmgF,EAAA5+E,gBAoBA++E,GAAAna,GAAA,eA0NAoa,GAAAja,GAAA,SAAA3oE,EAAAwiF,EAAAngF,GACA,MAAArC,IAAAqC,EAAA,QAAAmgF,EAAA5+E,gBAgEAi/E,GAAAla,GAAA,SAAA3oE,EAAAwiF,EAAAngF,GACA,MAAArC,IAAAqC,EAAA,QAAA22E,GAAAwJ,KA6hBAM,GAAAna,GAAA,SAAA3oE,EAAAwiF,EAAAngF,GACA,MAAArC,IAAAqC,EAAA,QAAAmgF,EAAA92C,gBAoBAstC,GAAAxQ,GAAA,eAuDAsS,GAAA1Y,GAAA,SAAAlsB,EAAA3jC,GACA,IACA,MAAArM,GAAAgwC,EAAAzoC,GAAA8E,GACO,MAAAnU,GACP,MAAAg4E,IAAAh4E,KAAA,GAAAmF,IAAAnF,MA8BA2kF,GAAAvZ,GAAA,SAAA7wB,EAAAijC,GAKA,MAJAplC,GAAAolC,EAAA,SAAA99E,GACAA,EAAAg+D,GAAAh+D,GACAo6D,GAAAvf,EAAA76C,EAAAkE,GAAA22C,EAAA76C,GAAA66C,MAEAA,IAyJAqqC,GAAAzZ,KAuBA0Z,GAAA1Z,IAAA,GA0JAn7B,GAAAg0B,GAAA,SAAAj6D,EAAAoK,GACA,gBAAAomC,GACA,MAAAwkB,IAAAxkB,EAAAxwC,EAAAoK,MA2BA2wE,GAAA9gB,GAAA,SAAAzpB,EAAApmC,GACA,gBAAApK,GACA,MAAAg1D,IAAAxkB,EAAAxwC,EAAAoK,MA6JA4wE,GAAAlY,GAAA/zB,GA0BAksC,GAAAnY,GAAAv0B,GA0BA2sC,GAAApY,GAAAxzB,GAgGA6rC,GAAAhY,KAsCAiY,GAAAjY,IAAA,GAqMAt7D,GAAA86D,GAAA,SAAA0Y,EAAAC,GACA,MAAAD,GAAAC,GACK,GAuBLxF,GAAAhS,GAAA,QAiBAyX,GAAA5Y,GAAA,SAAA6Y,EAAAC,GACA,MAAAD,GAAAC,GACK,GAuBL1F,GAAAjS,GAAA,SAwKA4X,GAAA/Y,GAAA,SAAAgZ,EAAAC,GACA,MAAAD,GAAAC,GACK,GAuBLC,GAAA/X,GAAA,SAiBAgY,GAAAnZ,GAAA,SAAAoZ,EAAAC,GACA,MAAAD,GAAAC,GACK,EA+lBL,OAziBArxB,GAAAwgB,SACAxgB,EAAAuX,OACAvX,EAAA4uB,UACA5uB,EAAA6uB,YACA7uB,EAAAknB,gBACAlnB,EAAA8uB,cACA9uB,EAAA+uB,MACA/uB,EAAAygB,UACAzgB,EAAA9wD,QACA8wD,EAAAiwB,WACAjwB,EAAAiuB,WACAjuB,EAAA4iB,aACA5iB,EAAAif,SACAjf,EAAAyc,SACAzc,EAAA0c,WACA1c,EAAA3rD,UACA2rD,EAAAyoB,QACAzoB,EAAA0oB,YACA1oB,EAAA2oB,YACA3oB,EAAAytB,WACAztB,EAAA7tD,UACA6tD,EAAA0gB,SACA1gB,EAAA2gB,cACA3gB,EAAA4gB,YACA5gB,EAAAoqB,YACApqB,EAAAgvB,gBACAhvB,EAAAkuB,SACAluB,EAAAmuB,SACAnuB,EAAAssB,cACAtsB,EAAAusB,gBACAvsB,EAAAwsB,kBACAxsB,EAAA2c,QACA3c,EAAA4c,aACA5c,EAAA6c,kBACA7c,EAAA8c,aACA9c,EAAA+c,QACA/c,EAAA5uD,UACA4uD,EAAA4f,WACA5f,EAAA6f,eACA7f,EAAA8f,gBACA9f,EAAAua,WACAva,EAAAkd,eACAld,EAAAmd,gBACAnd,EAAAoiB,QACApiB,EAAAkwB,QACAlwB,EAAAmwB,aACAnwB,EAAAod,aACApd,EAAAklB,aACAllB,EAAAmlB,eACAnlB,EAAA4tB,WACA5tB,EAAA1oC,WACA0oC,EAAAysB,gBACAzsB,EAAA2sB,kBACA3sB,EAAA4sB,oBACA5sB,EAAAkvB,UACAlvB,EAAAmvB,YACAnvB,EAAA6tB,aACA7tB,EAAAxc,YACAwc,EAAA8tB,SACA9tB,EAAAl1D,QACAk1D,EAAA4F,UACA5F,EAAA9tD,OACA8tD,EAAAolB,WACAplB,EAAAqlB,aACArlB,EAAA1vC,WACA0vC,EAAA6oB,mBACA7oB,EAAAyb,WACAzb,EAAAqvB,SACArvB,EAAAivB,aACAjvB,EAAA1kB,UACA0kB,EAAAowB,YACApwB,EAAArmD,SACAqmD,EAAAogB,UACApgB,EAAAipB,UACAjpB,EAAAsvB,QACAtvB,EAAAslB,UACAtlB,EAAAprD,QACAorD,EAAAkgB,WACAlgB,EAAAqwB,QACArwB,EAAAouB,YACApuB,EAAAswB,aACAtwB,EAAAuwB,YACAvwB,EAAA2iB,WACA3iB,EAAAsuB,gBACAtuB,EAAA+tB,aACA/tB,EAAAqqB,QACArqB,EAAAulB,UACAvlB,EAAA5oD,YACA4oD,EAAAkpB,cACAlpB,EAAA6sB,QACA7sB,EAAAwd,WACAxd,EAAAyd,aACAzd,EAAA0d,eACA1d,EAAA8sB,UACA9sB,EAAAwwB,SACAxwB,EAAAywB,cACAzwB,EAAAuuB,SACAvuB,EAAAl3C,UACAk3C,EAAAxxD,UACAwxD,EAAA3zB,QACA2zB,EAAA8W,WACA9W,EAAAsgB,cACAtgB,EAAAxoD,OACAwoD,EAAAwlB,WACAxlB,EAAAugB,WACAvgB,EAAAnuC,SACAmuC,EAAAguB,UACAhuB,EAAAke,cACAle,EAAAme,gBACAne,EAAA5tD,SACA4tD,EAAAwiB,UACAxiB,EAAAoe,QACApe,EAAAqe,QACAre,EAAAse,aACAte,EAAAue,kBACAve,EAAAwe,aACAxe,EAAAkf,OACAlf,EAAAyiB,YACAziB,EAAA6W,QACA7W,EAAA1sD,WACA0sD,EAAAuvB,WACAvvB,EAAAwvB,aACAxvB,EAAAypB,UACAzpB,EAAAgO,iBACAhO,EAAAv2B,aACAu2B,EAAAx0B,SACAw0B,EAAA+sB,SACA/sB,EAAAgtB,WACAhtB,EAAAitB,aACAjtB,EAAAye,QACAze,EAAA0e,UACA1e,EAAA2e,YACA3e,EAAA0lB,SACA1lB,EAAA4e,SACA5e,EAAA8e,aACA9e,EAAAzxD,UACAyxD,EAAA2lB,cACA3lB,EAAA1b,UACA0b,EAAA4lB,YACA5lB,EAAAktB,WACAltB,EAAA8V,SACA9V,EAAA0iB,QACA1iB,EAAAmtB,OACAntB,EAAAotB,SACAptB,EAAAqtB,WACArtB,EAAAstB,OACAttB,EAAA+e,aACA/e,EAAAgf,iBACAhf,EAAAutB,WAGAvtB,EAAAkC,QAAAqtB,GACAvvB,EAAAsxB,UAAA9B,GACAxvB,EAAAtsD,OAAAm7E,GACA7uB,EAAAuxB,WAAArK,GAGAvtE,GAAAqmD,KAKAA,EAAA9iD,OACA8iD,EAAAgoB,WACAhoB,EAAAyvB,aACAzvB,EAAA7lD,cACA6lD,EAAAmrB,QACAnrB,EAAA6lB,SACA7lB,EAAAvf,SACAuf,EAAA8iB,aACA9iB,EAAA+iB,iBACA/iB,EAAA6iB,aACA7iB,EAAAgjB,cACAhjB,EAAA+V,UACA/V,EAAA4oB,aACA5oB,EAAA4wB,UACA5wB,EAAAmmB,YACAnmB,EAAAmF,MACAnF,EAAAqmB,UACArmB,EAAAsmB,gBACAtmB,EAAAjgD,SACAigD,EAAA0tB,QACA1tB,EAAAgd,aACAhd,EAAA4kB,WACA5kB,EAAA2tB,YACA3tB,EAAAid,iBACAjd,EAAA6kB,eACA7kB,EAAAorB,SACAprB,EAAAj1D,WACAi1D,EAAA+f,gBACA/f,EAAA8kB,SACA9kB,EAAA+kB,cACA/kB,EAAAglB,UACAhlB,EAAAilB,eACAjlB,EAAAlzD,OACAkzD,EAAAwuB,MACAxuB,EAAAyuB,OACAzuB,EAAAn8C,OACAm8C,EAAAuN,SACAvN,EAAA5xD,QACA4xD,EAAAj1C,YACAi1C,EAAAyH,YACAzH,EAAA1tD,WACA0tD,EAAA8lB,WACA9lB,EAAAovB,UACApvB,EAAAuE,eACAvE,EAAAnpD,WACAmpD,EAAAf,iBACAe,EAAAkN,eACAlN,EAAA8N,qBACA9N,EAAAijB,aACAjjB,EAAAyE,YACAzE,EAAAb,UACAa,EAAAkjB,aACAljB,EAAAmjB,WACAnjB,EAAAojB,WACApjB,EAAAqjB,eACArjB,EAAAsjB,WACAtjB,EAAAujB,YACAvjB,EAAA6I,cACA7I,EAAAyjB,aACAzjB,EAAAsM,YACAtM,EAAAX,SACAW,EAAA0jB,WACA1jB,EAAA2jB,eACA3jB,EAAAluD,SACAkuD,EAAAxqD,YACAwqD,EAAA+jB,SACA/jB,EAAA8jB,UACA9jB,EAAA4jB,YACA5jB,EAAAnsD,YACAmsD,EAAAC,gBACAD,EAAAlsD,iBACAksD,EAAAT,YACAS,EAAAkkB,iBACAlkB,EAAAP,SACAO,EAAAigB,YACAjgB,EAAA+H,YACA/H,EAAAL,gBACAK,EAAAmkB,eACAnkB,EAAAokB,aACApkB,EAAAqkB,aACArkB,EAAA7yD,QACA6yD,EAAA2vB,aACA3vB,EAAA7hD,QACA6hD,EAAAniC,eACAmiC,EAAA4vB,aACA5vB,EAAA6vB,cACA7vB,EAAA0uB,MACA1uB,EAAA2uB,OACA3uB,EAAAjoD,OACAioD,EAAA6pB,SACA7pB,EAAA8pB,QACA9pB,EAAA+pB,UACA/pB,EAAAgqB,OACAhqB,EAAAiqB,SACAjqB,EAAAmpB,aACAnpB,EAAAopB,aACAppB,EAAAqpB,cACArpB,EAAAspB,cACAtpB,EAAAupB,YACAvpB,EAAA+wB,YACA/wB,EAAAud,OACAvd,EAAA+oB,cACA/oB,EAAApxD,QACAoxD,EAAA6hB,OACA7hB,EAAAumB,OACAvmB,EAAAymB,UACAzmB,EAAA0mB,YACA1mB,EAAApsB,YACAosB,EAAA+lB,UACA/lB,EAAA7rD,UACA6rD,EAAAmgB,eACAngB,EAAA6mB,UACA7mB,EAAAh+B,WACAg+B,EAAA9yD,UACA8yD,EAAAkxB,SACAlxB,EAAAD,eACAC,EAAAqgB,UACArgB,EAAAzY,QACAyY,EAAA8vB,aACA9vB,EAAAppB,QACAopB,EAAA4d,eACA5d,EAAA6d,iBACA7d,EAAA8d,iBACA9d,EAAA+d,mBACA/d,EAAAge,qBACAhe,EAAAie,qBACAje,EAAA+vB,aACA/vB,EAAA+mB,cACA/mB,EAAAmxB,YACAnxB,EAAAkqB,OACAlqB,EAAAmqB,SACAnqB,EAAAnyB,YACAmyB,EAAAwpB,SACAxpB,EAAAyY,YACAzY,EAAAiI,aACAjI,EAAAkI,YACAlI,EAAAioB,WACAjoB,EAAAruD,YACAquD,EAAA0kB,iBACA1kB,EAAA/yD,YACA+yD,EAAAkoB,WACAloB,EAAAllC,QACAklC,EAAAmoB,WACAnoB,EAAAooB,aACApoB,EAAAqoB,YACAroB,EAAA9vD,YACA8vD,EAAA0pB,YACA1pB,EAAAgwB,aACAhwB,EAAAkmB,cAGAlmB,EAAAwxB,KAAAzmF,GACAi1D,EAAAyxB,UAAA1R,GACA/f,EAAA0xB,MAAAtjF,GAEAuL,GAAAqmD,EAAA,WACA,GAAAlyC,KAMA,OALA06C,IAAAxI,EAAA,SAAA5c,EAAAuyB,GACAljE,GAAAC,KAAAstD,EAAApmD,UAAA+7D,KACA7nD,EAAA6nD,GAAAvyB,KAGAt1B,MACWmxD,OAAA,IAWXjf,EAAA1X,WAGA5E,GAAA,yEAAAiyB,GACA3V,EAAA2V,GAAAptC,YAAAy3B,IAIAtc,GAAA,wBAAAiyB,EAAApmE,GACA2wD,EAAAtmD,UAAA+7D,GAAA,SAAA/jE,GACAA,MAAA+I,GAAA,EAAAivD,GAAA3B,GAAAr2D,GAAA,EAEA,IAAA1E,GAAA/B,KAAA01D,eAAAtxD,EACA,GAAA2wD,GAAA/0D,MACAA,KAAAs1C,OAUA,OARAvzC,GAAA2zD,aACA3zD,EAAA6zD,cAAAc,GAAAjwD,EAAA1E,EAAA6zD,eAEA7zD,EAAA8zD,UAAA10D,MACAi7C,KAAAsa,GAAAjwD,EAAAy4C,IACA//C,KAAAqrE,GAAAzoE,EAAA0zD,QAAA,gBAGA1zD,GAGAgzD,EAAAtmD,UAAA+7D,EAAA,kBAAA/jE,GACA,MAAAzG,MAAA2rE,UAAAnB,GAAA/jE,GAAAklE,aAKApzB,GAAA,qCAAAiyB,EAAApmE,GACA,GAAAjF,GAAAiF,EAAA,EACAoiF,EAAArnF,GAAAy/C,IAAAz/C,GAAA2/C,EAEAiW,GAAAtmD,UAAA+7D,GAAA,SAAAnyB,GACA,GAAAt2C,GAAA/B,KAAAs1C,OAMA,OALAvzC,GAAA4zD,cAAAx0D,MACAk3C,SAAA4qB,GAAA5qB,EAAA,GACAl5C,SAEA4C,EAAA2zD,aAAA3zD,EAAA2zD,cAAA8wB,EACAzkF,KAKAw2C,GAAA,wBAAAiyB,EAAApmE,GACA,GAAAqiF,GAAA,QAAAriF,EAAA,WAEA2wD,GAAAtmD,UAAA+7D,GAAA,WACA,MAAAxqE,MAAAymF,GAAA,GAAAh/E,QAAA,MAKA8wC,GAAA,2BAAAiyB,EAAApmE,GACA,GAAAsiF,GAAA,QAAAtiF,EAAA,WAEA2wD,GAAAtmD,UAAA+7D,GAAA,WACA,MAAAxqE,MAAA01D,aAAA,GAAAX,GAAA/0D,WAAA0mF,GAAA,MAIA3xB,EAAAtmD,UAAA8iE,QAAA,WACA,MAAAvxE,MAAAiG,OAAA2Z,KAGAm1C,EAAAtmD,UAAA8zE,KAAA,SAAA7pC,GACA,MAAA14C,MAAAiG,OAAAyyC,GAAAz1C,QAGA8xD,EAAAtmD,UAAA+zE,SAAA,SAAA9pC,GACA,MAAA14C,MAAA2rE,UAAA4W,KAAA7pC,IAGAqc,EAAAtmD,UAAAi0E,UAAAve,GAAA,SAAAj6D,EAAAoK,GACA,wBAAApK,GACA,GAAA6qD,GAAA/0D,MAEAA,KAAA+G,IAAA,SAAAU,GACA,MAAAy3D,IAAAz3D,EAAAyC,EAAAoK,OAIAygD,EAAAtmD,UAAAkP,OAAA,SAAA+6B,GACA,MAAA14C,MAAAiG,OAAAgvE,GAAAhS,GAAAvqB,MAGAqc,EAAAtmD,UAAAiY,MAAA,SAAAte,EAAA0vB,GACA1vB,EAAA00D,GAAA10D,EAEA,IAAArG,GAAA/B,IACA,OAAA+B,GAAA2zD,eAAAttD,EAAA,GAAA0vB,EAAA,GACA,GAAAi9B,GAAAhzD,IAEAqG,EAAA,EACArG,IAAAoxE,WAAA/qE,GACOA,IACPrG,IAAAyvE,KAAAppE,IAEA0vB,IAAAtoB,KACAsoB,EAAAglC,GAAAhlC,GACA/1B,EAAA+1B,EAAA,EAAA/1B,EAAA0vE,WAAA35C,GAAA/1B,EAAAmxE,KAAAp7C,EAAA1vB,IAEArG,IAGAgzD,EAAAtmD,UAAA2kE,eAAA,SAAA16B,GACA,MAAA14C,MAAA2rE,UAAA0H,UAAA36B,GAAAizB,WAGA5W,EAAAtmD,UAAAtG,QAAA,WACA,MAAAnI,MAAAkzE,KAAAh0B,KAIAme,GAAAtI,EAAAtmD,UAAA,SAAAwpC,EAAAuyB,GACA,GAAAmc,GAAA,qCAAAlhF,KAAA+kE,GACAoc,EAAA,kBAAAnhF,KAAA+kE,GACAqc,EAAAhyB,EAAA+xB,EAAA,gBAAApc,EAAA,YAAAA,GACAsc,EAAAF,GAAA,QAAAnhF,KAAA+kE,EAEAqc,KAGAhyB,EAAApmD,UAAA+7D,GAAA,WACA,GAAA/iE,GAAAzH,KAAAo1D,YACA9gD,EAAAsyE,GAAA,GAAA5+E,UACA++E,EAAAt/E,YAAAstD,GACA1c,EAAA/jC,EAAA,GACA0yE,EAAAD,GAAAr7E,GAAAjE,GAEAusE,EAAA,SAAAvsE,GACA,GAAA1F,GAAA8kF,EAAA5+E,MAAA4sD,EAAA3b,GAAAzxC,GAAA6M,GACA,OAAAsyE,IAAAzxB,EAAApzD,EAAA,GAAAA,EAGAilF,IAAAL,GAAA,kBAAAtuC,IAAA,GAAAA,EAAA13C,SAEAomF,EAAAC,GAAA,EAEA,IAAA7xB,GAAAn1D,KAAAs1D,UACA2xB,IAAAjnF,KAAAq1D,YAAA10D,OACAumF,EAAAJ,IAAA3xB,EACAgyB,EAAAJ,IAAAE,CAEA,KAAAH,GAAAE,EAAA,CACAv/E,EAAA0/E,EAAA1/E,EAAA,GAAAstD,GAAA/0D,KACA,IAAA+B,GAAAk2C,EAAAhwC,MAAAR,EAAA6M,EAEA,OADAvS,GAAAszD,YAAAl0D,MAAmC82C,KAAAyzB,GAAAp3D,MAAA0/D,GAAA97B,QAAA1oC,KACnC,GAAAwlD,GAAAjzD,EAAAozD,GAEA,MAAA+xB,IAAAC,EACAlvC,EAAAhwC,MAAAjI,KAAAsU,IAEAvS,EAAA/B,KAAA0rE,KAAAsI,GACAkT,EAAAN,EAAA7kF,EAAA0F,QAAA,GAAA1F,EAAA0F,QAAA1F,OAKAw2C,GAAA,yDAAAiyB,GACA,GAAAvyB,GAAAhI,GAAAu6B,GACA4c,EAAA,0BAAA3hF,KAAA+kE,GAAA,aACAsc,EAAA,kBAAArhF,KAAA+kE,EAEA3V,GAAApmD,UAAA+7D,GAAA,WACA,GAAAl2D,GAAAtM,SACA,IAAA8+E,IAAA9mF,KAAAs1D,UAAA,CACA,GAAA7tD,GAAAzH,KAAAyH,OACA,OAAAwwC,GAAAhwC,MAAAyD,GAAAjE,QAAA6M,GAEA,MAAAtU,MAAAonF,GAAA,SAAA3/E,GACA,MAAAwwC,GAAAhwC,MAAAyD,GAAAjE,QAAA6M,QAMA+oD,GAAAtI,EAAAtmD,UAAA,SAAAwpC,EAAAuyB,GACA,GAAAqc,GAAAhyB,EAAA2V,EACA,IAAAqc,EAAA,CACA,GAAAhnF,GAAAgnF,EAAAr5E,KAAA,IACA6hE,GAAAxvE,KAAAwvE,GAAAxvE,QAEAsB,MAAoBqM,KAAAg9D,EAAAvyB,KAAA4uC,OAIpBxX,GAAAlE,GAAA37D,GAAAuuC,IAAAvwC,QACAA,KAAA,UACAyqC,KAAAzoC,KAIAulD,EAAAtmD,UAAA6mC,MAAAwgB,EACAf,EAAAtmD,UAAAk9D,QAAA3V,EACAjB,EAAAtmD,UAAAhH,MAAAwuD,GAGApB,EAAApmD,UAAAm1E,GAAAvB,GACAxtB,EAAApmD,UAAAqlE,MAAAG,GACApf,EAAApmD,UAAA44E,OAAAnT,GACArf,EAAApmD,UAAAokB,KAAAshD,GACAtf,EAAApmD,UAAAu9D,MAAAqI,GACAxf,EAAApmD,UAAAk9D,QAAA2I,GACAzf,EAAApmD,UAAA64E,OAAAzyB,EAAApmD,UAAA4qE,QAAAxkB,EAAApmD,UAAAhH,MAAA+sE,GAGA3f,EAAApmD,UAAA83E,MAAA1xB,EAAApmD,UAAAxL,KAEAk2E,KACAtkB,EAAApmD,UAAA0qE,IAAA/E,IAEAvf,GAMAjkC,GAAAgkC,IAQApxB,IAAA5S,MAIAinB,EAAA,WACA,MAAAjnB,KACKrpB,KAAA3I,EAAAyD,EAAAzD,EAAAD,MAAA6Q,KAAA7Q,EAAAC,QAAAi5C,KAaJtwC,KAAAvH,QRy9S4BuH,KAAK3I,EAASyD,EAAoB,IAAKA,EAAoB,KAAK1D,KAIvF4oF,GACA,SAAU5oF,EAAQC,EAASyD,ISxp0BjC,SAAA+D,EAAAkX,GACAA,EAAA1e,IAGCoB,EAAA,SAAApB,GAA4B,YAkC7B,SAAA4oF,GAAAC,GACA,gBAAA3qE,EAAA4qE,GACA,MAAAC,IAAAF,EAAA3qE,GAAA4qE,IAeA,QAAA3vC,GAAAhwC,EAAAsB,GACA,OAAAtB,EAAAsB,GA2HA,QAAAu+E,GAAAx/E,EAAAwuC,EAAAm6B,GACA,GAAA8W,GAAAl7E,KAAAm7E,IAAAlxC,EAAAxuC,GAAAuE,KAAAC,IAAA,EAAAmkE,GACAgX,EAAAp7E,KAAAq7E,IAAA,GAAAr7E,KAAAszE,MAAAtzE,KAAAs7E,IAAAJ,GAAAl7E,KAAAu7E,OACA33E,EAAAs3E,EAAAE,CAIA,OAHAx3E,IAAA43E,GAAAJ,GAAA,GACAx3E,GAAA63E,GAAAL,GAAA,EACAx3E,GAAA83E,KAAAN,GAAA,GACAnxC,EAAAxuC,GAAA2/E,IA2PA,QAAApnF,GAAAmc,GACA,MAAAA,GAAAnc,OAmBA,QAAA2nF,GAAAZ,GACA,mBAAAA,EAAA,MAGA,QAAAa,GAAAC,GACA,qBAAAA,EAAA,IAGA,QAAAC,GAAAC,GACA,GAAAtvC,GAAAsvC,EAAAC,YAAA,CAEA,OADAD,GAAA3C,UAAA3sC,EAAAzsC,KAAAo5E,MAAA3sC,IACA,SAAAt8B,GACA,MAAA4rE,GAAA5rE,GAAAs8B,GAIA,QAAAwvC,KACA,OAAA5oF,KAAA6oF,OAGA,QAAAC,GAAAC,EAAAL,GAWA,QAAAI,GAAA73E,GACA,GAAAkoC,GAAA,MAAA6vC,EAAAN,EAAAO,MAAAP,EAAAO,MAAAhhF,MAAAygF,EAAAQ,GAAAR,EAAAS,SAAAH,EACAI,EAAA,MAAAC,EAAAX,EAAAW,WAAAX,EAAAW,WAAAphF,MAAAygF,EAAAQ,GAAAI,GAAAD,EACAE,EAAA58E,KAAAC,IAAA48E,EAAA,GAAAC,EACApE,EAAAqD,EAAArD,QACAqE,EAAArE,EAAA,MACAsE,EAAAtE,IAAA1kF,OAAA,MACAs6E,GAAAyN,EAAAC,UAAAF,EAAAa,IAAAZ,EAAAzhB,QACA2iB,EAAA34E,EAAA24E,UAAA34E,EAAA24E,YAAA34E,EACA/G,EAAA0/E,EAAAC,UAAA,WAAA/4E,MAAA,OACAg5E,EAAAF,EAAAC,UAAA,SAAA/4E,KAAAqoC,EAAAuvC,GAAAqB,QACAC,EAAAF,EAAAG,OACAC,EAAAJ,EAAA5wD,QAAAixD,OAAA,KAAAxqD,KAAA,gBACAyqD,EAAAN,EAAAO,OAAA,QACAt5E,EAAA+4E,EAAAO,OAAA,OAEAngF,KAAAg6E,MAAAh6E,EAAAgvB,QAAA1P,OAAA,gBACAmW,KAAA,kBACAA,KAAA,kBAEAmqD,IAAA5F,MAAAgG,GAEAE,IAAAlG,MAAAgG,EAAAC,OAAA,QACAxqD,KAAA,iBACAA,KAAA+nD,EAAA,IAAA4C,EAAAd,GACA7pD,KAAA6oD,EAAA,QACA7oD,KAAA6oD,EAAA,SAEAz3E,IAAAmzE,MAAAgG,EAAAC,OAAA,QACAxqD,KAAA,eACAA,KAAA+nD,EAAA4C,EAAAf,GACA5pD,KAAA6oD,EAAA,IACA7oD,KAAA,KAAAopD,IAAA3qD,GAAA,MAAA2qD,IAAAwB,GAAA,oBAEAt5E,IAAA24E,IACA1/E,IAAA+f,WAAAhZ,GACA64E,IAAA7/D,WAAAhZ,GACAm5E,IAAAngE,WAAAhZ,GACAF,IAAAkZ,WAAAhZ,GAEA+4E,IAAA//D,WAAAhZ,GACA0uB,KAAA,UAAA6qD,IACA7qD,KAAA,qBAAA7iB,GAA0C,MAAAs7D,UAAAt7D,EAAAm+D,EAAAn+D,IAAAwhB,EAAAxhB,GAAA9c,KAAA02B,aAAA,eAE1CwzD,EACAvqD,KAAA,UAAA6qD,IACA7qD,KAAA,qBAAA7iB,GAA0C,GAAAuT,GAAArwB,KAAAiE,WAAA4kF,MAAgC,OAAAvqD,GAAAjO,GAAA+nD,SAAA/nD,IAAAvT,IAAAuT,EAAA4qD,EAAAn+D,OAG1EktE,EAAA3mF,SAEA6G,EACAy1B,KAAA,IAAAopD,IAAA7qD,IAAA6qD,GAAAtyC,GACA,IAAA6zC,EAAAG,EAAA,IAAAf,EAAA,QAAAC,EAAA,IAAAW,EAAAG,EACA,IAAAf,EAAA,IAAAY,EAAAG,EAAA,QAAAd,EAAA,IAAAW,EAAAG,GAEAX,EACAnqD,KAAA,aACAA,KAAA,qBAAA7iB,GAAwC,MAAAwhB,GAAA28C,EAAAn+D,MAExCstE,EACAzqD,KAAA+nD,EAAA,IAAA4C,EAAAd,GAEAz4E,EACA4uB,KAAA+nD,EAAA4C,EAAAf,GACAx4E,KAAAq4E,GAEAQ,EAAA3jF,OAAA2iF,GACAjpD,KAAA,eACAA,KAAA,gBACAA,KAAA,4BACAA,KAAA,cAAAopD,IAAAtyC,GAAA,QAAAsyC,IAAA7qD,GAAA,gBAEA0rD,EACAvD,KAAA,WAA0BrmF,KAAA6oF,OAAA5N,IApF1B,GAOAyM,GAPAwB,KACAF,EAAA,KACAK,EAAA,KACAG,EAAA,EACAiB,EAAA,EACAhB,EAAA,EACAa,EAAAvB,IAAA3qD,IAAA2qD,IAAA7qD,IAAA,IACAsqD,EAAAO,IAAA7qD,IAAA6qD,IAAAtyC,IAAAixC,EAAA,UAAAA,EAAA,SACAppD,EAAAyqD,IAAA3qD,IAAA2qD,IAAAwB,GAAAjC,EAAAC,CAmHA,OApCAO,GAAAJ,MAAA,SAAA93D,GACA,MAAA5oB,WAAArH,QAAA+nF,EAAA93D,EAAAk4D,GAAAJ,GAGAI,EAAAG,MAAA,WACA,MAAAC,GAAAwB,GAAAnjF,KAAAS,WAAA8gF,GAGAA,EAAAI,cAAA,SAAAt4D,GACA,MAAA5oB,WAAArH,QAAAuoF,EAAA,MAAAt4D,KAAA85D,GAAAnjF,KAAAqpB,GAAAk4D,GAAAI,EAAAxiE,SAGAoiE,EAAAE,WAAA,SAAAp4D,GACA,MAAA5oB,WAAArH,QAAAqoF,EAAA,MAAAp4D,EAAA,KAAA85D,GAAAnjF,KAAAqpB,GAAAk4D,GAAAE,KAAAtiE,SAGAoiE,EAAAO,WAAA,SAAAz4D,GACA,MAAA5oB,WAAArH,QAAA0oF,EAAAz4D,EAAAk4D,GAAAO,GAGAP,EAAA6B,SAAA,SAAA/5D,GACA,MAAA5oB,WAAArH,QAAA6oF,EAAAiB,GAAA75D,EAAAk4D,GAAAU,GAGAV,EAAAU,cAAA,SAAA54D,GACA,MAAA5oB,WAAArH,QAAA6oF,GAAA54D,EAAAk4D,GAAAU,GAGAV,EAAA2B,cAAA,SAAA75D,GACA,MAAA5oB,WAAArH,QAAA8pF,GAAA75D,EAAAk4D,GAAA2B,GAGA3B,EAAAW,YAAA,SAAA74D,GACA,MAAA5oB,WAAArH,QAAA8oF,GAAA74D,EAAAk4D,GAAAW,GAGAX,EAGA,QAAA8B,GAAAlC,GACA,MAAAI,GAAA1qD,GAAAsqD,GAGA,QAAAmC,GAAAnC,GACA,MAAAI,GAAAryC,GAAAiyC,GAGA,QAAAoC,GAAApC,GACA,MAAAI,GAAAyB,GAAA7B,GAGA,QAAAqC,GAAArC,GACA,MAAAI,GAAA5qD,GAAAwqD,GAKA,QAAAsC,KACA,OAA8CC,GAA9CvqF,EAAA,EAAA+F,EAAAuB,UAAArH,OAAAiwB,KAAkDlwB,EAAA+F,IAAO/F,EAAA,CACzD,KAAAuqF,EAAAjjF,UAAAtH,GAAA,KAAAuqF,IAAAr6D,GAAA,SAAAtrB,OAAA,iBAAA2lF,EACAr6D,GAAAq6D,MAEA,UAAAC,GAAAt6D,GAGA,QAAAs6D,GAAAt6D,GACA5wB,KAAA4wB,IAGA,QAAAu6D,GAAAC,EAAAC,GACA,MAAAD,GAAAz7D,OAAA1oB,MAAA,SAAAF,IAAA,SAAAkkF,GACA,GAAAz9E,GAAA,GAAA9M,EAAAuqF,EAAA9jF,QAAA,IAEA,IADAzG,GAAA,IAAA8M,EAAAy9E,EAAAvkE,MAAAhmB,EAAA,GAAAuqF,IAAAvkE,MAAA,EAAAhmB,IACAuqF,IAAAI,EAAA/jF,eAAA2jF,GAAA,SAAA3lF,OAAA,iBAAA2lF,EACA,QAAY9rF,KAAA8rF,EAAAz9E,UA6CZ,QAAA7L,GAAAxC,EAAAqO,GACA,OAAA5D,GAAAlJ,EAAA,EAAA+F,EAAAtH,EAAAwB,OAAqCD,EAAA+F,IAAO/F,EAC5C,IAAAkJ,EAAAzK,EAAAuB,IAAA8M,SACA,MAAA5D,GAAAnC,MAKA,QAAA4E,GAAAlN,EAAAqO,EAAAmR,GACA,OAAAje,GAAA,EAAA+F,EAAAtH,EAAAwB,OAAkCD,EAAA+F,IAAO/F,EACzC,GAAAvB,EAAAuB,GAAA8M,SAAA,CACArO,EAAAuB,GAAA+C,GAAAtE,IAAAunB,MAAA,EAAAhmB,GAAAwI,OAAA/J,EAAAunB,MAAAhmB,EAAA,GACA,OAIA,MADA,OAAAie,GAAAxf,EAAAgC,MAAmCqM,OAAA/F,MAAAkX,IACnCxf,EAmBA,QAAAmsF,GAAA99E,GACA,kBACA,GAAAzK,GAAA/C,KAAAurF,cACAC,EAAAxrF,KAAAyrF,YACA,OAAAD,KAAAE,IAAA3oF,EAAA40C,gBAAA8zC,eAAAC,GACA3oF,EAAAC,cAAAwK,GACAzK,EAAAskB,gBAAAmkE,EAAAh+E,IAIA,QAAAm+E,GAAAC,GACA,kBACA,MAAA5rF,MAAAurF,cAAAlkE,gBAAAukE,EAAAr1C,MAAAq1C,EAAAC,QAaA,QAAAC,KACA,UAAAC,GAGA,QAAAA,KACA/rF,KAAA4wB,EAAA,OAAAo7D,IAAAlqF,SAAA,IAuDA,QAAAmqF,GAAAC,EAAA9nF,EAAAsvE,GAEA,MADAwY,GAAAC,EAAAD,EAAA9nF,EAAAsvE,GACA,SAAAvhE,GACA,GAAAi6E,GAAAj6E,EAAAk6E,aACAD,SAAApsF,MAAA,EAAAosF,EAAAE,wBAAAtsF,QACAksF,EAAA3kF,KAAAvH,KAAAmS,IAKA,QAAAg6E,GAAAD,EAAA9nF,EAAAsvE,GACA,gBAAA6Y,GACA,GAAAC,GAAA5tF,EAAAuT,KACAvT,GAAAuT,MAAAo6E,CACA,KACAL,EAAA3kF,KAAAvH,UAAAk3D,SAAA9yD,EAAAsvE,GACK,QACL90E,EAAAuT,MAAAq6E,IAKA,QAAAC,GAAArB,GACA,MAAAA,GAAAz7D,OAAA1oB,MAAA,SAAAF,IAAA,SAAAkkF,GACA,GAAAz9E,GAAA,GAAA9M,EAAAuqF,EAAA9jF,QAAA,IAEA,OADAzG,IAAA,IAAA8M,EAAAy9E,EAAAvkE,MAAAhmB,EAAA,GAAAuqF,IAAAvkE,MAAA,EAAAhmB,KACYvB,KAAA8rF,EAAAz9E,UAIZ,QAAAk/E,GAAAC,GACA,kBACA,GAAA96E,GAAA7R,KAAA4sF,IACA,IAAA/6E,EAAA,CACA,OAAAg7E,GAAAnqF,EAAA,EAAAhC,GAAA,EAAAuI,EAAA4I,EAAAlR,OAA6C+B,EAAAuG,IAAOvG,EACpDmqF,EAAAh7E,EAAAnP,GAAAiqF,EAAAxtF,MAAA0tF,EAAA1tF,OAAAwtF,EAAAxtF,MAAA0tF,EAAAr/E,OAAAm/E,EAAAn/E,KAGAqE,IAAAnR,GAAAmsF,EAFA7sF,KAAA40B,oBAAAi4D,EAAA1tF,KAAA0tF,EAAAX,SAAAW,EAAAx6E,WAKA3R,EAAAmR,EAAAlR,OAAAD,QACAV,MAAA4sF,OAIA,QAAAE,GAAAH,EAAAllF,EAAA4K,GACA,GAAAklE,GAAAwV,GAAAzlF,eAAAqlF,EAAAxtF,MAAA8sF,EAAAE,CACA,iBAAArvE,EAAApc,EAAAgzE,GACA,GAAAmZ,GAAAh7E,EAAA7R,KAAA4sF,KAAAV,EAAA3U,EAAA9vE,EAAA/G,EAAAgzE,EACA,IAAA7hE,EAAA,OAAAnP,GAAA,EAAAuG,EAAA4I,EAAAlR,OAA0C+B,EAAAuG,IAAOvG,EACjD,IAAAmqF,EAAAh7E,EAAAnP,IAAAvD,OAAAwtF,EAAAxtF,MAAA0tF,EAAAr/E,OAAAm/E,EAAAn/E,KAIA,MAHAxN,MAAA40B,oBAAAi4D,EAAA1tF,KAAA0tF,EAAAX,SAAAW,EAAAx6E,SACArS,KAAA20B,iBAAAk4D,EAAA1tF,KAAA0tF,EAAAX,WAAAW,EAAAx6E,gBACAw6E,EAAAplF,QAIAzH,MAAA20B,iBAAAg4D,EAAAxtF,KAAA+sF,EAAA75E,GACAw6E,GAAS1tF,KAAAwtF,EAAAxtF,KAAAqO,KAAAm/E,EAAAn/E,KAAA/F,QAAAykF,WAAA75E,WACTR,EACAA,EAAA1Q,KAAA0rF,GADA7sF,KAAA4sF,MAAAC,IA0BA,QAAAG,GAAAT,EAAAL,EAAAe,EAAA34E,GACA,GAAAk4E,GAAA5tF,EAAAuT,KACAo6E,GAAAW,YAAAtuF,EAAAuT,MACAvT,EAAAuT,MAAAo6E,CACA,KACA,MAAAL,GAAAjkF,MAAAglF,EAAA34E,GACG,QACH1V,EAAAuT,MAAAq6E,GA8BA,QAAAW,MAuBA,QAAAC,KACA,SA8CA,QAAAC,GAAAv/E,EAAAw/E,GACAttF,KAAAurF,cAAAz9E,EAAAy9E,cACAvrF,KAAAyrF,aAAA39E,EAAA29E,aACAzrF,KAAAutF,MAAA,KACAvtF,KAAAwtF,QAAA1/E,EACA9N,KAAAk3D,SAAAo2B,EAmBA,QAAAG,GAAA3/E,EAAA4lE,EAAAx6C,EAAA91B,EAAA6mF,EAAAn5E,GASA,IARA,GACAgE,GADApU,EAAA,EAEAgtF,EAAAha,EAAA/yE,OACAgtF,EAAA78E,EAAAnQ,OAKQD,EAAAitF,IAAgBjtF,GACxBoU,EAAA4+D,EAAAhzE,KACAoU,EAAAoiD,SAAApmD,EAAApQ,GACA0C,EAAA1C,GAAAoU,GAEAokB,EAAAx4B,GAAA,GAAA2sF,GAAAv/E,EAAAgD,EAAApQ,GAKA,MAAQA,EAAAgtF,IAAiBhtF,GACzBoU,EAAA4+D,EAAAhzE,MACAupF,EAAAvpF,GAAAoU,GAKA,QAAAguE,GAAAh1E,EAAA4lE,EAAAx6C,EAAA91B,EAAA6mF,EAAAn5E,EAAAjR,GACA,GAAAa,GACAoU,EAKA84E,EAJAC,KACAH,EAAAha,EAAA/yE,OACAgtF,EAAA78E,EAAAnQ,OACAmtF,EAAA,GAAAxlF,OAAAolF,EAKA,KAAAhtF,EAAA,EAAaA,EAAAgtF,IAAiBhtF,GAC9BoU,EAAA4+D,EAAAhzE,MACAotF,EAAAptF,GAAAktF,EAAAG,GAAAluF,EAAA0H,KAAAuN,IAAAoiD,SAAAx2D,EAAAgzE,GACAka,IAAAC,GACA5D,EAAAvpF,GAAAoU,EAEA+4E,EAAAD,GAAA94E,EAQA,KAAApU,EAAA,EAAaA,EAAAitF,IAAgBjtF,EAC7BktF,EAAAG,GAAAluF,EAAA0H,KAAAuG,EAAAgD,EAAApQ,KAAAoQ,IACAgE,EAAA+4E,EAAAD,KACAxqF,EAAA1C,GAAAoU,EACAA,EAAAoiD,SAAApmD,EAAApQ,GACAmtF,EAAAD,GAAA,MAEA10D,EAAAx4B,GAAA,GAAA2sF,GAAAv/E,EAAAgD,EAAApQ,GAKA,KAAAA,EAAA,EAAaA,EAAAgtF,IAAiBhtF,GAC9BoU,EAAA4+D,EAAAhzE,KAAAmtF,EAAAC,EAAAptF,MAAAoU,IACAm1E,EAAAvpF,GAAAoU,GAsGA,QAAAk5E,GAAAjmF,EAAAsB,GACA,MAAAtB,GAAAsB,GAAA,EAAAtB,EAAAsB,EAAA,EAAAtB,GAAAsB,EAAA,EAAA4kF,IAiDA,QAAAC,GAAA1gF,GACA,kBACAxN,KAAA6sB,gBAAArf,IAIA,QAAA2gF,GAAAvC,GACA,kBACA5rF,KAAAyuB,kBAAAm9D,EAAAr1C,MAAAq1C,EAAAC,QAIA,QAAAuC,GAAA5gF,EAAA/F,GACA,kBACAzH,KAAA4E,aAAA4I,EAAA/F,IAIA,QAAA4mF,GAAAzC,EAAAnkF,GACA,kBACAzH,KAAA+uB,eAAA68D,EAAAr1C,MAAAq1C,EAAAC,MAAApkF,IAIA,QAAA6mF,GAAA9gF,EAAA/F,GACA,kBACA,GAAAksC,GAAAlsC,EAAAQ,MAAAjI,KAAAgI,UACA,OAAA2rC,EAAA3zC,KAAA6sB,gBAAArf,GACAxN,KAAA4E,aAAA4I,EAAAmmC,IAIA,QAAA46C,GAAA3C,EAAAnkF,GACA,kBACA,GAAAksC,GAAAlsC,EAAAQ,MAAAjI,KAAAgI,UACA,OAAA2rC,EAAA3zC,KAAAyuB,kBAAAm9D,EAAAr1C,MAAAq1C,EAAAC,OACA7rF,KAAA+uB,eAAA68D,EAAAr1C,MAAAq1C,EAAAC,MAAAl4C,IA0BA,QAAA66C,GAAAhhF,GACA,kBACAxN,KAAA01B,MAAA+4D,eAAAjhF,IAIA,QAAAkhF,GAAAlhF,EAAA/F,EAAAknF,GACA,kBACA3uF,KAAA01B,MAAAkd,YAAAplC,EAAA/F,EAAAknF,IAIA,QAAAC,GAAAphF,EAAA/F,EAAAknF,GACA,kBACA,GAAAh7C,GAAAlsC,EAAAQ,MAAAjI,KAAAgI,UACA,OAAA2rC,EAAA3zC,KAAA01B,MAAA+4D,eAAAjhF,GACAxN,KAAA01B,MAAAkd,YAAAplC,EAAAmmC,EAAAg7C,IAgBA,QAAAE,GAAArhF,GACA,wBACAxN,MAAAwN,IAIA,QAAAshF,GAAAthF,EAAA/F,GACA,kBACAzH,KAAAwN,GAAA/F,GAIA,QAAAsnF,GAAAvhF,EAAA/F,GACA,kBACA,GAAAksC,GAAAlsC,EAAAQ,MAAAjI,KAAAgI,UACA,OAAA2rC,QAAA3zC,MAAAwN,GACAxN,KAAAwN,GAAAmmC,GAaA,QAAAq7C,GAAAt1C,GACA,MAAAA,GAAA/pB,OAAA1oB,MAAA,SAGA,QAAAwvB,GAAA3hB,GACA,MAAAA,GAAA2hB,WAAA,GAAAw4D,GAAAn6E,GAGA,QAAAm6E,GAAAn6E,GACA9U,KAAAkvF,MAAAp6E,EACA9U,KAAAmvF,OAAAH,EAAAl6E,EAAA4hB,aAAA,cAuBA,QAAA04D,GAAAt6E,EAAAu6E,GAEA,IADA,GAAA9uF,GAAAk2B,EAAA3hB,GAAApU,GAAA,EAAA+F,EAAA4oF,EAAA1uF,SACAD,EAAA+F,GAAAlG,EAAAwR,IAAAs9E,EAAA3uF,IAGA,QAAA4uF,GAAAx6E,EAAAu6E,GAEA,IADA,GAAA9uF,GAAAk2B,EAAA3hB,GAAApU,GAAA,EAAA+F,EAAA4oF,EAAA1uF,SACAD,EAAA+F,GAAAlG,EAAA8C,OAAAgsF,EAAA3uF,IAGA,QAAA6uF,GAAAF,GACA,kBACAD,EAAApvF,KAAAqvF,IAIA,QAAAG,GAAAH,GACA,kBACAC,EAAAtvF,KAAAqvF,IAIA,QAAAI,IAAAJ,EAAA5nF,GACA,mBACAA,EAAAQ,MAAAjI,KAAAgI,WAAAonF,EAAAE,GAAAtvF,KAAAqvF,IAmBA,QAAAK,MACA1vF,KAAA6nB,YAAA,GAGA,QAAA8nE,IAAAloF,GACA,kBACAzH,KAAA6nB,YAAApgB,GAIA,QAAAmoF,IAAAnoF,GACA,kBACA,GAAAksC,GAAAlsC,EAAAQ,MAAAjI,KAAAgI,UACAhI,MAAA6nB,YAAA,MAAA8rB,EAAA,GAAAA,GAaA,QAAAk8C,MACA7vF,KAAA6+B,UAAA,GAGA,QAAAixD,IAAAroF,GACA,kBACAzH,KAAA6+B,UAAAp3B,GAIA,QAAAsoF,IAAAtoF,GACA,kBACA,GAAAksC,GAAAlsC,EAAAQ,MAAAjI,KAAAgI,UACAhI,MAAA6+B,UAAA,MAAA8U,EAAA,GAAAA,GAaA,QAAAq8C,MACAhwF,KAAA2nB,aAAA3nB,KAAAiE,WAAAf,YAAAlD,MAOA,QAAA46D,MACA56D,KAAAiwF,iBAAAjwF,KAAAiE,WAAAU,aAAA3E,UAAAiE,WAAAkB,YAcA,QAAA+qF,MACA,YAWA,QAAA7sF,MACA,GAAAyK,GAAA9N,KAAAiE,UACA6J,MAAA5J,YAAAlE,MAaA,QAAA68B,IAAA/nB,EAAA3V,EAAAgxF,GACA,GAAAC,GAAAhwF,GAAA0U,GACA3C,EAAAi+E,EAAAC,WAEAl+E,GACAA,EAAA,GAAAA,GAAAhT,EAAAgxF,IAEAh+E,EAAAi+E,EAAArtF,SAAA45B,YAAA,SACAwzD,GAAAh+E,EAAAyqB,UAAAz9B,EAAAgxF,EAAAG,QAAAH,EAAAI,YAAAp+E,EAAAq+E,OAAAL,EAAAK,QACAr+E,EAAAyqB,UAAAz9B,GAAA,OAGA2V,EAAA+nB,cAAA1qB,GAGA,QAAAs+E,IAAAtxF,EAAAgxF,GACA,kBACA,MAAAtzD,IAAA78B,KAAAb,EAAAgxF,IAIA,QAAAO,IAAAvxF,EAAAgxF,GACA,kBACA,MAAAtzD,IAAA78B,KAAAb,EAAAgxF,EAAAloF,MAAAjI,KAAAgI,aAYA,QAAA2oF,IAAAC,EAAAC,GACA7wF,KAAA8wF,QAAAF,EACA5wF,KAAA+wF,SAAAF,EAGA,QAAAjH,MACA,UAAA+G,MAAA5tF,SAAA40C,kBAAAnU,IAsEA,QAAAwtD,MACApyF,EAAAuT,MAAA8+E,2BAmBA,QAAAC,IAAA76B,EAAA86B,GACA,GAAA3tD,GAAA6yB,EAAAtzD,SAAA40C,gBACAy5C,EAAA/G,GAAAh0B,GAAAxkD,GAAA,sBACAs/E,KACAC,EAAAv/E,GAAA,aAAAw/E,IAAA,GACAr5D,WAAA,WAA2Bo5D,EAAAv/E,GAAA,oBAAuC,IAElE,iBAAA2xB,GACA4tD,EAAAv/E,GAAA,0BAEA2xB,EAAA9N,MAAA47D,cAAA9tD,EAAA+tD,iBACA/tD,GAAA+tD,YAUA,QAAAC,IAAA9mF,EAAAvL,EAAAsyF,EAAA5wF,EAAAqwC,EAAAw2C,EAAAc,EAAAvqD,EAAAE,EAAA6sD,GACAhrF,KAAA0K,SACA1K,KAAAb,OACAa,KAAAyxF,UACAzxF,KAAA0xF,WAAA7wF,EACAb,KAAAkxC,SACAlxC,KAAA0nF,IACA1nF,KAAAwoF,IACAxoF,KAAAi+B,KACAj+B,KAAAm+B,KACAn+B,KAAA4wB,EAAAo6D,EASA,QAAA2G,MACA,OAAA/yF,EAAAuT,MAAAy/E,OAGA,QAAAC,MACA,MAAA7xF,MAAAiE,WAGA,QAAA6tF,IAAAh1E,GACA,aAAAA,GAAsB4qE,EAAA9oF,EAAAuT,MAAAu1E,EAAAc,EAAA5pF,EAAAuT,MAAAq2E,GAAuC1rE,EAqI7D,QAAAvU,IAAAuF,EAAAmX,GACA,GAAAxW,GAAA/O,OAAAsH,OAAA8G,EAAAW,UACA,QAAA5O,KAAAolB,GAAAxW,EAAA5O,GAAAolB,EAAAplB,EACA,OAAA4O,GAGA,QAAAsjF,OAiLA,QAAAC,IAAA5I,GACA,GAAAngF,EAEA,OADAmgF,MAAA,IAAAz5D,OAAAhqB,eACAsD,EAAAgpF,GAAAzvD,KAAA4mD,KAAAngF,EAAAw/B,SAAAx/B,EAAA,UAAAipF,IAAAjpF,GAAA,KAAAA,GAAA,MAAAA,GAAA,SAAAA,GAAA,GAAAA,IAAA,KAAAA,EAAA,KACAA,EAAAkpF,GAAA3vD,KAAA4mD,IAAAgJ,GAAA3pD,SAAAx/B,EAAA,SACAA,EAAAopF,GAAA7vD,KAAA4mD,IAAA,GAAA8I,IAAAjpF,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACAA,EAAAqpF,GAAA9vD,KAAA4mD,IAAA,GAAA8I,IAAA,IAAAjpF,EAAA,WAAAA,EAAA,WAAAA,EAAA,WACAA,EAAAspF,GAAA/vD,KAAA4mD,IAAAoJ,GAAAvpF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAA,EAAAwpF,GAAAjwD,KAAA4mD,IAAAoJ,GAAA,IAAAvpF,EAAA,WAAAA,EAAA,WAAAA,EAAA,OAAAA,EAAA,KACAA,EAAAypF,GAAAlwD,KAAA4mD,IAAAuJ,GAAA1pF,EAAA,GAAAA,EAAA,OAAAA,EAAA,WACAA,EAAA2pF,GAAApwD,KAAA4mD,IAAAuJ,GAAA1pF,EAAA,GAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,IACA4pF,GAAAvrF,eAAA8hF,GAAAgJ,GAAAS,GAAAzJ,IACA,gBAAAA,EAAA,GAAA8I,IAAAjE,YAAA,GACA,KAGA,QAAAmE,IAAA3rF,GACA,UAAAyrF,IAAAzrF,GAAA,OAAAA,GAAA,UAAAA,EAAA,GAGA,QAAA+rF,IAAAM,EAAA/yF,EAAAsJ,EAAAtB,GAEA,MADAA,IAAA,IAAA+qF,EAAA/yF,EAAAsJ,EAAA4kF,KACA,GAAAiE,IAAAY,EAAA/yF,EAAAsJ,EAAAtB,GAGA,QAAAgrF,IAAAlG,GAEA,MADAA,aAAAkF,MAAAlF,EAAAmF,GAAAnF,IACAA,GACAA,IAAAmG,MACA,GAAAd,IAAArF,EAAAiG,EAAAjG,EAAA9sF,EAAA8sF,EAAAxjF,EAAAwjF,EAAAoG,UAFA,GAAAf,IAKA,QAAAc,IAAAF,EAAA/yF,EAAAsJ,EAAA4pF,GACA,WAAAjrF,UAAArH,OAAAoyF,GAAAD,GAAA,GAAAZ,IAAAY,EAAA/yF,EAAAsJ,EAAA,MAAA4pF,EAAA,EAAAA,GAGA,QAAAf,IAAAY,EAAA/yF,EAAAsJ,EAAA4pF,GACAjzF,KAAA8yF,KACA9yF,KAAAD,KACAC,KAAAqJ,KACArJ,KAAAizF,WA+BA,QAAAN,IAAA91E,EAAAqL,EAAAtmB,EAAAmG,GAIA,MAHAA,IAAA,EAAA8U,EAAAqL,EAAAtmB,EAAAqsF,IACArsF,GAAA,GAAAA,GAAA,EAAAib,EAAAqL,EAAA+lE,IACA/lE,GAAA,IAAArL,EAAAoxE,KACA,GAAAiF,IAAAr2E,EAAAqL,EAAAtmB,EAAAmG,GAGA,QAAAorF,IAAAtG,GACA,GAAAA,YAAAqG,IAAA,UAAAA,IAAArG,EAAAhwE,EAAAgwE,EAAA3kE,EAAA2kE,EAAAjrF,EAAAirF,EAAAoG,QAEA,IADApG,YAAAkF,MAAAlF,EAAAmF,GAAAnF,KACAA,EAAA,UAAAqG,GACA,IAAArG,YAAAqG,IAAA,MAAArG,EACAA,KAAAmG,KACA,IAAAF,GAAAjG,EAAAiG,EAAA,IACA/yF,EAAA8sF,EAAA9sF,EAAA,IACAsJ,EAAAwjF,EAAAxjF,EAAA,IACAw1E,EAAAlyE,KAAAkyE,IAAAiU,EAAA/yF,EAAAsJ,GACAuD,EAAAD,KAAAC,IAAAkmF,EAAA/yF,EAAAsJ,GACAwT,EAAAoxE,IACA/lE,EAAAtb,EAAAiyE,EACAj9E,GAAAgL,EAAAiyE,GAAA,CAUA,OATA32D,IACArL,EAAAi2E,IAAAlmF,GAAA7M,EAAAsJ,GAAA6e,EAAA,GAAAnoB,EAAAsJ,GACAtJ,IAAA6M,GAAAvD,EAAAypF,GAAA5qE,EAAA,GACA4qE,EAAA/yF,GAAAmoB,EAAA,EACAA,GAAAtmB,EAAA,GAAAgL,EAAAiyE,EAAA,EAAAjyE,EAAAiyE,EACAhiE,GAAA,IAEAqL,EAAAtmB,EAAA,GAAAA,EAAA,IAAAib,EAEA,GAAAq2E,IAAAr2E,EAAAqL,EAAAtmB,EAAAirF,EAAAoG,SAGA,QAAAG,IAAAv2E,EAAAqL,EAAAtmB,EAAAqxF,GACA,WAAAjrF,UAAArH,OAAAwyF,GAAAt2E,GAAA,GAAAq2E,IAAAr2E,EAAAqL,EAAAtmB,EAAA,MAAAqxF,EAAA,EAAAA,GAGA,QAAAC,IAAAr2E,EAAAqL,EAAAtmB,EAAAqxF,GACAjzF,KAAA6c,KACA7c,KAAAkoB,KACAloB,KAAA4B,KACA5B,KAAAizF,WAiCA,QAAAI,IAAAx2E,EAAAy2E,EAAAC,GACA,MAGA,MAHA12E,EAAA,GAAAy2E,GAAAC,EAAAD,GAAAz2E,EAAA,GACAA,EAAA,IAAA02E,EACA12E,EAAA,IAAAy2E,GAAAC,EAAAD,IAAA,IAAAz2E,GAAA,GACAy2E,GAeA,QAAAE,IAAA3G,GACA,GAAAA,YAAA4G,IAAA,UAAAA,IAAA5G,EAAAjrF,EAAAirF,EAAA9kF,EAAA8kF,EAAAxjF,EAAAwjF,EAAAoG,QACA,IAAApG,YAAA6G,IAAA,CACA,GAAA72E,GAAAgwE,EAAAhwE,EAAA82E,EACA,WAAAF,IAAA5G,EAAAjrF,EAAA+K,KAAAinF,IAAA/2E,GAAAgwE,EAAAjjF,EAAA+C,KAAAknF,IAAAh3E,GAAAgwE,EAAAjjF,EAAAijF,EAAAoG,SAEApG,YAAAqF,MAAArF,EAAAkG,GAAAlG,GACA,IAAAxjF,GAAAyqF,GAAAjH,EAAAiG,GACA/qF,EAAA+rF,GAAAjH,EAAA9sF,GACA6B,EAAAkyF,GAAAjH,EAAAxjF,GACAq+E,EAAAqM,IAAA,SAAA1qF,EAAA,SAAAtB,EAAA,SAAAnG,GAAAoyF,IACAxL,EAAAuL,IAAA,SAAA1qF,EAAA,SAAAtB,EAAA,QAAAnG,GAAAqyF,GAEA,WAAAR,IAAA,IAAAjL,EAAA,QAAAd,EAAAc,GAAA,KAAAA,EADAuL,IAAA,SAAA1qF,EAAA,QAAAtB,EAAA,SAAAnG,GAAAsyF,KACArH,EAAAoG,SAGA,QAAAkB,IAAAvyF,EAAAmG,EAAAsB,EAAA4pF,GACA,WAAAjrF,UAAArH,OAAA6yF,GAAA5xF,GAAA,GAAA6xF,IAAA7xF,EAAAmG,EAAAsB,EAAA,MAAA4pF,EAAA,EAAAA,GAGA,QAAAQ,IAAA7xF,EAAAmG,EAAAsB,EAAA4pF,GACAjzF,KAAA4B,KACA5B,KAAA+H,KACA/H,KAAAqJ,KACArJ,KAAAizF,WA0BA,QAAAc,IAAA9I,GACA,MAAAA,GAAAmJ,GAAAznF,KAAAq7E,IAAAiD,EAAA,KAAAA,EAAAoJ,GAAAC,GAGA,QAAAC,IAAAtJ,GACA,MAAAA,GAAAuJ,GAAAvJ,MAAAoJ,IAAApJ,EAAAqJ,IAGA,QAAAG,IAAA/M,GACA,YAAAA,GAAA,eAAAA,EAAA,MAAA/6E,KAAAq7E,IAAAN,EAAA,aAGA,QAAAoM,IAAApM,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAA/6E,KAAAq7E,KAAAN,EAAA,iBAGA,QAAAgN,IAAA7H,GACA,GAAAA,YAAA6G,IAAA,UAAAA,IAAA7G,EAAAhwE,EAAAgwE,EAAAjjF,EAAAijF,EAAAjrF,EAAAirF,EAAAoG,QACApG,aAAA4G,MAAA5G,EAAA2G,GAAA3G,GACA,IAAAhwE,GAAAlQ,KAAAgoF,MAAA9H,EAAAxjF,EAAAwjF,EAAA9kF,GAAA6sF,EACA,WAAAlB,IAAA72E,EAAA,EAAAA,EAAA,IAAAA,EAAAlQ,KAAAkoF,KAAAhI,EAAA9kF,EAAA8kF,EAAA9kF,EAAA8kF,EAAAxjF,EAAAwjF,EAAAxjF,GAAAwjF,EAAAjrF,EAAAirF,EAAAoG,SAGA,QAAA6B,IAAAj4E,EAAAjT,EAAAhI,EAAAqxF,GACA,WAAAjrF,UAAArH,OAAA+zF,GAAA73E,GAAA,GAAA62E,IAAA72E,EAAAjT,EAAAhI,EAAA,MAAAqxF,EAAA,EAAAA,GAGA,QAAAS,IAAA72E,EAAAjT,EAAAhI,EAAAqxF,GACAjzF,KAAA6c,KACA7c,KAAA4J,KACA5J,KAAA4B,KACA5B,KAAAizF,WAwBA,QAAA8B,IAAAlI,GACA,GAAAA,YAAAmI,IAAA,UAAAA,IAAAnI,EAAAhwE,EAAAgwE,EAAA3kE,EAAA2kE,EAAAjrF,EAAAirF,EAAAoG,QACApG,aAAAqF,MAAArF,EAAAkG,GAAAlG,GACA,IAAAiG,GAAAjG,EAAAiG,EAAA,IACA/yF,EAAA8sF,EAAA9sF,EAAA,IACAsJ,EAAAwjF,EAAAxjF,EAAA,IACAzH,GAAAqzF,GAAA5rF,EAAA6rF,GAAApC,EAAAqC,GAAAp1F,IAAAk1F,GAAAC,GAAAC,IACAC,EAAA/rF,EAAAzH,EACA0oF,GAAA+K,IAAAt1F,EAAA6B,GAAA0zF,GAAAF,GAAAG,GACArtE,EAAAvb,KAAAkoF,KAAAvK,IAAA8K,MAAAC,GAAAzzF,GAAA,EAAAA,IACAib,EAAAqL,EAAAvb,KAAAgoF,MAAArK,EAAA8K,GAAAR,GAAA,IAAA3G,GACA,WAAA+G,IAAAn4E,EAAA,EAAAA,EAAA,IAAAA,EAAAqL,EAAAtmB,EAAAirF,EAAAoG,SAGA,QAAAuC,IAAA34E,EAAAqL,EAAAtmB,EAAAqxF,GACA,WAAAjrF,UAAArH,OAAAo0F,GAAAl4E,GAAA,GAAAm4E,IAAAn4E,EAAAqL,EAAAtmB,EAAA,MAAAqxF,EAAA,EAAAA,GAGA,QAAA+B,IAAAn4E,EAAAqL,EAAAtmB,EAAAqxF,GACAjzF,KAAA6c,KACA7c,KAAAkoB,KACAloB,KAAA4B,KACA5B,KAAAizF,WA2BA,QAAAwC,IAAAjB,EAAAkB,EAAAC,EAAAC,EAAAC,GACA,GAAAxB,GAAAG,IAAAJ,EAAAC,EAAAG,CACA,aAAAA,EAAA,EAAAH,EAAAD,GAAAsB,GACA,IAAArB,EAAA,EAAAD,GAAAuB,GACA,IAAAnB,EAAA,EAAAH,EAAA,EAAAD,GAAAwB,EACAxB,EAAAyB,GAAA,EAiCA,QAAAC,IAAA/tF,EAAA+U,GACA,gBAAAmuE,GACA,MAAAljF,GAAAkjF,EAAAnuE,GAIA,QAAAi5E,IAAAhuF,EAAAsB,EAAAm/E,GACA,MAAAzgF,GAAA4E,KAAAq7E,IAAAjgF,EAAAygF,GAAAn/E,EAAAsD,KAAAq7E,IAAA3+E,EAAAm/E,GAAAzgF,EAAAygF,EAAA,EAAAA,EAAA,SAAAyC,GACA,MAAAt+E,MAAAq7E,IAAAjgF,EAAAkjF,EAAA5hF,EAAAm/E,IAIA,QAAAwN,IAAAjuF,EAAAsB,GACA,GAAAyT,GAAAzT,EAAAtB,CACA,OAAA+U,GAAAg5E,GAAA/tF,EAAA+U,EAAA,KAAAA,GAAA,IAAAA,EAAA,IAAAnQ,KAAAo5E,MAAAjpE,EAAA,KAAAA,GAAAm5E,GAAAtvF,MAAAoB,GAAAsB,EAAAtB,GAGA,QAAAmuF,IAAA1N,GACA,WAAAA,MAAA2N,GAAA,SAAApuF,EAAAsB,GACA,MAAAA,GAAAtB,EAAAguF,GAAAhuF,EAAAsB,EAAAm/E,GAAAyN,GAAAtvF,MAAAoB,GAAAsB,EAAAtB,IAIA,QAAAouF,IAAApuF,EAAAsB,GACA,GAAAyT,GAAAzT,EAAAtB,CACA,OAAA+U,GAAAg5E,GAAA/tF,EAAA+U,GAAAm5E,GAAAtvF,MAAAoB,GAAAsB,EAAAtB,GAyBA,QAAAquF,IAAAC,GACA,gBAAAC,GACA,GAIA51F,GAAA61F,EAJA9vF,EAAA6vF,EAAA31F,OACAmyF,EAAA,GAAAxqF,OAAA7B,GACA1G,EAAA,GAAAuI,OAAA7B,GACA4C,EAAA,GAAAf,OAAA7B,EAEA,KAAA/F,EAAA,EAAeA,EAAA+F,IAAO/F,EACtB61F,EAAAvD,GAAAsD,EAAA51F,IACAoyF,EAAApyF,GAAA61F,EAAAzD,GAAA,EACA/yF,EAAAW,GAAA61F,EAAAx2F,GAAA,EACAsJ,EAAA3I,GAAA61F,EAAAltF,GAAA,CAMA,OAJAypF,GAAAuD,EAAAvD,GACA/yF,EAAAs2F,EAAAt2F,GACAsJ,EAAAgtF,EAAAhtF,GACAktF,EAAAtD,QAAA,EACA,SAAAhI,GAIA,MAHAsL,GAAAzD,IAAA7H,GACAsL,EAAAx2F,IAAAkrF,GACAsL,EAAAltF,IAAA4hF,GACAsL,EAAA,KA8DA,QAAAC,IAAAntF,GACA,kBACA,MAAAA,IAIA,QAAAoV,IAAApV,GACA,gBAAA4hF,GACA,MAAA5hF,GAAA4hF,GAAA,IAsGA,QAAAwL,IAAAhvF,GACA,eAAAA,EAAAivF,IACAlyF,QAAAzB,SAAAC,cAAA,OAAA2zF,GAAA5zF,SAAA40C,gBAAAi/C,GAAA7zF,SAAA8zF,aACAryF,GAAAkxB,MAAA4I,UAAA72B,EACAA,EAAAmvF,GAAA3+D,iBAAA0+D,GAAAzzF,YAAAsB,IAAA,MAAAsyF,iBAAA,aACAH,GAAAzyF,YAAAM,IACAiD,IAAAif,MAAA,MAAAzf,MAAA,KACA8vF,IAAAtvF,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAGA,QAAAuvF,IAAAvvF,GACA,aAAAA,EAAAivF,IACAO,QAAAl0F,SAAAskB,gBAAA,mCACA4vE,GAAAryF,aAAA,YAAA6C,IACAA,EAAAwvF,GAAA34D,UAAA44D,QAAAC,gBACA1vF,IAAA2vF,OACAL,GAAAtvF,EAAAM,EAAAN,EAAA4B,EAAA5B,EAAAmC,EAAAnC,EAAAqV,EAAArV,EAAAtH,EAAAsH,EAAAggF,IAFAiP,IAKA,QAAAW,IAAA50D,EAAA60D,EAAAC,EAAAC,GAEA,QAAA3sF,GAAAqd,GACA,MAAAA,GAAAvnB,OAAAunB,EAAArd,MAAA,OAGA,QAAA4sF,GAAAC,EAAAC,EAAAC,EAAAC,EAAA3vE,EAAA4vE,GACA,GAAAJ,IAAAE,GAAAD,IAAAE,EAAA,CACA,GAAAn3F,GAAAwnB,EAAA/mB,KAAA,kBAAAm2F,EAAA,KAAAC,EACAO,GAAA32F,MAAcT,IAAA,EAAAgnF,EAAAqQ,GAAAL,EAAAE,KAAsCl3F,IAAA,EAAAgnF,EAAAqQ,GAAAJ,EAAAE,UAC/CD,GAAAC,IACL3vE,EAAA/mB,KAAA,aAAAy2F,EAAAN,EAAAO,EAAAN,GAIA,QAAAS,GAAAjwF,EAAAsB,EAAA6e,EAAA4vE,GACA/vF,IAAAsB,GACAtB,EAAAsB,EAAA,IAAAA,GAAA,IAAgCA,EAAAtB,EAAA,MAAAA,GAAA,KAChC+vF,EAAA32F,MAAcT,EAAAwnB,EAAA/mB,KAAA0J,EAAAqd,GAAA,eAAAsvE,GAAA,EAAA9P,EAAAqQ,GAAAhwF,EAAAsB,MACTA,GACL6e,EAAA/mB,KAAA0J,EAAAqd,GAAA,UAAA7e,EAAAmuF,GAIA,QAAAS,GAAAlwF,EAAAsB,EAAA6e,EAAA4vE,GACA/vF,IAAAsB,EACAyuF,EAAA32F,MAAcT,EAAAwnB,EAAA/mB,KAAA0J,EAAAqd,GAAA,cAAAsvE,GAAA,EAAA9P,EAAAqQ,GAAAhwF,EAAAsB,KACTA,GACL6e,EAAA/mB,KAAA0J,EAAAqd,GAAA,SAAA7e,EAAAmuF,GAIA,QAAA9O,GAAAgP,EAAAC,EAAAC,EAAAC,EAAA3vE,EAAA4vE,GACA,GAAAJ,IAAAE,GAAAD,IAAAE,EAAA,CACA,GAAAn3F,GAAAwnB,EAAA/mB,KAAA0J,EAAAqd,GAAA,2BACA4vE,GAAA32F,MAAcT,IAAA,EAAAgnF,EAAAqQ,GAAAL,EAAAE,KAAsCl3F,IAAA,EAAAgnF,EAAAqQ,GAAAJ,EAAAE,SAC/C,KAAAD,GAAA,IAAAC,GACL3vE,EAAA/mB,KAAA0J,EAAAqd,GAAA,SAAA0vE,EAAA,IAAAC,EAAA,KAIA,gBAAA9vF,EAAAsB,GACA,GAAA6e,MACA4vE,IAOA,OANA/vF,GAAA06B,EAAA16B,GAAAsB,EAAAo5B,EAAAp5B,GACAouF,EAAA1vF,EAAAugF,WAAAvgF,EAAAwgF,WAAAl/E,EAAAi/E,WAAAj/E,EAAAk/E,WAAArgE,EAAA4vE,GACAE,EAAAjwF,EAAAiwF,OAAA3uF,EAAA2uF,OAAA9vE,EAAA4vE,GACAG,EAAAlwF,EAAAkwF,MAAA5uF,EAAA4uF,MAAA/vE,EAAA4vE,GACApP,EAAA3gF,EAAAmwF,OAAAnwF,EAAAowF,OAAA9uF,EAAA6uF,OAAA7uF,EAAA8uF,OAAAjwE,EAAA4vE,GACA/vF,EAAAsB,EAAA,KACA,SAAA4hF,GAEA,IADA,GAAA4B,GAAAnsF,GAAA,EAAA+F,EAAAqxF,EAAAn3F,SACAD,EAAA+F,GAAAyhB,GAAA2kE,EAAAiL,EAAAp3F,OAAAmsF,EAAAnF,EAAAuD,EACA,OAAA/iE,GAAAlmB,KAAA,MAaA,QAAAo2F,IAAA1Q,GACA,QAAAA,EAAA/6E,KAAA4iB,IAAAm4D,IAAA,EAAAA,GAAA,EAGA,QAAA2Q,IAAA3Q,GACA,QAAAA,EAAA/6E,KAAA4iB,IAAAm4D,IAAA,EAAAA,GAAA,EAGA,QAAA4Q,IAAA5Q,GACA,QAAAA,EAAA/6E,KAAA4iB,IAAA,EAAAm4D,IAAA,IAAAA,EAAA,GAmDA,QAAA6Q,IAAAC,GACA,gBAAApwF,EAAA0vB,GACA,GAAAjb,GAAA27E,GAAApwF,EAAAgrF,GAAAhrF,IAAAyU,GAAAib,EAAAs7D,GAAAt7D,IAAAjb,GACAqL,EAAAiuE,GAAA/tF,EAAA8f,EAAA4P,EAAA5P,GACAtmB,EAAAu0F,GAAA/tF,EAAAxG,EAAAk2B,EAAAl2B,GACAqxF,EAAAkD,GAAA/tF,EAAA6qF,QAAAn7D,EAAAm7D,QACA,iBAAAhI,GAKA,MAJA7iF,GAAAyU,IAAAouE,GACA7iF,EAAA8f,IAAA+iE,GACA7iF,EAAAxG,IAAAqpF,GACA7iF,EAAA6qF,UAAAhI,GACA7iF,EAAA,KAQA,QAAAqwF,IAAArwF,EAAA0vB,GACA,GAAAl2B,GAAAu0F,IAAA/tF,EAAA+rF,GAAA/rF,IAAAxG,GAAAk2B,EAAAq8D,GAAAr8D,IAAAl2B,GACAmG,EAAAouF,GAAA/tF,EAAAL,EAAA+vB,EAAA/vB,GACAsB,EAAA8sF,GAAA/tF,EAAAiB,EAAAyuB,EAAAzuB,GACA4pF,EAAAkD,GAAA/tF,EAAA6qF,QAAAn7D,EAAAm7D,QACA,iBAAAhI,GAKA,MAJA7iF,GAAAxG,IAAAqpF,GACA7iF,EAAAL,IAAAkjF,GACA7iF,EAAAiB,IAAA4hF,GACA7iF,EAAA6qF,UAAAhI,GACA7iF,EAAA,IAIA,QAAAswF,IAAAF,GACA,gBAAApwF,EAAA0vB,GACA,GAAAjb,GAAA27E,GAAApwF,EAAA0sF,GAAA1sF,IAAAyU,GAAAib,EAAAg9D,GAAAh9D,IAAAjb,GACAjT,EAAAusF,GAAA/tF,EAAAwB,EAAAkuB,EAAAluB,GACAhI,EAAAu0F,GAAA/tF,EAAAxG,EAAAk2B,EAAAl2B,GACAqxF,EAAAkD,GAAA/tF,EAAA6qF,QAAAn7D,EAAAm7D,QACA,iBAAAhI,GAKA,MAJA7iF,GAAAyU,IAAAouE,GACA7iF,EAAAwB,IAAAqhF,GACA7iF,EAAAxG,IAAAqpF,GACA7iF,EAAA6qF,UAAAhI,GACA7iF,EAAA,KAQA,QAAAuwF,IAAAH,GACA,eAAAI,GAAApQ,GAGA,QAAAqQ,GAAAzwF,EAAA0vB,GACA,GAAAjb,GAAA27E,GAAApwF,EAAAotF,GAAAptF,IAAAyU,GAAAib,EAAA09D,GAAA19D,IAAAjb,GACAqL,EAAAiuE,GAAA/tF,EAAA8f,EAAA4P,EAAA5P,GACAtmB,EAAAu0F,GAAA/tF,EAAAxG,EAAAk2B,EAAAl2B,GACAqxF,EAAAkD,GAAA/tF,EAAA6qF,QAAAn7D,EAAAm7D,QACA,iBAAAhI,GAKA,MAJA7iF,GAAAyU,IAAAouE,GACA7iF,EAAA8f,IAAA+iE,GACA7iF,EAAAxG,IAAA+K,KAAAq7E,IAAAiD,EAAAzC,IACApgF,EAAA6qF,UAAAhI,GACA7iF,EAAA,IAMA,MAlBAogF,MAgBAqQ,EAAA3C,MAAA0C,EAEAC,GACG,GAwBH,QAAAniB,MACA,MAAAoiB,MAAAC,GAAAC,IAAAF,GAAAG,GAAAviB,MAAAwiB,IAGA,QAAAF,MACAF,GAAA,EAGA,QAAAK,MACAn5F,KAAAo5F,MACAp5F,KAAAq5F,MACAr5F,KAAAutF,MAAA,KA0BA,QAAA+L,IAAA36E,EAAAqkE,EAAArN,GACA,GAAAsV,GAAA,GAAAkO,GAEA,OADAlO,GAAAsO,QAAA56E,EAAAqkE,EAAArN,GACAsV,EAGA,QAAAuO,MACA9iB,OACA+iB,EAEA,KADA,GAAAt5F,GAAA8qF,EAAAyO,GACAzO,IACA9qF,EAAA24F,GAAA7N,EAAAoO,QAAA,GAAApO,EAAAmO,MAAA7xF,KAAA,KAAApH,GACA8qF,IAAAsC,QAEAkM,GAGA,QAAAE,MACAb,IAAAc,GAAAX,GAAAviB,OAAAwiB,GACAO,GAAAjiE,GAAA,CACA,KACAgiE,KACG,QACHC,GAAA,EACAI,KACAf,GAAA,GAIA,QAAAgB,MACA,GAAApjB,GAAAuiB,GAAAviB,MAAAsM,EAAAtM,EAAAkjB,EACA5W,GAAA+W,KAAAb,IAAAlW,EAAA4W,GAAAljB,GAGA,QAAAmjB,MAEA,IADA,GAAAvF,GAAAD,EAAAG,EAAAkF,GAAA/jB,EAAA3W,IACAw1B,GACAA,EAAA4E,OACAzjB,EAAA6e,EAAA6E,QAAA1jB,EAAA6e,EAAA6E,OACA/E,EAAAE,MAAAjH,QAEA8G,EAAAG,EAAAjH,MAAAiH,EAAAjH,MAAA,KACAiH,EAAAF,IAAA/G,MAAA8G,EAAAqF,GAAArF,EAGA2F,IAAA1F,EACA2F,GAAAtkB,GAGA,QAAAskB,IAAAtkB,GACA,IAAA8jB,GAAA,CACAjiE,QAAAq/C,aAAAr/C,IACA,IAAAwrD,GAAArN,EAAAmjB,EACA9V,GAAA,IACArN,EAAA3W,MAAAxnC,GAAAQ,WAAA2hE,GAAA3W,IACAkX,QAAAC,cAAAD,OAEAA,KAAAN,GAAAd,GAAAoB,GAAAE,YAAAN,GAAAC,KACAN,GAAA,EAAAV,GAAAY,MAwDA,QAAAhwE,IAAA7U,EAAAjU,GACA,GAAAw5F,GAAAvlF,EAAAwlF,YACA,KAAAD,SAAAx5F,KAAAw5F,EAAAE,MAAAC,GAAA,SAAAl1F,OAAA,WACA,OAAA+0F,GAGA,QAAAI,IAAA3lF,EAAAjU,GACA,GAAAw5F,GAAAvlF,EAAAwlF,YACA,KAAAD,SAAAx5F,KAAAw5F,EAAAE,MAAAG,GAAA,SAAAp1F,OAAA,WACA,OAAA+0F,GAGA,QAAAM,IAAA7lF,EAAAjU,GACA,GAAAw5F,GAAAvlF,EAAAwlF,YACA,KAAAD,SAAAx5F,IAAA,SAAAyE,OAAA,WACA,OAAA+0F,GAGA,QAAArzF,IAAA8N,EAAAjU,EAAAi2C,GASA,QAAAujD,GAAAO,GACA9jD,EAAAyjD,MAAAM,GACA/jD,EAAAwiD,MAAAC,QAAAnxF,EAAA0uC,EAAAksC,MAAAlsC,EAAA6+B,MAGA7+B,EAAAksC,OAAA4X,GAAAxyF,EAAAwyF,EAAA9jD,EAAAksC,OAGA,QAAA56E,GAAAwyF,GACA,GAAAl6F,GAAAgC,EAAA+D,EAAAomF,CAGA,IAAA/1C,EAAAyjD,QAAAM,GAAA,MAAAjkD,IAEA,KAAAl2C,IAAAo6F,GAEA,GADAjO,EAAAiO,EAAAp6F,GACAmsF,EAAAr/E,OAAAspC,EAAAtpC,KAAA,CAKA,GAAAq/E,EAAA0N,QAAAQ,GAAA,MAAAC,IAAA5yF,EAIAykF,GAAA0N,QAAAU,IACApO,EAAA0N,MAAAW,GACArO,EAAAyM,MAAA1iD,OACAi2C,EAAAh7E,GAAAtK,KAAA,YAAAuN,IAAAoiD,SAAA21B,EAAAzoF,MAAAyoF,EAAAnZ,aACAonB,GAAAp6F,KAMAA,EAAAG,IACAgsF,EAAA0N,MAAAW,GACArO,EAAAyM,MAAA1iD,aACAkkD,GAAAp6F,IAoBA,GAZAs6F,GAAA,WACAlkD,EAAAyjD,QAAAQ,KACAjkD,EAAAyjD,MAAAU,GACAnkD,EAAAwiD,MAAAC,QAAAzP,EAAAhzC,EAAAksC,MAAAlsC,EAAA6+B,MACAmU,EAAA8Q,MAMA9jD,EAAAyjD,MAAAG,GACA5jD,EAAAjlC,GAAAtK,KAAA,QAAAuN,IAAAoiD,SAAApgB,EAAA1yC,MAAA0yC,EAAA48B,OACA58B,EAAAyjD,QAAAG,GAAA,CAKA,IAJA5jD,EAAAyjD,MAAAQ,GAGAI,EAAA,GAAA7yF,OAAA7B,EAAAqwC,EAAAqkD,MAAAx6F,QACAD,EAAA,EAAAgC,GAAA,EAAuBhC,EAAA+F,IAAO/F,GAC9BmsF,EAAA/1C,EAAAqkD,MAAAz6F,GAAA+G,MAAAF,KAAAuN,IAAAoiD,SAAApgB,EAAA1yC,MAAA0yC,EAAA48B,UACAynB,IAAAz4F,GAAAmqF,EAGAsO,GAAAx6F,OAAA+B,EAAA,GAGA,QAAAonF,GAAA8Q,GAKA,IAJA,GAAA3P,GAAA2P,EAAA9jD,EAAA3c,SAAA2c,EAAAskD,KAAA7zF,KAAA,KAAAqzF,EAAA9jD,EAAA3c,WAAA2c,EAAAwiD,MAAAC,QAAA3iD,GAAAE,EAAAyjD,MAAAc,GAAA,GACA36F,GAAA,EACA+F,EAAA00F,EAAAx6F,SAEAD,EAAA+F,GACA00F,EAAAz6F,GAAA6G,KAAA,KAAA0jF,EAIAn0C,GAAAyjD,QAAAc,KACAvkD,EAAAjlC,GAAAtK,KAAA,MAAAuN,IAAAoiD,SAAApgB,EAAA1yC,MAAA0yC,EAAA48B,OACA98B,KAIA,QAAAA,KACAE,EAAAyjD,MAAAW,GACApkD,EAAAwiD,MAAA1iD,aACAkkD,GAAAj6F,EACA,QAAAH,KAAAo6F,GAAA,aACAhmF,GAAAwlF,aApGA,GACAa,GADAL,EAAAhmF,EAAAwlF,YAKAQ,GAAAj6F,GAAAi2C,EACAA,EAAAwiD,SAAAe,EAAA,EAAAvjD,EAAA6+B,MA+HA,QAAA2lB,IAAAz6F,EAAA2M,GACA,GAAA+tF,GAAAC,CACA,mBACA,GAAAnB,GAAAI,GAAAz6F,KAAAa,GACAs6F,EAAAd,EAAAc,KAKA,IAAAA,IAAAI,EAAA,CACAC,EAAAD,EAAAJ,CACA,QAAAz6F,GAAA,EAAA+F,EAAA+0F,EAAA76F,OAAwCD,EAAA+F,IAAO/F,EAC/C,GAAA86F,EAAA96F,GAAA8M,SAAA,CACAguF,IAAA90E,QACA80E,EAAAp0F,OAAA1G,EAAA,EACA,QAKA25F,EAAAc,MAAAK,GAIA,QAAAC,IAAA56F,EAAA2M,EAAA/F,GACA,GAAA8zF,GAAAC,CACA,sBAAA/zF,GAAA,SAAAnC,MACA,mBACA,GAAA+0F,GAAAI,GAAAz6F,KAAAa,GACAs6F,EAAAd,EAAAc,KAKA,IAAAA,IAAAI,EAAA,CACAC,GAAAD,EAAAJ,GAAAz0E,OACA,QAAAukE,IAAoBz9E,OAAA/F,SAAyB/G,EAAA,EAAA+F,EAAA+0F,EAAA76F,OAA2BD,EAAA+F,IAAO/F,EAC/E,GAAA86F,EAAA96F,GAAA8M,SAAA,CACAguF,EAAA96F,GAAAuqF,CACA,OAGAvqF,IAAA+F,GAAA+0F,EAAAr6F,KAAA8pF,GAGAoP,EAAAc,MAAAK,GAsBA,QAAAE,IAAAzxE,EAAAzc,EAAA/F,GACA,GAAA5G,GAAAopB,EAAA0xE,GAOA,OALA1xE,GAAAo8D,KAAA,WACA,GAAAgU,GAAAI,GAAAz6F,KAAAa,IACAw5F,EAAA5yF,QAAA4yF,EAAA5yF,WAA2C+F,GAAA/F,EAAAQ,MAAAjI,KAAAgI,aAG3C,SAAA8M,GACA,MAAA6lF,IAAA7lF,EAAAjU,GAAA4G,MAAA+F,IAYA,QAAAouF,IAAApuF,GACA,kBACAxN,KAAA6sB,gBAAArf,IAIA,QAAAquF,IAAAjQ,GACA,kBACA5rF,KAAAyuB,kBAAAm9D,EAAAr1C,MAAAq1C,EAAAC,QAIA,QAAAiQ,IAAAtuF,EAAAuuF,EAAAC,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAAn8F,KAAA02B,aAAAlpB,EACA,OAAA2uF,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAAH,EAAAE,EAAAE,EAAAH,IAIA,QAAAI,IAAAxQ,EAAAmQ,EAAAC,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAAn8F,KAAAq8F,eAAAzQ,EAAAr1C,MAAAq1C,EAAAC,MACA,OAAAsQ,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAAH,EAAAE,EAAAE,EAAAH,IAIA,QAAAM,IAAA9uF,EAAAuuF,EAAAt0F,GACA,GAAAw0F,GACAM,EACAL,CACA,mBACA,GAAAC,GAAAH,EAAAv0F,EAAAzH,KACA,cAAAg8F,MAAAh8F,MAAA6sB,gBAAArf,IACA2uF,EAAAn8F,KAAA02B,aAAAlpB,GACA2uF,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAH,EAAAE,EAAAE,EAAAI,EAAAP,KAIA,QAAAQ,IAAA5Q,EAAAmQ,EAAAt0F,GACA,GAAAw0F,GACAM,EACAL,CACA,mBACA,GAAAC,GAAAH,EAAAv0F,EAAAzH,KACA,cAAAg8F,MAAAh8F,MAAAyuB,kBAAAm9D,EAAAr1C,MAAAq1C,EAAAC,QACAsQ,EAAAn8F,KAAAq8F,eAAAzQ,EAAAr1C,MAAAq1C,EAAAC,OACAsQ,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAH,EAAAE,EAAAE,EAAAI,EAAAP,KAYA,QAAAS,IAAA7Q,EAAAnkF,GACA,QAAA0zF,KACA,GAAArmF,GAAA9U,KAAAU,EAAA+G,EAAAQ,MAAA6M,EAAA9M,UACA,OAAAtH,IAAA,SAAAuqF,GACAn2E,EAAAia,eAAA68D,EAAAr1C,MAAAq1C,EAAAC,MAAAnrF,EAAAuqF,KAIA,MADAkQ,GAAAnmE,OAAAvtB,EACA0zF,EAGA,QAAAuB,IAAAlvF,EAAA/F,GACA,QAAA0zF,KACA,GAAArmF,GAAA9U,KAAAU,EAAA+G,EAAAQ,MAAA6M,EAAA9M,UACA,OAAAtH,IAAA,SAAAuqF,GACAn2E,EAAAlQ,aAAA4I,EAAA9M,EAAAuqF,KAIA,MADAkQ,GAAAnmE,OAAAvtB,EACA0zF,EAYA,QAAAwB,IAAA97F,EAAA4G,GACA,kBACAkiB,GAAA3pB,KAAAa,GAAAmiF,OAAAv7E,EAAAQ,MAAAjI,KAAAgI,YAIA,QAAA40F,IAAA/7F,EAAA4G,GACA,MAAAA,MAAA,WACAkiB,GAAA3pB,KAAAa,GAAAmiF,MAAAv7E,GAcA,QAAAo1F,IAAAh8F,EAAA4G,GACA,kBACAgzF,GAAAz6F,KAAAa,GAAAs5B,UAAA1yB,EAAAQ,MAAAjI,KAAAgI,YAIA,QAAA80F,IAAAj8F,EAAA4G,GACA,MAAAA,MAAA,WACAgzF,GAAAz6F,KAAAa,GAAAs5B,SAAA1yB,GAcA,QAAAs1F,IAAAl8F,EAAA4G,GACA,qBAAAA,GAAA,SAAAnC,MACA,mBACAm1F,GAAAz6F,KAAAa,GAAAu6F,KAAA3zF,GA4CA,QAAAW,IAAAoF,GACA,OAAAA,EAAA,IAAAmiB,OAAA1oB,MAAA,SAAA2N,MAAA,SAAAq2E,GACA,GAAAvqF,GAAAuqF,EAAA9jF,QAAA,IAEA,OADAzG,IAAA,IAAAuqF,IAAAvkE,MAAA,EAAAhmB,KACAuqF,GAAA,UAAAA,IAIA,QAAA+R,IAAAn8F,EAAA2M,EAAA0+E,GACA,GAAA+Q,GAAAC,EAAAC,EAAA/0F,GAAAoF,GAAAmc,GAAA8wE,EACA,mBACA,GAAAJ,GAAA8C,EAAAn9F,KAAAa,GACAgR,EAAAwoF,EAAAxoF,EAKAA,KAAAorF,IAAAC,GAAAD,EAAAprF,GAAAo1D,QAAAp1D,GAAArE,EAAA0+E,GAEAmO,EAAAxoF,GAAAqrF,GAYA,QAAAE,IAAAv8F,GACA,kBACA,GAAAiN,GAAA9N,KAAAiE,UACA,QAAAvD,KAAAV,MAAAs6F,aAAA,IAAA55F,IAAAG,EAAA,MACAiN,MAAA5J,YAAAlE,OAwDA,QAAAq9F,IAAA7vF,EAAA8vF,GACA,GAAArB,GACAM,EACAL,CACA,mBACA,GAAAxmE,GAAAt1B,GAAAJ,MAAAi4B,iBAAAj4B,KAAA,MACAm8F,EAAAzmE,EAAAohE,iBAAAtpF,GACAwuF,GAAAh8F,KAAA01B,MAAA+4D,eAAAjhF,GAAAkoB,EAAAohE,iBAAAtpF,GACA,OAAA2uF,KAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAoB,EAAArB,EAAAE,EAAAI,EAAAP,IAIA,QAAAuB,IAAA/vF,GACA,kBACAxN,KAAA01B,MAAA+4D,eAAAjhF,IAIA,QAAAgwF,IAAAhwF,EAAA8vF,EAAAtB,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAA/7F,GAAAJ,MAAAi4B,iBAAAj4B,KAAA,MAAA82F,iBAAAtpF,EACA,OAAA2uF,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAAoB,EAAArB,EAAAE,EAAAH,IAIA,QAAAyB,IAAAjwF,EAAA8vF,EAAA71F,GACA,GAAAw0F,GACAM,EACAL,CACA,mBACA,GAAAxmE,GAAAt1B,GAAAJ,MAAAi4B,iBAAAj4B,KAAA,MACAm8F,EAAAzmE,EAAAohE,iBAAAtpF,GACAwuF,EAAAv0F,EAAAzH,KAEA,OADA,OAAAg8F,IAAAh8F,KAAA01B,MAAA+4D,eAAAjhF,GAAAwuF,EAAAtmE,EAAAohE,iBAAAtpF,IACA2uF,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAoB,EAAArB,EAAAE,EAAAI,EAAAP,IAcA,QAAA0B,IAAAlwF,EAAA/F,EAAAknF,GACA,QAAAwM,KACA,GAAArmF,GAAA9U,KAAAU,EAAA+G,EAAAQ,MAAA6M,EAAA9M,UACA,OAAAtH,IAAA,SAAAuqF,GACAn2E,EAAA4gB,MAAAkd,YAAAplC,EAAA9M,EAAAuqF,GAAA0D,IAIA,MADAwM,GAAAnmE,OAAAvtB,EACA0zF,EAWA,QAAAwC,IAAAl2F,GACA,kBACAzH,KAAA6nB,YAAApgB,GAIA,QAAAm2F,IAAAn2F,GACA,kBACA,GAAAu0F,GAAAv0F,EAAAzH,KACAA,MAAA6nB,YAAA,MAAAm0E,EAAA,GAAAA,GAkCA,QAAA7nD,IAAAy8C,EAAAC,EAAArjF,EAAA3M,GACAb,KAAA8wF,QAAAF,EACA5wF,KAAA+wF,SAAAF,EACA7wF,KAAA69F,MAAArwF,EACAxN,KAAA27F,IAAA96F,EAGA,QAAAopB,IAAAzc,GACA,MAAAo8E,MAAA3/D,WAAAzc,GAGA,QAAAswF,MACA,QAAAj9F,GAgCA,QAAAk9F,IAAA9S,GACA,OAAAA,EAGA,QAAA+S,IAAA/S,GACA,MAAAA,KAGA,QAAAgT,IAAAhT,GACA,MAAAA,IAAA,EAAAA,GAGA,QAAAiT,IAAAjT,GACA,QAAAA,GAAA,MAAAA,SAAA,EAAAA,GAAA,KAGA,QAAAkT,IAAAlT,GACA,MAAAA,OAGA,QAAAmT,IAAAnT,GACA,QAAAA,MAAA,EAGA,QAAAoT,IAAApT,GACA,QAAAA,GAAA,MAAAA,UAAA,GAAAA,IAAA,KA4CA,QAAAqT,IAAArT,GACA,SAAAt+E,KAAAinF,IAAA3I,EAAAsT,IAGA,QAAAC,IAAAvT,GACA,MAAAt+E,MAAAknF,IAAA5I,EAAAsT,IAGA,QAAAE,IAAAxT,GACA,SAAAt+E,KAAAinF,IAAA8K,GAAAzT,IAAA,EAGA,QAAA0T,IAAA1T,GACA,MAAAt+E,MAAAq7E,IAAA,KAAAiD,EAAA,IAGA,QAAA2T,IAAA3T,GACA,SAAAt+E,KAAAq7E,IAAA,MAAAiD,GAGA,QAAA4T,IAAA5T,GACA,QAAAA,GAAA,MAAAt+E,KAAAq7E,IAAA,KAAAiD,EAAA,MAAAt+E,KAAAq7E,IAAA,QAAAiD,IAAA,EAGA,QAAA6T,IAAA7T,GACA,SAAAt+E,KAAAkoF,KAAA,EAAA5J,KAGA,QAAA8T,IAAA9T,GACA,MAAAt+E,MAAAkoF,KAAA,KAAA5J,KAGA,QAAA+T,IAAA/T,GACA,QAAAA,GAAA,QAAAt+E,KAAAkoF,KAAA,EAAA5J,KAAAt+E,KAAAkoF,KAAA,GAAA5J,GAAA,GAAAA,GAAA,KAcA,QAAAgU,IAAAhU,GACA,SAAAiU,GAAA,EAAAjU,GAGA,QAAAiU,IAAAjU,GACA,OAAAA,MAAAkU,GAAAC,GAAAnU,MAAAoU,GAAAD,IAAAnU,GAAAqU,IAAArU,EAAAsU,GAAAtU,EAAAuU,GAAAJ,IAAAnU,GAAAwU,IAAAxU,EAAAyU,GAAAN,IAAAnU,GAAA0U,IAAA1U,EAAA2U,GAGA,QAAAC,IAAA5U,GACA,QAAAA,GAAA,QAAAiU,GAAA,EAAAjU,GAAAiU,GAAAjU,EAAA,QA6FA,QAAA6U,IAAAhrF,EAAAjU,GAEA,IADA,GAAAk/F,KACAA,EAAAjrF,EAAAwlF,iBAAAyF,IAAAl/F,KACA,KAAAiU,IAAA7Q,YACA,MAAA+7F,IAAArqB,KAAAe,KAAAspB,EAGA,OAAAD,GA0DA,QAAAE,MACArhG,EAAAuT,MAAA8+E,2BA2FA,QAAA9xF,IAAA8rF,GACA,OAAU9rF,KAAA8rF,GAIV,QAAAiV,MACA,OAAAthG,EAAAuT,MAAAy/E,OAGA,QAAAuO,MACA,GAAAhuD,GAAAnyC,KAAAogG,iBAAApgG,IACA,eAAAmyC,EAAAkuD,MAAAnJ,QAAAzvF,MAAA0qC,EAAAmuD,OAAApJ,QAAAzvF,QAIA,QAAA84F,IAAAzrF,GACA,MAAAA,EAAA0rF,SAAA,KAAA1rF,IAAA7Q,YAAA,MACA,OAAA6Q,GAAA0rF,QAGA,QAAAC,IAAAC,GACA,MAAAA,GAAA,QAAAA,EAAA,OACAA,EAAA,QAAAA,EAAA,MAGA,QAAAC,IAAA7rF,GACA,GAAAylF,GAAAzlF,EAAA0rF,OACA,OAAAjG,KAAAqG,IAAAC,OAAAtG,EAAA3Q,WAAA,KAGA,QAAAkX,MACA,MAAAC,IAAAC,IAGA,QAAAC,MACA,MAAAF,IAAAG,IAOA,QAAAH,IAAAH,GAOA,QAAAO,GAAAztB,GACA,GAAA0tB,GAAA1tB,EACAznE,SAAA,UAAAo1F,GACAxX,UAAA,YACA/4E,MAAA3R,GAAA,YAEAiiG,GAAAloE,QAAAixD,OAAA,QACAxqD,KAAA,mBACAA,KAAA,wBACAA,KAAA,SAAA2hE,GAAAF,SACAld,MAAAkd,GACA/a,KAAA,WACA,GAAAqa,GAAAH,GAAAvgG,MAAA0gG,MACArW,IAAArqF,MACA2/B,KAAA,IAAA+gE,EAAA,OACA/gE,KAAA,IAAA+gE,EAAA,OACA/gE,KAAA,QAAA+gE,EAAA,MAAAA,EAAA,OACA/gE,KAAA,SAAA+gE,EAAA,MAAAA,EAAA,SAGAhtB,EAAAmW,UAAA,cACA/4E,MAAA3R,GAAA,eACA+5B,QAAAixD,OAAA,QACAxqD,KAAA,qBACAA,KAAA,SAAA2hE,GAAA1X,WACAjqD,KAAA,eACAA,KAAA,mBACAA,KAAA,iBACAA,KAAA,+BAEA,IAAA4hE,GAAA7tB,EAAAmW,UAAA,WACA/4E,KAAA8vF,EAAAY,QAAA,SAAA1kF,GAAsC,MAAAA,GAAA3d,MAEtCoiG,GAAAtX,OAAA5mF,SAEAk+F,EAAAroE,QAAAixD,OAAA,QACAxqD,KAAA,iBAAA7iB,GAAoC,wBAAAA,EAAA3d,OACpCwgC,KAAA,kBAAA7iB,GAAqC,MAAAwkF,IAAAxkF,EAAA3d,QAErCu0E,EACA2S,KAAAob,GACA9hE,KAAA,eACAA,KAAA,wBACAjK,MAAA,+CACA7jB,GAAA,mCAAA6vF,GAyCA,QAAAD,KACA,GAAA/tB,GAAA2W,GAAArqF,MACAoxF,EAAAmP,GAAAvgG,MAAA4pF,SAEAwH,IACA1d,EAAAmW,UAAA,cACAn0D,MAAA,gBACAiK,KAAA,IAAAyxD,EAAA,OACAzxD,KAAA,IAAAyxD,EAAA,OACAzxD,KAAA,QAAAyxD,EAAA,MAAAA,EAAA,OACAzxD,KAAA,SAAAyxD,EAAA,MAAAA,EAAA,OAEA1d,EAAAmW,UAAA,WACAn0D,MAAA,gBACAiK,KAAA,aAAA7iB,GAAkC,YAAAA,EAAA3d,KAAA2d,EAAA3d,KAAAwB,OAAA,GAAAywF,EAAA,MAAAuQ,EAAA,EAAAvQ,EAAA,MAAAuQ,EAAA,IAClChiE,KAAA,aAAA7iB,GAAkC,YAAAA,EAAA3d,KAAA,GAAAiyF,EAAA,MAAAuQ,EAAA,EAAAvQ,EAAA,MAAAuQ,EAAA,IAClChiE,KAAA,iBAAA7iB,GAAsC,YAAAA,EAAA3d,MAAA,MAAA2d,EAAA3d,KAAAiyF,EAAA,MAAAA,EAAA,MAAAuQ,MACtChiE,KAAA,kBAAA7iB,GAAuC,YAAAA,EAAA3d,MAAA,MAAA2d,EAAA3d,KAAAiyF,EAAA,MAAAA,EAAA,MAAAuQ,OAIvCjuB,EAAAmW,UAAA,sBACAn0D,MAAA,kBACAiK,KAAA,UACAA,KAAA,UACAA,KAAA,cACAA,KAAA,eAIA,QAAAiiE,GAAA3U,EAAA34E,GACA,MAAA24E,GAAAuT,QAAAoB,SAAA,GAAAC,GAAA5U,EAAA34E,GAGA,QAAAutF,GAAA5U,EAAA34E,GACAtU,KAAAitF,OACAjtF,KAAAsU,OACAtU,KAAAu6F,MAAAtN,EAAAuT,QACAxgG,KAAAkxC,OAAA,EAyBA,QAAAwwD,KAqEA,QAAArjE,KACA,GAAAyjE,GAAAC,GAAA9U,IACA+U,GAAAC,GAAAC,IACAv1F,KAAAm7E,IAAAga,EAAA,GAAAK,EAAA,IAAAx1F,KAAAm7E,IAAAga,EAAA,GAAAK,EAAA,IAAAD,GAAA,EACAD,GAAA,GAEAE,EAAAL,EACAM,GAAA,EACAC,KACAC,IAGA,QAAAA,KACA,GAAArX,EAKA,QAHAhtD,EAAAkkE,EAAA,GAAAI,EAAA,GACApkE,EAAAgkE,EAAA,GAAAI,EAAA,GAEAruD,GACA,IAAAsuD,IACA,IAAAC,IACAC,IAAAzkE,EAAAtxB,KAAAC,IAAA+1F,EAAAC,EAAAj2F,KAAAkyE,IAAAwW,EAAAwN,EAAA5kE,IAAA6kE,EAAAF,EAAA3kE,EAAA8kE,EAAAF,EAAA5kE,GACA+kE,IAAA7kE,EAAAxxB,KAAAC,IAAAq2F,EAAAC,EAAAv2F,KAAAkyE,IAAAskB,EAAAC,EAAAjlE,IAAAklE,EAAAH,EAAA/kE,EAAAmlE,EAAAF,EAAAjlE,EACA,MAEA,KAAAolE,IACAb,EAAA,GAAAzkE,EAAAtxB,KAAAC,IAAA+1F,EAAAC,EAAAj2F,KAAAkyE,IAAAwW,EAAAuN,EAAA3kE,IAAA6kE,EAAAF,EAAA3kE,EAAA8kE,EAAAF,GACAH,EAAA,IAAAzkE,EAAAtxB,KAAAC,IAAA+1F,EAAAE,EAAAl2F,KAAAkyE,IAAAwW,EAAAwN,EAAA5kE,IAAA6kE,EAAAF,EAAAG,EAAAF,EAAA5kE,GACA+kE,EAAA,GAAA7kE,EAAAxxB,KAAAC,IAAAq2F,EAAAC,EAAAv2F,KAAAkyE,IAAAskB,EAAAD,EAAA/kE,IAAAklE,EAAAH,EAAA/kE,EAAAmlE,EAAAF,GACAJ,EAAA,IAAA7kE,EAAAxxB,KAAAC,IAAAq2F,EAAAG,EAAAz2F,KAAAkyE,IAAAskB,EAAAC,EAAAjlE,IAAAklE,EAAAH,EAAAI,EAAAF,EAAAjlE,EACA,MAEA,KAAAqlE,IACAd,IAAAI,EAAAn2F,KAAAC,IAAA+1F,EAAAh2F,KAAAkyE,IAAAwW,EAAAuN,EAAA3kE,EAAAykE,IAAAK,EAAAp2F,KAAAC,IAAA+1F,EAAAh2F,KAAAkyE,IAAAwW,EAAAwN,EAAA5kE,EAAAykE,KACAM,IAAAK,EAAA12F,KAAAC,IAAAq2F,EAAAt2F,KAAAkyE,IAAAskB,EAAAD,EAAA/kE,EAAA6kE,IAAAM,EAAA32F,KAAAC,IAAAq2F,EAAAt2F,KAAAkyE,IAAAskB,EAAAC,EAAAjlE,EAAA6kE,KAKAD,EAAAD,IACAJ,IAAA,EACAzX,EAAA2X,IAAAC,IAAA5X,EACAA,EAAA6X,IAAAC,IAAA9X,EACA9rF,IAAAskG,KAAArC,EAAAzhE,KAAA,SAAA2hE,GAAAniG,EAAAskG,GAAAtkG,MAGAmkG,EAAAD,IACAL,IAAA,EACA/X,EAAAiY,IAAAE,IAAAnY,EACAA,EAAAoY,IAAAC,IAAArY,EACA9rF,IAAAukG,KAAAtC,EAAAzhE,KAAA,SAAA2hE,GAAAniG,EAAAukG,GAAAvkG,MAGAo7F,EAAA3Q,YAAAwH,EAAAmJ,EAAA3Q,WACAqY,IAAAa,EAAA1R,EAAA,MAAA2R,EAAA3R,EAAA,OACA8Q,IAAAmB,EAAAjS,EAAA,MAAAkS,EAAAlS,EAAA,OAEAA,EAAA,QAAA0R,GACA1R,EAAA,QAAAiS,GACAjS,EAAA,QAAA2R,GACA3R,EAAA,QAAAkS,IACA/I,EAAA3Q,YAAAkZ,EAAAO,IAAAN,EAAAO,IACA7B,EAAAl6F,KAAA0lF,GACA/zE,EAAAioF,SAIA,QAAAtpE,KAEA,GADAooE,KACArhG,EAAAuT,MAAAwxF,QAAA,CACA,GAAA/kG,EAAAuT,MAAAwxF,QAAAhjG,OAAA,MACAijG,IAAA/sB,aAAA+sB,GACAA,EAAA5rE,WAAA,WAA6C4rE,EAAA,MAAsB,KACnElwB,EAAA7hE,GAAA,6DAEAq/E,IAAAtyF,EAAAuT,MAAAkkD,KAAA+rC,GACA/rC,EAAAxkD,GAAA,+DAEA6hE,GAAA/zC,KAAA,wBACAyhE,EAAAzhE,KAAA,SAAA2hE,GAAAF,SACA7G,EAAA3Q,YAAAwH,EAAAmJ,EAAA3Q,WACA6W,GAAArP,KAAAmJ,EAAA3Q,UAAA,KAAA6X,EAAAl6F,KAAA0lF,IACA/zE,EAAA4e,MAGA,QAAA+rE,KACA,OAAAjlG,EAAAuT,MAAA2xF,SACA,QACA9B,EAAAU,GAAAM,CACA,MAEA,SACA9uD,IAAAqvD,KACAb,IAAAG,EAAAE,EAAA9kE,EAAAykE,EAAAE,EAAAE,EAAA7kE,EAAAykE,GACAM,IAAAI,EAAAE,EAAAnlE,EAAA6kE,EAAAE,EAAAG,EAAAllE,EAAA6kE,GACA9uD,EAAAsvD,GACAlB,IAEA,MAEA,SACApuD,IAAAqvD,IAAArvD,IAAAsvD,KACAd,EAAA,EAAAG,EAAAE,EAAA9kE,EAAwCykE,EAAA,IAAAE,EAAAE,EAAA7kE,GACxC+kE,EAAA,EAAAI,EAAAE,EAAAnlE,EAAwC6kE,EAAA,IAAAE,EAAAG,EAAAllE,GACxC+V,EAAAsuD,GACApB,EAAAzhE,KAAA,SAAA2hE,GAAA1X,WACA0Y,IAEA,MAEA,gBAEAD,KAGA,QAAA0B,KACA,OAAAnlG,EAAAuT,MAAA2xF,SACA,QACA9B,IACAC,EAAAC,EAAAF,GAAA,EACAM,IAEA,MAEA,SACApuD,IAAAsvD,KACAd,EAAA,EAAAG,EAAAE,EAAmCL,EAAA,IAAAE,EAAAE,GACnCE,EAAA,EAAAI,EAAAE,EAAmCN,EAAA,IAAAE,EAAAG,GACnCnvD,EAAAqvD,GACAjB,IAEA,MAEA,SACApuD,IAAAsuD,KACA5jG,EAAAuT,MAAA6L,QACA0kF,IAAAG,EAAAE,EAAA9kE,EAAAykE,EAAAE,EAAAE,EAAA7kE,EAAAykE,GACAM,IAAAI,EAAAE,EAAAnlE,EAAA6kE,EAAAE,EAAAG,EAAAllE,EAAA6kE,GACA9uD,EAAAsvD,KAEAd,EAAA,EAAAG,EAAAE,EAAqCL,EAAA,IAAAE,EAAAE,GACrCE,EAAA,EAAAI,EAAAE,EAAqCN,EAAA,IAAAE,EAAAG,GACrCnvD,EAAAqvD,IAEAnC,EAAAzhE,KAAA,SAAA2hE,GAAAniG,IACAmjG,IAEA,MAEA,gBAEAD,KA3NA,GAAAzjG,EAAAuT,MAAAwxF,SAAgC,GAAA/kG,EAAAuT,MAAA6xF,eAAArjG,OAAA/B,EAAAuT,MAAAwxF,QAAAhjG,OAAA,MAAA0hG,UAChC,IAAAuB,EAAA,MACA,IAAA39F,EAAAgC,MAAAjI,KAAAgI,WAAA,CAEA,GAQA46F,GAAAE,EACAI,EAAAG,EACAR,EAAAE,EACAK,EAAAE,EACArlE,EACAE,EACAikE,EAEAH,EACAC,EAjBAjV,EAAAjtF,KACAb,EAAAP,EAAAuT,MAAAzH,OAAAwsD,SAAA/3D,KACA+0C,EAAA,eAAAt1C,EAAAuT,MAAA8xF,QAAA9kG,EAAA,UAAAA,GAAAsjG,GAAA7jG,EAAAuT,MAAA6L,OAAAwlF,GAAAD,GACAb,EAAA9B,IAAAM,GAAA,KAAAgD,GAAA/kG,GACA6jG,EAAApC,IAAAI,GAAA,KAAAmD,GAAAhlG,GACAo7F,EAAAgG,GAAAtT,GACAyT,EAAAnG,EAAAmG,OACAtP,EAAAmJ,EAAA3Q,UACA+Y,EAAAjC,EAAA,MACAuC,EAAAvC,EAAA,MACArL,EAAAqL,EAAA,MACAyC,EAAAzC,EAAA,MAIAsB,EAAAU,GAAAM,GAAApkG,EAAAuT,MAAAiyF,SAGA7B,EAAAR,GAAA9U,GACAkV,EAAAI,EACArpF,EAAA0oF,EAAA3U,EAAAjlF,WAAAq8F,aAEA,aAAAllG,EACAo7F,EAAA3Q,UAAAwH,IACAwR,EAAAhC,IAAAM,GAAAyB,EAAAJ,EAAA,GAAAW,EAAAtC,IAAAI,GAAAiC,EAAAV,EAAA,KACAM,EAAAjC,IAAAM,GAAA7L,EAAAuN,EAAAQ,EAAAxC,IAAAI,GAAAmC,EAAAD,KAGAN,EAAAxR,EAAA,MACA8R,EAAA9R,EAAA,MACAyR,EAAAzR,EAAA,MACAgS,EAAAhS,EAAA,OAGA0R,EAAAF,EACAS,EAAAH,EACAH,EAAAF,EACAS,EAAAF,CAEA,IAAA1vB,GAAA2W,GAAA4C,GACAttD,KAAA,yBAEAyhE,EAAA1tB,EAAAmW,UAAA,YACAlqD,KAAA,SAAA2hE,GAAAniG,GAEA,IAAAP,EAAAuT,MAAAwxF,QACAjwB,EACA7hE,GAAA,kBAAAwsB,GAAA,GACAxsB,GAAA,mCAAAgmB,GAAA,OACK,CACL,GAAAw+B,GAAAg0B,GAAAzrF,EAAAuT,MAAAkkD,MACAxkD,GAAA,gBAAAgyF,GAAA,GACAhyF,GAAA,cAAAkyF,GAAA,GACAlyF,GAAA,kBAAAwsB,GAAA,GACAxsB,GAAA,gBAAAgmB,GAAA,EAEAysE,IAAA1lG,EAAAuT,MAAAkkD,MAGA4pC,KACAsE,GAAAtX,GACAwU,EAAAl6F,KAAA0lF,GACA/zE,EAAA9Q,SA6JA,QAAAi5F,KACA,GAAA9G,GAAAv6F,KAAAwgG,UAAiC5W,UAAA,KAGjC,OAFA2Q,GAAAmG,SAAAz4F,MAAAjI,KAAAgI,WACAuyF,EAAAqG,MACArG,EA9XA,GAIAqJ,GAJAlD,EAAAP,GACAl6F,EAAAi6F,GACA7sF,EAAA23E,EAAAmW,EAAA,uBACAQ,EAAA,CA+YA,OA7VAR,GAAAmB,KAAA,SAAA5uB,EAAA0d,GACA1d,EAAAkW,UACAlW,EACA7hE,GAAA,yBAAyC+vF,EAAA5hG,KAAAgI,WAAAq8F,cAAAj8F,UACzCyJ,GAAA,uCAAuD+vF,EAAA5hG,KAAAgI,WAAA8vB,QACvDqjE,MAAA,mBAQA,QAAAA,GAAAlQ,GACAsP,EAAA3Q,UAAA,IAAAqB,GAAAwV,GAAA+D,GAAA,KAAA9jG,EAAAuqF,GACAwW,EAAAl6F,KAAA0lF,GACA/zE,EAAAioF,QAVA,GAAAlU,GAAAjtF,KACAu6F,EAAAtN,EAAAuT,QACAtnF,EAAA0oF,EAAA3U,EAAAjlF,WACAy8F,EAAAlK,EAAA3Q,UACA4a,EAAA5D,EAAA7wB,MAAA,kBAAAqhB,KAAAnpF,MAAAjI,KAAAgI,WAAAopF,EAAAmJ,EAAAmG,QACAhgG,EAAA+7E,GAAAgoB,EAAAD,EAQA,OAAAC,IAAAD,EAAArJ,IAAA,KAGAznB,EACA2S,KAAA,WACA,GAAA4G,GAAAjtF,KACAsU,EAAAtM,UACAuyF,EAAAtN,EAAAuT,QACAgE,EAAA5D,EAAA7wB,MAAA,kBAAAqhB,KAAAnpF,MAAAglF,EAAA34E,GAAA88E,EAAAmJ,EAAAmG,QACAxnF,EAAA0oF,EAAA3U,EAAA34E,GAAA+vF,aAEAE,IAAAtX,GACAsN,EAAA3Q,UAAA,MAAA4a,GAAA/D,GAAA+D,GAAA,KAAAA,EACA/C,EAAAl6F,KAAA0lF,GACA/zE,EAAA9Q,QAAA+4F,QAAArpE,SA8CA+pE,EAAApzF,WACA41F,YAAA,WAEA,MADA,MAAArkG,KAAAkxC,SAAAlxC,KAAAu6F,MAAAqH,QAAA5hG,UAAA0kG,UAAA,GACA1kG,MAEAoI,MAAA,WAEA,MADApI,MAAA0kG,WAAA1kG,KAAA0kG,UAAA,EAAA1kG,KAAAkZ,KAAA,UACAlZ,MAEAmhG,MAAA,WAEA,MADAnhG,MAAAkZ,KAAA,SACAlZ,MAEA83B,IAAA,WAEA,MADA,MAAA93B,KAAAkxC,eAAAlxC,MAAAu6F,MAAAqH,QAAA5hG,KAAAkZ,KAAA,QACAlZ,MAEAkZ,KAAA,SAAA/Z,GACA6tF,EAAA,GAAA2X,IAAAxD,EAAAhiG,EAAAyhG,EAAAC,OAAA7gG,KAAAu6F,MAAA3Q,YAAAv2E,EAAApL,MAAAoL,GAAAlU,EAAAa,KAAAitF,KAAAjtF,KAAAsU,SA2OA6sF,EAAAT,OAAA,SAAA9vE,GACA,MAAA5oB,WAAArH,QAAA+/F,EAAA,kBAAA9vE,KAAAg0E,MAAAh0E,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,SAAAuwE,GAAAT,GAGAS,EAAAl7F,OAAA,SAAA2qB,GACA,MAAA5oB,WAAArH,QAAAsF,EAAA,kBAAA2qB,KAAAg0E,KAAAh0E,GAAAuwE,GAAAl7F,GAGAk7F,EAAAQ,WAAA,SAAA/wE,GACA,MAAA5oB,WAAArH,QAAAghG,GAAA/wE,EAAAuwE,GAAAQ,GAGAR,EAAAtvF,GAAA,WACA,GAAApK,GAAA4L,EAAAxB,GAAA5J,MAAAoL,EAAArL,UACA,OAAAP,KAAA4L,EAAA8tF,EAAA15F,GAGA05F,EAUA,QAAA0D,IAAAC,GACA,gBAAA/8F,EAAAsB,GACA,MAAAy7F,GACA/8F,EAAA4a,OAAAlb,MAAAM,EAAA2C,OAAAjD,MACA4B,EAAAsZ,OAAAlb,MAAA4B,EAAAqB,OAAAjD,QAgIA,QAAAs9F,MACA/kG,KAAAglG,IAAAhlG,KAAAilG,IACAjlG,KAAAklG,IAAAllG,KAAAmlG,IAAA,KACAnlG,KAAA4wB,EAAA,GAGA,QAAA1mB,MACA,UAAA66F,IAqHA,QAAAK,IAAAtoF,GACA,MAAAA,GAAA6F,OAGA,QAAA0iF,IAAAvoF,GACA,MAAAA,GAAApS,OAGA,QAAA46F,IAAAxoF,GACA,MAAAA,GAAAyoF,OAGA,QAAAC,IAAA1oF,GACA,MAAAA,GAAA2oF,WAGA,QAAAC,IAAA5oF,GACA,MAAAA,GAAA6oF,SAoEA,QAAA1tC,OAkDA,QAAA2tC,IAAAlrD,EAAA+sC,GACA,GAAA1gF,GAAA,GAAAkxD,GAGA,IAAAvd,YAAAud,IAAAvd,EAAA2rC,KAAA,SAAA5+E,EAAA5H,GAA+DkH,EAAAsF,IAAAxM,EAAA4H,SAG/D,IAAAa,MAAAoD,QAAAgvC,GAAA,CACA,GAEAmyC,GAFAnsF,GAAA,EACA+F,EAAAi0C,EAAA/5C,MAGA,UAAA8mF,EAAA,OAAA/mF,EAAA+F,GAAAM,EAAAsF,IAAA3L,EAAAg6C,EAAAh6C,QACA,QAAAA,EAAA+F,GAAAM,EAAAsF,IAAAo7E,EAAAoF,EAAAnyC,EAAAh6C,KAAAg6C,GAAAmyC,OAIA,IAAAnyC,EAAA,OAAA76C,KAAA66C,GAAA3zC,EAAAsF,IAAAxM,EAAA66C,EAAA76C,GAEA,OAAAkH,GA2DA,QAAA8+F,MACA,SAGA,QAAAC,IAAAprD,EAAA76C,EAAA4H,GACAizC,EAAA76C,GAAA4H,EAGA,QAAAs+F,MACA,MAAAH,MAGA,QAAAI,IAAAj/F,EAAAlH,EAAA4H,GACAV,EAAAsF,IAAAxM,EAAA4H,GAGA,QAAAioC,OAoBA,QAAAu2D,IAAAvrD,EAAA+sC,GACA,GAAAp7E,GAAA,GAAAqjC,GAGA,IAAAgL,YAAAhL,IAAAgL,EAAA2rC,KAAA,SAAA5+E,GAA0D4E,EAAA0F,IAAAtK,SAG1D,IAAAizC,EAAA,CACA,GAAAh6C,IAAA,EAAA+F,EAAAi0C,EAAA/5C,MACA,UAAA8mF,EAAA,OAAA/mF,EAAA+F,GAAA4F,EAAA0F,IAAA2oC,EAAAh6C,QACA,QAAAA,EAAA+F,GAAA4F,EAAA0F,IAAA01E,EAAA/sC,EAAAh6C,KAAAg6C,IAGA,MAAAruC,GAqBA,QAAA65F,IAAAC,GACA,UAAAlmG,UAAA,eAAoCkmG,EAAAp/F,IAAA,SAAAyG,EAAA9M,GACpC,MAAAuE,MAAAC,UAAAsI,GAAA,OAAA9M,EAAA,MACGsB,KAAA,UAGH,QAAAokG,IAAAD,EAAA1e,GACA,GAAA/sC,GAAAwrD,GAAAC,EACA,iBAAAE,EAAA3lG,GACA,MAAA+mF,GAAA/sC,EAAA2rD,GAAA3lG,EAAAylG,IAKA,QAAAG,IAAAC,GACA,GAAAC,GAAA9mG,OAAAsH,OAAA,MACAm/F,IAUA,OARAI,GAAA3mG,QAAA,SAAAymG,GACA,OAAAI,KAAAJ,GACAI,IAAAD,IACAL,EAAAhlG,KAAAqlG,EAAAC,QAKAN,EAgLA,QAAAp0F,IAAAuO,EAAAonE,EAAAc,EAAA1rE,GACA,GAAAnW,MAAA+gF,IAAA/gF,MAAA6hF,GAAA,MAAAloE,EAEA,IAAAxS,GAOA44F,EACAC,EACAC,EACAC,EACApwD,EACA8zC,EACA7pF,EACAgC,EAbAoS,EAAAwL,EAAAwmF,MACAC,GAAcj2F,KAAAgM,GACdkqF,EAAA1mF,EAAA0kF,IACAiC,EAAA3mF,EAAA2kF,IACAiC,EAAA5mF,EAAA4kF,IACAiC,EAAA7mF,EAAA6kF,GAWA,KAAArwF,EAAA,MAAAwL,GAAAwmF,MAAAC,EAAAzmF,CAGA,MAAAxL,EAAAnU,QAGA,IAFA81C,EAAAixC,IAAAgf,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAmDQ,EAAAR,GACnDnc,EAAA/B,IAAAme,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAoDQ,EAAAR,EACpD74F,EAAAgH,QAAApU,EAAA6pF,GAAA,EAAA9zC,IAAA,MAAA3oC,GAAApN,GAAAqmG,EAAAzmF,CAMA,IAFAsmF,GAAAtmF,EAAA8mF,GAAA7/F,KAAA,KAAAuN,EAAAhE,MACA+1F,GAAAvmF,EAAA+mF,GAAA9/F,KAAA,KAAAuN,EAAAhE,MACA42E,IAAAkf,GAAApe,IAAAqe,EAAA,MAAAE,GAAAl0E,KAAA/d,EAAAhH,IAAApN,GAAAqmG,EAAAzmF,EAAAwmF,MAAAC,EAAAzmF,CAGA,IACAxS,MAAApN,GAAA,GAAA4H,OAAA,GAAAgY,EAAAwmF,MAAA,GAAAx+F,OAAA,IACAmuC,EAAAixC,IAAAgf,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAmDQ,EAAAR,GACnDnc,EAAA/B,IAAAme,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAoDQ,EAAAR,SACjDjmG,EAAA6pF,GAAA,EAAA9zC,KAAA/zC,GAAAmkG,GAAAF,IAAA,EAAAC,GAAAF,GACH,OAAA54F,GAAApL,GAAAoS,EAAAhH,EAAApN,GAAAqmG,EAAAzmF,EAGA,QAAAgnF,IAAAx2F,GACA,GAAAgM,GAAApc,EACAgnF,EACAc,EAFA/hF,EAAAqK,EAAAnQ,OAGA4mG,EAAA,GAAAj/F,OAAA7B,GACA+gG,EAAA,GAAAl/F,OAAA7B,GACAugG,EAAAhoC,IACAioC,EAAAjoC,IACAkoC,IAAAloC,KACAmoC,IAAAnoC,IAGA,KAAAt+D,EAAA,EAAaA,EAAA+F,IAAO/F,EACpBiG,MAAA+gF,GAAA1nF,KAAAonG,GAAA7/F,KAAA,KAAAuV,EAAAhM,EAAApQ,MAAAiG,MAAA6hF,GAAAxoF,KAAAqnG,GAAA9/F,KAAA,KAAAuV,MACAyqF,EAAA7mG,GAAAgnF,EACA8f,EAAA9mG,GAAA8nF,EACAd,EAAAsf,MAAAtf,GACAA,EAAAwf,MAAAxf,GACAc,EAAAye,MAAAze,GACAA,EAAA2e,MAAA3e,GAWA,KAPA0e,EAAAF,MAAAhnG,KAAAglG,IAAAkC,EAAAlnG,KAAAklG,KACAiC,EAAAF,MAAAjnG,KAAAilG,IAAAkC,EAAAnnG,KAAAmlG,KAGAnlG,KAAAynG,MAAAT,EAAAC,GAAAQ,MAAAP,EAAAC,GAGAzmG,EAAA,EAAaA,EAAA+F,IAAO/F,EACpBqR,GAAA/R,KAAAunG,EAAA7mG,GAAA8mG,EAAA9mG,GAAAoQ,EAAApQ,GAGA,OAAAV,MAmNA,QAAA0nG,IAAA52F,GACA,OAAApQ,GAAA,EAAA+F,EAAAqK,EAAAnQ,OAAkCD,EAAA+F,IAAO/F,EAAAV,KAAAqD,OAAAyN,EAAApQ,GACzC,OAAAV,MAkDA,QAAA2nG,IAAA7qF,GACA,MAAAA,GAAA,GAOA,QAAA8qF,IAAA9qF,GACA,MAAAA,GAAA,GAOA,QAAA+qF,IAAAC,EAAApgB,EAAAc,GACA,GAAAloE,GAAA,GAAAynF,IAAA,MAAArgB,EAAAigB,GAAAjgB,EAAA,MAAAc,EAAAof,GAAApf,EAAAyF,gBACA,cAAA6Z,EAAAxnF,IAAAgnF,OAAAQ,GAGA,QAAAC,IAAArgB,EAAAc,EAAAwe,EAAAC,EAAAC,EAAAC,GACAnnG,KAAAonG,GAAA1f,EACA1nF,KAAAqnG,GAAA7e,EACAxoF,KAAAglG,IAAAgC,EACAhnG,KAAAilG,IAAAgC,EACAjnG,KAAAklG,IAAAgC,EACAlnG,KAAAmlG,IAAAgC,EACAnnG,KAAA8mG,MAAAt3F,OAGA,QAAAw4F,IAAAjB,GAEA,IADA,GAAA9/B,IAAcn2D,KAAAi2F,EAAAj2F,MAAgB+hB,EAAAo0C,EAC9B8/B,IAAAl0E,gBAA+C/hB,KAAAi2F,EAAAj2F,KAC/C,OAAAm2D,GA2CA,QAAAygB,IAAA5qE,GACA,MAAAA,GAAA4qE,EAAA5qE,EAAAmrF,GAGA,QAAAzf,IAAA1rE,GACA,MAAAA,GAAA0rE,EAAA1rE,EAAAorF,GA0FA,QAAA9jG,IAAA0Y,GACA,MAAAA,GAAA1Y,MAGA,QAAAm+E,IAAA4lB,EAAAC,GACA,GAAAtzF,GAAAqzF,EAAAxmG,IAAAymG,EACA,KAAAtzF,EAAA,SAAAxP,OAAA,YAAA8iG,EACA,OAAAtzF,GA0GA,QAAAuzF,IAAAvrF,GACA,MAAAA,GAAA4qE,EAGA,QAAA4gB,IAAAxrF,GACA,MAAAA,GAAA0rE,EA+aA,QAAA+f,IAAAC,GACA,UAAAC,IAAAD,GAKA,QAAAC,IAAAD,GACA,KAAA14F,EAAAqvB,GAAAqD,KAAAgmE,IAAA,SAAAljG,OAAA,mBAAAkjG,EAEA,IAAA14F,GACA8hE,EAAA9hE,EAAA,QACA44F,EAAA54F,EAAA,QACA64F,EAAA74F,EAAA,QACAi4D,EAAAj4D,EAAA,OACA0mF,IAAA1mF,EAAA,GACAuwF,EAAAvwF,EAAA,KAAAA,EAAA,GACA84F,IAAA94F,EAAA,GACAm+D,EAAAn+D,EAAA,KAAAA,EAAA,GAAA4W,MAAA,GACAvnB,EAAA2Q,EAAA,MAGA,OAAA3Q,GAAAypG,GAAA,EAAAzpG,EAAA,KAGA0pG,GAAA1pG,OAAA,KAGAq3F,GAAA,MAAA5kB,GAAA,MAAA82B,KAAAlS,GAAA,EAAA5kB,EAAA,IAAA82B,EAAA,KAEA1oG,KAAA4xE,OACA5xE,KAAA0oG,QACA1oG,KAAA2oG,OACA3oG,KAAA+nE,SACA/nE,KAAAw2F,OACAx2F,KAAAqgG,QACArgG,KAAA4oG,QACA5oG,KAAAiuE,YACAjuE,KAAAb,OAsJA,QAAA2pG,IAAA7jF,GAIA,MAHA8jF,IAAAC,GAAA/jF,GACArmB,EAAAwqF,OAAA2f,GAAA3f,OACAxqF,EAAAqqG,aAAAF,GAAAE,aACAF,GA2BA,QAAAG,MACAlpG,KAAAmpG,QAsBA,QAAA70E,IAAA80E,EAAArhG,EAAAsB,GACA,GAAAq+E,GAAA0hB,EAAAlhF,EAAAngB,EAAAsB,EACAggG,EAAA3hB,EAAA3/E,EACAuhG,EAAA5hB,EAAA2hB,CACAD,GAAAne,EAAAljF,EAAAuhG,GAAAjgG,EAAAggG,GA2BA,QAAAE,IAAA7hB,GACA,MAAAA,GAAA,IAAAA,GAAA,EAAA8hB,GAAA78F,KAAA48F,KAAA7hB,GAGA,QAAA+hB,IAAA/hB,GACA,MAAAA,GAAA,EAAAgiB,GAAAhiB,GAAA,GAAAgiB,GAAA/8F,KAAA88F,KAAA/hB,GAGA,QAAAiiB,IAAAjiB,GACA,OAAAA,EAAAkiB,GAAAliB,EAAA,IAAAA,EAGA,QAAAmiB,OAEA,QAAAC,IAAAC,EAAAC,GACAD,GAAAE,GAAA3iG,eAAAyiG,EAAA5qG,OACA8qG,GAAAF,EAAA5qG,MAAA4qG,EAAAC,GA8CA,QAAAE,IAAAC,EAAAH,EAAAI,GACA,GAAAC,GAAA3pG,GAAA,EAAA+F,EAAA0jG,EAAAxpG,OAAAypG,CAEA,KADAJ,EAAAM,cACA5pG,EAAA+F,GAAA4jG,EAAAF,EAAAzpG,GAAAspG,EAAA7H,MAAAkI,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAL,GAAAO,UAGA,QAAAC,IAAAL,EAAAH,GACA,GAAAtpG,IAAA,EAAA+F,EAAA0jG,EAAAxpG,MAEA,KADAqpG,EAAAS,iBACA/pG,EAAA+F,GAAAyjG,GAAAC,EAAAzpG,GAAAspG,EAAA,EACAA,GAAAU,aAuCA,QAAAC,MACAC,GAAAzI,MAAA0I,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IAGA,QAAAJ,IAAAK,EAAAC,GACAP,GAAAzI,MAAA4I,GACAC,GAAAE,EAAAD,GAAAE,EACAD,GAAAE,GAAAD,GAAAC,GACAC,GAAAH,EAAAI,GAAAC,GAAAJ,IAAA,EAAAK,IAAAC,GAAA7B,GAAAuB,GAGA,QAAAJ,IAAAG,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,GACAD,IAAA,EAAAK,EAKA,IAAAE,GAAAR,EAAAG,GACAM,EAAAD,GAAA,OACAE,EAAAD,EAAAD,EACAG,EAAAN,GAAAJ,GACAW,EAAAlC,GAAAuB,GACA7gB,EAAAmhB,GAAAK,EACAC,EAAAT,GAAAO,EAAAvhB,EAAAihB,GAAAK,GACAj4D,EAAA22C,EAAAqhB,EAAA/B,GAAAgC,EACAI,IAAAj6F,IAAA4iF,GAAAhhD,EAAAo4D,IAGAV,GAAAH,EAAAI,GAAAO,EAAAJ,GAAAK,EASA,QAAAG,IAAAC,GACA,OAAAvX,GAAAuX,EAAA,GAAAA,EAAA,IAAAzC,GAAAyC,EAAA,KAGA,QAAAA,IAAAD,GACA,GAAAf,GAAAe,EAAA,GAAAd,EAAAc,EAAA,GAAAJ,EAAAN,GAAAJ,EACA,QAAAU,EAAAN,GAAAL,GAAAW,EAAAjC,GAAAsB,GAAAtB,GAAAuB,IAGA,QAAAgB,IAAApkG,EAAAsB,GACA,MAAAtB,GAAA,GAAAsB,EAAA,GAAAtB,EAAA,GAAAsB,EAAA,GAAAtB,EAAA,GAAAsB,EAAA,GAGA,QAAA+iG,IAAArkG,EAAAsB,GACA,OAAAtB,EAAA,GAAAsB,EAAA,GAAAtB,EAAA,GAAAsB,EAAA,GAAAtB,EAAA,GAAAsB,EAAA,GAAAtB,EAAA,GAAAsB,EAAA,GAAAtB,EAAA,GAAAsB,EAAA,GAAAtB,EAAA,GAAAsB,EAAA,IAIA,QAAAgjG,IAAAtkG,EAAAsB,GACAtB,EAAA,IAAAsB,EAAA,GAAAtB,EAAA,IAAAsB,EAAA,GAAAtB,EAAA,IAAAsB,EAAA,GAGA,QAAAijG,IAAAC,EAAAjiB,GACA,OAAAiiB,EAAA,GAAAjiB,EAAAiiB,EAAA,GAAAjiB,EAAAiiB,EAAA,GAAAjiB,GAIA,QAAAkiB,IAAA1vF,GACA,GAAAlb,GAAAizF,GAAA/3E,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,GAAA,IAAAlb,EAAAkb,EAAA,IAAAlb,EAAAkb,EAAA,IAAAlb,EAsCA,QAAA6qG,IAAAvB,EAAAC,GACAuB,GAAAvrG,KAAAkkF,IAAAsnB,GAAAzB,EAAA0B,GAAA1B,IACAC,EAAA0B,QAAA1B,GACAA,EAAA2B,QAAA3B,GAGA,QAAA4B,IAAA7B,EAAAC,GACA,GAAA96E,GAAA67E,IAAAhB,EAAAE,GAAAD,EAAAC,IACA,IAAA4B,GAAA,CACA,GAAAC,GAAAb,GAAAY,GAAA38E,GACA68E,GAAAD,EAAA,IAAAA,EAAA,MACAE,EAAAf,GAAAc,EAAAD,EACAT,IAAAW,GACAA,EAAAlB,GAAAkB,EACA,IAGAC,GAHAC,EAAAnC,EAAAoC,GACAC,EAAAF,EAAA,OACAG,EAAAL,EAAA,GAAAM,GAAAF,EAEAG,EAAA5lB,GAAAulB,GAAA,GACAK,IAAAH,EAAAD,GAAAE,KAAAD,EAAArC,IACAkC,EAAAD,EAAA,GAAAM,IACAX,QAAAM,IACKI,KAAA,aAAAE,GAAAH,EAAAD,GAAAE,KAAAD,EAAArC,IACLkC,GAAAD,EAAA,GAAAM,IACAZ,QAAAO,IAEAjC,EAAA0B,QAAA1B,GACAA,EAAA2B,QAAA3B,KAEAuC,EACAxC,EAAAoC,GACAK,GAAAhB,GAAAzB,GAAAyC,GAAAhB,GAAAC,SAAA1B,GAEAyC,GAAAzC,EAAA0B,IAAAe,GAAAhB,GAAAC,MAAAD,GAAAzB,GAGA0B,IAAAD,IACAzB,EAAAyB,QAAAzB,GACAA,EAAA0B,QAAA1B,IAEAA,EAAAoC,GACAK,GAAAhB,GAAAzB,GAAAyC,GAAAhB,GAAAC,SAAA1B,GAEAyC,GAAAzC,EAAA0B,IAAAe,GAAAhB,GAAAC,MAAAD,GAAAzB,OAKAwB,IAAAvrG,KAAAkkF,IAAAsnB,GAAAzB,EAAA0B,GAAA1B,GAEAC,GAAA0B,QAAA1B,GACAA,EAAA2B,QAAA3B,GACA6B,GAAA38E,EAAAi9E,GAAApC,EAGA,QAAA0C,MACAC,GAAA1L,MAAA4K,GAGA,QAAAe,MACAzoB,GAAA,GAAAsnB,GAAAtnB,GAAA,GAAAunB,GACAiB,GAAA1L,MAAAsK,GACAO,GAAA,KAGA,QAAAe,IAAA7C,EAAAC,GACA,GAAA6B,GAAA,CACA,GAAAK,GAAAnC,EAAAoC,EACAU,IAAAj8F,IAAA+1E,GAAAulB,GAAA,IAAAA,KAAA,YAAAA,OAEAY,IAAA/C,EAAAgD,GAAA/C,CAEAP,IAAAzI,MAAA+I,EAAAC,GACA4B,GAAA7B,EAAAC,GAGA,QAAAgD,MACAvD,GAAAN,YAGA,QAAA8D,MACAL,GAAAE,GAAAC,IACAtD,GAAAL,UACAziB,GAAAkmB,IAAAK,KAAA1B,KAAAC,GAAA,MACAvnB,GAAA,GAAAsnB,GAAAtnB,GAAA,GAAAunB,GACAI,GAAA,KAMA,QAAAW,IAAAtC,EAAAuB,GACA,OAAAA,GAAAvB,GAAA,EAAAuB,EAAA,IAAAA,EAGA,QAAA0B,IAAAvmG,EAAAsB,GACA,MAAAtB,GAAA,GAAAsB,EAAA,GAGA,QAAAklG,IAAAlpB,EAAAqC,GACA,MAAArC,GAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAqC,MAAArC,EAAA,GAAAqC,EAAArC,EAAA,IAAAA,EAAA,GAAAqC,EAyEA,QAAA8mB,IAAAtD,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,EACAsD,IAAA5C,EAAAN,GAAAL,GAAAW,EAAAjC,GAAAsB,GAAAtB,GAAAuB,IAGA,QAAAsD,IAAA/mB,EAAAc,EAAAkmB,KACAC,GACAC,KAAAlnB,EAAAknB,IAAAD,GACAE,KAAArmB,EAAAqmB,IAAAF,GACAG,KAAAJ,EAAAI,IAAAH,GAGA,QAAAI,MACAC,GAAA7M,MAAA8M,GAGA,QAAAA,IAAA/D,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,EACAnE,IAAA6E,EAAAN,GAAAL,GACAjE,GAAA4E,EAAAjC,GAAAsB,GACAgE,GAAAtF,GAAAuB,GACA6D,GAAA7M,MAAAgN,GACAV,GAAAzH,GAAAC,GAAAiI,IAGA,QAAAC,IAAAjE,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,GACAzjB,EAAAmkB,EAAAN,GAAAL,GACA1iB,EAAAqjB,EAAAjC,GAAAsB,GACAwD,EAAA9E,GAAAuB,GACAiE,EAAAza,GAAAE,IAAAua,EAAAnI,GAAAyH,EAAAQ,GAAA1mB,GAAA4mB,KAAAF,GAAAxnB,EAAAsf,GAAA0H,GAAAU,KAAApI,GAAAxe,EAAAye,GAAAvf,GAAA0nB,GAAApI,GAAAtf,EAAAuf,GAAAze,EAAA0mB,GAAAR,EACAW,KAAAD,EACAE,IAAAF,GAAApI,OAAAtf,IACA6nB,IAAAH,GAAAnI,OAAAze,IACAgnB,IAAAJ,GAAAF,OAAAR,IACAD,GAAAzH,GAAAC,GAAAiI,IAGA,QAAAO,MACAT,GAAA7M,MAAAqM,GAKA,QAAAkB,MACAV,GAAA7M,MAAAwN,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IACAf,GAAA7M,MAAAqM,GAGA,QAAAmB,IAAAzE,EAAAC,GACA2E,GAAA5E,EAAA6E,GAAA5E,EACAD,GAAAE,GAAAD,GAAAC,GACA4D,GAAA7M,MAAA0N,EACA,IAAAhE,GAAAN,GAAAJ,EACAnE,IAAA6E,EAAAN,GAAAL,GACAjE,GAAA4E,EAAAjC,GAAAsB,GACAgE,GAAAtF,GAAAuB,GACAsD,GAAAzH,GAAAC,GAAAiI,IAGA,QAAAW,IAAA3E,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,GACAzjB,EAAAmkB,EAAAN,GAAAL,GACA1iB,EAAAqjB,EAAAjC,GAAAsB,GACAwD,EAAA9E,GAAAuB,GACA6E,EAAA/I,GAAAyH,EAAAQ,GAAA1mB,EACAynB,EAAAf,GAAAxnB,EAAAsf,GAAA0H,EACAwB,EAAAlJ,GAAAxe,EAAAye,GAAAvf,EACAz+E,EAAA4rF,GAAAmb,IAAAC,IAAAC,KACAd,EAAA3F,GAAAxgG,GACA0qC,EAAA1qC,IAAAmmG,EAAAnmG,CACAknG,KAAAx8D,EAAAq8D,EACAI,IAAAz8D,EAAAs8D,EACAI,IAAA18D,EAAAu8D,EACAb,IAAAD,EACAE,IAAAF,GAAApI,OAAAtf,IACA6nB,IAAAH,GAAAnI,OAAAze,IACAgnB,IAAAJ,GAAAF,OAAAR,IACAD,GAAAzH,GAAAC,GAAAiI,IA+CA,QAAAoB,IAAApF,EAAAC,GACA,OAAAD,EAAA1B,GAAA0B,EAAAqF,GAAArF,GAAA1B,GAAA0B,EAAAqF,GAAArF,EAAAC,GAKA,QAAAqF,IAAAC,EAAAC,EAAAC,GACA,OAAAF,GAAAF,IAAAG,GAAAC,EAAAC,GAAAC,GAAAJ,GAAAK,GAAAJ,EAAAC,IACAE,GAAAJ,GACAC,GAAAC,EAAAG,GAAAJ,EAAAC,GACAL,GAGA,QAAAS,IAAAN,GACA,gBAAAvF,EAAAC,GACA,MAAAD,IAAAuF,GAAAvF,EAAA1B,GAAA0B,EAAAqF,GAAArF,GAAA1B,GAAA0B,EAAAqF,GAAArF,EAAAC,IAIA,QAAA0F,IAAAJ,GACA,GAAAO,GAAAD,GAAAN,EAEA,OADAO,GAAAjtB,OAAAgtB,IAAAN,GACAO,EAGA,QAAAF,IAAAJ,EAAAC,GAMA,QAAAK,GAAA9F,EAAAC,GACA,GAAAU,GAAAN,GAAAJ,GACAzjB,EAAA6jB,GAAAL,GAAAW,EACArjB,EAAAohB,GAAAsB,GAAAW,EACA6C,EAAA9E,GAAAuB,GACA7gB,EAAAokB,EAAAuC,EAAAvpB,EAAAwpB,CACA,QACAvc,GAAAnM,EAAA2oB,EAAA7mB,EAAA8mB,EAAA1pB,EAAAupB,EAAAvC,EAAAwC,GACAzH,GAAAnf,EAAA6mB,EAAA3oB,EAAA4oB,IAbA,GAAAH,GAAA1F,GAAAmF,GACAQ,EAAAtH,GAAA8G,GACAS,EAAA5F,GAAAoF,GACAS,EAAAxH,GAAA+G,EA0BA,OAZAK,GAAAjtB,OAAA,SAAAmnB,EAAAC,GACA,GAAAU,GAAAN,GAAAJ,GACAzjB,EAAA6jB,GAAAL,GAAAW,EACArjB,EAAAohB,GAAAsB,GAAAW,EACA6C,EAAA9E,GAAAuB,GACA7gB,EAAAokB,EAAAyC,EAAA3oB,EAAA4oB,CACA,QACAzc,GAAAnM,EAAA2oB,EAAAzC,EAAA0C,EAAA1pB,EAAAupB,EAAA3mB,EAAA4mB,GACAzH,GAAAnf,EAAA2mB,EAAAvpB,EAAAwpB,KAIAF,EAoBA,QAAAK,IAAArH,EAAAzE,EAAA8H,EAAAiE,EAAAhd,EAAAE,GACA,GAAA6Y,EAAA,CACA,GAAAkE,GAAAhG,GAAAhG,GACAiM,EAAA5H,GAAArE,GACAvhC,EAAAstC,EAAAjE,CACA,OAAA/Y,GACAA,EAAAiR,EAAA+L,EAAAf,GACA/b,EAAA+Q,EAAAvhC,EAAA,IAEAswB,EAAAmd,GAAAF,EAAAjd,GACAE,EAAAid,GAAAF,EAAA/c,IACA8c,EAAA,EAAAhd,EAAAE,EAAAF,EAAAE,KAAAF,GAAAgd,EAAAf,IAEA,QAAApO,GAAAlX,EAAAqJ,EAAyBgd,EAAA,EAAArmB,EAAAuJ,EAAAvJ,EAAAuJ,EAAiCvJ,GAAAjnB,EAC1Dm+B,EAAA8J,IAAAsF,GAAAC,EAAAjG,GAAAtgB,IAAAumB,EAAA5H,GAAA3e,KACA+e,EAAA7H,QAAA,GAAAA,EAAA,KAKA,QAAAsP,IAAAF,EAAApP,GACAA,EAAA+J,GAAA/J,KAAA,IAAAoP,EACA/E,GAAArK,EACA,IAAAoD,GAAAgE,IAAApH,EAAA,GACA,UAAAA,EAAA,MAAAoD,KAAAgL,GAAAlC,IAAAkC,GAkIA,QAAAmB,IAAAvP,EAAAwP,EAAAtzC,EAAArH,GACAh3D,KAAA0nF,EAAAya,EACAniG,KAAA0uG,EAAAiD,EACA3xG,KAAA6sF,EAAAxuB,EACAr+D,KAAAG,EAAA62D,EACAh3D,KAAA2zC,GAAA,EACA3zC,KAAAyG,EAAAzG,KAAAqwB,EAAA,KA+EA,QAAAuhF,IAAAx5D,GACA,GAAA3xC,EAAA2xC,EAAAz3C,OAAA,CAKA,IAJA,GAAA8F,GAGA4C,EAFA3I,EAAA,EACAqH,EAAAqwC,EAAA,KAEA13C,EAAA+F,GACAsB,EAAAtB,EAAA4C,EAAA+uC,EAAA13C,GACA2I,EAAAgnB,EAAAtoB,EACAA,EAAAsB,CAEAtB,GAAAtB,EAAA4C,EAAA+uC,EAAA,GACA/uC,EAAAgnB,EAAAtoB,GASA,QAAA8pG,IAAA7K,EAAAC,EAAAC,EAAAC,GAEA,QAAA2K,GAAApqB,EAAAc,GACA,MAAAwe,IAAAtf,MAAAwf,GAAAD,GAAAze,MAAA2e,EAGA,QAAA9qB,GAAAtvE,EAAAvE,EAAA8oG,EAAAtH,GACA,GAAAjiG,GAAA,EAAAgqG,EAAA,CACA,UAAAhlG,IACAhF,EAAAiqG,EAAAjlG,EAAAukG,OAAAS,EAAAC,EAAAxpG,EAAA8oG,KACAW,EAAAllG,EAAAvE,GAAA,EAAA8oG,EAAA,EACA,GAAAtH,EAAA7H,MAAA,IAAAp6F,GAAA,IAAAA,EAAAi/F,EAAAE,EAAAn/F,EAAA,EAAAo/F,EAAAF,UACAl/F,KAAAupG,EAAA,QAAAS,OAEA/H,GAAA7H,MAAA35F,EAAA,GAAAA,EAAA,IAIA,QAAAwpG,GAAA3hF,EAAAihF,GACA,MAAAxpB,IAAAz3D,EAAA,GAAA22E,GAAAqH,GAAAiD,EAAA,MACAxpB,GAAAz3D,EAAA,GAAA62E,GAAAmH,GAAAiD,EAAA,MACAxpB,GAAAz3D,EAAA,GAAA42E,GAAAoH,GAAAiD,EAAA,MACAA,EAAA,MAGA,QAAAY,GAAAnqG,EAAAsB,GACA,MAAA4oG,GAAAlqG,EAAA2/E,EAAAr+E,EAAAq+E,GAGA,QAAAuqB,GAAAlqG,EAAAsB,GACA,GAAA8oG,GAAAH,EAAAjqG,EAAA,GACAqM,EAAA49F,EAAA3oG,EAAA,EACA,OAAA8oG,KAAA/9F,EAAA+9F,EAAA/9F,EACA,IAAA+9F,EAAA9oG,EAAA,GAAAtB,EAAA,GACA,IAAAoqG,EAAApqG,EAAA,GAAAsB,EAAA,GACA,IAAA8oG,EAAApqG,EAAA,GAAAsB,EAAA,GACAA,EAAA,GAAAtB,EAAA,GAGA,gBAAAiiG,GAmBA,QAAA7H,GAAAza,EAAAc,GACAspB,EAAApqB,EAAAc,IAAA4pB,EAAAjQ,MAAAza,EAAAc,GAGA,QAAA6pB,KAGA,OAFAC,GAAA,EAEA5xG,EAAA,EAAA+F,EAAA8rG,EAAA5xG,OAAyCD,EAAA+F,IAAO/F,EAChD,OAAA8xG,GAAAT,EAAAU,EAAAF,EAAA7xG,GAAAgC,EAAA,EAAAuG,EAAAwpG,EAAA9xG,OAAAwhG,EAAAsQ,EAAA,GAAArT,EAAA+C,EAAA,GAAAhD,EAAAgD,EAAA,GAAkHz/F,EAAAuG,IAAOvG,EACzH8vG,EAAApT,EAAA2S,EAAA5S,EAAAgD,EAAAsQ,EAAA/vG,GAAA08F,EAAA+C,EAAA,GAAAhD,EAAAgD,EAAA,GACA4P,GAAA5K,EAAyBhI,EAAAgI,IAAA/H,EAAAoT,IAAArL,EAAA4K,IAAA5S,EAAA4S,IAAA/K,EAAAwL,MAAAF,EACTnT,GAAAgI,IAAA/H,EAAAoT,IAAArL,EAAA4K,IAAA5S,EAAA4S,IAAA/K,EAAAwL,MAAAF,CAIhB,OAAAA,GAIA,QAAA7H,KACA2H,EAAAM,EAAAtoG,KAAAmoG,KAAAI,GAAA,EAGA,QAAAjI,KACA,GAAAkI,GAAAP,IACAQ,EAAAF,GAAAC,EACAd,GAAA1nG,EAAA85E,GAAA95E,IAAAzJ,QACAkyG,GAAAf,KACA9H,EAAAS,eACAoI,IACA7I,EAAAM,YACAjuB,EAAA,YAAA2tB,GACAA,EAAAO,WAEAuH,GACAgB,GAAA1oG,EAAA8nG,EAAAU,EAAAv2B,EAAA2tB,GAEAA,EAAAU,cAEA0H,EAAApI,EAAA5/F,EAAAmoG,EAAAE,EAAA,KAGA,QAAAnI,KACAyI,EAAA5Q,MAAA4K,EACAwF,KAAApxG,KAAAsxG,MACAlsB,GAAA,EACAysB,GAAA,EACAC,EAAAC,EAAAjlB,IAMA,QAAAsc,KACAngG,IACA2iG,EAAAoG,EAAAC,GACAC,GAAAL,GAAAN,EAAAY,SACAlpG,EAAAjJ,KAAAuxG,EAAA3wG,WAEAgxG,EAAA5Q,QACA6Q,GAAAZ,EAAA7H,UAGA,QAAAwC,GAAArlB,EAAAc,GACA,GAAA70C,GAAAm+D,EAAApqB,EAAAc,EAEA,IADA+pB,GAAAE,EAAAtxG,MAAAumF,EAAAc,IACAjC,EACA4sB,EAAAzrB,EAAA0rB,EAAA5qB,EAAA6qB,EAAA1/D,EACA4yC,GAAA,EACA5yC,IACAy+D,EAAA9H,YACA8H,EAAAjQ,MAAAza,EAAAc,QAGA,IAAA70C,GAAAq/D,EAAAZ,EAAAjQ,MAAAza,EAAAc,OACA,CACA,GAAAzgF,IAAAkrG,EAAAtmG,KAAAC,IAAA2mG,GAAA5mG,KAAAkyE,IAAA20B,GAAAP,IAAAC,EAAAvmG,KAAAC,IAAA2mG,GAAA5mG,KAAAkyE,IAAA20B,GAAAN,KACA7pG,GAAAq+E,EAAA/6E,KAAAC,IAAA2mG,GAAA5mG,KAAAkyE,IAAA20B,GAAA9rB,IAAAc,EAAA77E,KAAAC,IAAA2mG,GAAA5mG,KAAAkyE,IAAA20B,GAAAhrB,IACAirB,IAAA1rG,EAAAsB,EAAA29F,EAAAC,EAAAC,EAAAC,IACA6L,IACAZ,EAAA9H,YACA8H,EAAAjQ,MAAAp6F,EAAA,GAAAA,EAAA,KAEAqqG,EAAAjQ,MAAA94F,EAAA,GAAAA,EAAA,IACAsqC,GAAAy+D,EAAA7H,UACAoI,GAAA,GACWh/D,IACXy+D,EAAA9H,YACA8H,EAAAjQ,MAAAza,EAAAc,GACAmqB,GAAA,GAIAM,EAAAvrB,EAAAwrB,EAAA1qB,EAAAwqB,EAAAr/D,EA/GA,GAEAvpC,GACAmoG,EACAE,EACAU,EAAAC,EAAAC,EACAJ,EAAAC,EAAAF,EACAzsB,EACAosB,EARAP,EAAApI,EACA0I,EAAAgB,KASAX,GACA5Q,QACAmI,YACAC,UACAE,eACAC,aAmGA,OAAAqI,IAsGA,QAAAY,MACAC,GAAAzR,MAAA0R,GACAD,GAAArJ,QAAAuJ,GAGA,QAAAA,MACAF,GAAAzR,MAAAyR,GAAArJ,QAAAV,GAGA,QAAAgK,IAAA3I,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,GACA2I,GAAA7I,EAAA8I,GAAApK,GAAAuB,GAAA8I,GAAA1I,GAAAJ,GACAyI,GAAAzR,MAAA+R,GAGA,QAAAA,IAAAhJ,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAU,GAAAlC,GAAAuB,GACAU,EAAAN,GAAAJ,GACAkC,EAAAvlB,GAAAojB,EAAA6I,IACAI,EAAA5I,GAAA8B,GACA+G,EAAAxK,GAAAyD,GACA3lB,EAAAmkB,EAAAuI,EACA5rB,EAAAyrB,GAAAnI,EAAAkI,GAAAnI,EAAAsI,EACAzF,EAAAsF,GAAAlI,EAAAmI,GAAApI,EAAAsI,CACAE,IAAAtiG,IAAA4iF,GAAAE,GAAAnN,IAAAc,KAAAkmB,IACAqF,GAAA7I,EAAA8I,GAAAlI,EAAAmI,GAAApI,EAgEA,QAAAyI,IAAAvK,EAAA5H,GACA,SAAA4H,IAAAwK,GAAAjtG,eAAAyiG,EAAA5qG,QACAo1G,GAAAxK,EAAA5qG,MAAA4qG,EAAA5H,GAIA,QAAAqS,IAAArK,EAAAhI,GACA,WAAAsS,GAAAtK,EAAAhI,GAGA,QAAAuS,IAAAvK,EAAAhI,GACA,GAAAwS,GAAAF,GAAAtK,EAAA,GAAAA,EAAA,GAGA,OAFAsK,IAAAtK,EAAA,GAAAhI,GACAsS,GAAAtS,EAAAgI,EAAA,KACAwK,EAAAtG,GAGA,QAAAuG,IAAAzK,EAAAhI,GACA,QAAA0S,GAAA1K,EAAApjG,IAAA+tG,IAAAC,GAAA5S,IAGA,QAAA2S,IAAArC,GACA,MAAAA,KAAA1rG,IAAAguG,IAAAtC,EAAA5nG,MAAA4nG,EAGA,QAAAsC,IAAA5S,GACA,OAAAA,EAAA,GAAAiJ,GAAAjJ,EAAA,GAAAiJ,IASA,QAAA4J,IAAA/N,EAAAE,EAAAhpE,GACA,GAAAqqD,GAAAysB,GAAAhO,EAAAE,EAAAkH,GAAAlwE,GAAAj1B,OAAAi+F,EACA,iBAAAzf,GAAsB,MAAAc,GAAAzhF,IAAA,SAAAyhF,GAA2B,OAAAd,EAAAc,MAGjD,QAAA0sB,IAAAlO,EAAAE,EAAAjpE,GACA,GAAAypD,GAAAutB,GAAAjO,EAAAE,EAAAmH,GAAApwE,GAAA/0B,OAAAg+F,EACA,iBAAA1e,GAAsB,MAAAd,GAAA3gF,IAAA,SAAA2gF,GAA2B,OAAAA,EAAAc,MAGjD,QAAA2sB,MAOA,QAAAA,KACA,OAAYh2G,KAAA,kBAAAgrG,YAAAiL,KAGZ,QAAAA,KACA,MAAAH,IAAAj1B,GAAA4uB,EAAAyG,KAAA/F,EAAA+F,GAAAtuG,IAAAi6F,GACA93F,OAAA+rG,GAAAj1B,GAAA6uB,EAAAyG,KAAA/F,EAAA+F,GAAAvuG,IAAAm6F,IACAh4F,OAAA+rG,GAAAj1B,GAAAgnB,EAAA/oE,KAAAipE,EAAAjpE,GAAAh4B,OAAA,SAAAyhF,GAAyE,MAAAI,IAAAJ,EAAA2tB,GAAAhH,KAAkCtnG,IAAA2gF,IAC3Gx+E,OAAA+rG,GAAAj1B,GAAAinB,EAAA9oE,KAAAgpE,EAAAhpE,GAAAl4B,OAAA,SAAAuiF,GAAyE,MAAAV,IAAAU,EAAA8sB,GAAAjH,KAAkCtnG,IAAAyhF,IAd3G,GAAA0e,GAAAF,EAAAsI,EAAAV,EACAzH,EAAAF,EAAAsI,EAAAV,EAEAnnB,EAAAc,EAAAwY,EAAAE,EADAjjE,EAAA,GAAAE,EAAAF,EAAAo3E,EAAA,GAAAC,EAAA,IAEArnC,EAAA,GA+EA,OAlEAknC,GAAAC,MAAA,WACA,MAAAA,KAAAruG,IAAA,SAAAojG,GAA8C,OAAShrG,KAAA,aAAAgrG,kBAGvDgL,EAAAI,QAAA,WACA,OACAp2G,KAAA,UACAgrG,aACAnJ,EAAA4N,GAAA1lG,OACAg4F,EAAAqO,GAAA7oF,MAAA,GACAs6E,EAAAsO,GAAA3jC,UAAAjlD,MAAA,GACAw6E,EAAA2N,GAAAljC,UAAAjlD,MAAA,OAKAyuF,EAAAzU,OAAA,SAAA9vE,GACA,MAAA5oB,WAAArH,OACAw0G,EAAAK,YAAA5kF,GAAA6kF,YAAA7kF,GADAukF,EAAAM,eAIAN,EAAAK,YAAA,SAAA5kF,GACA,MAAA5oB,WAAArH,QACAiuG,GAAAh+E,EAAA,MAAA0+E,GAAA1+E,EAAA,MACAi+E,GAAAj+E,EAAA,MAAA2+E,GAAA3+E,EAAA,MACAg+E,EAAAU,IAAA1+E,EAAAg+E,IAAAU,IAAA1+E,GACAi+E,EAAAU,IAAA3+E,EAAAi+E,IAAAU,IAAA3+E,GACAukF,EAAAlnC,gBALA2gC,EAAAC,IAAAS,EAAAC,KAQA4F,EAAAM,YAAA,SAAA7kF,GACA,MAAA5oB,WAAArH,QACAqmG,GAAAp2E,EAAA,MAAAs2E,GAAAt2E,EAAA,MACAq2E,GAAAr2E,EAAA,MAAAu2E,GAAAv2E,EAAA,MACAo2E,EAAAE,IAAAt2E,EAAAo2E,IAAAE,IAAAt2E,GACAq2E,EAAAE,IAAAv2E,EAAAq2E,IAAAE,IAAAv2E,GACAukF,EAAAlnC,gBALA+4B,EAAAC,IAAAC,EAAAC,KAQAgO,EAAAnxC,KAAA,SAAApzC,GACA,MAAA5oB,WAAArH,OACAw0G,EAAAO,UAAA9kF,GAAA+kF,UAAA/kF,GADAukF,EAAAQ,aAIAR,EAAAO,UAAA,SAAA9kF,GACA,MAAA5oB,WAAArH,QACA00G,GAAAzkF,EAAA,GAAA0kF,GAAA1kF,EAAA,GACAukF,IAFAE,EAAAC,IAKAH,EAAAQ,UAAA,SAAA/kF,GACA,MAAA5oB,WAAArH,QACAs9B,GAAArN,EAAA,GAAAuN,GAAAvN,EAAA,GACAukF,IAFAl3E,EAAAE,IAKAg3E,EAAAlnC,UAAA,SAAAr9C,GACA,MAAA5oB,WAAArH,QACAstE,GAAAr9C,EACA82D,EAAAstB,GAAA/N,EAAAE,EAAA,IACA3e,EAAA0sB,GAAAlO,EAAAE,EAAAj5B,GACA+yB,EAAAgU,GAAAnG,EAAAU,EAAA,IACArO,EAAAgU,GAAAtG,EAAAU,EAAArhC,GACAknC,GANAlnC,GASAknC,EACAK,eAAA,QAAAnH,KAAA,OAAAA,MACAoH,eAAA,QAAApH,KAAA,OAAAA,MAGA,QAAAuH,MACA,MAAAT,QAqEA,QAAAU,MACAC,GAAA3T,MAAA4T,GAGA,QAAAA,IAAAruB,EAAAc,GACAstB,GAAA3T,MAAA6T,GACAC,GAAAC,GAAAxuB,EAAAyuB,GAAAC,GAAA5tB,EAGA,QAAAwtB,IAAAtuB,EAAAc,GACA6tB,GAAAtkG,IAAAqkG,GAAA1uB,EAAAwuB,GAAA1tB,GACA0tB,GAAAxuB,EAAA0uB,GAAA5tB,EAGA,QAAA8tB,MACAN,GAAAC,GAAAE,IAqBA,QAAAI,IAAA7uB,EAAAc,GACAd,EAAA8uB,QAAA9uB,GACAA,EAAAwf,QAAAxf,GACAc,EAAAiuB,QAAAjuB,GACAA,EAAA2e,QAAA3e,GA4CA,QAAAkuB,IAAAhvB,EAAAc,GACAmuB,IAAAjvB,EACAkvB,IAAApuB,IACAquB,GAGA,QAAAC,MACAC,GAAA5U,MAAA6U,GAGA,QAAAA,IAAAtvB,EAAAc,GACAuuB,GAAA5U,MAAA8U,GACAP,GAAAQ,GAAAxvB,EAAAyvB,GAAA3uB,GAGA,QAAAyuB,IAAAvvB,EAAAc,GACA,GAAAvqD,GAAAypD,EAAAwvB,GAAA/4E,EAAAqqD,EAAA2uB,GAAAzI,EAAA7Z,GAAA52D,IAAAE,IACAi5E,KAAA1I,GAAAwI,GAAAxvB,GAAA,EACA2vB,IAAA3I,GAAAyI,GAAA3uB,GAAA,EACA8uB,IAAA5I,EACAgI,GAAAQ,GAAAxvB,EAAAyvB,GAAA3uB,GAGA,QAAA+uB,MACAR,GAAA5U,MAAAuU,GAGA,QAAAc,MACAT,GAAA5U,MAAAsV,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IAGA,QAAAJ,IAAA/vB,EAAAc,GACAuuB,GAAA5U,MAAAwV,GACAjB,GAAAkB,GAAAV,GAAAxvB,EAAAmwB,GAAAV,GAAA3uB,GAGA,QAAAmvB,IAAAjwB,EAAAc,GACA,GAAAvqD,GAAAypD,EAAAwvB,GACA/4E,EAAAqqD,EAAA2uB,GACAzI,EAAA7Z,GAAA52D,IAAAE,IAEAi5E,KAAA1I,GAAAwI,GAAAxvB,GAAA,EACA2vB,IAAA3I,GAAAyI,GAAA3uB,GAAA,EACA8uB,IAAA5I,EAEAA,EAAAyI,GAAAzvB,EAAAwvB,GAAA1uB,EACAsvB,IAAApJ,GAAAwI,GAAAxvB,GACAqwB,IAAArJ,GAAAyI,GAAA3uB,GACAwvB,IAAA,EAAAtJ,EACAgI,GAAAQ,GAAAxvB,EAAAyvB,GAAA3uB,GAGA,QAAAyvB,IAAAhnG,GACAjR,KAAA4c,SAAA3L,EAuEA,QAAAinG,IAAAxwB,EAAAc,GACA2vB,GAAAhW,MAAAiW,GACAC,GAAAC,GAAA5wB,EAAA6wB,GAAAC,GAAAhwB,EAGA,QAAA4vB,IAAA1wB,EAAAc,GACA8vB,IAAA5wB,EAAA8wB,IAAAhwB,EACAiwB,GAAA1mG,IAAA8iF,GAAAyjB,MAAAE,QACAF,GAAA5wB,EAAA8wB,GAAAhwB,EAGA,QAAAkwB,MACA14G,KAAA24G,WA+CA,QAAAC,IAAArT,GACA,YAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EACA,IA+KA,QAAAsT,IAAAC,GACA,MAAAA,GAAAn4G,OAAA,EAKA,QAAAuxG,IAAAnqG,EAAAsB,GACA,QAAAtB,IAAA2/E,GAAA,KAAA3/E,EAAA,GAAA2hG,GAAA2E,GAAA3E,GAAA3hG,EAAA,MACAsB,IAAAq+E,GAAA,KAAAr+E,EAAA,GAAAqgG,GAAA2E,GAAA3E,GAAArgG,EAAA,IAaA,QAAA0vG,IAAA/O,GACA,GAGA2I,GAHAtH,EAAApd,IACA4e,EAAA5e,IACA+qB,EAAA/qB,GAGA,QACAqc,UAAA,WACAN,EAAAM,YACAqI,EAAA,GAEAxQ,MAAA,SAAAyK,EAAAE,GACA,GAAAmM,GAAArM,EAAA,EAAApD,OACA6D,EAAAvlB,GAAA8kB,EAAAvB,EACAvjB,IAAAulB,EAAA7D,IAAA6E,IACArE,EAAA7H,MAAAkJ,EAAAwB,KAAAC,GAAA,IAAApD,QACAM,EAAA7H,MAAA6W,EAAAnM,GACA7C,EAAAO,UACAP,EAAAM,YACAN,EAAA7H,MAAA8W,EAAApM,GACA7C,EAAA7H,MAAAyK,EAAAC,GACA8F,EAAA,GACOqG,IAAAC,GAAA5L,GAAA7D,KACP1hB,GAAAujB,EAAA2N,GAAA3K,KAAAhD,GAAA2N,EAAA3K,IACAvmB,GAAA8kB,EAAAqM,GAAA5K,KAAAzB,GAAAqM,EAAA5K,IACAxB,EAAAqM,GAAA7N,EAAAwB,EAAAD,EAAAE,GACA9C,EAAA7H,MAAA6W,EAAAnM,GACA7C,EAAAO,UACAP,EAAAM,YACAN,EAAA7H,MAAA8W,EAAApM,GACA8F,EAAA,GAEA3I,EAAA7H,MAAAkJ,EAAAuB,EAAAC,EAAAC,GACAkM,EAAAC,GAEA1O,QAAA,WACAP,EAAAO,UACAc,EAAAwB,EAAA5e,KAEA0kB,MAAA,WACA,SAAAA,IAKA,QAAAuG,IAAA7N,EAAAwB,EAAAD,EAAAE,GACA,GAAAxB,GACA6N,EACAC,EAAAxP,GAAAyB,EAAAuB,EACA,OAAA9kB,IAAAsxB,GAAA/K,GACAgL,IAAAzP,GAAAiD,IAAAsM,EAAA5N,GAAAuB,IAAAlD,GAAAgD,GACAhD,GAAAkD,IAAAxB,EAAAC,GAAAsB,IAAAjD,GAAAyB,KACAC,EAAA6N,EAAAC,KACAvM,EAAAC,GAAA,EAGA,QAAAwM,IAAAvsG,EAAAvE,EAAA8oG,EAAAtH,GACA,GAAAmB,EACA,UAAAp+F,EACAo+F,EAAAmG,EAAA5H,GACAM,EAAA7H,OAAAqH,GAAA2B,GACAnB,EAAA7H,MAAA,EAAAgJ,GACAnB,EAAA7H,MAAAqH,GAAA2B,GACAnB,EAAA7H,MAAAqH,GAAA,GACAQ,EAAA7H,MAAAqH,IAAA2B,GACAnB,EAAA7H,MAAA,GAAAgJ,GACAnB,EAAA7H,OAAAqH,IAAA2B,GACAnB,EAAA7H,OAAAqH,GAAA,GACAQ,EAAA7H,OAAAqH,GAAA2B,OACG,IAAArjB,GAAA/6E,EAAA,GAAAvE,EAAA,IAAA6lG,GAAA,CACH,GAAAnD,GAAAn+F,EAAA,GAAAvE,EAAA,GAAAghG,MACA2B,GAAAmG,EAAApG,EAAA,EACAlB,EAAA7H,OAAA+I,EAAAC,GACAnB,EAAA7H,MAAA,EAAAgJ,GACAnB,EAAA7H,MAAA+I,EAAAC,OAEAnB,GAAA7H,MAAA35F,EAAA,GAAAA,EAAA,IA0LA,QAAA+wG,IAAAr/F,GACA,gBAAA8vF,GACA,GAAA9hF,GAAA,GAAAsxF,GACA,QAAA35G,KAAAqa,GAAAgO,EAAAroB,GAAAqa,EAAAra,EAEA,OADAqoB,GAAA8hF,SACA9hF,GAIA,QAAAsxF,OAYA,QAAAC,IAAAC,EAAAhZ,EAAAhmD,GACA,GAAA00D,GAAA1O,EAAA,MAAAA,EAAA,MACA7jF,EAAA6jF,EAAA,MAAAA,EAAA,MACAiZ,EAAAD,EAAA7H,YAAA6H,EAAA7H,YAEA6H,GACAhxB,MAAA,KACA+O,WAAA,MAEA,MAAAkiB,GAAAD,EAAA7H,WAAA,MAEA+H,GAAAl/D,EAAAg/D,EAAA1P,OAAA6P,IAEA,IAAAxwG,GAAAwwG,GAAA93G,SACAuoF,EAAA39E,KAAAkyE,IAAAuwB,GAAA/lG,EAAA,MAAAA,EAAA,OAAAwT,GAAAxT,EAAA,MAAAA,EAAA,QACAq+E,GAAAgZ,EAAA,OAAA0O,EAAA9kB,GAAAjhF,EAAA,MAAAA,EAAA,UACAm/E,GAAAkY,EAAA,OAAA7jF,EAAAytE,GAAAjhF,EAAA,MAAAA,EAAA,SAIA,OAFA,OAAAswG,GAAAD,EAAA7H,WAAA8H,GAEAD,EACAhxB,MAAA,IAAA4B,GACAmN,WAAA/P,EAAAc,IAGA,QAAAsxB,IAAAJ,EAAAt9D,EAAA1B,GACA,MAAA++D,IAAAC,IAAA,KAAAt9D,GAAA1B,GAUA,QAAAq/D,IAAAC,GACA,MAAAT,KACApX,MAAA,SAAAza,EAAAc,GACAd,EAAAsyB,EAAAtyB,EAAAc,GACAxoF,KAAAgqG,OAAA7H,MAAAza,EAAA,GAAAA,EAAA,OAKA,QAAAuyB,IAAAD,EAAAE,GAEA,QAAAC,GAAAnT,EAAAC,EAAAoE,EAAAmH,EAAApT,EAAAgb,EAAAlT,EAAAC,EAAAyF,EAAAmF,EAAA5S,EAAAkb,EAAAn9C,EAAA8sC,GACA,GAAA/rE,GAAAipE,EAAAF,EACA7oE,EAAAgpE,EAAAF,EACAqT,EAAAr8E,IAAAE,GACA,IAAAm8E,EAAA,EAAAJ,GAAAh9C,IAAA,CACA,GAAAn1D,GAAAyqG,EAAAT,EACA1oG,EAAA+1F,EAAAD,EACAv1F,EAAAwwG,EAAAC,EACApxG,EAAA4rF,GAAA9sF,IAAAsB,IAAAO,KACA2wG,EAAA9Q,GAAA7/F,GAAAX,GACAqkG,EAAAxlB,MAAAl+E,GAAA,GAAAykG,IAAAvmB,GAAAujB,EAAAuB,GAAAyB,IAAAhD,EAAAuB,GAAA,EAAAjY,GAAAtrF,EAAAtB,GACAsoB,EAAA2pF,EAAA1M,EAAAiN,GACAC,EAAAnqF,EAAA,GACAoqF,EAAApqF,EAAA,GACAqqF,EAAAF,EAAAxT,EACA2T,EAAAF,EAAAxT,EACA2T,EAAAz8E,EAAAu8E,EAAAz8E,EAAA08E,GACAC,IAAAN,EAAAJ,GACApyB,IAAA7pD,EAAAy8E,EAAAv8E,EAAAw8E,GAAAL,EAAA,QACA9H,EAAAT,EAAA3S,EAAAD,EAAAib,EAAAC,EAAAQ,MACAV,EAAAnT,EAAAC,EAAAoE,EAAAmH,EAAApT,EAAAgb,EAAAI,EAAAC,EAAAnN,EAAAvlG,GAAAkB,EAAAI,GAAAJ,EAAAW,EAAAszD,EAAA8sC,GACAA,EAAA7H,MAAAqY,EAAAC,GACAN,EAAAK,EAAAC,EAAAnN,EAAAvlG,EAAAsB,EAAAO,EAAAs9F,EAAAC,EAAAyF,EAAAmF,EAAA5S,EAAAkb,EAAAn9C,EAAA8sC,KAIA,gBAAAA,GAYA,QAAA7H,GAAAza,EAAAc,GACAd,EAAAsyB,EAAAtyB,EAAAc,GACAwhB,EAAA7H,MAAAza,EAAA,GAAAA,EAAA,IAGA,QAAA4iB,KACAtD,EAAA/Y,IACA6sB,EAAA3Y,MAAA4K,EACA/C,EAAAM,YAGA,QAAAyC,GAAA7B,EAAAC,GACA,GAAAvhG,GAAAsiG,IAAAhB,EAAAC,IAAA96E,EAAA2pF,EAAA9O,EAAAC,EACAgP,GAAAnT,EAAAC,EAAAoE,EAAAmH,EAAApT,EAAAgb,EAAApT,EAAA32E,EAAA,GAAA42E,EAAA52E,EAAA,GAAAg7E,EAAAH,EAAAsH,EAAA5oG,EAAA,GAAAw1F,EAAAx1F,EAAA,GAAAwwG,EAAAxwG,EAAA,GAAAmxG,GAAA/Q,GACAA,EAAA7H,MAAA6E,EAAAC,GAGA,QAAAsD,KACAuQ,EAAA3Y,QACA6H,EAAAO,UAGA,QAAAyQ,KACA1Q,IACAwQ,EAAA3Y,MAAA8Y,EACAH,EAAAvQ,QAAA2Q,EAGA,QAAAD,GAAA/P,EAAAC,GACA4B,EAAA/B,EAAAE,EAAAC,GAAA8K,EAAAjP,EAAAmP,EAAAlP,EAAAkU,EAAA3I,EAAA4I,EAAAhc,EAAAic,EAAAjB,EACAU,EAAA3Y,MAAA4K,EAGA,QAAAmO,KACAf,EAAAnT,EAAAC,EAAAoE,EAAAmH,EAAApT,EAAAgb,EAAAnE,EAAAE,EAAAnL,EAAAmQ,EAAAC,EAAAC,EAAAN,GAAA/Q,GACA8Q,EAAAvQ,UACAA,IA/CA,GAAAS,GAAAiL,EAAAE,EAAAgF,EAAAC,EAAAC,EACAhQ,EAAArE,EAAAC,EAAAuL,EAAApT,EAAAgb,EAEAU,GACA3Y,QACAmI,YACAC,UACAE,aAAA,WAAgCT,EAAAS,eAAuBqQ,EAAAxQ,UAAA0Q,GACvDtQ,WAAA,WAA8BV,EAAAU,aAAqBoQ,EAAAxQ,aA0CnD,OAAAwQ,IAUA,QAAApB,IAAAM,GACA,MAAAsB,IAAA,WAAuC,MAAAtB,OAGvC,QAAAsB,IAAAC,GAYA,QAAA7B,GAAAvX,GAEA,MADAA,GAAAqZ,EAAArZ,EAAA,GAAAiJ,GAAAjJ,EAAA,GAAAiJ,KACAjJ,EAAA,GAAA7X,EAAArsD,EAAAE,EAAAgkE,EAAA,GAAA7X,GAGA,QAAAvG,GAAAoe,GAEA,OADAA,EAAAqZ,EAAAz3B,QAAAoe,EAAA,GAAAlkE,GAAAqsD,GAAAnsD,EAAAgkE,EAAA,IAAA7X,MACA6X,EAAA,GAAAsL,GAAAtL,EAAA,GAAAsL,IAGA,QAAAgO,GAAA/zB,EAAAc,GACA,MAAAd,GAAAsyB,EAAAtyB,EAAAc,IAAAd,EAAA,GAAA4C,EAAArsD,EAAAE,EAAAupD,EAAA,GAAA4C,GA2CA,QAAAoxB,KACAF,EAAA5K,GAAA5Y,EAAAwY,GAAAC,EAAAC,EAAAC,GAAAqJ,EACA,IAAAvxB,GAAAuxB,EAAA9O,EAAAC,EAGA,OAFAltE,GAAAypD,EAAAe,EAAA,GAAA6B,EACAnsD,EAAAqqD,EAAAC,EAAA,GAAA6B,EACA6e,IAGA,QAAAA,KAEA,MADAvhG,GAAA+zG,EAAA,KACAjC,EA3EA,GAAAM,GAGA/7E,EAAAE,EACA65D,EAAAwjB,EAEAvU,EAAAC,EAAAC,EAEAv/F,EACA+zG,EARArxB,EAAA,IACA5C,EAAA,IAAAc,EAAA,IACA0iB,EAAA,EAAAC,EAAA,EACAsF,EAAA,EAAAC,EAAA,EAAAC,EAAA,EACAiL,EAAA,KAAAC,EAAAC,GACA9U,EAAA,KAAA+U,EAAAC,GACA9B,EAAA,GAAA+B,EAAAC,GAAAT,EAAAvB,EAuEA,OArDAR,GAAA1P,OAAA,SAAAA,GACA,MAAApiG,IAAA+zG,IAAA3R,EAAApiG,IAAAu0G,GAAAN,EAAA7jB,EAAAikB,EAAAF,EAAAJ,EAAA3R,OAGA0P,EAAA0C,UAAA,SAAAxrF,GACA,MAAA5oB,WAAArH,QAAAk7G,GAAAjrF,EAAAyrF,GAAAT,EAAAhrF,EAAAw6E,GAAA,EAAAA,KAAAwQ,EAAA,KAAAE,IAAA3S,KAAAyS,EAAAnO,IAGAiM,EAAA7H,WAAA,SAAAjhF,GACA,MAAA5oB,WAAArH,QAAAo7G,EAAA,MAAAnrF,GAAAo2E,EAAAC,EAAAC,EAAAC,EAAA,KAAA6U,IAAAnK,GAAA7K,GAAAp2E,EAAA,MAAAq2E,GAAAr2E,EAAA,MAAAs2E,GAAAt2E,EAAA,MAAAu2E,GAAAv2E,EAAA,OAAAu4E,KAAA,MAAAnC,EAAA,OAAAA,EAAAC,IAAAC,EAAAC,KAGAuS,EAAAhxB,MAAA,SAAA93D,GACA,MAAA5oB,WAAArH,QAAA2pF,GAAA15D,EAAA8qF,KAAApxB,GAGAovB,EAAAjiB,UAAA,SAAA7mE,GACA,MAAA5oB,WAAArH,QAAA+mF,GAAA92D,EAAA,GAAA43D,GAAA53D,EAAA,GAAA8qF,MAAAh0B,EAAAc,IAGAkxB,EAAAjxB,OAAA,SAAA73D,GACA,MAAA5oB,WAAArH,QAAAuqG,EAAAt6E,EAAA,OAAAw6E,GAAAD,EAAAv6E,EAAA,OAAAw6E,GAAAsQ,MAAAxQ,EAAAuC,GAAAtC,EAAAsC,KAGAiM,EAAA1hB,OAAA,SAAApnE,GACA,MAAA5oB,WAAArH,QAAA8vG,EAAA7/E,EAAA,OAAAw6E,GAAAsF,EAAA9/E,EAAA,OAAAw6E,GAAAuF,EAAA//E,EAAAjwB,OAAA,EAAAiwB,EAAA,OAAAw6E,GAAA,EAAAsQ,MAAAjL,EAAAhD,GAAAiD,EAAAjD,GAAAkD,EAAAlD,KAGAiM,EAAAzrC,UAAA,SAAAr9C,GACA,MAAA5oB,WAAArH,QAAAs7G,EAAAC,GAAAT,EAAAvB,EAAAtpF,KAAAu4E,KAAAtU,GAAAqlB,IAGAR,EAAAD,UAAA,SAAA/Y,EAAAhmD,GACA,MAAA++D,IAAAC,EAAAhZ,EAAAhmD,IAGAg/D,EAAAI,QAAA,SAAA19D,EAAA1B,GACA,MAAAo/D,IAAAJ,EAAAt9D,EAAA1B,IAgBA,WAGA,MAFAs/D,GAAAuB,EAAAtzG,MAAAjI,KAAAgI,WACA0xG,EAAA31B,OAAAi2B,EAAAj2B,UACA23B,KAIA,QAAAY,IAAAf,GACA,GAAA1O,GAAA,EACAC,EAAAtD,GAAA,EACAvgG,EAAAqyG,GAAAC,GACAlrF,EAAApnB,EAAA4jG,EAAAC,EAMA,OAJAz8E,GAAAksF,UAAA,SAAA3rF,GACA,MAAA5oB,WAAArH,OAAAsI,EAAA4jG,EAAAj8E,EAAA,GAAAw6E,GAAA0B,EAAAl8E,EAAA,GAAAw6E,KAAAyB,EAAAY,GAAAX,EAAAW,KAGAp9E,EAGA,QAAAmsF,IAAA3P,GAGA,QAAA4P,GAAAvR,EAAAC,GACA,OAAAD,EAAAI,EAAA1B,GAAAuB,GAAAG,GAHA,GAAAA,GAAAC,GAAAsB,EAUA,OAJA4P,GAAA14B,OAAA,SAAA2D,EAAAc,GACA,OAAAd,EAAA4jB,EAAA7B,GAAAjhB,EAAA8iB,KAGAmR,EAGA,QAAAC,IAAAzV,EAAAE,GAQA,QAAA6S,GAAAtyB,EAAAc,GACA,GAAAsK,GAAA+B,GAAAjrF,EAAA,EAAAnD,EAAAmjG,GAAAphB,IAAA/hF,CACA,QAAAqsF,EAAA8W,GAAAliB,GAAAjhF,GAAAk2G,EAAA7pB,EAAAyY,GAAA7jB,IATA,GAAAk1B,GAAAhT,GAAA3C,GAAAxgG,GAAAm2G,EAAAhT,GAAAzC,IAAA,CAGA,IAAArf,GAAArhF,GAAA4nG,GAAA,MAAAmO,IAAAvV,EAEA,IAAAr9F,GAAA,EAAAgzG,GAAA,EAAAn2G,EAAAm2G,GAAAD,EAAA9nB,GAAAjrF,GAAAnD,CAYA,OALAuzG,GAAAj2B,OAAA,SAAA2D,EAAAc,GACA,GAAAq0B,GAAAF,EAAAn0B,CACA,QAAAmM,GAAAjN,EAAAI,GAAA+0B,IAAAp2G,EAAAkiG,GAAAkU,GAAApT,IAAA7/F,GAAA89E,IAAAm1B,KAAAp2G,MAAA,EAAAA,MAGAuzG,EAoBA,QAAA8C,IAAAC,GACA,GAAAt2G,GAAAs2G,EAAAp8G,MACA,QACAwhG,MAAA,SAAAza,EAAAc,GAAuC,IAAZ,GAAA9nF,IAAA,IAAYA,EAAA+F,GAAAs2G,EAAAr8G,GAAAyhG,MAAAza,EAAAc,IACvCw0B,OAAA,WAAoC,IAAZ,GAAAt8G,IAAA,IAAYA,EAAA+F,GAAAs2G,EAAAr8G,GAAAs8G,UACpC1S,UAAA,WAAuC,IAAZ,GAAA5pG,IAAA,IAAYA,EAAA+F,GAAAs2G,EAAAr8G,GAAA4pG,aACvCC,QAAA,WAAqC,IAAZ,GAAA7pG,IAAA,IAAYA,EAAA+F,GAAAs2G,EAAAr8G,GAAA6pG,WACrCE,aAAA,WAA0C,IAAZ,GAAA/pG,IAAA,IAAYA,EAAA+F,GAAAs2G,EAAAr8G,GAAA+pG,gBAC1CC,WAAA,WAAwC,IAAZ,GAAAhqG,IAAA,IAAYA,EAAA+F,GAAAs2G,EAAAr8G,GAAAgqG,eAyFxC,QAAAuS,IAAAv0B,GACA,gBAAAhB,EAAAc,GACA,GAAAwnB,GAAAzE,GAAA7jB,GACAuoB,EAAA1E,GAAA/iB,GACA8B,EAAA5B,EAAAsnB,EAAAC,EACA,QACA3lB,EAAA2lB,EAAArG,GAAAliB,GACA4C,EAAAsf,GAAAphB,KAKA,QAAA00B,IAAAvP,GACA,gBAAAjmB,EAAAc,GACA,GAAAkmB,GAAA7Z,GAAAnN,IAAAc,KACA5+E,EAAA+jG,EAAAe,GACAyO,EAAAvT,GAAAhgG,EAEA,QACA+qF,GAAAjN,EAAAy1B,EAAAzO,EAFAnD,GAAA3hG,IAGA6/F,GAAAiF,GAAAlmB,EAAA20B,EAAAzO,KAiCA,QAAA0O,IAAAlS,EAAAC,GACA,OAAAD,EAAAjjB,GAAAo1B,IAAA3T,GAAAyB,GAAA,KAYA,QAAAmS,IAAAtD,GAwBA,QAAAuD,KACA,GAAAjzB,GAAAkf,GAAA9gB,IACAuC,EAAAhiF,GAAA,KACA,OAAA4oG,GAAA,MAAA7K,IACA/b,EAAA,GAAAX,EAAAW,EAAA,GAAAX,IAAAW,EAAA,GAAAX,EAAAW,EAAA,GAAAX,MACA39E,KAAAC,IAAAq+E,EAAA,GAAAX,EAAA0c,GAAAC,IAAAt6F,KAAAkyE,IAAAoM,EAAA,GAAAX,EAAA4c,GAAAC,KA5BA,GAKAF,GAAAC,EAAAC,EALAl+F,EAAAywG,GAAAM,GACAvxB,EAAAx/E,EAAAw/E,OACAC,EAAAz/E,EAAAy/E,MACA+O,EAAAxuF,EAAAwuF,UACAoa,EAAA5oG,EAAA4oG,WACA7K,EAAA,IA0BA,OAxBA/9F,GAAAw/E,OAAA,SAAA73D,GACA,MAAA5oB,WAAArH,QAAA8nF,EAAA73D,GAAA2sF,KAAA90B,KAGAx/E,EAAAy/E,MAAA,SAAA93D,GACA,MAAA5oB,WAAArH,QAAA+nF,EAAA93D,GAAA2sF,KAAA70B,KAGAz/E,EAAAwuF,UAAA,SAAA7mE,GACA,MAAA5oB,WAAArH,QAAA82F,EAAA7mE,GAAA2sF,KAAA9lB,KAGAxuF,EAAA4oG,WAAA,SAAAjhF,GACA,MAAA5oB,WAAArH,QAAA,MAAAiwB,EAAAo2E,EAAAC,EAAAC,EAAAC,EAAA,MAAAH,GAAAp2E,EAAA,MAAAq2E,GAAAr2E,EAAA,MAAAs2E,GAAAt2E,EAAA,MAAAu2E,GAAAv2E,EAAA,OAAA2sF,KAAA,MAAAvW,EAAA,OAAAA,EAAAC,IAAAC,EAAAC,KAWAoW,IAGA,QAAAC,IAAAh1B,GACA,MAAA60B,KAAA3T,GAAAlhB,GAAA,GAGA,QAAAi1B,IAAAxW,EAAAE,GAOA,QAAA6S,GAAAtyB,EAAAc,GACAf,EAAA,EAAgBe,GAAAkhB,GAAA2E,KAAA7lB,GAAAkhB,GAAA2E,IACN7lB,EAAAkhB,GAAA2E,KAAA7lB,EAAAkhB,GAAA2E,GACV,IAAAvb,GAAArL,EAAAO,GAAAw1B,GAAAh1B,GAAA/hF,EACA,QAAAqsF,EAAA8W,GAAAnjG,EAAAihF,GAAAD,EAAAqL,EAAAyY,GAAA9kG,EAAAihF,IAVA,GAAAg2B,GAAAnS,GAAAtE,GACAxgG,EAAAwgG,IAAAE,EAAAyC,GAAA3C,GAAAhf,GAAAy1B,EAAAnS,GAAApE,IAAAlf,GAAAu1B,GAAArW,GAAAqW,GAAAvW,IACAxf,EAAAi2B,EAAA11B,GAAAw1B,GAAAvW,GAAAxgG,IAEA,OAAAA,IASAuzG,EAAAj2B,OAAA,SAAA2D,EAAAc,GACA,GAAAm1B,GAAAl2B,EAAAe,EAAAsK,EAAA6V,GAAAliG,GAAAouF,GAAAnN,IAAAi2B,IACA,QAAAhpB,GAAAjN,EAAAI,GAAA61B,IAAAl3G,EAAAkiG,GAAAgV,GAAA,EAAAtE,GAAArxB,GAAAP,EAAAqL,EAAA,EAAArsF,IAAAijG,KAGAsQ,GAdAoD,GAuBA,QAAAQ,IAAA1S,EAAAC,GACA,OAAAD,EAAAC,GAUA,QAAA0S,IAAA5W,EAAAE,GAOA,QAAA6S,GAAAtyB,EAAAc,GACA,GAAAs1B,GAAA/9G,EAAAyoF,EAAAu1B,EAAAt3G,EAAAihF,CACA,QAAAo2B,EAAAlU,GAAAmU,GAAAh+G,EAAA+9G,EAAAvS,GAAAwS,IARA,GAAAL,GAAAnS,GAAAtE,GACAxgG,EAAAwgG,IAAAE,EAAAyC,GAAA3C,IAAAyW,EAAAnS,GAAApE,OAAAF,GACAlnG,EAAA29G,EAAAj3G,EAAAwgG,CAEA,OAAAnf,IAAArhF,GAAA4nG,GAAAuP,IAOA5D,EAAAj2B,OAAA,SAAA2D,EAAAc,GACA,GAAAs1B,GAAA/9G,EAAAyoF,CACA,QAAAmM,GAAAjN,EAAAI,GAAAg2B,IAAAr3G,EAAAkiG,GAAAmV,GAAA/9G,EAAA4oG,GAAAliG,GAAAouF,GAAAnN,IAAAo2B,OAGA9D,GASA,QAAAgE,IAAAt2B,EAAAc,GACA,GAAAynB,GAAA1E,GAAA/iB,GAAA8B,EAAAihB,GAAA7jB,GAAAuoB,CACA,QAAAA,EAAArG,GAAAliB,GAAA4C,EAAAsf,GAAAphB,GAAA8B,GAWA,QAAA2zB,IAAAC,EAAAC,EAAAC,EAAAC,GACA,WAAAH,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,EAAArC,GAAAzC,IACApX,MAAA,SAAAza,EAAAc,GACAxoF,KAAAgqG,OAAA7H,MAAAza,EAAAw2B,EAAAE,EAAA51B,EAAA21B,EAAAE,MA6CA,QAAAC,IAAA52B,EAAAc,GACA,OAAA+iB,GAAA/iB,GAAAohB,GAAAliB,GAAAkiB,GAAAphB,IAWA,QAAA+1B,IAAA72B,EAAAc,GACA,GAAAynB,GAAA1E,GAAA/iB,GAAA8B,EAAA,EAAAihB,GAAA7jB,GAAAuoB,CACA,QAAAA,EAAArG,GAAAliB,GAAA4C,EAAAsf,GAAAphB,GAAA8B,GAaA,QAAAk0B,IAAAtT,EAAAC,GACA,OAAAljB,GAAAo1B,IAAA3T,GAAAyB,GAAA,KAAAD,GAwBA,QAAAuT,IAAA12G,EAAAsB,GACA,MAAAtB,GAAA+F,SAAAzE,EAAAyE,OAAA,IAGA,QAAA4wG,IAAAl9G,GACA,MAAAA,GAAAwH,OAAA21G,GAAA,GAAAn9G,EAAAb,OAGA,QAAAg+G,IAAAj3B,EAAA99E,GACA,MAAA89E,GAAA99E,EAAA89E,EAGA,QAAAk3B,IAAAp9G,GACA,SAAAA,EAAAwH,OAAA61G,GAAA,GAGA,QAAAA,IAAAr2B,EAAA5+E,GACA,MAAA+C,MAAAC,IAAA47E,EAAA5+E,EAAA4+E,GAGA,QAAAs2B,IAAAhqG,GAEA,IADA,GAAAtT,GACAA,EAAAsT,EAAAtT,UAAAsT,EAAAtT,EAAA,EACA,OAAAsT,GAGA,QAAAiqG,IAAAjqG,GAEA,IADA,GAAAtT,GACAA,EAAAsT,EAAAtT,UAAAsT,EAAAtT,IAAAb,OAAA,EACA,OAAAmU,GAwDA,QAAAi8D,IAAAj8D,GACA,GAAAiqE,GAAA,EACAv9E,EAAAsT,EAAAtT,SACAd,EAAAc,KAAAb,MACA,IAAAD,EACA,OAAAA,GAAA,GAAAq+E,GAAAv9E,EAAAd,GAAA+G,UADAs3E,GAAA,CAEAjqE,GAAArN,MAAAs3E,EAgFA,QAAAigC,IAAAj3G,EAAAsB,GACA,GAAAtB,IAAAsB,EAAA,MAAAtB,EACA,IAAAk3G,GAAAl3G,EAAAm3G,YACAC,EAAA91G,EAAA61G,YACAt1G,EAAA,IAGA,KAFA7B,EAAAk3G,EAAAp0G,MACAxB,EAAA81G,EAAAt0G,MACA9C,IAAAsB,GACAO,EAAA7B,EACAA,EAAAk3G,EAAAp0G,MACAxB,EAAA81G,EAAAt0G,KAEA,OAAAjB,GAuCA,QAAAw1G,IAAAtuG,EAAAtP,GACA,GAEAsT,GAEA/G,EACAsxG,EACA3+G,EACA+F,EAPA+8B,EAAA,GAAA87E,IAAAxuG,GACAyuG,GAAAzuG,EAAArJ,QAAA+7B,EAAA/7B,MAAAqJ,EAAArJ,OAEAqgG,GAAAtkE,EAQA,KAFA,MAAAhiC,MAAAg+G,IAEA1qG,EAAAgzF,EAAAj9F,OAEA,GADA00G,IAAAzqG,EAAArN,OAAAqN,EAAAhE,KAAArJ,QACA43G,EAAA79G,EAAAsT,EAAAhE,SAAArK,EAAA44G,EAAA1+G,QAEA,IADAmU,EAAAtT,SAAA,GAAA8G,OAAA7B,GACA/F,EAAA+F,EAAA,EAAqB/F,GAAA,IAAQA,EAC7BonG,EAAA3mG,KAAA4M,EAAA+G,EAAAtT,SAAAd,GAAA,GAAA4+G,IAAAD,EAAA3+G,KACAqN,EAAAD,OAAAgH,EACA/G,EAAAmvD,MAAApoD,EAAAooD,MAAA,CAKA,OAAA15B,GAAAi8E,WAAAC,IAGA,QAAAC,MACA,MAAAP,IAAAp/G,MAAAy/G,WAAAG,IAGA,QAAAJ,IAAA1iG,GACA,MAAAA,GAAAtb,SAGA,QAAAo+G,IAAA9qG,GACAA,EAAAhE,KAAAgE,EAAAhE,UAGA,QAAA4uG,IAAA5qG,GACA,GAAAwrF,GAAA,CACA,IAAAxrF,EAAAwrF,gBACAxrF,IAAAhH,SAAAgH,EAAAwrF,YAGA,QAAAgf,IAAAxuG,GACA9Q,KAAA8Q,OACA9Q,KAAAk9D,MACAl9D,KAAAsgG,OAAA,EACAtgG,KAAA8N,OAAA,KAmBA,QAAA+xG,IAAAp4G,GACAzH,KAAA4wB,EAAAnpB,EACAzH,KAAA6yB,KAAA,KA0BA,QAAAitF,IAAA/3G,EAAAsB,GACA,GAAA40B,GAAA50B,EAAAq+E,EAAA3/E,EAAA2/E,EACAvpD,EAAA90B,EAAAm/E,EAAAzgF,EAAAygF,EACAu3B,EAAAh4G,EAAA+qF,EAAAzpF,EAAAypF,CACA,OAAAitB,KAAA,KAAA9hF,IAAAE,IAIA,QAAA6hF,IAAAC,EAAAC,GACA,GAAAC,GAGAC,EACAC,EAHAC,EAAA,KACAC,EAAAN,EAAAh9G,IAIA,QAAAi9G,EAAAv/G,QACA,OAAAw/G,EAAAK,GAAAN,EAAA,GAAoC,MACpC,QAAAC,EAAAM,GAAAP,EAAA,GAAAA,EAAA,GAA0C,MAC1C,QAAAC,EAAAO,GAAAR,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA,KAAAK,GACAF,EAAAE,EAAA3vF,EAAAwvF,EAAAG,EAAA1tF,KACAstF,GAAAL,GAAAK,EAAAE,GAgBAC,EAAAC,GAbAD,GAAAL,EAAAhtC,KAAAqtC,IAAAztF,KAAA,MACAotF,EAAAh9G,KAAAg9G,EAAAhtC,KAAA,KAEAitC,EAAA/+G,KAAAk/G,GACAF,EAAAH,GAAAC,EAAAC,GACAA,EAAAr1G,MAGAo1G,EAAAh9G,MAAAs9G,EAAA1tF,KAAAotF,EAAAh9G,KAAAg9G,EAAAh9G,KAAAs9G,IACAA,EAAA1tF,KAAA,KAAAotF,EAAAh9G,KAAAg9G,EAAAhtC,KAAAstC,GACAD,EAAAL,EAAAhtC,KAAAqtC,EAAAztF,KAAAutF,GAKAG,EAAAH,CAIA,OADAH,GAAAhtC,KAAAqtC,EACAH,EAGA,QAAAK,IAAAz4G,GACA,OACA2/E,EAAA3/E,EAAA2/E,EACAc,EAAAzgF,EAAAygF,EACAsK,EAAA/qF,EAAA+qF,GAIA,QAAA2tB,IAAA14G,EAAAsB,GACA,GAAA69F,GAAAn/F,EAAA2/E,EAAAyf,EAAAp/F,EAAAygF,EAAAm4B,EAAA54G,EAAA+qF,EACA0nB,EAAAnxG,EAAAq+E,EAAA+yB,EAAApxG,EAAAm/E,EAAAo4B,EAAAv3G,EAAAypF,EACA+tB,EAAArG,EAAAtT,EAAA4Z,EAAArG,EAAAtT,EAAA4Z,EAAAH,EAAAD,EACA/+G,EAAA+K,KAAAkoF,KAAAgsB,IAAAC,IACA,QACAp5B,GAAAwf,EAAAsT,EAAAqG,EAAAj/G,EAAAm/G,GAAA,EACAv4B,GAAA2e,EAAAsT,EAAAqG,EAAAl/G,EAAAm/G,GAAA,EACAjuB,GAAAlxF,EAAA++G,EAAAC,GAAA,GAIA,QAAAF,IAAA34G,EAAAsB,EAAAO,GACA,GAAAs9F,GAAAn/F,EAAA2/E,EAAAyf,EAAAp/F,EAAAygF,EAAAm4B,EAAA54G,EAAA+qF,EACA0nB,EAAAnxG,EAAAq+E,EAAA+yB,EAAApxG,EAAAm/E,EAAAo4B,EAAAv3G,EAAAypF,EACAkuB,EAAAp3G,EAAA89E,EAAAu5B,EAAAr3G,EAAA4+E,EAAA04B,EAAAt3G,EAAAkpF,EACAquB,EAAA,GAAAja,EAAAsT,GACAlb,EAAA,GAAA6H,EAAAsT,GACA2G,EAAA,GAAAR,EAAAD,GACArG,EAAApT,IAAAC,IAAAwZ,IAAAnG,IAAAC,IAAAmG,IACAS,EAAA,GAAAna,EAAA8Z,GACA3hB,EAAA,GAAA8H,EAAA8Z,GACAK,EAAA,GAAAJ,EAAAP,GACAY,EAAAra,IAAAC,IAAAwZ,IAAAK,IAAAC,IAAAC,IACAvM,EAAA0M,EAAA/hB,EAAA6hB,EAAA9hB,EACA3H,GAAA4H,EAAAiiB,EAAAliB,EAAAib,GAAA3F,EAAAzN,EACAtP,GAAAyH,EAAA+hB,EAAA9hB,EAAAgiB,GAAA3M,EACAhd,GAAA0pB,EAAA/G,EAAA6G,EAAAI,GAAA5M,EAAAxN,EACAtP,GAAAspB,EAAAG,EAAAD,EAAAD,GAAAzM,EACA6M,EAAA5pB,IAAAC,IAAA,EACAqoB,EAAA,GAAAxoB,EAAAE,EAAAD,EAAAE,EAAA8oB,GACArrB,EAAAoC,IAAAC,IAAAgpB,IACA7tB,IAAAotB,EAAAvzG,KAAAkoF,KAAAqrB,IAAA,EAAAsB,EAAAlsB,KAAA,EAAAksB,EACA,QACA95B,EAAAgQ,EAAAE,EAAA9E,EAAAoU,EACA1e,EAAAmP,EAAAE,EAAA/E,EAAAqU,EACArU,KAIA,QAAA2uB,IAAA15G,EAAAsB,EAAAO,GACA,GAAA83G,GAAA35G,EAAA2/E,EACAi6B,EAAA55G,EAAAygF,EACAo5B,EAAAv4G,EAAAypF,EAAAlpF,EAAAkpF,EACA+uB,EAAA95G,EAAA+qF,EAAAlpF,EAAAkpF,EACA70D,EAAA50B,EAAAq+E,EAAAg6B,EACAvjF,EAAA90B,EAAAm/E,EAAAm5B,EACAG,EAAA7jF,IAAAE,GACA,IAAA2jF,EAAA,CACA,GAAAp6B,GAAA,KAAAm6B,OAAAD,QAAA,EAAAE,GACAt5B,EAAA77E,KAAAkoF,KAAAloF,KAAAC,IAAA,IAAAg1G,GAAAC,EAAAC,IAAAD,GAAAC,GAAAD,EAAAD,OAAA,EAAAE,EACAl4G,GAAA89E,EAAAg6B,EAAAh6B,EAAAzpD,EAAAuqD,EAAArqD,EACAv0B,EAAA4+E,EAAAm5B,EAAAj6B,EAAAvpD,EAAAqqD,EAAAvqD,MAEAr0B,GAAA89E,EAAAg6B,EAAAG,EACAj4G,EAAA4+E,EAAAm5B,EAIA,QAAAI,IAAAh6G,EAAAsB,GACA,GAAA40B,GAAA50B,EAAAq+E,EAAA3/E,EAAA2/E,EACAvpD,EAAA90B,EAAAm/E,EAAAzgF,EAAAygF,EACAu3B,EAAAh4G,EAAA+qF,EAAAzpF,EAAAypF,CACA,OAAAitB,KAAA,KAAA9hF,IAAAE,IAGA,QAAA6jF,IAAAltG,EAAA4yE,EAAAc,GACA,GAAAzgF,GAAA+M,EAAA8b,EACAvnB,EAAAyL,EAAA+d,KAAAjC,EACA+jF,EAAA5sG,EAAA+qF,EAAAzpF,EAAAypF,EACA70D,GAAAl2B,EAAA2/E,EAAAr+E,EAAAypF,EAAAzpF,EAAAq+E,EAAA3/E,EAAA+qF,GAAA6hB,EAAAjtB,EACAvpD,GAAAp2B,EAAAygF,EAAAn/E,EAAAypF,EAAAzpF,EAAAm/E,EAAAzgF,EAAA+qF,GAAA6hB,EAAAnsB,CACA,OAAAvqD,KAAAE,IAGA,QAAA8jF,IAAA9B,GACAngH,KAAA4wB,EAAAuvF,EACAngH,KAAA6yB,KAAA,KACA7yB,KAAA2jE,SAAA,KAGA,QAAAu+C,IAAAC,GACA,KAAA17G,EAAA07G,EAAAxhH,QAAA,QAEA,IAAAoH,GAAAsB,EAAAO,EAAAnD,CAIA,IADAsB,EAAAo6G,EAAA,GAAAp6G,EAAA2/E,EAAA,EAAA3/E,EAAAygF,EAAA,IACA/hF,EAAA,SAAAsB,GAAA+qF,CAIA,IADAzpF,EAAA84G,EAAA,GAAAp6G,EAAA2/E,GAAAr+E,EAAAypF,EAAAzpF,EAAAq+E,EAAA3/E,EAAA+qF,EAAAzpF,EAAAm/E,EAAA,IACA/hF,EAAA,SAAAsB,GAAA+qF,EAAAzpF,EAAAypF,CAGA2uB,IAAAp4G,EAAAtB,EAAA6B,EAAAu4G,EAAA,GAGA,IAMAnS,GAAAC,EAAAvvG,EAAAgC,EAAA4nF,EAAA83B,EAAAC,EANAC,EAAAv6G,EAAA+qF,EAAA/qF,EAAA+qF,EACAyvB,EAAAl5G,EAAAypF,EAAAzpF,EAAAypF,EACAqf,EAAAvoG,EAAAkpF,EAAAlpF,EAAAkpF,EACA0vB,EAAAF,EAAAC,EAAApQ,EACAsQ,EAAAH,EAAAv6G,EAAA2/E,EAAA66B,EAAAl5G,EAAAq+E,EAAAyqB,EAAAvoG,EAAA89E,EACAg7B,EAAAJ,EAAAv6G,EAAAygF,EAAA+5B,EAAAl5G,EAAAm/E,EAAA2pB,EAAAvoG,EAAA4+E,CAIAzgF,GAAA,GAAAk6G,IAAAl6G,GAAAsB,EAAA,GAAA44G,IAAA54G,GAAAO,EAAA,GAAAq4G,IAAAr4G,GACA7B,EAAA8qB,KAAAjpB,EAAA+5D,SAAAt6D,EACAA,EAAAwpB,KAAA9qB,EAAA47D,SAAA/5D,EACAA,EAAAipB,KAAAxpB,EAAAs6D,SAAA57D,CAGA46G,GAAA,IAAAjiH,EAAA,EAAmBA,EAAA+F,IAAO/F,EAAA,CAC1B+gH,GAAA15G,EAAA6oB,EAAAvnB,EAAAunB,EAAAhnB,EAAAu4G,EAAAzhH,IAAAkJ,EAAA,GAAAq4G,IAAAr4G,GAKAlH,EAAA2G,EAAAwpB,KAAAy3D,EAAAviF,EAAA47D,SAAAy+C,EAAA/4G,EAAAunB,EAAAkiE,EAAAuvB,EAAAt6G,EAAA6oB,EAAAkiE,CACA,IACA,GAAAsvB,GAAAC,EAAA,CACA,GAAAN,GAAAr/G,EAAAkuB,EAAAhnB,EAAAgnB,GAAA,CACAvnB,EAAA3G,EAAAqF,EAAA8qB,KAAAxpB,IAAAs6D,SAAA57D,IAAArH,CACA,SAAAiiH,GAEAP,GAAA1/G,EAAAkuB,EAAAkiE,EAAApwF,IAAAmwB,SACO,CACP,GAAAkvF,GAAAz3B,EAAA15D,EAAAhnB,EAAAgnB,GAAA,CACA7oB,EAAAuiF,EAAAviF,EAAA8qB,KAAAxpB,IAAAs6D,SAAA57D,IAAArH,CACA,SAAAiiH,GAEAN,GAAA/3B,EAAA15D,EAAAkiE,EAAAxI,IAAA3mB,gBAEKjhE,IAAA4nF,EAAAz3D,KAYL,KATAjpB,EAAA+5D,SAAA57D,EAAA6B,EAAAipB,KAAAxpB,EAAAtB,EAAA8qB,KAAAxpB,EAAAs6D,SAAAt6D,EAAAO,EAGA44G,GAAArQ,EAAAvoG,EAAAgnB,EAAAkiE,EAAAlpF,EAAAgnB,EAAAkiE,EACA2vB,GAAAtQ,EAAAvoG,EAAAgnB,EAAA82D,EACAg7B,GAAAvQ,EAAAvoG,EAAAgnB,EAAA43D,EAGA85B,EAAAN,GAAAj6G,EAAAioG,EAAAyS,EAAAD,EAAAvS,EAAAyS,EAAAF,IACA54G,IAAAipB,QAAAxpB,IACA8oG,EAAA6P,GAAAp4G,EAAAomG,EAAAC,IAAAqS,IACAv6G,EAAA6B,EAAA04G,EAAAnQ,EAGA9oG,GAAAtB,EAAA8qB,KAImB,IAAnB9qB,GAAAsB,EAAAunB,GAAAhnB,EAAAP,GAAmBO,IAAAipB,QAAAxpB,GAAAtB,EAAA5G,KAAAyI,EAAAgnB,EAGnB,KAH2DhnB,EAAAg5G,GAAA76G,GAG3DrH,EAAA,EAAaA,EAAA+F,IAAO/F,EAAAqH,EAAAo6G,EAAAzhH,GAAAqH,EAAA2/E,GAAA99E,EAAA89E,EAAA3/E,EAAAygF,GAAA5+E,EAAA4+E,CAEpB,OAAA5+E,GAAAkpF,EAQA,QAAA+vB,IAAAp7B,GACA,aAAAA,EAAA,KAAAq7B,GAAAr7B,GAGA,QAAAq7B,IAAAr7B,GACA,qBAAAA,GAAA,SAAAniF,MACA,OAAAmiF,GAGA,QAAAs7B,MACA,SASA,QAAAC,IAAAlmG,GACA,MAAAnQ,MAAAkoF,KAAA/3E,EAAArV,OAuCA,QAAAw7G,IAAA1d,GACA,gBAAAzwF,GACAA,EAAAtT,WACAsT,EAAAg+E,EAAAnmF,KAAAC,IAAA,GAAA24F,EAAAzwF,IAAA,KAKA,QAAAouG,IAAAC,EAAA74B,GACA,gBAAAx1E,GACA,GAAAtT,EAAAsT,EAAAtT,SAAA,CACA,GAAAA,GACAd,EAGAP,EAFAsG,EAAAjF,EAAAb,OACAmyF,EAAAqwB,EAAAruG,GAAAw1E,GAAA,CAGA,IAAAwI,EAAA,IAAApyF,EAAA,EAAwBA,EAAA+F,IAAO/F,EAAAc,EAAAd,GAAAoyF,IAE/B,IADA3yF,EAAA+hH,GAAA1gH,GACAsxF,EAAA,IAAApyF,EAAA,EAAwBA,EAAA+F,IAAO/F,EAAAc,EAAAd,GAAAoyF,IAC/Bh+E,GAAAg+E,EAAA3yF,EAAA2yF,IAKA,QAAAswB,IAAA94B,GACA,gBAAAx1E,GACA,GAAAhH,GAAAgH,EAAAhH,MACAgH,GAAAg+E,GAAAxI,EACAx8E,IACAgH,EAAA4yE,EAAA55E,EAAA45E,EAAA4C,EAAAx1E,EAAA4yE,EACA5yE,EAAA0zE,EAAA16E,EAAA06E,EAAA8B,EAAAx1E,EAAA0zE,IA+EA,QAAA66B,IAAAvmG,GACA,MAAAA,GAAAjc,GAGA,QAAAyiH,IAAAxmG,GACA,MAAAA,GAAAxc,SA8DA,QAAAijH,IAAAx7G,EAAAsB,GACA,MAAAtB,GAAA+F,SAAAzE,EAAAyE,OAAA,IAWA,QAAA01G,IAAA7vE,GACA,GAAAnyC,GAAAmyC,EAAAnyC,QACA,OAAAA,KAAA,GAAAmyC,EAAAs3C,EAIA,QAAAw4B,IAAA9vE,GACA,GAAAnyC,GAAAmyC,EAAAnyC,QACA,OAAAA,OAAAb,OAAA,GAAAgzC,EAAAs3C,EAKA,QAAAy4B,IAAAC,EAAAC,EAAAp5E,GACA,GAAAq5E,GAAAr5E,GAAAo5E,EAAAljH,EAAAijH,EAAAjjH,EACAkjH,GAAAh6G,GAAAi6G,EACAD,EAAA17F,GAAAsiB,EACAm5E,EAAA/5G,GAAAi6G,EACAD,EAAAlV,GAAAlkE,EACAo5E,EAAA36G,GAAAuhC,EAMA,QAAAs5E,IAAAnwE,GAMA,IALA,GAIAy7D,GAJA5kE,EAAA,EACAq5E,EAAA,EACAriH,EAAAmyC,EAAAnyC,SACAd,EAAAc,EAAAb,SAEAD,GAAA,GACA0uG,EAAA5tG,EAAAd,GACA0uG,EAAAV,GAAAlkE,EACA4kE,EAAAnmG,GAAAuhC,EACAA,GAAA4kE,EAAAlnF,GAAA27F,GAAAzU,EAAAxlG,GAMA,QAAAm6G,IAAAC,EAAArwE,EAAAvpB,GACA,MAAA45F,GAAAj8G,EAAA+F,SAAA6lC,EAAA7lC,OAAAk2G,EAAAj8G,EAAAqiB,EAGA,QAAA65F,IAAAnvG,EAAApU,GACAV,KAAA4wB,EAAA9b,EACA9U,KAAA8N,OAAA,KACA9N,KAAAwB,SAAA,KACAxB,KAAAwhH,EAAA,KACAxhH,KAAA+H,EAAA/H,KACAA,KAAA0uG,EAAA,EACA1uG,KAAAiJ,EAAA,EACAjJ,KAAA4J,EAAA,EACA5J,KAAAkoB,EAAA,EACAloB,KAAAirF,EAAA,KACAjrF,KAAAU,IAKA,QAAAwjH,IAAA1gF,GASA,IARA,GACA1uB,GAEA/G,EACAvM,EACAd,EACA+F,EANA6Z,EAAA,GAAA2jG,IAAAzgF,EAAA,GAEAskE,GAAAxnF,GAMAxL,EAAAgzF,EAAAj9F,OACA,GAAArJ,EAAAsT,EAAA8b,EAAApvB,SAEA,IADAsT,EAAAtT,SAAA,GAAA8G,OAAA7B,EAAAjF,EAAAb,QACAD,EAAA+F,EAAA,EAAqB/F,GAAA,IAAQA,EAC7BonG,EAAA3mG,KAAA4M,EAAA+G,EAAAtT,SAAAd,GAAA,GAAAujH,IAAAziH,EAAAd,OACAqN,EAAAD,OAAAgH,CAMA,QADAwL,EAAAxS,OAAA,GAAAm2G,IAAA,SAAAziH,UAAA8e,GACAA,EA8JA,QAAA6jG,IAAAC,EAAAt2G,EAAAk5F,EAAAC,EAAAC,EAAAC,GAkBA,IAjBA,GAEAd,GACAge,EAIApmF,EAAAE,EAEAmmF,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAfAre,KACAuB,EAAAh6F,EAAAtM,SAGAqjH,EAAA,EACAC,EAAA,EACAr+G,EAAAqhG,EAAAnnG,OAEA8G,EAAAqG,EAAArG,MASAo9G,EAAAp+G,GAAA,CACAw3B,EAAAipE,EAAAF,EAAA7oE,EAAAgpE,EAAAF,CAGA,IAAAqd,EAAAxc,EAAAgd,KAAAr9G,aAAoC68G,GAAAQ,EAAAr+G,EAOpC,KANA89G,EAAAC,EAAAF,EACAK,EAAAh4G,KAAAC,IAAAuxB,EAAAF,IAAAE,IAAA12B,EAAA28G,GACAQ,EAAAN,IAAAK,EACAD,EAAA/3G,KAAAC,IAAA43G,EAAAI,IAAAL,GAGUO,EAAAr+G,IAAQq+G,EAAA,CAMlB,GALAR,GAAAD,EAAAvc,EAAAgd,GAAAr9G,MACA48G,EAAAE,MAAAF,GACAA,EAAAG,MAAAH,GACAO,EAAAN,IAAAK,GACAF,EAAA93G,KAAAC,IAAA43G,EAAAI,IAAAL,IACAG,EAAA,CAAgCJ,GAAAD,CAAuB,OACvDK,EAAAD,EAIAle,EAAAplG,KAAAklG,GAAqB5+F,MAAA68G,EAAAS,KAAA9mF,EAAAE,EAAA38B,SAAAsmG,EAAAphF,MAAAm+F,EAAAC,KACrBze,EAAA0e,KAAAC,GAAA3e,EAAAW,EAAAC,EAAAC,EAAAz/F,EAAAw/F,GAAA9oE,EAAAmmF,EAAA78G,EAAA0/F,GACA8d,GAAA5e,EAAAW,EAAAC,EAAAx/F,EAAAu/F,GAAA/oE,EAAAqmF,EAAA78G,EAAAy/F,EAAAC,GACA1/F,GAAA68G,EAAAO,EAAAC,EAGA,MAAAve,GA2OA,QAAA2e,IAAAn9G,EAAAsB,GACA,MAAAtB,GAAA,GAAAsB,EAAA,IAAAtB,EAAA,GAAAsB,EAAA,GAMA,QAAA87G,IAAAxT,GAKA,OAJAlrG,GAAAkrG,EAAAhxG,OACA+iE,GAAA,KACAtnB,EAAA,EAEA17C,EAAA,EAAiBA,EAAA+F,IAAO/F,EAAA,CACxB,KAAA07C,EAAA,GAAAgpE,GAAAzT,EAAAjuC,EAAAtnB,EAAA,IAAAu1D,EAAAjuC,EAAAtnB,EAAA,IAAAu1D,EAAAjxG,KAAA,KAAA07C,CACAsnB,GAAAtnB,KAAA17C,EAGA,MAAAgjE,GAAAh9C,MAAA,EAAA01B,GA4EA,QAAAipE,IAAAjpE,GACA,KAAAA,GAAA,YAAA92C,MACAtF,MAAAslH,MAAAlpE,EACAp8C,KAAAo5F,MACAp5F,KAAAulH,OAAA,KACAvlH,KAAAwlH,UACAxlH,KAAAgX,SACAhX,KAAAylH,SACAzlH,KAAA0lH,QACA1lH,KAAA2lH,OACA3lH,KAAA4lH,OAAA,EAgCA,QAAAC,IAAA/tB,GACA,IAAAA,EAAA8tB,OACA,IAASE,GAAAhuB,GACT,MAAA33F,GACA,GAAA23F,EAAA0tB,OAAA1tB,EAAA6tB,OAAA7tB,EAAA4tB,QAAA,GAAAK,GAAAjuB,EAAA33F,OACA,KAAA23F,EAAA9gF,MAAA,KAAA7W,IAKA,QAAA2lH,IAAAhuB,GACA,KAAAA,EAAA8tB,OAAA9tB,EAAA2tB,UAAA3tB,EAAA4tB,QAAA5tB,EAAAwtB,OAAA,CACA,GAAA5kH,GAAAo3F,EAAA6tB,OAAA7tB,EAAA4tB,QACAz6B,EAAA6M,EAAA0tB,OAAA9kH,GACAgC,EAAAuoF,EAAAtqF,OAAA,EACAiJ,EAAAqhF,EAAAvoF,EACAuoF,GAAAvoF,GAAAo1B,GAAAggE,EAAAp3F,KACAo3F,EAAA2tB,WAAA3tB,EAAA4tB,QACAz6B,EAAArhF,EAAA3B,MAAA,KAAAgjF,GACA6M,EAAA0tB,OAAA9kH,KACAo3F,EAAA0tB,OAAA9kH,GAAAuqF,GAAA+6B,KAIA,QAAAluF,IAAAggE,EAAAp3F,GACA,gBAAAP,EAAA2yF,GACAgF,EAAA0tB,OAAA9kH,OACAo3F,EAAA4tB,UAAA5tB,EAAA6tB,OACA7tB,EAAA0tB,OAAA9kH,GAAA,KACA,MAAAo3F,EAAAytB,SACA,MAAAplH,EACA4lH,GAAAjuB,EAAA33F,IAEA23F,EAAA9gF,MAAAtW,GAAAoyF,EACAgF,EAAA2tB,SAAAI,GAAA/tB,GACAmuB,GAAAnuB,OAKA,QAAAiuB,IAAAjuB,EAAA33F,GACA,GAAA8qF,GAAAvqF,EAAAo3F,EAAA0tB,OAAA7kH,MAKA,KAJAm3F,EAAAytB,OAAAplH,EACA23F,EAAA9gF,MAAAxH,OACAsoF,EAAA2tB,SAAAx3B,MAEAvtF,GAAA,GACA,IAAAuqF,EAAA6M,EAAA0tB,OAAA9kH,MACAo3F,EAAA0tB,OAAA9kH,GAAA,KACAuqF,EAAA86B,OACA,IAAa96B,EAAA86B,QACb,MAAA5lH,IAKA23F,EAAA4tB,QAAAz3B,IACAg4B,GAAAnuB,GAGA,QAAAmuB,IAAAnuB,GACA,IAAAA,EAAA4tB,SAAA5tB,EAAAsB,MAAA,CACA,GAAAt8E,GAAAg7E,EAAA9gF,KACA8gF,GAAA9gF,MAAAxH,OACAsoF,EAAAsB,MAAAtB,EAAAytB,OAAAzoG,IAIA,QAAArE,IAAAytG,GACA,UAAAb,IAAAr9G,UAAArH,QAAAulH,EAAAlnD,KAqMA,QAAAmnD,IAAAxnG,GACA,gBAAApO,EAAA61G,GACAznG,EAAA,MAAApO,EAAA61G,EAAA,OAIA,QAAAC,IAAAD,GACA,GAAAjnH,GAAAinH,EAAAE,YACA,OAAAnnH,IAAA,SAAAA,EACAinH,EAAAG,SACAH,EAAAI,aA0CA,QAAAC,IAAAhkF,EAAA4jE,GACA,gBAAAqgB,GACA,MAAAjkF,GAAAikF,EAAAF,aAAAngB,IAeA,QAAAsgB,IAAAthC,GAOA,QAAAqD,GAAA5rE,GACA,GAAAjd,GAAAid,EAAA,GAAApc,EAAA0D,EAAAzC,IAAA9B,EACA,KAAAa,EAAA,CACA,GAAAkmH,IAAAC,GAAA,MAAAD,EACAxiH,GAAAiI,IAAAxM,EAAAa,EAAAyoF,EAAAhoF,KAAA2b,IAEA,MAAAuoE,IAAA3kF,EAAA,GAAA2kF,EAAA1kF,QAZA,GAAAyD,GAAAwhG,KACAzc,KACAy9B,EAAAC,EAoCA,OAlCAxhC,GAAA,MAAAA,KAAAyhC,GAAAv/G,KAAA89E,GAWAqD,EAAAS,OAAA,SAAAv4D,GACA,IAAA5oB,UAAArH,OAAA,MAAAwoF,GAAAziE,OACAyiE,MAAA/kF,EAAAwhG,IAEA,KADA,GAAA9oF,GAAAjd,EAAAa,GAAA,EAAA+F,EAAAmqB,EAAAjwB,SACAD,EAAA+F,GAAArC,EAAAsU,IAAA7Y,GAAAid,EAAA8T,EAAAlwB,IAAA,KAAA0D,EAAAiI,IAAAxM,EAAAspF,EAAAhoF,KAAA2b,GACA,OAAA4rE,IAGAA,EAAArD,MAAA,SAAAz0D,GACA,MAAA5oB,WAAArH,QAAA0kF,EAAAyhC,GAAAv/G,KAAAqpB,GAAA83D,GAAArD,EAAA3+D,SAGAgiE,EAAAk+B,QAAA,SAAAh2F,GACA,MAAA5oB,WAAArH,QAAAimH,EAAAh2F,EAAA83D,GAAAk+B,GAGAl+B,EAAAzhB,KAAA,WACA,MAAA0/C,MACAx9B,UACA9D,SACAuhC,YAGAl+B,EAGA,QAAAq+B,MAcA,QAAAC,KACA,GAAAvgH,GAAA0iF,IAAAxoF,OACAgrE,EAAAs7C,EAAA,GAAAA,EAAA,GACA7+G,EAAA6+G,EAAAt7C,EAAA,GACA/0B,EAAAqwE,EAAA,EAAAt7C,EACA3H,IAAAptB,EAAAxuC,GAAAuE,KAAAC,IAAA,EAAAnG,EAAAygH,EAAA,EAAAC,GACAphC,IAAA/hB,EAAAr3D,KAAAszE,MAAAjc,IACA57D,IAAAwuC,EAAAxuC,EAAA47D,GAAAv9D,EAAAygH,IAAAxe,EACA/f,EAAA3kB,GAAA,EAAAkjD,GACAnhC,IAAA39E,EAAAuE,KAAAo5E,MAAA39E,GAAAugF,EAAAh8E,KAAAo5E,MAAA4C,GACA,IAAAxvC,GAAA87D,GAAAxuG,GAAAM,IAAA,SAAArG,GAA8C,MAAA0H,GAAA47D,EAAAtjE,GAC9C,OAAA0mH,GAAAz7C,EAAAxyB,EAAAwyB,UAAAxyB,GAxBA,GAIA6qB,GACA2kB,EALAD,EAAAi+B,KAAAC,QAAAp3G,QACA25E,EAAAT,EAAAS,OACAi+B,EAAA1+B,EAAArD,MACA4hC,GAAA,KAGAlhC,GAAA,EACAmhC,EAAA,EACAC,EAAA,EACAze,EAAA,EAoEA,cAlEAhgB,GAAAk+B,QAgBAl+B,EAAAS,OAAA,SAAAv4D,GACA,MAAA5oB,WAAArH,QAAAwoF,EAAAv4D,GAAAo2F,KAAA79B,KAGAT,EAAArD,MAAA,SAAAz0D,GACA,MAAA5oB,WAAArH,QAAAsmH,IAAAr2F,EAAA,IAAAA,EAAA,IAAAo2F,KAAAC,EAAAvgG,SAGAgiE,EAAA2+B,WAAA,SAAAz2F,GACA,MAAAq2F,KAAAr2F,EAAA,IAAAA,EAAA,IAAAm1D,GAAA,EAAAihC,KAGAt+B,EAAAC,UAAA,WACA,MAAAA,IAGAD,EAAA1kB,KAAA,WACA,MAAAA,IAGA0kB,EAAA3C,MAAA,SAAAn1D,GACA,MAAA5oB,WAAArH,QAAAolF,IAAAn1D,EAAAo2F,KAAAjhC,GAGA2C,EAAAy6B,QAAA,SAAAvyF,GACA,MAAA5oB,WAAArH,QAAAumH,EAAAC,EAAAx6G,KAAAC,IAAA,EAAAD,KAAAkyE,IAAA,EAAAjuD,IAAAo2F,KAAAE,GAGAx+B,EAAAw+B,aAAA,SAAAt2F,GACA,MAAA5oB,WAAArH,QAAAumH,EAAAv6G,KAAAC,IAAA,EAAAD,KAAAkyE,IAAA,EAAAjuD,IAAAo2F,KAAAE,GAGAx+B,EAAAy+B,aAAA,SAAAv2F,GACA,MAAA5oB,WAAArH,QAAAwmH,EAAAx6G,KAAAC,IAAA,EAAAD,KAAAkyE,IAAA,EAAAjuD,IAAAo2F,KAAAG,GAGAz+B,EAAAggB,MAAA,SAAA93E,GACA,MAAA5oB,WAAArH,QAAA+nG,EAAA/7F,KAAAC,IAAA,EAAAD,KAAAkyE,IAAA,EAAAjuD,IAAAo2F,KAAAte,GAGAhgB,EAAAzhB,KAAA,WACA,MAAA8/C,MACA59B,YACA9D,MAAA4hC,GACAlhC,SACAmhC,gBACAC,gBACAze,UAGAse,IAGA,QAAAM,IAAA5+B,GACA,GAAAzhB,GAAAyhB,EAAAzhB,IAUA,OARAyhB,GAAAy6B,QAAAz6B,EAAAy+B,mBACAz+B,GAAAw+B,mBACAx+B,GAAAy+B,aAEAz+B,EAAAzhB,KAAA,WACA,MAAAqgD,IAAArgD,MAGAyhB,EAGA,QAAA6+B,MACA,MAAAD,IAAAP,KAAAG,aAAA,IAeA,QAAAM,IAAAz/G,EAAAsB,GACA,OAAAA,GAAAtB,MACA,SAAA2/E,GAAqB,OAAAA,EAAA3/E,GAAAsB,GACrBo+G,GAAAp+G,GAGA,QAAAq+G,IAAAC,GACA,gBAAA5/G,EAAAsB,GACA,GAAAyT,GAAA6qG,EAAA5/G,KAAAsB,KACA,iBAAAq+E,GAAwB,MAAAA,IAAA3/E,EAAA,EAAA2/E,GAAAr+E,EAAA,EAAAyT,EAAA4qE,KAIxB,QAAAkgC,IAAA7vB,GACA,gBAAAhwF,EAAAsB,GACA,GAAAypF,GAAAiF,EAAAhwF,KAAAsB,KACA,iBAAA4hF,GAAwB,MAAAA,IAAA,EAAAljF,EAAAkjF,GAAA,EAAA5hF,EAAAypF,EAAA7H,KAIxB,QAAA48B,IAAA1+B,EAAA89B,EAAAU,EAAA5vB,GACA,GAAA+vB,GAAA3+B,EAAA,GAAA4+B,EAAA5+B,EAAA,GAAAwzB,EAAAsK,EAAA,GAAAtG,EAAAsG,EAAA,EAGA,OAFAc,GAAAD,KAAAH,EAAAI,EAAAD,GAAAnL,EAAA5kB,EAAA4oB,EAAAhE,KACAmL,EAAAH,EAAAG,EAAAC,GAAApL,EAAA5kB,EAAA4kB,EAAAgE,IACA,SAAAj5B,GAAsB,MAAAi1B,GAAAmL,EAAApgC,KAGtB,QAAAsgC,IAAA7+B,EAAA89B,EAAAU,EAAA5vB,GACA,GAAAr1F,GAAAiK,KAAAkyE,IAAAsK,EAAAxoF,OAAAsmH,EAAAtmH,QAAA,EACAmc,EAAA,GAAAxU,OAAA5F,GACAowF,EAAA,GAAAxqF,OAAA5F,GACAhC,GAAA,CAQA,KALAyoF,EAAAzmF,GAAAymF,EAAA,KACAA,IAAAziE,QAAAilD,UACAs7C,IAAAvgG,QAAAilD,aAGAjrE,EAAAgC,GACAoa,EAAApc,GAAAinH,EAAAx+B,EAAAzoF,GAAAyoF,EAAAzoF,EAAA,IACAoyF,EAAApyF,GAAAq3F,EAAAkvB,EAAAvmH,GAAAumH,EAAAvmH,EAAA,GAGA,iBAAAgnF,GACA,GAAAhnF,GAAAunH,GAAA9+B,EAAAzB,EAAA,EAAAhlF,GAAA,CACA,OAAAowF,GAAApyF,GAAAoc,EAAApc,GAAAgnF,KAIA,QAAAzgB,IAAAtkD,EAAAjY,GACA,MAAAA,GACAy+E,OAAAxmE,EAAAwmE,UACA9D,MAAA1iE,EAAA0iE,SACAhJ,YAAA15D,EAAA05D,eACA3B,MAAA/3D,EAAA+3D,SAKA,QAAAwtC,IAAAP,EAAA5vB,GASA,QAAAivB,KAGA,MAFAmB,GAAAx7G,KAAAkyE,IAAAsK,EAAAxoF,OAAAsmH,EAAAtmH,QAAA,EAAAqnH,GAAAH,GACAhnB,EAAA9wB,EAAA,KACA2Y,EAGA,QAAAA,GAAAhB,GACA,OAAAmZ,MAAAsnB,EAAAh/B,EAAA89B,EAAAvsC,EAAAgtC,GAAAC,KAAA5rB,MAAArU,GAfA,GAIAygC,GACAtnB,EACA9wB,EANAoZ,EAAAi/B,GACAnB,EAAAmB,GACArsB,EAAAtf,GACA/B,GAAA,CAuCA,OAxBAgO,GAAA3E,OAAA,SAAAyE,GACA,OAAAzY,MAAAo4C,EAAAlB,EAAA99B,EAAAq+B,GAAA9sC,EAAAktC,GAAA7vB,SAAAvP,IAGAE,EAAAS,OAAA,SAAAv4D,GACA,MAAA5oB,WAAArH,QAAAwoF,EAAAk/B,GAAA9gH,KAAAqpB,EAAA03F,IAAAtB,KAAA79B,EAAAziE,SAGAgiE,EAAArD,MAAA,SAAAz0D,GACA,MAAA5oB,WAAArH,QAAAsmH,EAAAH,GAAAv/G,KAAAqpB,GAAAo2F,KAAAC,EAAAvgG,SAGAgiE,EAAA2+B,WAAA,SAAAz2F,GACA,MAAAq2F,GAAAH,GAAAv/G,KAAAqpB,GAAAmrE,EAAAwsB,GAAAvB,KAGAt+B,EAAAhO,MAAA,SAAA9pD,GACA,MAAA5oB,WAAArH,QAAA+5E,IAAA9pD,EAAAo2F,KAAAtsC,GAGAgO,EAAArM,YAAA,SAAAzrD,GACA,MAAA5oB,WAAArH,QAAAo7F,EAAAnrE,EAAAo2F,KAAAjrB,GAGAirB,IAgCA,QAAAwB,IAAA9/B,GACA,GAAAS,GAAAT,EAAAS,MA6BA,OA3BAT,GAAAO,MAAA,SAAAlY,GACA,GAAAj0D,GAAAqsE,GACA,OAAAF,IAAAnsE,EAAA,GAAAA,IAAAnc,OAAA,SAAAowE,EAAA,GAAAA,IAGA2X,EAAAW,WAAA,SAAAtY,EAAAy3B,GACA,MAAAnf,IAAAF,IAAApY,EAAAy3B,IAGA9f,EAAA+/B,KAAA,SAAA13C,GACA,GAAAj0D,GAAAqsE,IACAzoF,EAAAoc,EAAAnc,OAAA,EACA8F,EAAA,MAAAsqE,EAAA,GAAAA,EACA3oE,EAAA0U,EAAA,GACA85B,EAAA95B,EAAApc,GACAsjE,EAAA4jB,EAAAx/E,EAAAwuC,EAAAnwC,EASA,OAPAu9D,KACAA,EAAA4jB,EAAAj7E,KAAAszE,MAAA73E,EAAA47D,KAAAr3D,KAAAqzE,KAAAppC,EAAAotB,KAAAv9D,GACAqW,EAAA,GAAAnQ,KAAAszE,MAAA73E,EAAA47D,KACAlnD,EAAApc,GAAAiM,KAAAqzE,KAAAppC,EAAAotB,KACAmlB,EAAArsE,IAGA4rE,GAGAA,EAGA,QAAAggC,MACA,GAAAhgC,GAAAw/B,GAAAV,GAAAzvB,GAMA,OAJArP,GAAAzhB,KAAA,WACA,MAAAA,IAAAyhB,EAAAggC,OAGAF,GAAA9/B,GAGA,QAAAigC,MAGA,QAAAjgC,GAAAhB,GACA,OAAAA,EAHA,GAAAyB,IAAA,IAgBA,OAVAT,GAAA3E,OAAA2E,EAEAA,EAAAS,OAAAT,EAAArD,MAAA,SAAAz0D,GACA,MAAA5oB,WAAArH,QAAAwoF,EAAAk/B,GAAA9gH,KAAAqpB,EAAA03F,IAAA5/B,GAAAS,EAAAziE,SAGAgiE,EAAAzhB,KAAA,WACA,MAAA0hD,MAAAx/B,WAGAq/B,GAAA9/B,GAsBA,QAAAi/B,IAAA5/G,EAAAsB,GACA,OAAAA,EAAAsD,KAAAs7E,IAAA5+E,EAAAtB,IACA,SAAA2/E,GAAqB,MAAA/6E,MAAAs7E,IAAAP,EAAA3/E,GAAAsB,GACrBo+G,GAAAp+G,GAGA,QAAAu/G,IAAA7gH,EAAAsB,GACA,MAAAtB,GAAA,EACA,SAAAkjF,GAAqB,OAAAt+E,KAAAq7E,KAAA3+E,EAAA4hF,GAAAt+E,KAAAq7E,KAAAjgF,EAAA,EAAAkjF,IACrB,SAAAA,GAAqB,MAAAt+E,MAAAq7E,IAAA3+E,EAAA4hF,GAAAt+E,KAAAq7E,IAAAjgF,EAAA,EAAAkjF,IAGrB,QAAA49B,IAAAnhC,GACA,MAAAtP,UAAAsP,KAAA,KAAAA,KAAA,IAAAA,EAGA,QAAAohC,IAAAC,GACA,YAAAA,EAAAF,GACAE,IAAAp8G,KAAA0oF,EAAA1oF,KAAA4iB,IACA,SAAAm4D,GAAqB,MAAA/6E,MAAAq7E,IAAA+gC,EAAArhC,IAGrB,QAAAshC,IAAAD,GACA,MAAAA,KAAAp8G,KAAA0oF,EAAA1oF,KAAAs7E,IACA,KAAA8gC,GAAAp8G,KAAAs8G,OACA,IAAAF,GAAAp8G,KAAAu8G,OACAH,EAAAp8G,KAAAs7E,IAAA8gC,GAAA,SAAArhC,GAA8C,MAAA/6E,MAAAs7E,IAAAP,GAAAqhC,IAG9C,QAAAI,IAAA1hC,GACA,gBAAAC,GACA,OAAAD,GAAAC,IAIA,QAAA0hC,MAOA,QAAApC,KAGA,MAFAqC,GAAAL,GAAAD,GAAAO,EAAAR,GAAAC,GACA5/B,IAAA,OAAAkgC,EAAAF,GAAAE,GAAAC,EAAAH,GAAAG,IACA5gC,EATA,GAAAA,GAAAw/B,GAAAP,GAAAiB,IAAAz/B,QAAA,OACAA,EAAAT,EAAAS,OACA4/B,EAAA,GACAM,EAAAL,GAAA,IACAM,EAAAR,GAAA,GAgFA,OAxEApgC,GAAAqgC,KAAA,SAAAn4F,GACA,MAAA5oB,WAAArH,QAAAooH,GAAAn4F,EAAAo2F,KAAA+B,GAGArgC,EAAAS,OAAA,SAAAv4D,GACA,MAAA5oB,WAAArH,QAAAwoF,EAAAv4D,GAAAo2F,KAAA79B,KAGAT,EAAAO,MAAA,SAAAlY,GACA,GAGA+hB,GAHAh2E,EAAAqsE,IACA4iB,EAAAjvF,EAAA,GACA62B,EAAA72B,IAAAnc,OAAA,IAGAmyF,EAAAn/C,EAAAo4D,KAAArrG,EAAAqrG,IAAAp4D,IAAAjzC,EAEA,IAEA2vB,GACAi6D,EACAW,EAJAvqF,EAAA2oH,EAAAtd,GACArpG,EAAA2mH,EAAA11E,GAIAltC,EAAA,MAAAsqE,EAAA,IAAAA,EACA29B,IAEA,MAAAqa,EAAA,IAAArmH,EAAAhC,EAAA+F,GAEA,GADA/F,EAAAiM,KAAAo5E,MAAArlF,GAAA,EAAAgC,EAAAiK,KAAAo5E,MAAArjF,GAAA,EACAqpG,EAAA,QAAuBrrG,EAAAgC,IAAOhC,EAC9B,IAAA4pF,EAAA,EAAAj6D,EAAAi5F,EAAA5oH,GAAgC4pF,EAAAy+B,IAAUz+B,EAE1C,MADAW,EAAA56D,EAAAi6D,GACAyhB,GAAA,CACA,GAAA9gB,EAAAt3C,EAAA,KACA+6D,GAAAvtG,KAAA8pF,QAEO,MAAYvqF,EAAAgC,IAAOhC,EAC1B,IAAA4pF,EAAAy+B,EAAA,EAAA14F,EAAAi5F,EAAA5oH,GAAuC4pF,GAAA,IAAQA,EAE/C,MADAW,EAAA56D,EAAAi6D,GACAyhB,GAAA,CACA,GAAA9gB,EAAAt3C,EAAA,KACA+6D,GAAAvtG,KAAA8pF,QAIAyjB,GAAAzlB,GAAAvoF,EAAAgC,EAAAiK,KAAAkyE,IAAAn8E,EAAAhC,EAAA+F,IAAAM,IAAAuiH,EAGA,OAAAx2B,GAAA4b,EAAA/iC,UAAA+iC,GAGAhmB,EAAAW,WAAA,SAAAtY,EAAAy3B,GAGA,GAFA,MAAAA,MAAA,KAAAugB,EAAA,WACA,kBAAAvgB,OAAA5pG,EAAAwqF,OAAAof,IACAz3B,IAAA/R,IAAA,MAAAwpC,EACA,OAAAz3B,MAAA,GACA,IAAAuZ,GAAA39E,KAAAC,IAAA,EAAAm8G,EAAAh4C,EAAA2X,EAAAO,QAAAtoF,OACA,iBAAAmc,GACA,GAAApc,GAAAoc,EAAAwsG,EAAA38G,KAAAo5E,MAAAsjC,EAAAvsG,IAEA,OADApc,GAAAqoH,IAAA,KAAAroH,GAAAqoH,GACAroH,GAAA4pF,EAAAke,EAAA1rF,GAAA,KAIA4rE,EAAA+/B,KAAA,WACA,MAAAt/B,GAAAs/B,GAAAt/B,KACAlJ,MAAA,SAAAyH,GAA0B,MAAA4hC,GAAA38G,KAAAszE,MAAAopC,EAAA3hC,MAC1B1H,KAAA,SAAA0H,GAAyB,MAAA4hC,GAAA38G,KAAAqzE,KAAAqpC,EAAA3hC,UAIzBgB,EAAAzhB,KAAA,WACA,MAAAA,IAAAyhB,EAAA0gC,KAAAL,UAGArgC,EAGA,QAAA6gC,IAAA7hC,EAAA8hC,GACA,MAAA9hC,GAAA,GAAA/6E,KAAAq7E,KAAAN,EAAA8hC,GAAA78G,KAAAq7E,IAAAN,EAAA8hC,GAGA,QAAAC,MAKA,QAAA9B,GAAA5/G,EAAAsB,GACA,OAAAA,EAAAkgH,GAAAlgH,EAAAmgH,IAAAzhH,EAAAwhH,GAAAxhH,EAAAyhH,KACA,SAAA9hC,GAAuB,OAAA6hC,GAAA7hC,EAAA8hC,GAAAzhH,GAAAsB,GACvBo+G,GAAAp+G,GAGA,QAAA0uF,GAAAhwF,EAAAsB,GAEA,MADAA,GAAAkgH,GAAAlgH,EAAAmgH,IAAAzhH,EAAAwhH,GAAAxhH,EAAAyhH,IACA,SAAAv+B,GAAwB,MAAAs+B,IAAAxhH,EAAAsB,EAAA4hF,EAAA,EAAAu+B,IAZxB,GAAAA,GAAA,EACA9gC,EAAAw/B,GAAAP,EAAA5vB,GACA5O,EAAAT,EAAAS,MAqBA,OARAT,GAAA8gC,SAAA,SAAA54F,GACA,MAAA5oB,WAAArH,QAAA6oH,GAAA54F,EAAAu4D,QAAAqgC,GAGA9gC,EAAAzhB,KAAA,WACA,MAAAA,IAAAyhB,EAAA+gC,KAAAD,cAGAhB,GAAA9/B,GAGA,QAAAghC,MACA,MAAAD,MAAAD,SAAA,IAGA,QAAAG,MAKA,QAAA3C,KACA,GAAAtmH,GAAA,EAAA+F,EAAAkG,KAAAC,IAAA,EAAAq6G,EAAAtmH,OAEA,KADAipH,EAAA,GAAAthH,OAAA7B,EAAA,KACA/F,EAAA+F,GAAAmjH,EAAAlpH,EAAA,GAAAmpH,GAAA1gC,EAAAzoF,EAAA+F,EACA,OAAAiiF,GAGA,QAAAA,GAAAhB,GACA,IAAA/gF,MAAA+gF,MAAA,MAAAu/B,GAAAgB,GAAA2B,EAAAliC,IAZA,GAAAyB,MACA89B,KACA2C,IA2CA,OA9BAlhC,GAAAohC,aAAA,SAAAthC,GACA,GAAA9nF,GAAAumH,EAAA9/G,QAAAqhF,EACA,OAAA9nF,GAAA,GAAAutF,UACAvtF,EAAA,EAAAkpH,EAAAlpH,EAAA,GAAAyoF,EAAA,GACAzoF,EAAAkpH,EAAAjpH,OAAAipH,EAAAlpH,GAAAyoF,IAAAxoF,OAAA,KAIA+nF,EAAAS,OAAA,SAAAv4D,GACA,IAAA5oB,UAAArH,OAAA,MAAAwoF,GAAAziE,OACAyiE,KACA,QAAArsE,GAAApc,EAAA,EAAA+F,EAAAmqB,EAAAjwB,OAAoCD,EAAA+F,IAAO/F,EAAA,OAAAoc,EAAA8T,EAAAlwB,KAAAiG,MAAAmW,OAAAqsE,EAAAhoF,KAAA2b,EAE3C,OADAqsE,GAAApwE,KAAA4uE,IACAq/B,KAGAt+B,EAAArD,MAAA,SAAAz0D,GACA,MAAA5oB,WAAArH,QAAAsmH,EAAAH,GAAAv/G,KAAAqpB,GAAAo2F,KAAAC,EAAAvgG,SAGAgiE,EAAAqhC,UAAA,WACA,MAAAH,GAAAljG,SAGAgiE,EAAAzhB,KAAA,WACA,MAAA0iD,MACAxgC,UACA9D,MAAA4hC,IAGAv+B,EAGA,QAAAshC,MAOA,QAAAthC,GAAAhB,GACA,GAAAA,KAAA,MAAAu/B,GAAAgB,GAAA9+B,EAAAzB,EAAA,EAAAjhF,IAGA,QAAAugH,KACA,GAAAtmH,IAAA,CAEA,KADAyoF,EAAA,GAAA7gF,OAAA7B,KACA/F,EAAA+F,GAAA0iF,EAAAzoF,OAAA,GAAAwmG,GAAAxmG,EAAA+F,GAAAugG,IAAAvgG,EAAA,EACA,OAAAiiF,GAdA,GAAAse,GAAA,EACAE,EAAA,EACAzgG,EAAA,EACA0iF,GAAA,IACA89B,GAAA,IAmCA,OAtBAv+B,GAAAS,OAAA,SAAAv4D,GACA,MAAA5oB,WAAArH,QAAAqmG,GAAAp2E,EAAA,GAAAs2E,GAAAt2E,EAAA,GAAAo2F,MAAAhgB,EAAAE,IAGAxe,EAAArD,MAAA,SAAAz0D,GACA,MAAA5oB,WAAArH,QAAA8F,GAAAwgH,EAAAH,GAAAv/G,KAAAqpB,IAAAjwB,OAAA,EAAAqmH,KAAAC,EAAAvgG,SAGAgiE,EAAAohC,aAAA,SAAAthC,GACA,GAAA9nF,GAAAumH,EAAA9/G,QAAAqhF,EACA,OAAA9nF,GAAA,GAAAutF,SACAvtF,EAAA,GAAAsmG,EAAA7d,EAAA,IACAzoF,GAAA+F,GAAA0iF,EAAA1iF,EAAA,GAAAygG,IACA/d,EAAAzoF,EAAA,GAAAyoF,EAAAzoF,KAGAgoF,EAAAzhB,KAAA,WACA,MAAA+iD,MACA7gC,QAAA6d,EAAAE,IACA7hB,MAAA4hC,IAGAuB,GAAA9/B,GAGA,QAAAuhC,MAKA,QAAAvhC,GAAAhB,GACA,GAAAA,KAAA,MAAAu/B,GAAAgB,GAAA9+B,EAAAzB,EAAA,EAAAjhF,IALA,GAAA0iF,IAAA,IACA89B,GAAA,KACAxgH,EAAA,CAyBA,OAnBAiiF,GAAAS,OAAA,SAAAv4D,GACA,MAAA5oB,WAAArH,QAAAwoF,EAAA29B,GAAAv/G,KAAAqpB,GAAAnqB,EAAAkG,KAAAkyE,IAAAsK,EAAAxoF,OAAAsmH,EAAAtmH,OAAA,GAAA+nF,GAAAS,EAAAziE,SAGAgiE,EAAArD,MAAA,SAAAz0D,GACA,MAAA5oB,WAAArH,QAAAsmH,EAAAH,GAAAv/G,KAAAqpB,GAAAnqB,EAAAkG,KAAAkyE,IAAAsK,EAAAxoF,OAAAsmH,EAAAtmH,OAAA,GAAA+nF,GAAAu+B,EAAAvgG,SAGAgiE,EAAAohC,aAAA,SAAAthC,GACA,GAAA9nF,GAAAumH,EAAA9/G,QAAAqhF,EACA,QAAAW,EAAAzoF,EAAA,GAAAyoF,EAAAzoF,KAGAgoF,EAAAzhB,KAAA,WACA,MAAAgjD,MACA9gC,UACA9D,MAAA4hC,IAGAv+B,EAMA,QAAAwhC,IAAAC,EAAAC,EAAAr5C,EAAAs5C,GAEA,QAAAnwB,GAAAowB,GACA,MAAAH,GAAAG,EAAA,GAAAnrC,OAAAmrC,MAqDA,MAlDApwB,GAAAja,MAAAia,EAEAA,EAAAla,KAAA,SAAAsqC,GACA,MAAAH,GAAAG,EAAA,GAAAnrC,MAAAmrC,EAAA,IAAAF,EAAAE,EAAA,GAAAH,EAAAG,MAGApwB,EAAAnU,MAAA,SAAAukC,GACA,GAAAxC,GAAA5tB,EAAAowB,GACAvC,EAAA7tB,EAAAla,KAAAsqC,EACA,OAAAA,GAAAxC,EAAAC,EAAAuC,EAAAxC,EAAAC,GAGA7tB,EAAA9gD,OAAA,SAAAkxE,EAAAtmD,GACA,MAAAomD,GAAAE,EAAA,GAAAnrC,OAAAmrC,GAAA,MAAAtmD,EAAA,EAAAr3D,KAAAszE,MAAAjc,IAAAsmD,GAGApwB,EAAA7U,MAAA,SAAAj9E,EAAAwuC,EAAAotB,GACA,GAAAqhB,KAGA,IAFAj9E,EAAA8xF,EAAAla,KAAA53E,GACA47D,EAAA,MAAAA,EAAA,EAAAr3D,KAAAszE,MAAAjc,KACA57D,EAAAwuC,GAAAotB,EAAA,SAAAqhB,EACA,IAAAA,EAAAlkF,KAAA,GAAAg+E,OAAA/2E,UAAoCgiH,EAAAhiH,EAAA47D,GAAAmmD,EAAA/hH,KAAAwuC,EACpC,OAAAyuC,IAGA6U,EAAAj0F,OAAA,SAAAR,GACA,MAAAykH,IAAA,SAAAI,GACA,GAAAA,KAAA,KAAAH,EAAAG,IAAA7kH,EAAA6kH,MAAAC,QAAAD,EAAA,IACK,SAAAA,EAAAtmD,GACL,GAAAsmD,KAAA,OAAAtmD,GAAA,QAAAomD,EAAAE,EAAA,IAAA7kH,EAAA6kH,SAIAv5C,IACAmpB,EAAAnpB,MAAA,SAAA3oE,EAAA0vB,GAGA,MAFA0yF,IAAAD,SAAAniH,GAAAqiH,GAAAF,SAAAzyF,GACAqyF,EAAAK,IAAAL,EAAAM,IACA99G,KAAAszE,MAAAlP,EAAAy5C,GAAAC,MAGAvwB,EAAAtlF,MAAA,SAAAovD,GAEA,MADAA,GAAAr3D,KAAAszE,MAAAjc,GACAoU,SAAApU,MAAA,EACAA,EAAA,EACAk2B,EAAAj0F,OAAAokH,EACA,SAAAvtG,GAA6B,MAAAutG,GAAAvtG,GAAAknD,GAAA,GAC7B,SAAAlnD,GAA6B,MAAAo9E,GAAAnpB,MAAA,EAAAj0D,GAAAknD,GAAA,IAH7Bk2B,EADA,OAQAA,EAmFA,QAAAwwB,IAAAhqH,GACA,MAAAwpH,IAAA,SAAAI,GACAA,EAAAK,QAAAL,EAAAM,WAAAN,EAAAO,SAAA,EAAAnqH,GAAA,GACA4pH,EAAAQ,SAAA,UACG,SAAAR,EAAAtmD,GACHsmD,EAAAK,QAAAL,EAAAM,UAAA,EAAA5mD,IACG,SAAA57D,EAAA0vB,GACH,OAAAA,EAAA1vB,GAAA0vB,EAAAizF,oBAAA3iH,EAAA2iH,qBAAAC,IAAAC,KA6FA,QAAAC,IAAAxqH,GACA,MAAAwpH,IAAA,SAAAI,GACAA,EAAAa,WAAAb,EAAAc,cAAAd,EAAAe,YAAA,EAAA3qH,GAAA,GACA4pH,EAAAgB,YAAA,UACG,SAAAhB,EAAAtmD,GACHsmD,EAAAa,WAAAb,EAAAc,aAAA,EAAApnD,IACG,SAAA57D,EAAA0vB,GACH,OAAAA,EAAA1vB,GAAA6iH,KAyDA,QAAAM,IAAAzuG,GACA,MAAAA,EAAA0rE,GAAA1rE,EAAA0rE,EAAA,KACA,GAAA8hC,GAAA,GAAAnrC,OAAA,EAAAriE,EAAA7T,EAAA6T,MAAA0uG,EAAA1uG,EAAA2uG,EAAA3uG,EAAAqmF,EAAArmF,EAAAmjG,EAEA,OADAqK,GAAAoB,YAAA5uG,EAAA0rE,GACA8hC,EAEA,UAAAnrC,MAAAriE,EAAA0rE,EAAA1rE,EAAA7T,EAAA6T,MAAA0uG,EAAA1uG,EAAA2uG,EAAA3uG,EAAAqmF,EAAArmF,EAAAmjG,GAGA,QAAA0L,IAAA7uG,GACA,MAAAA,EAAA0rE,GAAA1rE,EAAA0rE,EAAA,KACA,GAAA8hC,GAAA,GAAAnrC,WAAAysC,KAAA,EAAA9uG,EAAA7T,EAAA6T,MAAA0uG,EAAA1uG,EAAA2uG,EAAA3uG,EAAAqmF,EAAArmF,EAAAmjG,GAEA,OADAqK,GAAAuB,eAAA/uG,EAAA0rE,GACA8hC,EAEA,UAAAnrC,WAAAysC,IAAA9uG,EAAA0rE,EAAA1rE,EAAA7T,EAAA6T,MAAA0uG,EAAA1uG,EAAA2uG,EAAA3uG,EAAAqmF,EAAArmF,EAAAmjG,IAGA,QAAA6L,IAAAtjC,GACA,OAAUA,IAAAv/E,EAAA,EAAA6T,EAAA,EAAA0uG,EAAA,EAAAC,EAAA,EAAAtoB,EAAA,EAAA8c,EAAA,GAGV,QAAA8L,IAAAC,GA8GA,QAAAC,GAAAzjB,EAAA0jB,GACA,gBAAA5B,GACA,GAIA1gH,GACAwxE,EACAgO,EANA1vC,KACAh5C,GAAA,EACAgC,EAAA,EACA+D,EAAA+hG,EAAA7nG,MAOA,KAFA2pH,YAAAnrC,QAAAmrC,EAAA,GAAAnrC,OAAAmrC,MAEA5pH,EAAA+F,GACA,KAAA+hG,EAAA3+F,WAAAnJ,KACAg5C,EAAAv4C,KAAAqnG,EAAA9hF,MAAAhkB,EAAAhC,IACA,OAAA06E,EAAA+wC,GAAAviH,EAAA4+F,EAAAl4E,SAAA5vB,KAAAkJ,EAAA4+F,EAAAl4E,SAAA5vB,GACA06E,EAAA,MAAAxxE,EAAA,SACAw/E,EAAA8iC,EAAAtiH,QAAAw/E,EAAAkhC,EAAAlvC,IACA1hC,EAAAv4C,KAAAyI,GACAlH,EAAAhC,EAAA,EAKA,OADAg5C,GAAAv4C,KAAAqnG,EAAA9hF,MAAAhkB,EAAAhC,IACAg5C,EAAA13C,KAAA,KAIA,QAAAoqH,GAAA5jB,EAAA6jB,GACA,gBAAA3yE,GACA,GAAA58B,GAAAgvG,GAAA,KAEA,IADAQ,EAAAxvG,EAAA0rF,EAAA9uD,GAAA,OACAA,EAAA/4C,OAAA,WAMA,IAHA,KAAAmc,OAAA0uG,EAAA1uG,EAAA0uG,EAAA,MAAA1uG,EAAAuT,GAGA,KAAAvT,IAAA,KAAAA,GAAA,CACA,KAAAA,OAAAsyF,EAAA,KAAAtyF,GAAA,IACA,IAAAyvG,GAAA,KAAAzvG,GAAA6uG,GAAAG,GAAAhvG,EAAA0rE,IAAA6iC,YAAAgB,EAAAP,GAAAhvG,EAAA0rE,IAAAqiC,QACA/tG,GAAA7T,EAAA,EACA6T,IAAA,KAAAA,MAAAsyF,EAAA,OAAAtyF,EAAA6lF,GAAA4pB,EAAA,KAAAzvG,EAAAsyF,EAAA,EAAAtyF,EAAA0vG,GAAAD,EAAA,KAKA,WAAAzvG,IACAA,EAAA0uG,GAAA1uG,EAAA2vG,EAAA,MACA3vG,EAAA2uG,GAAA3uG,EAAA2vG,EAAA,IACAd,GAAA7uG,IAIAuvG,EAAAvvG,IAIA,QAAAwvG,GAAAxvG,EAAA0rF,EAAA9uD,EAAAh3C,GAOA,IANA,GAGAkH,GACA64B,EAJA/hC,EAAA,EACA+F,EAAA+hG,EAAA7nG,OACAsI,EAAAywC,EAAA/4C,OAIAD,EAAA+F,GAAA,CACA,GAAA/D,GAAAuG,EAAA,QAEA,UADAW,EAAA4+F,EAAA3+F,WAAAnJ,OAIA,GAFAkJ,EAAA4+F,EAAAl4E,OAAA5vB,OACA+hC,EAAAiqF,EAAA9iH,IAAAuiH,IAAA3jB,EAAAl4E,OAAA5vB,KAAAkJ,MACAlH,EAAA+/B,EAAA3lB,EAAA48B,EAAAh3C,IAAA,eACO,IAAAkH,GAAA8vC,EAAA7vC,WAAAnH,KACP,SAIA,MAAAA,GAGA,QAAAiqH,GAAA7vG,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAmmH,EAAApqF,KAAAkX,EAAAhzB,MAAAhmB,GACA,OAAA+F,IAAAqW,EAAAuT,EAAAw8F,EAAApmH,EAAA,GAAAd,eAAAjF,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAAmsH,GAAAhwG,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAsmH,EAAAvqF,KAAAkX,EAAAhzB,MAAAhmB,GACA,OAAA+F,IAAAqW,EAAAsyF,EAAA4d,EAAAvmH,EAAA,GAAAd,eAAAjF,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAAssH,GAAAnwG,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAymH,EAAA1qF,KAAAkX,EAAAhzB,MAAAhmB,GACA,OAAA+F,IAAAqW,EAAAsyF,EAAA+d,EAAA1mH,EAAA,GAAAd,eAAAjF,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAAysH,GAAAtwG,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAA4mH,EAAA7qF,KAAAkX,EAAAhzB,MAAAhmB,GACA,OAAA+F,IAAAqW,EAAA7T,EAAAqkH,EAAA7mH,EAAA,GAAAd,eAAAjF,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAA4sH,GAAAzwG,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAA+mH,EAAAhrF,KAAAkX,EAAAhzB,MAAAhmB,GACA,OAAA+F,IAAAqW,EAAA7T,EAAAwkH,EAAAhnH,EAAA,GAAAd,eAAAjF,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAA+sH,GAAA5wG,EAAA48B,EAAAh5C,GACA,MAAA4rH,GAAAxvG,EAAA6wG,EAAAj0E,EAAAh5C,GAGA,QAAAktH,GAAA9wG,EAAA48B,EAAAh5C,GACA,MAAA4rH,GAAAxvG,EAAA+wG,EAAAn0E,EAAAh5C,GAGA,QAAAotH,GAAAhxG,EAAA48B,EAAAh5C,GACA,MAAA4rH,GAAAxvG,EAAAixG,EAAAr0E,EAAAh5C,GAGA,QAAAstH,GAAAlxG,GACA,MAAAmxG,GAAAnxG,EAAA+tG,UAGA,QAAAqD,GAAApxG,GACA,MAAAqxG,GAAArxG,EAAA+tG,UAGA,QAAAuD,GAAAtxG,GACA,MAAAuxG,GAAAvxG,EAAAwxG,YAGA,QAAAC,GAAAzxG,GACA,MAAA0xG,GAAA1xG,EAAAwxG,YAGA,QAAAG,GAAA3xG,GACA,MAAA4xG,KAAA5xG,EAAA6xG,YAAA,KAGA,QAAAC,GAAA9xG,GACA,MAAAmxG,GAAAnxG,EAAAuuG,aAGA,QAAAwD,GAAA/xG,GACA,MAAAqxG,GAAArxG,EAAAuuG,aAGA,QAAAyD,GAAAhyG,GACA,MAAAuxG,GAAAvxG,EAAAiyG,eAGA,QAAAC,GAAAlyG,GACA,MAAA0xG,GAAA1xG,EAAAiyG,eAGA,QAAAE,GAAAnyG,GACA,MAAA4xG,KAAA5xG,EAAAoyG,eAAA,KAvQA,GAAAvB,GAAA3B,EAAAmD,SACAtB,EAAA7B,EAAA1B,KACAyD,EAAA/B,EAAAr2C,KACA+4C,EAAA1C,EAAAoD,QACAjB,EAAAnC,EAAAqD,KACApB,EAAAjC,EAAAsD,UACAd,EAAAxC,EAAAuD,OACAlB,EAAArC,EAAAwD,YAEA5C,EAAA6C,GAAAf,GACA7B,EAAA6C,GAAAhB,GACAxB,EAAAuC,GAAAtB,GACAhB,EAAAuC,GAAAvB,GACApB,EAAA0C,GAAAxB,GACAjB,EAAA0C,GAAAzB,GACAT,EAAAiC,GAAAjB,GACAf,EAAAiC,GAAAlB,GACAnB,EAAAoC,GAAApB,GACAf,EAAAoC,GAAArB,GAEAnC,GACAnkH,EAAAimH,EACAxM,EAAA0M,EACA7kH,EAAA+kH,EACAlO,EAAAqO,EACA3kH,EAAA,KACAkT,EAAA6yG,GACAxvH,EAAAwvH,GACAnE,EAAAoE,GACAC,EAAAC,GACAptH,EAAAqtH,GACA9P,EAAA+P,GACA/mH,EAAAgnH,GACAxE,EAAAyE,GACA7/F,EAAAo+F,EACAtrB,EAAAgtB,GACA3D,EAAA4D,GACAhhB,EAAAihB,GACA1tB,EAAA2tB,GACA5oC,EAAA,KACAsZ,EAAA,KACAxY,EAAA+nC,GACArvB,EAAAsvB,GACA/D,EAAAgE,GACAC,IAAAC,IAGAC,GACA7oH,EAAA6mH,EACApN,EAAAqN,EACAxlH,EAAAylH,EACA5O,EAAA8O,EACAplH,EAAA,KACAkT,EAAA+zG,GACA1wH,EAAA0wH,GACArF,EAAAsF,GACAjB,EAAAkB,GACAruH,EAAAsuH,GACA/Q,EAAAgR,GACAhoH,EAAAioH,GACAzF,EAAA0F,GACA9gG,EAAA4+F,EACA9rB,EAAAiuB,GACA5E,EAAA6E,GACAjiB,EAAAkiB,GACA3uB,EAAA4uB,GACA7pC,EAAA,KACAsZ,EAAA,KACAxY,EAAAgpC,GACAtwB,EAAAuwB,GACAhF,EAAAiF,GACAhB,IAAAC,IAGAjE,GACA3kH,EAAA+kH,EACAtL,EAAAyL,EACA5jH,EAAA+jH,EACAlN,EAAAqN,EACA3jH,EAAA8jH,EACA5wG,EAAA60G,GACAxxH,EAAAwxH,GACAnG,EAAAoG,GACA/B,EAAA+B,GACAlvH,EAAAmvH,GACA5R,EAAA6R,GACA7oH,EAAA8oH,GACAtG,EAAAuG,GACA3hG,EAAAs8F,EACAxpB,EAAA8uB,GACAzF,EAAA0F,GACA9iB,EAAA+iB,GACAxvB,EAAAyvB,GACA1qC,EAAAkmC,EACA5sB,EAAA8sB,EACAtlC,EAAA6pC,GACAnxB,EAAAoxB,GACA7F,EAAA8F,GACA7B,IAAA8B,GAwKA,OApKAtG,GAAAxkC,EAAAukC,EAAA4B,EAAA3B,GACAA,EAAAlrB,EAAAirB,EAAA8B,EAAA7B,GACAA,EAAAtiH,EAAAqiH,EAAA0B,EAAAzB,GACA0E,EAAAlpC,EAAAukC,EAAA4B,EAAA+C,GACAA,EAAA5vB,EAAAirB,EAAA8B,EAAA6C,GACAA,EAAAhnH,EAAAqiH,EAAA0B,EAAAiD,IAgKAxnC,OAAA,SAAAof,GACA,GAAA/gB,GAAAwkC,EAAAzjB,GAAA,GAAA0jB,EAEA,OADAzkC,GAAA3lF,SAAA,WAA+B,MAAA0mG,IAC/B/gB,GAEAhlD,MAAA,SAAA+lE,GACA,GAAAn4E,GAAA+7F,EAAA5jB,GAAA,GAAA+iB,GAEA,OADAl7F,GAAAvuB,SAAA,WAA+B,MAAA0mG,IAC/Bn4E,GAEAoiG,UAAA,SAAAjqB,GACA,GAAA/gB,GAAAwkC,EAAAzjB,GAAA,GAAAooB,EAEA,OADAnpC,GAAA3lF,SAAA,WAA+B,MAAA0mG,IAC/B/gB,GAEAirC,SAAA,SAAAlqB,GACA,GAAAn4E,GAAA+7F,EAAA5jB,EAAAmjB,GAEA,OADAt7F,GAAAvuB,SAAA,WAA+B,MAAA0mG,IAC/Bn4E,IAUA,QAAA+qD,IAAA3zE,EAAAmqE,EAAAyuB,GACA,GAAAsI,GAAAlhG,EAAA,SACAiyC,GAAAivD,GAAAlhG,KAAA,GACA9G,EAAA+4C,EAAA/4C,MACA,OAAAgoG,IAAAhoG,EAAA0/F,EAAA,GAAA/3F,OAAA+3F,EAAA1/F,EAAA,GAAAqB,KAAA4vE,GAAAl4B,KAGA,QAAAi5E,IAAAzqG,GACA,MAAAA,GAAA2O,QAAA+7F,GAAA,QAGA,QAAAnD,IAAApgC,GACA,UAAAhqE,QAAA,OAAAgqE,EAAAtoF,IAAA4rH,IAAA3wH,KAAA,cAGA,QAAA0tH,IAAArgC,GAEA,IADA,GAAAtoF,MAAcrG,GAAA,EAAA+F,EAAA4oF,EAAA1uF,SACdD,EAAA+F,GAAAM,EAAAsoF,EAAA3uF,GAAAiF,eAAAjF,CACA,OAAAqG,GAGA,QAAAorH,IAAAr1G,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAosH,GAAArwF,KAAAkX,EAAAhzB,MAAAhmB,IAAA,GACA,OAAA+F,IAAAqW,EAAAsyF,GAAA3oG,EAAA,GAAA/F,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAAuxH,IAAAp1G,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAosH,GAAArwF,KAAAkX,EAAAhzB,MAAAhmB,GACA,OAAA+F,IAAAqW,EAAA0vG,GAAA/lH,EAAA,GAAA/F,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAAyxH,IAAAt1G,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAosH,GAAArwF,KAAAkX,EAAAhzB,MAAAhmB,GACA,OAAA+F,IAAAqW,EAAA6lF,GAAAl8F,EAAA,GAAA/F,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAA2xH,IAAAx1G,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAosH,GAAArwF,KAAAkX,EAAAhzB,MAAAhmB,IAAA,GACA,OAAA+F,IAAAqW,EAAA0rE,GAAA/hF,EAAA,GAAA/F,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAA0xH,IAAAv1G,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAosH,GAAArwF,KAAAkX,EAAAhzB,MAAAhmB,IAAA,GACA,OAAA+F,IAAAqW,EAAA0rE,GAAA/hF,EAAA,KAAAA,EAAA,gBAAA/F,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAA4xH,IAAAz1G,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAA,gCAAA+7B,KAAAkX,EAAAhzB,MAAAhmB,IAAA,GACA,OAAA+F,IAAAqW,EAAA2vG,EAAAhmH,EAAA,OAAAA,EAAA,IAAAA,EAAA,WAAA/F,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAAoxH,IAAAj1G,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAosH,GAAArwF,KAAAkX,EAAAhzB,MAAAhmB,IAAA,GACA,OAAA+F,IAAAqW,EAAA7T,EAAAxC,EAAA,KAAA/F,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAAgxH,IAAA70G,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAosH,GAAArwF,KAAAkX,EAAAhzB,MAAAhmB,IAAA,GACA,OAAA+F,IAAAqW,KAAArW,EAAA,GAAA/F,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAAkxH,IAAA/0G,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAosH,GAAArwF,KAAAkX,EAAAhzB,MAAAhmB,IAAA,GACA,OAAA+F,IAAAqW,EAAA7T,EAAA,EAAA6T,KAAArW,EAAA,GAAA/F,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAAixH,IAAA90G,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAosH,GAAArwF,KAAAkX,EAAAhzB,MAAAhmB,IAAA,GACA,OAAA+F,IAAAqW,EAAA0uG,GAAA/kH,EAAA,GAAA/F,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAAqxH,IAAAl1G,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAosH,GAAArwF,KAAAkX,EAAAhzB,MAAAhmB,IAAA,GACA,OAAA+F,IAAAqW,EAAA2uG,GAAAhlH,EAAA,GAAA/F,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAAsxH,IAAAn1G,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAosH,GAAArwF,KAAAkX,EAAAhzB,MAAAhmB,IAAA,GACA,OAAA+F,IAAAqW,EAAAqmF,GAAA18F,EAAA,GAAA/F,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAAmxH,IAAAh1G,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAosH,GAAArwF,KAAAkX,EAAAhzB,MAAAhmB,IAAA,GACA,OAAA+F,IAAAqW,EAAAmjG,GAAAx5G,EAAA,GAAA/F,EAAA+F,EAAA,GAAA9F,SAAA,EAGA,QAAA6xH,IAAA11G,EAAA48B,EAAAh5C,GACA,GAAA+F,GAAAqsH,GAAAtwF,KAAAkX,EAAAhzB,MAAAhmB,IAAA,GACA,OAAA+F,GAAA/F,EAAA+F,EAAA,GAAA9F,QAAA,EAGA,QAAAgvH,IAAA7yG,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAA8tG,UAAAv6F,EAAA,GAGA,QAAAu/F,IAAA9yG,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAA6xG,WAAAt+F,EAAA,GAGA,QAAAy/F,IAAAhzG,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAA6xG,WAAA,OAAAt+F,EAAA,GAGA,QAAA0/F,IAAAjzG,EAAAuT,GACA,MAAA+qD,IAAA,EAAA23C,GAAAhiD,MAAAiiD,GAAAl2G,MAAAuT,EAAA,GAGA,QAAA2/F,IAAAlzG,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAAm2G,kBAAA5iG,EAAA,GAGA,QAAA4/F,IAAAnzG,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAAwxG,WAAA,EAAAj+F,EAAA,GAGA,QAAA6/F,IAAApzG,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAAo2G,aAAA7iG,EAAA,GAGA,QAAA8/F,IAAArzG,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAAq2G,aAAA9iG,EAAA,GAGA,QAAA+/F,IAAAtzG,EAAAuT,GACA,MAAA+qD,IAAAg4C,GAAAriD,MAAAiiD,GAAAl2G,MAAAuT,EAAA,GAGA,QAAAggG,IAAAvzG,GACA,MAAAA,GAAA+tG,SAGA,QAAAyF,IAAAxzG,EAAAuT,GACA,MAAA+qD,IAAAi4C,GAAAtiD,MAAAiiD,GAAAl2G,MAAAuT,EAAA,GAGA,QAAAkgG,IAAAzzG,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAAw2G,cAAA,IAAAjjG,EAAA,GAGA,QAAAmgG,IAAA1zG,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAAw2G,cAAA,IAAAjjG,EAAA,GAGA,QAAAogG,IAAA3zG,GACA,GAAA4xF,GAAA5xF,EAAAiuG,mBACA,QAAArc,EAAA,OAAAA,IAAA,QACAtzB,GAAAszB,EAAA,YACAtzB,GAAAszB,EAAA,UAGA,QAAAmiB,IAAA/zG,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAAsuG,aAAA/6F,EAAA,GAGA,QAAAygG,IAAAh0G,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAAoyG,cAAA7+F,EAAA,GAGA,QAAA0gG,IAAAj0G,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAAoyG,cAAA,OAAA7+F,EAAA,GAGA,QAAA2gG,IAAAl0G,EAAAuT,GACA,MAAA+qD,IAAA,EAAAm4C,GAAAxiD,MAAAyiD,GAAA12G,MAAAuT,EAAA,GAGA,QAAA4gG,IAAAn0G,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAA22G,qBAAApjG,EAAA,GAGA,QAAA6gG,IAAAp0G,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAAiyG,cAAA,EAAA1+F,EAAA,GAGA,QAAA8gG,IAAAr0G,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAA42G,gBAAArjG,EAAA,GAGA,QAAA+gG,IAAAt0G,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAA62G,gBAAAtjG,EAAA,GAGA,QAAAghG,IAAAv0G,EAAAuT,GACA,MAAA+qD,IAAAw4C,GAAA7iD,MAAAyiD,GAAA12G,MAAAuT,EAAA,GAGA,QAAAihG,IAAAx0G,GACA,MAAAA,GAAAuuG,YAGA,QAAAkG,IAAAz0G,EAAAuT,GACA,MAAA+qD,IAAAy4C,GAAA9iD,MAAAyiD,GAAA12G,MAAAuT,EAAA,GAGA,QAAAmhG,IAAA10G,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAAg3G,iBAAA,IAAAzjG,EAAA,GAGA,QAAAohG,IAAA30G,EAAAuT,GACA,MAAA+qD,IAAAt+D,EAAAg3G,iBAAA,IAAAzjG,EAAA,GAGA,QAAAqhG,MACA,cAGA,QAAAf,MACA,UAoBA,QAAAoD,IAAA9uG,GAMA,MALA+uG,IAAAjI,GAAA9mG,GACArmB,EAAAq1H,WAAAD,GAAA5qC,OACAxqF,EAAAs1H,UAAAF,GAAAvxF,MACA7jC,EAAA6zH,UAAAuB,GAAAvB,UACA7zH,EAAA8zH,SAAAsB,GAAAtB,SACAsB,GAKA,QAAAG,IAAA7J,GACA,MAAAA,GAAA8J,cAOA,QAAAC,IAAA36E,GACA,GAAA4wE,GAAA,GAAAnrC,MAAAzlC,EACA,OAAA/yC,OAAA2jH,GAAA,KAAAA,EAeA,QAAAgK,IAAArpC,GACA,UAAA9L,MAAA8L,GAGA,QAAAspC,IAAAtpC,GACA,MAAAA,aAAA9L,OAAA8L,GAAA,GAAA9L,OAAA8L,GAGA,QAAAupC,IAAAC,EAAAC,EAAAC,EAAApI,EAAAqI,EAAAC,EAAAC,EAAAC,EAAA3rC,GAmCA,QAAAC,GAAAihC,GACA,OAAAwK,EAAAxK,KAAA0K,EACAH,EAAAvK,KAAA2K,EACAL,EAAAtK,KAAA4K,EACA3I,EAAAjC,KAAA6K,EACAT,EAAApK,KAAAqK,EAAArK,KAAA8K,EAAAC,EACAZ,EAAAnK,KAAAiE,EACAgC,GAAAjG,GAGA,QAAAgL,GAAAp7B,EAAA9xF,EAAAwuC,EAAAotB,GAMA,GALA,MAAAk2B,MAAA,IAKA,gBAAAA,GAAA,CACA,GAAAxvF,GAAAiC,KAAAm7E,IAAAlxC,EAAAxuC,GAAA8xF,EACAx5F,EAAA60H,GAAA,SAAA70H,GAAoC,MAAAA,GAAA,KAAe+1C,MAAA++E,EAAA9qH,EACnDhK,KAAA80H,EAAA70H,QACAqjE,EAAA4jB,EAAAx/E,EAAAqtH,GAAA7+E,EAAA6+E,GAAAv7B,GACAA,EAAAu6B,GACO/zH,GACPA,EAAA80H,EAAA9qH,EAAA8qH,EAAA90H,EAAA,MAAA80H,EAAA90H,GAAA,GAAAgK,EAAAhK,EAAA,EAAAA,GACAsjE,EAAAtjE,EAAA,GACAw5F,EAAAx5F,EAAA,KAEAsjE,EAAA4jB,EAAAx/E,EAAAwuC,EAAAsjD,GACAA,EAAA66B,GAIA,aAAA/wD,EAAAk2B,IAAAtlF,MAAAovD,GAlEA,GAAA0kB,GAAAw/B,GAAAV,GAAAzvB,IACAhU,EAAA2E,EAAA3E,OACAoF,EAAAT,EAAAS,OAEA6rC,EAAA5rC,EAAA,OACA6rC,EAAA7rC,EAAA,OACA8rC,EAAA9rC,EAAA,SACA+rC,EAAA/rC,EAAA,SACAgsC,EAAAhsC,EAAA,SACAisC,EAAAjsC,EAAA,SACAmlC,EAAAnlC,EAAA,MACAmnC,EAAAnnC,EAAA,MAEAosC,IACAV,EAAA,EAAAY,KACAZ,EAAA,IAAAY,KACAZ,EAAA,MAAAY,KACAZ,EAAA,MAAAY,KACAb,EAAA,EAAAc,KACAd,EAAA,IAAAc,KACAd,EAAA,MAAAc,KACAd,EAAA,MAAAc,KACAf,EAAA,EAAAgB,KACAhB,EAAA,IAAAgB,KACAhB,EAAA,IAAAgB,KACAhB,EAAA,MAAAgB,KACArJ,EAAA,EAAAsJ,KACAtJ,EAAA,IAAAsJ,KACAlB,EAAA,EAAAmB,KACApB,EAAA,EAAAqB,KACArB,EAAA,IAAAqB,KACAtB,EAAA,EAAAgB,IAyEA,OAnCA/sC,GAAA3E,OAAA,SAAAyE,GACA,UAAArJ,MAAA4E,EAAAyE,KAGAE,EAAAS,OAAA,SAAAv4D,GACA,MAAA5oB,WAAArH,OAAAwoF,EAAAk/B,GAAA9gH,KAAAqpB,EAAA2jG,KAAAprC,IAAApiF,IAAAutH,KAGA5rC,EAAAO,MAAA,SAAAiR,EAAAl2B,GACA,GAIAinB,GAJAnuE,EAAAqsE,IACAmL,EAAAx3E,EAAA,GACA03E,EAAA13E,IAAAnc,OAAA,GACAmyF,EAAA0B,EAAAF,CAKA,OAHAxB,KAAA7H,EAAAqJ,IAAAE,IAAAvJ,GACAA,EAAAqqC,EAAAp7B,EAAA5F,EAAAE,EAAAxwB,GACAinB,MAAA5F,MAAAiP,EAAAE,EAAA,MACA1B,EAAA7H,EAAAtf,UAAAsf,GAGAvC,EAAAW,WAAA,SAAAtY,EAAAy3B,GACA,aAAAA,EAAAnf,EAAAD,EAAAof,IAGA9f,EAAA+/B,KAAA,SAAAvuB,EAAAl2B,GACA,GAAAlnD,GAAAqsE,GACA,QAAA+Q,EAAAo7B,EAAAp7B,EAAAp9E,EAAA,GAAAA,IAAAnc,OAAA,GAAAqjE,IACAmlB,EAAAs/B,GAAA3rG,EAAAo9E,IACAxR,GAGAA,EAAAzhB,KAAA,WACA,MAAAA,IAAAyhB,EAAA8rC,GAAAC,EAAAC,EAAAC,EAAApI,EAAAqI,EAAAC,EAAAC,EAAAC,EAAA3rC,KAGAV,EA0CA,QAAAstC,IAAA3wC,GACA,GAAA5+E,GAAA4+E,EAAA1kF,MACA,iBAAAsqF,GACA,MAAA5F,GAAA14E,KAAAC,IAAA,EAAAD,KAAAkyE,IAAAp4E,EAAA,EAAAkG,KAAAszE,MAAAgL,EAAAxkF,OAYA,QAAAwvH,IAAAC,GAKA,QAAAxtC,GAAAhB,GACA,GAAAuD,IAAAvD,EAAAsf,IAAAE,EAAAF,EACA,OAAAkvB,GAAAx7C,EAAA/tE,KAAAC,IAAA,EAAAD,KAAAkyE,IAAA,EAAAoM,OANA,GAAA+b,GAAA,EACAE,EAAA,EACAxsB,GAAA,CAuBA,OAhBAgO,GAAAS,OAAA,SAAAv4D,GACA,MAAA5oB,WAAArH,QAAAqmG,GAAAp2E,EAAA,GAAAs2E,GAAAt2E,EAAA,GAAA83D,IAAAse,EAAAE,IAGAxe,EAAAhO,MAAA,SAAA9pD,GACA,MAAA5oB,WAAArH,QAAA+5E,IAAA9pD,EAAA83D,GAAAhO,GAGAgO,EAAAwtC,aAAA,SAAAtlG,GACA,MAAA5oB,WAAArH,QAAAu1H,EAAAtlG,EAAA83D,GAAAwtC,GAGAxtC,EAAAzhB,KAAA,WACA,MAAAgvD,IAAAC,GAAA/sC,QAAA6d,EAAAE,IAAAxsB,UAGA8tC,GAAA9/B,GAsBA,QAAAytC,IAAAzuC,GACA,MAAAA,GAAA,IAAAA,GAAA,EAAA0uC,GAAAzpH,KAAA48F,KAAA7hB,GAGA,QAAA2uC,IAAA3uC,GACA,MAAAA,IAAA,EAAA4uC,GAAA5uC,IAAA,GAAA4uC,GAAA3pH,KAAA88F,KAAA/hB,GAGA,QAAA6uC,IAAAz5G,GACA,MAAAA,GAAA05G,YAGA,QAAAC,IAAA35G,GACA,MAAAA,GAAA45G,YAGA,QAAAC,IAAA75G,GACA,MAAAA,GAAA2oF,WAGA,QAAAmxB,IAAA95G,GACA,MAAAA,GAAA6oF,SAGA,QAAAkxB,IAAA/5G,GACA,MAAAA,MAAAg6G,SAGA,QAAAC,IAAA/vB,EAAAC,EAAAC,EAAAC,EAAAqT,EAAAC,EAAAuG,EAAAC,GACA,GAAA+V,GAAA9vB,EAAAF,EAAAiwB,EAAA9vB,EAAAF,EACAiwB,EAAAlW,EAAAxG,EAAA2c,EAAAlW,EAAAxG,EACAxvB,GAAAisC,GAAAjwB,EAAAwT,GAAA0c,GAAAnwB,EAAAwT,KAAA2c,EAAAH,EAAAE,EAAAD,EACA,QAAAjwB,EAAA/b,EAAA+rC,EAAA/vB,EAAAhc,EAAAgsC,GAKA,QAAAG,IAAApwB,EAAAC,EAAAC,EAAAC,EAAAwZ,EAAA0W,EAAAC,GACA,GAAAC,GAAAvwB,EAAAE,EACAswB,EAAAvwB,EAAAE,EACAswB,GAAAH,EAAAD,MAAAK,GAAAH,IAAAC,KACA/U,EAAAgV,EAAAD,EACA9U,GAAA+U,EAAAF,EACAI,EAAA3wB,EAAAyb,EACAmV,EAAA3wB,EAAAyb,EACAsU,EAAA9vB,EAAAub,EACAwU,EAAA9vB,EAAAub,EACAzM,GAAA0hB,EAAAX,GAAA,EACA7gB,GAAAyhB,EAAAX,GAAA,EACAh5F,EAAA+4F,EAAAW,EACAx5F,EAAA84F,EAAAW,EACAtd,EAAAr8E,IAAAE,IACA20D,EAAA6tB,EAAA0W,EACA9hC,EAAAoiC,EAAAV,EAAAD,EAAAY,EACA96G,GAAAqhB,EAAA,QAAAu5F,GAAAG,GAAA,EAAA/kC,IAAAwnB,EAAA/kB,MACAuiC,GAAAviC,EAAAp3D,EAAAF,EAAAnhB,GAAAw9F,EACAoD,IAAAnoB,EAAAt3D,EAAAE,EAAArhB,GAAAw9F,EACAyd,GAAAxiC,EAAAp3D,EAAAF,EAAAnhB,GAAAw9F,EACA0d,IAAAziC,EAAAt3D,EAAAE,EAAArhB,GAAAw9F,EACA2d,EAAAH,EAAA7hB,EACAiiB,EAAAxa,EAAAvH,EACAgiB,EAAAJ,EAAA9hB,EACAmiB,EAAAJ,EAAA7hB,CAMA,OAFA8hB,KAAAC,IAAAC,IAAAC,MAAAN,EAAAC,EAAAra,EAAAsa,IAGAhoB,GAAA8nB,EACA7nB,GAAAyN,EACA6Z,KAAA9U,EACA+U,KAAA9U,EACAiV,IAAAG,GAAAnX,EAAA7tB,EAAA,GACA8kC,IAAAla,GAAAiD,EAAA7tB,EAAA,IA8LA,QAAAulC,IAAApnH,GACAjR,KAAA4c,SAAA3L,EA+BA,QAAAqnH,IAAAjoG,GACA,MAAAA,GAAA,GAGA,QAAAkoG,IAAAloG,GACA,MAAAA,GAAA,GAmPA,QAAAmoG,IAAAC,GACAz4H,KAAA04H,OAAAD,EAqBA,QAAAE,IAAAF,GAEA,QAAAG,GAAA3nH,GACA,UAAAunH,IAAAC,EAAAxnH,IAKA,MAFA2nH,GAAAF,OAAAD,EAEAG,EAGA,QAAAC,IAAAj3H,GACA,GAAAgI,GAAAhI,EAAA62H,KASA,OAPA72H,GAAA+rG,MAAA/rG,EAAA8lF,QAAA9lF,GAAA8lF,EACA9lF,EAAA2jG,OAAA3jG,EAAA4mF,QAAA5mF,GAAA4mF,EAEA5mF,EAAA62H,MAAA,SAAA7nG,GACA,MAAA5oB,WAAArH,OAAAiJ,EAAA+uH,GAAA/nG,IAAAhnB,IAAA8uH,QAGA92H,EAwLA,QAAAk3H,IAAA7rC,EAAAvF,EAAAc,GACAyE,EAAArwE,SAAAm8G,eACA,EAAA9rC,EAAA+X,IAAA/X,EAAAiY,KAAA,GACA,EAAAjY,EAAAgY,IAAAhY,EAAAkY,KAAA,GACAlY,EAAA+X,IAAA,EAAA/X,EAAAiY,KAAA,GACAjY,EAAAgY,IAAA,EAAAhY,EAAAkY,KAAA,GACAlY,EAAA+X,IAAA,EAAA/X,EAAAiY,IAAAxd,GAAA,GACAuF,EAAAgY,IAAA,EAAAhY,EAAAkY,IAAA3c,GAAA,GAIA,QAAAwwC,IAAA/nH,GACAjR,KAAA4c,SAAA3L,EAwCA,QAAAgoH,IAAAhoH,GACAjR,KAAA4c,SAAA3L,EAiDA,QAAAioH,IAAAjoH,GACAjR,KAAA4c,SAAA3L,EAqCA,QAAAkoH,IAAAloH,EAAA2zG,GACA5kH,KAAAo5H,OAAA,GAAAJ,IAAA/nH,GACAjR,KAAAq5H,MAAAzU,EAqDA,QAAA0U,IAAArsC,EAAAvF,EAAAc,GACAyE,EAAArwE,SAAAm8G,cACA9rC,EAAAiY,IAAAjY,EAAAprE,IAAAorE,EAAAssC,IAAAtsC,EAAA+X,KACA/X,EAAAkY,IAAAlY,EAAAprE,IAAAorE,EAAAusC,IAAAvsC,EAAAgY,KACAhY,EAAAssC,IAAAtsC,EAAAprE,IAAAorE,EAAAiY,IAAAxd,GACAuF,EAAAusC,IAAAvsC,EAAAprE,IAAAorE,EAAAkY,IAAA3c,GACAyE,EAAAssC,IACAtsC,EAAAusC,KAIA,QAAAC,IAAAxoH,EAAAyoH,GACA15H,KAAA4c,SAAA3L,EACAjR,KAAA6hB,IAAA,EAAA63G,GAAA,EAiDA,QAAAC,IAAA1oH,EAAAyoH,GACA15H,KAAA4c,SAAA3L,EACAjR,KAAA6hB,IAAA,EAAA63G,GAAA,EAyDA,QAAAE,IAAA3oH,EAAAyoH,GACA15H,KAAA4c,SAAA3L,EACAjR,KAAA6hB,IAAA,EAAA63G,GAAA,EA8CA,QAAAG,IAAA5sC,EAAAvF,EAAAc,GACA,GAAA0e,GAAAja,EAAAiY,IACAiC,EAAAla,EAAAkY,IACAqV,EAAAvtB,EAAAssC,IACA9e,EAAAxtB,EAAAusC,GAEA,IAAAvsC,EAAA6sC,OAAAC,GAAA,CACA,GAAAhyH,GAAA,EAAAklF,EAAA+sC,QAAA,EAAA/sC,EAAA6sC,OAAA7sC,EAAAgtC,OAAAhtC,EAAAitC,QACAzzH,EAAA,EAAAwmF,EAAA6sC,QAAA7sC,EAAA6sC,OAAA7sC,EAAAgtC,OACA/yB,MAAAn/F,EAAAklF,EAAA+X,IAAA/X,EAAAitC,QAAAjtC,EAAAssC,IAAAtsC,EAAA+sC,SAAAvzH,EACA0gG,KAAAp/F,EAAAklF,EAAAgY,IAAAhY,EAAAitC,QAAAjtC,EAAAusC,IAAAvsC,EAAA+sC,SAAAvzH,EAGA,GAAAwmF,EAAAktC,OAAAJ,GAAA,CACA,GAAA1wH,GAAA,EAAA4jF,EAAAmtC,QAAA,EAAAntC,EAAAktC,OAAAltC,EAAAgtC,OAAAhtC,EAAAitC,QACAjxH,EAAA,EAAAgkF,EAAAktC,QAAAltC,EAAAktC,OAAAltC,EAAAgtC,OACAzf,MAAAnxG,EAAA4jF,EAAAiY,IAAAjY,EAAAmtC,QAAA1yC,EAAAuF,EAAAitC,SAAAjxH,EACAwxG,KAAApxG,EAAA4jF,EAAAkY,IAAAlY,EAAAmtC,QAAA5xC,EAAAyE,EAAAitC,SAAAjxH,EAGAgkF,EAAArwE,SAAAm8G,cAAA7xB,EAAAC,EAAAqT,EAAAC,EAAAxtB,EAAAssC,IAAAtsC,EAAAusC,KAGA,QAAAa,IAAAppH,EAAA0zG,GACA3kH,KAAA4c,SAAA3L,EACAjR,KAAAs6H,OAAA3V,EA6DA,QAAA4V,IAAAtpH,EAAA0zG,GACA3kH,KAAA4c,SAAA3L,EACAjR,KAAAs6H,OAAA3V,EAqEA,QAAA6V,IAAAvpH,EAAA0zG,GACA3kH,KAAA4c,SAAA3L,EACAjR,KAAAs6H,OAAA3V,EA0DA,QAAA8V,IAAAxpH,GACAjR,KAAA4c,SAAA3L,EAuBA,QAAAypH,IAAAhzC,GACA,MAAAA,GAAA,OAOA,QAAAizC,IAAA1tC,EAAAutB,EAAAC,GACA,GAAAmgB,GAAA3tC,EAAAiY,IAAAjY,EAAA+X,IACA61B,EAAArgB,EAAAvtB,EAAAiY,IACA9B,GAAAnW,EAAAkY,IAAAlY,EAAAgY,MAAA21B,GAAAC,EAAA,OACAv3B,GAAAmX,EAAAxtB,EAAAkY,MAAA01B,GAAAD,EAAA,OACAvqG,GAAA+yE,EAAAy3B,EAAAv3B,EAAAs3B,MAAAC,EACA,QAAAH,GAAAt3B,GAAAs3B,GAAAp3B,IAAA32F,KAAAkyE,IAAAlyE,KAAAm7E,IAAAsb,GAAAz2F,KAAAm7E,IAAAwb,GAAA,GAAA32F,KAAAm7E,IAAAz3D,KAAA,EAIA,QAAAyqG,IAAA7tC,EAAAhC,GACA,GAAApuE,GAAAowE,EAAAiY,IAAAjY,EAAA+X,GACA,OAAAnoF,IAAA,GAAAowE,EAAAkY,IAAAlY,EAAAgY,KAAApoF,EAAAouE,GAAA,EAAAA,EAMA,QAAA8vC,IAAA9tC,EAAAqH,EAAAE,GACA,GAAAwS,GAAA/Z,EAAA+X,IACAiC,EAAAha,EAAAgY,IACAiC,EAAAja,EAAAiY,IACAiC,EAAAla,EAAAkY,IACAlnE,GAAAipE,EAAAF,GAAA,CACA/Z,GAAArwE,SAAAm8G,cAAA/xB,EAAA/oE,EAAAgpE,EAAAhpE,EAAAq2D,EAAA4S,EAAAjpE,EAAAkpE,EAAAlpE,EAAAu2D,EAAA0S,EAAAC,GAGA,QAAA6zB,IAAA/pH,GACAjR,KAAA4c,SAAA3L,EA0CA,QAAAgqH,IAAAhqH,GACAjR,KAAA4c,SAAA,GAAAs+G,IAAAjqH,GAOA,QAAAiqH,IAAAjqH,GACAjR,KAAA4c,SAAA3L,EAUA,QAAAkqH,IAAAlqH,GACA,UAAA+pH,IAAA/pH,GAGA,QAAAmqH,IAAAnqH,GACA,UAAAgqH,IAAAhqH,GAGA,QAAAoqH,IAAApqH,GACAjR,KAAA4c,SAAA3L,EA2CA,QAAAqqH,IAAA5zC,GACA,GAAAhnF,GAEAuI,EADAxC,EAAAihF,EAAA/mF,OAAA,EAEAoH,EAAA,GAAAO,OAAA7B,GACA4C,EAAA,GAAAf,OAAA7B,GACAqsF,EAAA,GAAAxqF,OAAA7B,EAEA,KADAsB,EAAA,KAAAsB,EAAA,KAAAypF,EAAA,GAAApL,EAAA,KAAAA,EAAA,GACAhnF,EAAA,EAAaA,EAAA+F,EAAA,IAAW/F,EAAAqH,EAAArH,GAAA,EAAA2I,EAAA3I,GAAA,EAAAoyF,EAAApyF,GAAA,EAAAgnF,EAAAhnF,GAAA,EAAAgnF,EAAAhnF,EAAA,EAExB,KADAqH,EAAAtB,EAAA,KAAA4C,EAAA5C,EAAA,KAAAqsF,EAAArsF,EAAA,KAAAihF,EAAAjhF,EAAA,GAAAihF,EAAAjhF,GACA/F,EAAA,EAAaA,EAAA+F,IAAO/F,EAAAuI,EAAAlB,EAAArH,GAAA2I,EAAA3I,EAAA,GAAA2I,EAAA3I,IAAAuI,EAAA6pF,EAAApyF,IAAAuI,EAAA6pF,EAAApyF,EAAA,EAEpB,KADAqH,EAAAtB,EAAA,GAAAqsF,EAAArsF,EAAA,GAAA4C,EAAA5C,EAAA,GACA/F,EAAA+F,EAAA,EAAiB/F,GAAA,IAAQA,EAAAqH,EAAArH,IAAAoyF,EAAApyF,GAAAqH,EAAArH,EAAA,IAAA2I,EAAA3I,EAEzB,KADA2I,EAAA5C,EAAA,IAAAihF,EAAAjhF,GAAAsB,EAAAtB,EAAA,MACA/F,EAAA,EAAaA,EAAA+F,EAAA,IAAW/F,EAAA2I,EAAA3I,GAAA,EAAAgnF,EAAAhnF,EAAA,GAAAqH,EAAArH,EAAA,EACxB,QAAAqH,EAAAsB,GAOA,QAAAkyH,IAAAtqH,EAAAg6E,GACAjrF,KAAA4c,SAAA3L,EACAjR,KAAAwhB,GAAAypE,EA4CA,QAAAuwC,IAAAvqH,GACA,UAAAsqH,IAAAtqH,EAAA,GAGA,QAAAwqH,IAAAxqH,GACA,UAAAsqH,IAAAtqH,EAAA,GAqBA,QAAAyqH,IAAA5+G,EAAAjd,GACA,MAAAid,GAAAjd,GAkGA,QAAA87H,IAAAC,GAEA,IADA,GAAAjoF,GAAAzrB,EAAA,EAAAxnB,GAAA,EAAA+F,EAAAm1H,EAAAj7H,SACAD,EAAA+F,IAAAktC,GAAAioF,EAAAl7H,GAAA,MAAAwnB,GAAAyrB,EACA,OAAAzrB,GA0CA,QAAA2zG,IAAA/+G,GACA,MAAAA,GAAA,GAGA,QAAAg/G,IAAAh/G,GACA,MAAAA,GAAA,GAGA,QAAAi/G,MACA/7H,KAAA4wB,EAAA,KAGA,QAAAorG,IAAAlnH,GACAA,EAAA03G,EACA13G,EAAAwgF,EACAxgF,EAAAmrG,EACAnrG,EAAAmnH,EACAnnH,EAAAonH,EACApnH,EAAAmuF,EAAA,KAuLA,QAAAk5B,IAAA77G,EAAAxL,GACA,GAAAub,GAAAvb,EACAgjF,EAAAhjF,EAAAmnH,EACAnuH,EAAAuiB,EAAAm8F,CAEA1+G,GACAA,EAAAmyG,IAAA5vF,EAAAviB,EAAAmyG,EAAAnoB,EACAhqF,EAAAmuH,EAAAnkC,EAEAx3E,EAAAsQ,EAAAknE,EAGAA,EAAA00B,EAAA1+G,EACAuiB,EAAAm8F,EAAA10B,EACAznE,EAAA4rG,EAAAnkC,EAAAmoB,EACA5vF,EAAA4rG,IAAA5rG,EAAA4rG,EAAAzP,EAAAn8F,GACAynE,EAAAmoB,EAAA5vF,EAGA,QAAA+rG,IAAA97G,EAAAxL,GACA,GAAAub,GAAAvb,EACAgjF,EAAAhjF,EAAAmrG,EACAnyG,EAAAuiB,EAAAm8F,CAEA1+G,GACAA,EAAAmyG,IAAA5vF,EAAAviB,EAAAmyG,EAAAnoB,EACAhqF,EAAAmuH,EAAAnkC,EAEAx3E,EAAAsQ,EAAAknE,EAGAA,EAAA00B,EAAA1+G,EACAuiB,EAAAm8F,EAAA10B,EACAznE,EAAA4vF,EAAAnoB,EAAAmkC,EACA5rG,EAAA4vF,IAAA5vF,EAAA4vF,EAAAuM,EAAAn8F,GACAynE,EAAAmkC,EAAA5rG,EAGA,QAAAgsG,IAAAvnH,GACA,KAAAA,EAAAmrG,GAAAnrG,IAAAmrG,CACA,OAAAnrG,GAGA,QAAAwnH,IAAAp+F,EAAAuY,EAAAi/C,EAAAC,GACA,GAAA4mC,IAAA,WACAn4H,EAAAo4H,GAAAr7H,KAAAo7H,GAAA,CAOA,OANAA,GAAAr+F,OACAq+F,EAAA9lF,QACAi/C,GAAA+mC,GAAAF,EAAAr+F,EAAAuY,EAAAi/C,GACAC,GAAA8mC,GAAAF,EAAA9lF,EAAAvY,EAAAy3D,GACA+mC,GAAAx+F,EAAA95B,OAAAu4H,UAAAx7H,KAAAiD,GACAs4H,GAAAjmF,EAAAryC,OAAAu4H,UAAAx7H,KAAAiD,GACAm4H,EAGA,QAAAK,IAAA1+F,EAAAw3D,EAAAC,GACA,GAAA4mC,IAAA7mC,EAAAC,EAEA,OADA4mC,GAAAr+F,OACAq+F,EAGA,QAAAE,IAAAF,EAAAr+F,EAAAuY,EAAAomF,GACAN,EAAA,IAAAA,EAAA,GAIGA,EAAAr+F,OAAAuY,EACH8lF,EAAA,GAAAM,EAEAN,EAAA,GAAAM,GANAN,EAAA,GAAAM,EACAN,EAAAr+F,OACAq+F,EAAA9lF,SASA,QAAAqmF,IAAAP,EAAAv1B,EAAAC,EAAAC,EAAAC,GACA,GAUArU,GAVA/qF,EAAAw0H,EAAA,GACAlzH,EAAAkzH,EAAA,GACA7a,EAAA35G,EAAA,GACA45G,EAAA55G,EAAA,GACAg1H,EAAA1zH,EAAA,GACA2zH,EAAA3zH,EAAA,GACAirF,EAAA,EACAE,EAAA,EACAv2D,EAAA8+F,EAAArb,EACAvjF,EAAA6+F,EAAArb,CAIA,IADA7uB,EAAAkU,EAAA0a,EACAzjF,KAAA60D,EAAA,IAEA,GADAA,GAAA70D,EACAA,EAAA,GACA,GAAA60D,EAAAwB,EAAA,MACAxB,GAAA0B,MAAA1B,OACG,IAAA70D,EAAA,GACH,GAAA60D,EAAA0B,EAAA,MACA1B,GAAAwB,MAAAxB,GAIA,GADAA,EAAAoU,EAAAwa,EACAzjF,KAAA60D,EAAA,IAEA,GADAA,GAAA70D,EACAA,EAAA,GACA,GAAA60D,EAAA0B,EAAA,MACA1B,GAAAwB,MAAAxB,OACG,IAAA70D,EAAA,GACH,GAAA60D,EAAAwB,EAAA,MACAxB,GAAA0B,MAAA1B,GAIA,GADAA,EAAAmU,EAAA0a,EACAxjF,KAAA20D,EAAA,IAEA,GADAA,GAAA30D,EACAA,EAAA,GACA,GAAA20D,EAAAwB,EAAA,MACAxB,GAAA0B,MAAA1B,OACG,IAAA30D,EAAA,GACH,GAAA20D,EAAA0B,EAAA,MACA1B,GAAAwB,MAAAxB,GAIA,GADAA,EAAAqU,EAAAwa,EACAxjF,KAAA20D,EAAA,IAEA,GADAA,GAAA30D,EACAA,EAAA,GACA,GAAA20D,EAAA0B,EAAA,MACA1B,GAAAwB,MAAAxB,OACG,IAAA30D,EAAA,GACH,GAAA20D,EAAAwB,EAAA,MACAxB,GAAA0B,MAAA1B,GAGA,QAAAwB,EAAA,GAAAE,EAAA,KAEAF,EAAA,IAAAioC,EAAA,IAAA7a,EAAAptB,EAAAr2D,EAAA0jF,EAAArtB,EAAAn2D,IACAq2D,EAAA,IAAA+nC,EAAA,IAAA7a,EAAAltB,EAAAv2D,EAAA0jF,EAAAntB,EAAAr2D,KACA,OAGA,QAAA8+F,IAAAV,EAAAv1B,EAAAC,EAAAC,EAAAC,GACA,GAAAxR,GAAA4mC,EAAA,EACA,IAAA5mC,EAAA,QAEA,IASAunC,GACAC,EAVAznC,EAAA6mC,EAAA,GACAr+F,EAAAq+F,EAAAr+F,KACAuY,EAAA8lF,EAAA9lF,MACA2mF,EAAAl/F,EAAA,GACAm/F,EAAAn/F,EAAA,GACAo/F,EAAA7mF,EAAA,GACA8mF,EAAA9mF,EAAA,GACA+mF,GAAAJ,EAAAE,GAAA,EACA3f,GAAA0f,EAAAE,GAAA,CAIA,IAAAA,IAAAF,EAAA,CACA,GAAAG,EAAAx2B,GAAAw2B,GAAAt2B,EAAA,MACA,IAAAk2B,EAAAE,EAAA,CACA,GAAA5nC,GACA,GAAAA,EAAA,IAAAyR,EAAA,WADAzR,IAAA8nC,EAAAv2B,EAEAtR,IAAA6nC,EAAAr2B,OACK,CACL,GAAAzR,GACA,GAAAA,EAAA,GAAAuR,EAAA,WADAvR,IAAA8nC,EAAAr2B,EAEAxR,IAAA6nC,EAAAv2B,QAKA,IAFAi2B,GAAAE,EAAAE,IAAAC,EAAAF,GACAF,EAAAxf,EAAAuf,EAAAM,EACAN,GAAA,GAAAA,EAAA,EACA,GAAAE,EAAAE,EAAA,CACA,GAAA5nC,GACA,GAAAA,EAAA,IAAAyR,EAAA,WADAzR,KAAAuR,EAAAk2B,GAAAD,EAAAj2B,EAEAtR,KAAAwR,EAAAg2B,GAAAD,EAAA/1B,OACO,CACP,GAAAzR,GACA,GAAAA,EAAA,GAAAuR,EAAA,WADAvR,KAAAyR,EAAAg2B,GAAAD,EAAA/1B,EAEAxR,KAAAsR,EAAAk2B,GAAAD,EAAAj2B,OAGA,IAAAo2B,EAAAE,EAAA,CACA,GAAA7nC,GACA,GAAAA,EAAA,IAAAwR,EAAA,WADAxR,IAAAsR,EAAAk2B,EAAAl2B,EAAAm2B,EAEAxnC,IAAAuR,EAAAg2B,EAAAh2B,EAAAi2B,OACO,CACP,GAAAznC,GACA,GAAAA,EAAA,GAAAsR,EAAA,WADAtR,IAAAwR,EAAAg2B,EAAAh2B,EAAAi2B,EAEAxnC,IAAAqR,EAAAk2B,EAAAl2B,EAAAm2B,GAOA,MAFAZ,GAAA,GAAA7mC,EACA6mC,EAAA,GAAA5mC,GACA,EAGA,QAAA8nC,IAAAz2B,EAAAC,EAAAC,EAAAC,GAIA,IAHA,GACAo1B,GADA77H,EAAA87H,GAAA77H,OAGAD,KACAu8H,GAAAV,EAAAC,GAAA97H,GAAAsmG,EAAAC,EAAAC,EAAAC,IACA21B,GAAAP,EAAAv1B,EAAAC,EAAAC,EAAAC,KACAx6F,KAAAm7E,IAAAy0C,EAAA,MAAAA,EAAA,OAAAmB,IACA/wH,KAAAm7E,IAAAy0C,EAAA,MAAAA,EAAA,OAAAmB,WACAlB,IAAA97H,GAKA,QAAAi9H,IAAAC,GACA,MAAAlB,IAAAkB,EAAAx5H,QACAw5H,OACAjB,cAIA,QAAAkB,IAAAC,EAAAvB,GACA,GAAAqB,GAAAE,EAAAF,KACAG,EAAAxB,EAAAr+F,KACA8/F,EAAAzB,EAAA9lF,KAEA,OADAmnF,KAAAI,MAAAD,IAAAH,GACAI,EAAArxH,KAAAgoF,MAAAqpC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,KACAH,IAAAG,KAAAxB,EAAA,GAAAyB,EAAAzB,EAAA,KACAwB,EAAAxB,EAAA,GAAAyB,EAAAzB,EAAA,IACA5vH,KAAAgoF,MAAAopC,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,KAGA,QAAAE,IAAAH,EAAAvB,GACA,MAAAA,OAAAr+F,OAAA4/F,EAAAF,OAGA,QAAAM,IAAAJ,EAAAvB,GACA,MAAAA,OAAAr+F,OAAA4/F,EAAAF,OAGA,QAAAO,MACA,OAAAL,GAAAnB,EAAAj6H,EAAAuG,EAAAvI,EAAA,EAAA+F,EAAAi2H,GAAA/7H,OAA0DD,EAAA+F,IAAO/F,EACjE,IAAAo9H,EAAApB,GAAAh8H,MAAAuI,GAAA0zH,EAAAmB,EAAAnB,WAAAh8H,QAAA,CACA,GAAAyD,GAAA,GAAAkE,OAAAW,GACAmvC,EAAA,GAAA9vC,OAAAW,EACA,KAAAvG,EAAA,EAAiBA,EAAAuG,IAAOvG,EAAA0B,EAAA1B,KAAA01C,EAAA11C,GAAAm7H,GAAAC,EAAAtB,GAAAG,EAAAj6H,IAExB,KADA0B,EAAA2U,KAAA,SAAArY,EAAAgC,GAAiC,MAAA01C,GAAA11C,GAAA01C,EAAA13C,KACjCgC,EAAA,EAAiBA,EAAAuG,IAAOvG,EAAA01C,EAAA11C,GAAAi6H,EAAAv4H,EAAA1B,GACxB,KAAAA,EAAA,EAAiBA,EAAAuG,IAAOvG,EAAAi6H,EAAAj6H,GAAA01C,EAAA11C,IAKxB,QAAA07H,IAAAp3B,EAAAC,EAAAC,EAAAC,GACA,GACAk3B,GACAP,EACAF,EACAU,EACA3B,EACA4B,EACAn2H,EACAo2H,EACAC,EACA3mG,EACA4mG,EACAC,EAZAC,EAAAlC,GAAA/7H,OAaA8mG,GAAA,CAEA,KAAA42B,EAAA,EAAiBA,EAAAO,IAAgBP,EACjC,GAAAP,EAAApB,GAAA2B,GAAA,CAMA,IALAT,EAAAE,EAAAF,KACAjB,EAAAmB,EAAAnB,UACA2B,EAAA3B,EAAAh8H,OAGA29H,KACA9B,GAAAG,EAAA2B,KACA3B,EAAAv1H,OAAAk3H,EAAA,EAMA,KADAA,EAAA,EAAAC,EAAA5B,EAAAh8H,OACA29H,EAAAC,GACAzmG,EAAAomG,GAAAJ,EAAAtB,GAAAG,EAAA2B,KAAAI,EAAA5mG,EAAA,GAAA6mG,EAAA7mG,EAAA,GACA1vB,EAAA61H,GAAAH,EAAAtB,GAAAG,IAAA2B,EAAAC,KAAAC,EAAAp2H,EAAA,GAAAq2H,EAAAr2H,EAAA,IACAuE,KAAAm7E,IAAA42C,EAAAF,GAAAd,IAAA/wH,KAAAm7E,IAAA62C,EAAAF,GAAAf,MACAf,EAAAv1H,OAAAk3H,EAAA,EAAA9B,GAAAr7H,KAAAy7H,GAAAgB,EAAA9lG,EACAnrB,KAAAm7E,IAAA42C,EAAA13B,GAAA02B,IAAAv2B,EAAAw3B,EAAAjB,IAAA12B,EAAAr6F,KAAAm7E,IAAA02C,EAAAx3B,GAAA02B,GAAAe,EAAAt3B,GACAx6F,KAAAm7E,IAAA62C,EAAAx3B,GAAAu2B,IAAAx2B,EAAAw3B,EAAAhB,IAAA/wH,KAAAm7E,IAAA22C,EAAAt3B,GAAAu2B,GAAAc,EAAAt3B,EAAAC,GACAx6F,KAAAm7E,IAAA42C,EAAAx3B,GAAAw2B,IAAAiB,EAAA13B,EAAAy2B,IAAAx2B,EAAAv6F,KAAAm7E,IAAA02C,EAAAt3B,GAAAw2B,GAAAe,EAAAx3B,GACAt6F,KAAAm7E,IAAA62C,EAAA13B,GAAAy2B,IAAAgB,EAAA13B,EAAA02B,IAAA/wH,KAAAm7E,IAAA22C,EAAAx3B,GAAAy2B,GAAAc,EAAAx3B,EAAAC,GACA,YACAs3B,EAIAA,KAAA92B,GAAA,GAMA,GAAAA,EAAA,CACA,GAAAxpE,GAAAE,EAAAm8E,EAAAwH,EAAA9iD,GAEA,KAAAq/D,EAAA,EAAA52B,EAAA,KAAiC42B,EAAAO,IAAgBP,GACjDP,EAAApB,GAAA2B,MACAT,EAAAE,EAAAF,KACA3/F,EAAA2/F,EAAA,GAAA52B,EACA7oE,EAAAy/F,EAAA,GAAA32B,GACAqT,EAAAr8E,IAAAE,KACA2jF,MAAAxH,EAAA7S,EAAAq2B,GAIA,IAAAr2B,EAAA,CACA,GAAAo3B,IAAA73B,EAAAC,GAAA63B,GAAA93B,EAAAG,GAAA43B,GAAA73B,EAAAC,GAAA63B,GAAA93B,EAAAD,EACAQ,GAAAk1B,UAAAx7H,KACAq7H,GAAAr7H,KAAAy7H,GAAAgB,EAAAn2B,EAAAm2B,KAAAiB,EAAAC,IAAA,EACAtC,GAAAr7H,KAAAy7H,GAAAgB,EAAAkB,EAAAC,IAAA,EACAvC,GAAAr7H,KAAAy7H,GAAAgB,EAAAmB,EAAAC,IAAA,EACAxC,GAAAr7H,KAAAy7H,GAAAgB,EAAAoB,EAAAH,IAAA,IAMA,IAAAR,EAAA,EAAiBA,EAAAO,IAAgBP,GACjCP,EAAApB,GAAA2B,MACAP,EAAAnB,UAAAh8H,cACA+7H,IAAA2B,IAUA,QAAAY,MACAjD,GAAAh8H,MACAA,KAAA0nF,EACA1nF,KAAAwoF,EACAxoF,KAAAk/H,IACAl/H,KAAA49H,KACA59H,KAAAiwG,GAAA,KAGA,QAAAkvB,IAAAD,GACA,GAAAE,GAAAF,EAAAhD,EACAmD,EAAAH,EAAAj8B,CAEA,IAAAm8B,GAAAC,EAAA,CAEA,GAAAC,GAAAF,EAAAxB,KACA2B,EAAAL,EAAAtB,KACA4B,EAAAH,EAAAzB,IAEA,IAAA0B,IAAAE,EAAA,CAEA,GAAAzC,GAAAwC,EAAA,GACAvC,EAAAuC,EAAA,GACA7d,EAAA4d,EAAA,GAAAvC,EACApb,EAAA2d,EAAA,GAAAtC,EACAhtB,EAAAwvB,EAAA,GAAAzC,EACA9sB,EAAAuvB,EAAA,GAAAxC,EAEAlgH,EAAA,GAAA4kG,EAAAzR,EAAA0R,EAAA3R,EACA,MAAAlzF,IAAA2iH,IAAA,CAEA,GAAAC,GAAAhe,IAAAC,IACAge,EAAA3vB,IAAAC,IACAvoB,GAAAuoB,EAAAyvB,EAAA/d,EAAAge,GAAA7iH,EACA0rE,GAAAk5B,EAAAie,EAAA3vB,EAAA0vB,GAAA5iH,EAEAqjG,EAAAyf,GAAA/0H,OAAA,GAAAo0H,GACA9e,GAAA+e,MACA/e,EAAAyd,KAAA2B,EACApf,EAAAz4B,IAAAq1C,EACA5c,EAAA33B,GAAA23B,EAAAlQ,GAAAznB,EAAAw0C,GAAArwH,KAAAkoF,KAAAnN,IAAAc,KAEA02C,EAAA/e,QAKA,KAHA,GAAA7qC,GAAA,KACAxgE,EAAAqtG,GAAAvxF,EAEA9b,GACA,GAAAqrG,EAAA33B,EAAA1zE,EAAA0zE,GAAA23B,EAAA33B,IAAA1zE,EAAA0zE,GAAA23B,EAAAz4B,GAAA5yE,EAAA4yE,EAAA,CACA,IAAA5yE,EAAAmrG,EACA,CAAY3qC,EAAAxgE,EAAAonH,CAAiB,OAD7BpnH,IAAAmrG,MAEK,CACL,IAAAnrG,EAAAmnH,EACA,CAAY3mD,EAAAxgE,CAAe,OAD3BA,IAAAmnH,EAKA9Z,GAAA34F,OAAA8rD,EAAA6qC,GACA7qC,IAAAuqD,GAAA1f,MAGA,QAAA2f,IAAAZ,GACA,GAAA/e,GAAA+e,EAAA/e,MACAA,KACAA,EAAA+b,IAAA2D,GAAA1f,EAAAld,GACAkf,GAAA9+G,OAAA88G,GACAyf,GAAAz+H,KAAAg/G,GACA6b,GAAA7b,GACA+e,EAAA/e,OAAA,MAMA,QAAA4f,MACA/D,GAAAh8H,MACAA,KAAAu8H,KACAv8H,KAAA49H,KACA59H,KAAAmgH,OAAA,KAGA,QAAA6f,IAAApC,GACA,GAAAqC,GAAAC,GAAAr1H,OAAA,GAAAk1H,GAEA,OADAE,GAAArC,OACAqC,EAGA,QAAAE,IAAAF,GACAH,GAAAG,GACAG,GAAA/8H,OAAA48H,GACAC,GAAA/+H,KAAA8+H,GACAjE,GAAAiE,GAGA,QAAAI,IAAAJ,GACA,GAAA9f,GAAA8f,EAAA9f,OACAz4B,EAAAy4B,EAAAz4B,EACAc,EAAA23B,EAAAlQ,GACA4sB,GAAAn1C,EAAAc,GACA7kB,EAAAs8D,EAAA/D,EACArpG,EAAAotG,EAAAh9B,EACAq9B,GAAAL,EAEAE,IAAAF,EAGA,KADA,GAAAb,GAAAz7D,EACAy7D,EAAAjf,QACAxzG,KAAAm7E,IAAAJ,EAAA03C,EAAAjf,OAAAz4B,GAAAg2C,IACA/wH,KAAAm7E,IAAAU,EAAA42C,EAAAjf,OAAAlQ,IAAAytB,IACA/5D,EAAAy7D,EAAAlD,EACAoE,EAAAn8G,QAAAi7G,GACAe,GAAAf,GACAA,EAAAz7D,CAGA28D,GAAAn8G,QAAAi7G,GACAU,GAAAV,EAGA,KADA,GAAAC,GAAAxsG,EACAwsG,EAAAlf,QACAxzG,KAAAm7E,IAAAJ,EAAA23C,EAAAlf,OAAAz4B,GAAAg2C,IACA/wH,KAAAm7E,IAAAU,EAAA62C,EAAAlf,OAAAlQ,IAAAytB,IACA7qG,EAAAwsG,EAAAp8B,EACAq9B,EAAAn/H,KAAAk+H,GACAc,GAAAd,GACAA,EAAAxsG,CAGAytG,GAAAn/H,KAAAk+H,GACAS,GAAAT,EAEA,IACAkB,GADAC,EAAAF,EAAA3/H,MAEA,KAAA4/H,EAAA,EAAgBA,EAAAC,IAAcD,EAC9BlB,EAAAiB,EAAAC,GACAnB,EAAAkB,EAAAC,EAAA,GACA9D,GAAA4C,EAAA9C,KAAA6C,EAAAxB,KAAAyB,EAAAzB,KAAAf,EAGAuC,GAAAkB,EAAA,GACAjB,EAAAiB,EAAAE,EAAA,GACAnB,EAAA9C,KAAAD,GAAA8C,EAAAxB,KAAAyB,EAAAzB,KAAA,KAAAf,GAEAsC,GAAAC,GACAD,GAAAE,GAGA,QAAAoB,IAAA7C,GASA,IARA,GAEAwB,GACAC,EACAqB,EACAC,EALAj5C,EAAAk2C,EAAA,GACAgD,EAAAhD,EAAA,GAKA9oH,EAAAsrH,GAAAxvG,EAEA9b,GAEA,IADA4rH,EAAAG,GAAA/rH,EAAA8rH,GAAAl5C,GACAg2C,GAAA5oH,IAAAmrG,MAAuC,CAEvC,MADA0gB,EAAAj5C,EAAAo5C,GAAAhsH,EAAA8rH,IACAlD,IAMO,CACPgD,GAAAhD,IACA0B,EAAAtqH,EAAAonH,EACAmD,EAAAvqH,GACS6rH,GAAAjD,IACT0B,EAAAtqH,EACAuqH,EAAAvqH,EAAAmuF,GAEAm8B,EAAAC,EAAAvqH,CAEA,OAfA,IAAAA,EAAAmnH,EAAA,CACAmD,EAAAtqH,CACA,OAEAA,IAAAmnH,EAgBA0B,GAAAC,EACA,IAAAmD,GAAAf,GAAApC,EAGA,IAFAwC,GAAA52G,OAAA41G,EAAA2B,GAEA3B,GAAAC,EAAA,CAEA,GAAAD,IAAAC,EAOA,MANAS,IAAAV,GACAC,EAAAW,GAAAZ,EAAAxB,MACAwC,GAAA52G,OAAAu3G,EAAA1B,GACA0B,EAAAxE,KAAA8C,EAAA9C,KAAAD,GAAA8C,EAAAxB,KAAAmD,EAAAnD,MACAuB,GAAAC,OACAD,IAAAE,EAIA,KAAAA,EAEA,YADA0B,EAAAxE,KAAAD,GAAA8C,EAAAxB,KAAAmD,EAAAnD,MAKAkC,IAAAV,GACAU,GAAAT,EAEA,IAAAC,GAAAF,EAAAxB,KACAlc,EAAA4d,EAAA,GACA3d,EAAA2d,EAAA,GACAvC,EAAAa,EAAA,GAAAlc,EACAsb,EAAAY,EAAA,GAAAjc,EACA6d,EAAAH,EAAAzB,KACA5tB,EAAAwvB,EAAA,GAAA9d,EACAzR,EAAAuvB,EAAA,GAAA7d,EACA7kG,EAAA,GAAAigH,EAAA9sB,EAAA+sB,EAAAhtB,GACAgxB,EAAAjE,IAAAC,IACA2C,EAAA3vB,IAAAC,IACA4sB,IAAA5sB,EAAA+wB,EAAAhE,EAAA2C,GAAA7iH,EAAA4kG,GAAAqb,EAAA4C,EAAA3vB,EAAAgxB,GAAAlkH,EAAA6kG,EAEA8a,IAAA4C,EAAA9C,KAAA+C,EAAAE,EAAA3C,GACAkE,EAAAxE,KAAAD,GAAAgD,EAAA1B,EAAA,KAAAf,GACAwC,EAAA9C,KAAAD,GAAAsB,EAAA4B,EAAA,KAAA3C,GACAsC,GAAAC,GACAD,GAAAE,IAGA,QAAAwB,IAAA3B,EAAA0B,GACA,GAAAhD,GAAAsB,EAAAtB,KACAqD,EAAArD,EAAA,GACAsD,EAAAtD,EAAA,GACAuD,EAAAD,EAAAN,CAEA,KAAAO,EAAA,MAAAF,EAEA,IAAA7B,GAAAF,EAAAhD,CACA,KAAAkD,EAAA,QAAApgE,IAEA4+D,GAAAwB,EAAAxB,IACA,IAAAwD,GAAAxD,EAAA,GACAyD,EAAAzD,EAAA,GACA0D,EAAAD,EAAAT,CAEA,KAAAU,EAAA,MAAAF,EAEA,IAAAG,GAAAH,EAAAH,EACAO,EAAA,EAAAL,EAAA,EAAAG,EACAj4H,EAAAk4H,EAAAD,CAEA,OAAAE,KAAAn4H,EAAAsD,KAAAkoF,KAAAxrF,IAAA,EAAAm4H,GAAAD,MAAA,EAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GAEAA,EAAAG,GAAA,EAGA,QAAAN,IAAA5B,EAAA0B,GACA,GAAAvB,GAAAH,EAAAj8B,CACA,IAAAo8B,EAAA,MAAAwB,IAAAxB,EAAAuB,EACA,IAAAhD,GAAAsB,EAAAtB,IACA,OAAAA,GAAA,KAAAgD,EAAAhD,EAAA,GAAA5+D,IAUA,QAAAyiE,IAAA15H,EAAAsB,EAAAO,GACA,OAAA7B,EAAA,GAAA6B,EAAA,KAAAP,EAAA,GAAAtB,EAAA,KAAAA,EAAA,GAAAsB,EAAA,KAAAO,EAAA,GAAA7B,EAAA,IAGA,QAAA25H,IAAA35H,EAAAsB,GACA,MAAAA,GAAA,GAAAtB,EAAA,IACAsB,EAAA,GAAAtB,EAAA,GAGA,QAAA45H,IAAAC,EAAAlhC,GACA,GACAhZ,GACAc,EACA23B,EAHAyd,EAAAgE,EAAA7oH,KAAA2oH,IAAA72H,KAUA,KALA2xH,MACAE,GAAA,GAAAp0H,OAAAs5H,EAAAjhI,QACAy/H,GAAA,GAAArE,IACA5Z,GAAA,GAAA4Z,MAIA,GADA5b,EAAA0f,GACAjC,KAAAzd,GAAAyd,EAAA,GAAAzd,EAAA33B,GAAAo1C,EAAA,KAAAzd,EAAA33B,GAAAo1C,EAAA,GAAAzd,EAAAz4B,GACAk2C,EAAA,KAAAl2C,GAAAk2C,EAAA,KAAAp1C,IACAi4C,GAAA7C,GACAl2C,EAAAk2C,EAAA,GAAAp1C,EAAAo1C,EAAA,IAEAA,EAAAgE,EAAA/2H,UACK,KAAAs1G,EAGL,KAFAkgB,IAAAlgB,EAAA+e,KAQA,GAFAf,KAEAz9B,EAAA,CACA,GAAAsG,IAAAtG,EAAA,MACAuG,GAAAvG,EAAA,MACAwG,GAAAxG,EAAA,MACAyG,GAAAzG,EAAA,KACA+8B,IAAAz2B,EAAAC,EAAAC,EAAAC,GACAi3B,GAAAp3B,EAAAC,EAAAC,EAAAC,GAGAnnG,KAAAw8H,SACAx8H,KAAA08H,SAEA0D,GACAje,GACAqa,GACAE,GAAA,KAiIA,QAAAmF,IAAAn3H,EAAAvL,EAAAm/B,GACAt+B,KAAA0K,SACA1K,KAAAb,OACAa,KAAAs+B,YAGA,QAAAwjG,IAAAx3C,EAAA5C,EAAAc,GACAxoF,KAAAsqF,IACAtqF,KAAA0nF,IACA1nF,KAAAwoF,IA4CA,QAAAu5C,IAAAjtH,GACA,MAAAA,GAAAktH,QAAAC,GAGA,QAAAC,MACAtjI,EAAAuT,MAAA8+E,2BASA,QAAAkxC,MACA,OAAAvjI,EAAAuT,MAAAy/E,OAGA,QAAAwwC,MACA,GAAAhzB,GAAAvyF,EAAA1c,EAAAH,IASA,OARAG,aAAAkiI,aACAliI,IAAAigG,iBAAAjgG,EACAivG,EAAAjvG,EAAAkgG,MAAAnJ,QAAAzvF,MACAoV,EAAA1c,EAAAmgG,OAAApJ,QAAAzvF,QAEA2nG,EAAAjvG,EAAAmiI,YACAzlH,EAAA1c,EAAAoiI,gBAEA,MAAAnzB,EAAAvyF,IAGA,QAAA2lH,MACA,MAAAxiI,MAAAgiI,QAAAC,GAx8eA,GAAAjwF,IAAA,QAEA21C,GAAA,SAAA5/E,EAAAsB,GACA,MAAAtB,GAAAsB,GAAA,EAAAtB,EAAAsB,EAAA,EAAAtB,GAAAsB,EAAA,EAAA4kF,KAGAsnC,GAAA,SAAAzwB,GAEA,MADA,KAAAA,EAAAnkG,SAAAmkG,EAAAtd,EAAAsd,KAEA5mE,KAAA,SAAAn2B,EAAA2/E,EAAA+vC,EAAAgL,GAGA,IAFA,MAAAhL,MAAA,GACA,MAAAgL,MAAA16H,EAAApH,QACA82H,EAAAgL,GAAA,CACA,GAAA19D,GAAA0yD,EAAAgL,IAAA,CACA39B,GAAA/8F,EAAAg9D,GAAA2iB,GAAA,EAAA+vC,EAAA1yD,EAAA,EACA09D,EAAA19D,EAEA,MAAA0yD,IAEAhhF,MAAA,SAAA1uC,EAAA2/E,EAAA+vC,EAAAgL,GAGA,IAFA,MAAAhL,MAAA,GACA,MAAAgL,MAAA16H,EAAApH,QACA82H,EAAAgL,GAAA,CACA,GAAA19D,GAAA0yD,EAAAgL,IAAA,CACA39B,GAAA/8F,EAAAg9D,GAAA2iB,GAAA,EAAA+6C,EAAA19D,EACA0yD,EAAA1yD,EAAA,EAEA,MAAA0yD,MAWAiL,GAAAnN,GAAA5tC,IACAsgC,GAAAya,GAAAjsF,MACAksF,GAAAD,GAAAxkG,KAEA86B,GAAA,SAAA5gB,EAAAqvC,GACA,MAAAA,MAAA1vC,EAEA,KADA,GAAAr3C,GAAA,EAAA+F,EAAA2xC,EAAAz3C,OAAA,EAAA0vB,EAAA+nB,EAAA,GAAA4gB,EAAA,GAAA1wD,OAAA7B,EAAA,IAAAA,GACA/F,EAAA+F,GAAAuyD,EAAAt4D,GAAA+mF,EAAAp3D,IAAA+nB,IAAA13C,GACA,OAAAs4D,IAOA4pE,GAAA,SAAA76H,EAAAsB,EAAAo+E,GACA,GAAAo7C,GAAAC,EAAAC,EAAAhF,EAAAiF,EAAAj7H,EAAApH,OAAAsiI,EAAA55H,EAAA1I,OAAAiJ,EAAA,GAAAtB,OAAA06H,EAAAC,EAEA,KADA,MAAAx7C,MAAA1vC,GACA8qF,EAAAE,EAAA,EAAmBF,EAAAG,IAASH,EAAA,IAAA9E,EAAAh2H,EAAA86H,GAAAC,EAAA,EAA+BA,EAAAG,IAASH,IAAAC,EAAAn5H,EAAAm5H,GAAAt7C,EAAAs2C,EAAA10H,EAAAy5H,GACpE,OAAAl5H,IAGAs5H,GAAA,SAAAn7H,EAAAsB,GACA,MAAAA,GAAAtB,GAAA,EAAAsB,EAAAtB,EAAA,EAAAsB,GAAAtB,EAAA,EAAAkmF,KAGAl8D,GAAA,SAAA21D,GACA,cAAAA,EAAAuG,KAAAvG,GAGAy7C,GAAA,SAAA/qF,EAAAqvC,GACA,GAEA1/E,GACA+U,EAHArW,EAAA2xC,EAAAz3C,OACAsI,EAAA,EAGAif,EAAA,EACAxnB,GAAA,EACAgC,EAAA,CAEA,UAAA+kF,EACA,OAAA/mF,EAAA+F,GACAE,MAAAoB,EAAAgqB,GAAAqmB,EAAA13C,OACAoc,EAAA/U,EAAAkB,EACAA,GAAA6T,IAAApa,EACAwlB,GAAApL,GAAA/U,EAAAkB,QAMA,QAAAvI,EAAA+F,GACAE,MAAAoB,EAAAgqB,GAAA01D,EAAArvC,EAAA13C,KAAA03C,OACAt7B,EAAA/U,EAAAkB,EACAA,GAAA6T,IAAApa,EACAwlB,GAAApL,GAAA/U,EAAAkB,GAKA,IAAAvG,EAAA,QAAAwlB,IAAAxlB,EAAA,IAGA0gI,GAAA,SAAAhrF,EAAAqvC,GACA,GAAA9zC,GAAAwvF,GAAA/qF,EAAAqvC,EACA,OAAA9zC,GAAAhnC,KAAAkoF,KAAAlhD,MAGA+sD,GAAA,SAAAtoD,EAAAqvC,GACA,GAEA1/E,GACAsB,EACAO,EAJAlJ,GAAA,EACA+F,EAAA2xC,EAAAz3C,MAKA,UAAA8mF,EAAA,CACA,OAAA/mF,EAAA+F,GAAA,UAAA4C,EAAA+uC,EAAA13C,KAAA2I,KAAA,CAA2DtB,EAAA6B,EAAAP,CAAW,OACtE,OAAA3I,EAAA+F,GAAA,OAAA4C,EAAA+uC,EAAA13C,MACAqH,EAAAsB,IAAAtB,EAAAsB,GACAO,EAAAP,IAAAO,EAAAP,QAIA,CACA,OAAA3I,EAAA+F,GAAA,UAAA4C,EAAAo+E,EAAArvC,EAAA13C,KAAA03C,KAAA/uC,KAAA,CAAwEtB,EAAA6B,EAAAP,CAAW,OACnF,OAAA3I,EAAA+F,GAAA,OAAA4C,EAAAo+E,EAAArvC,EAAA13C,KAAA03C,MACArwC,EAAAsB,IAAAtB,EAAAsB,GACAO,EAAAP,IAAAO,EAAAP,IAIA,OAAAtB,EAAA6B,IAGAwuC,GAAA9vC,MAAAmG,UAEAiY,GAAA0xB,GAAA1xB,MACA3f,GAAAqxC,GAAArxC,IAEAy2E,GAAA,SAAAkK,GACA,kBACA,MAAAA,KAIA9nE,GAAA,SAAA8nE,GACA,MAAAA,IAGAutB,GAAA,SAAA7sG,EAAAwuC,EAAAotB,GACA57D,KAAAwuC,KAAAotB,GAAAv9D,EAAAuB,UAAArH,QAAA,GAAAi2C,EAAAxuC,IAAA,KAAA3B,EAAA,KAAAu9D,CAMA,KAJA,GAAAtjE,IAAA,EACA+F,EAAA,EAAAkG,KAAAC,IAAA,EAAAD,KAAAqzE,MAAAppC,EAAAxuC,GAAA47D,IACAqhB,EAAA,GAAA/8E,OAAA7B,KAEA/F,EAAA+F,GACA4+E,EAAA3kF,GAAA0H,EAAA1H,EAAAsjE,CAGA,OAAAqhB,IAGA8C,GAAAx7E,KAAAkoF,KAAA,IACAzM,GAAAz7E,KAAAkoF,KAAA,IACAxM,GAAA17E,KAAAkoF,KAAA,GAEA5L,GAAA,SAAA7gF,EAAAwuC,EAAAm6B,GACA,GAAA/M,GAAA4jB,EAAAx/E,EAAAwuC,EAAAm6B,EACA,OAAAkkC,IACAtoG,KAAAqzE,KAAA53E,EAAA47D,KACAr3D,KAAAszE,MAAArpC,EAAAotB,OAAA,EACAA,IAcAq/D,GAAA,SAAAlqF,GACA,MAAAxsC,MAAAqzE,KAAArzE,KAAAs7E,IAAA9uC,EAAAx4C,QAAAgM,KAAA22H,KAAA,GAGAC,GAAA,WAKA,QAAAA,GAAAzyH,GACA,GAAApQ,GAEAgnF,EADAjhF,EAAAqK,EAAAnQ,OAEAw4C,EAAA,GAAA7wC,OAAA7B,EAEA,KAAA/F,EAAA,EAAeA,EAAA+F,IAAO/F,EACtBy4C,EAAAz4C,GAAA+G,EAAAqJ,EAAApQ,KAAAoQ,EAGA,IAAAy2F,GAAApe,EAAAhwC,GACA6tD,EAAAO,EAAA,GACAL,EAAAK,EAAA,GACAi8B,EAAA3Z,EAAA1wE,EAAA6tD,EAAAE,EAGA5+F,OAAAoD,QAAA83H,OAAAv6C,GAAA+d,EAAAE,EAAAs8B,GAIA,KADA,GAAAv6H,GAAAu6H,EAAA7iI,OACA6iI,EAAA,IAAAx8B,GAAAw8B,EAAAh5F,UAAAvhC,CACA,MAAAu6H,EAAAv6H,EAAA,IAAAi+F,GAAAs8B,EAAA34H,QAAA5B,CAEA,IACAw6H,GADAC,EAAA,GAAAp7H,OAAAW,EAAA,EAIA,KAAAvI,EAAA,EAAeA,GAAAuI,IAAQvI,EACvB+iI,EAAAC,EAAAhjI,MACA+iI,EAAAz8B,GAAAtmG,EAAA,EAAA8iI,EAAA9iI,EAAA,GAAAsmG,EACAy8B,EAAAv8B,GAAAxmG,EAAAuI,EAAAu6H,EAAA9iI,GAAAwmG,CAIA,KAAAxmG,EAAA,EAAeA,EAAA+F,IAAO/F,EACtBgnF,EAAAvuC,EAAAz4C,GACAsmG,GAAAtf,MAAAwf,GACAw8B,EAAAzb,GAAAub,EAAA97C,EAAA,EAAAz+E,IAAA9H,KAAA2P,EAAApQ,GAIA,OAAAgjI,GA7CA,GAAAj8H,GAAAmY,GACAupE,EAAAuX,GACAmpB,EAAAwZ,EA0DA,OAZAE,GAAA97H,MAAA,SAAAmpB,GACA,MAAA5oB,WAAArH,QAAA8G,EAAA,kBAAAmpB,KAAA4sD,GAAA5sD,GAAA2yG,GAAA97H,GAGA87H,EAAAp6C,OAAA,SAAAv4D,GACA,MAAA5oB,WAAArH,QAAAwoF,EAAA,kBAAAv4D,KAAA4sD,IAAA5sD,EAAA,GAAAA,EAAA,KAAA2yG,GAAAp6C,GAGAo6C,EAAA3Z,WAAA,SAAAh5F,GACA,MAAA5oB,WAAArH,QAAAkpH,EAAA,kBAAAj5F,KAAA4sD,GAAAl1E,MAAAoD,QAAAklB,GAAAlK,GAAAnf,KAAAqpB,MAAA2yG,GAAA1Z,GAGA0Z,GAGA1Z,GAAA,SAAAzxE,EAAA/nB,EAAAo3D,GAEA,GADA,MAAAA,MAAA11D,IACAtrB,EAAA2xC,EAAAz3C,OAAA,CACA,IAAA0vB,OAAA,GAAA5pB,EAAA,SAAAghF,EAAArvC,EAAA,KAAAA,EACA,IAAA/nB,GAAA,SAAAo3D,EAAArvC,EAAA3xC,EAAA,GAAAA,EAAA,EAAA2xC,EACA,IAAA3xC,GACAoW,GAAApW,EAAA,GAAA4pB,EACA3vB,EAAAiM,KAAAszE,MAAApjE,GACA9U,GAAA0/E,EAAArvC,EAAA13C,KAAA03C,EAEA,OAAArwC,KADA0/E,EAAArvC,EAAA13C,EAAA,GAAAA,EAAA,EAAA03C,GACArwC,IAAA8U,EAAAnc,KAGAijI,GAAA,SAAAxqF,EAAA0lC,EAAAjyE,GAEA,MADAusC,GAAApyC,GAAAQ,KAAA4xC,EAAApnB,IAAAhZ,KAAA4uE,IACAh7E,KAAAqzE,MAAApzE,EAAAiyE,IAAA,GAAAgrC,GAAA1wE,EAAA,KAAA0wE,GAAA1wE,EAAA,MAAAxsC,KAAAq7E,IAAA7uC,EAAAx4C,QAAA,QAGAijI,GAAA,SAAAzqF,EAAA0lC,EAAAjyE,GACA,MAAAD,MAAAqzE,MAAApzE,EAAAiyE,IAAA,IAAAukD,GAAAjqF,GAAAxsC,KAAAq7E,IAAA7uC,EAAAx4C,QAAA,QAGAiM,GAAA,SAAAwrC,EAAAqvC,GACA,GAEA1/E,GACAsB,EAHA3I,GAAA,EACA+F,EAAA2xC,EAAAz3C,MAIA,UAAA8mF,EAAA,CACA,OAAA/mF,EAAA+F,GAAA,UAAA4C,EAAA+uC,EAAA13C,KAAA2I,KAAA,CAA2DtB,EAAAsB,CAAO,OAClE,OAAA3I,EAAA+F,GAAA,OAAA4C,EAAA+uC,EAAA13C,KAAA2I,EAAAtB,MAAAsB,OAGA,CACA,OAAA3I,EAAA+F,GAAA,UAAA4C,EAAAo+E,EAAArvC,EAAA13C,KAAA03C,KAAA/uC,KAAA,CAAwEtB,EAAAsB,CAAO,OAC/E,OAAA3I,EAAA+F,GAAA,OAAA4C,EAAAo+E,EAAArvC,EAAA13C,KAAA03C,KAAA/uC,EAAAtB,MAAAsB,GAGA,MAAAtB,IAGA42E,GAAA,SAAAvmC,EAAAqvC,GACA,GAEA1/E,GAFAmgB,EAAA,EACAzhB,EAAA2xC,EAAAz3C,OAEAD,GAAA,EACAgC,EAAA+D,CAEA,UAAAghF,EACA,OAAA/mF,EAAA+F,GAAAE,MAAAoB,EAAAgqB,GAAAqmB,EAAA13C,OAA6DgC,EAA7DwlB,GAAAngB,MAIA,QAAArH,EAAA+F,GAAAE,MAAAoB,EAAAgqB,GAAA01D,EAAArvC,EAAA13C,KAAA03C,OAA0E11C,EAA1EwlB,GAAAngB,CAGA,IAAArF,EAAA,MAAAwlB,GAAAxlB,GAGAmhI,GAAA,SAAAzrF,EAAAqvC,GACA,GAEA1/E,GAFA+7H,KACAr9H,EAAA2xC,EAAAz3C,OAEAD,GAAA,CAEA,UAAA+mF,EACA,OAAA/mF,EAAA+F,GAAAE,MAAAoB,EAAAgqB,GAAAqmB,EAAA13C,MAAAojI,EAAA3iI,KAAA4G,OAIA,QAAArH,EAAA+F,GAAAE,MAAAoB,EAAAgqB,GAAA01D,EAAArvC,EAAA13C,KAAA03C,MAAA0rF,EAAA3iI,KAAA4G,EAGA,OAAA8hH,IAAAia,EAAA/qH,KAAA4uE,IAAA,KAGAzD,GAAA,SAAAvlB,GAQA,IAPA,GACA11D,GAGA0J,EACAylC,EALA3xC,EAAAk4D,EAAAh+D,OAEAD,GAAA,EACAgC,EAAA,IAIAhC,EAAA+F,GAAA/D,GAAAi8D,EAAAj+D,GAAAC,MAGA,KAFAgS,EAAA,GAAArK,OAAA5F,KAEA+D,GAAA,GAGA,IAFA2xC,EAAAumB,EAAAl4D,GACAwC,EAAAmvC,EAAAz3C,SACAsI,GAAA,GACA0J,IAAAjQ,GAAA01C,EAAAnvC,EAIA,OAAA0J,IAGAksE,GAAA,SAAAzmC,EAAAqvC,GACA,GAEA1/E,GACAsB,EAHA3I,GAAA,EACA+F,EAAA2xC,EAAAz3C,MAIA,UAAA8mF,EAAA,CACA,OAAA/mF,EAAA+F,GAAA,UAAA4C,EAAA+uC,EAAA13C,KAAA2I,KAAA,CAA2DtB,EAAAsB,CAAO,OAClE,OAAA3I,EAAA+F,GAAA,OAAA4C,EAAA+uC,EAAA13C,KAAAqH,EAAAsB,IAAAtB,EAAAsB,OAGA,CACA,OAAA3I,EAAA+F,GAAA,UAAA4C,EAAAo+E,EAAArvC,EAAA13C,KAAA03C,KAAA/uC,KAAA,CAAwEtB,EAAAsB,CAAO,OAC/E,OAAA3I,EAAA+F,GAAA,OAAA4C,EAAAo+E,EAAArvC,EAAA13C,KAAA03C,KAAArwC,EAAAsB,IAAAtB,EAAAsB,GAGA,MAAAtB,IAGAg8H,GAAA,SAAA3rF,EAAAsrB,GAEA,IADA,GAAAhjE,GAAAgjE,EAAA/iE,OAAAqjI,EAAA,GAAA17H,OAAA5H,GACAA,KAAAsjI,EAAAtjI,GAAA03C,EAAAsrB,EAAAhjE,GACA,OAAAsjI,IAGAC,GAAA,SAAA7rF,EAAA0sD,GACA,GAAAr+F,EAAA2xC,EAAAz3C,OAAA,CACA,GACA8F,GAEAy9H,EAHAxjI,EAAA,EAEAgC,EAAA,EAEAyhI,EAAA/rF,EAAA11C,EAIA,KAFAoiG,MAAAnd,MAEAjnF,EAAA+F,IAAAq+F,EAAAo/B,EAAA9rF,EAAA13C,GAAAyjI,GAAA,OAAAr/B,EAAAq/B,UAAAD,EAAAxhI,EAAAhC,EAEA,YAAAokG,EAAAq/B,KAAAzhI,EAAA,SAGA0yE,GAAA,SAAAh9B,EAAAysE,EAAAC,GAKA,IAJA,GACA75B,GACAvqF,EAFAuI,GAAA,MAAA67G,EAAA1sE,EAAAz3C,OAAAmkH,IAAAD,EAAA,MAAAA,EAAA,GAAAA,GAIA57G,GACAvI,EAAAiM,KAAAiuE,SAAA3xE,IAAA,EACAgiF,EAAA7yC,EAAAnvC,EAAA47G,GACAzsE,EAAAnvC,EAAA47G,GAAAzsE,EAAA13C,EAAAmkH,GACAzsE,EAAA13C,EAAAmkH,GAAA55B,CAGA,OAAA7yC,IAGA2mC,GAAA,SAAA3mC,EAAAqvC,GACA,GAEA1/E,GAFAmgB,EAAA,EACAzhB,EAAA2xC,EAAAz3C,OAEAD,GAAA,CAEA,UAAA+mF,EACA,OAAA/mF,EAAA+F,IAAAsB,GAAAqwC,EAAA13C,MAAAwnB,GAAAngB,OAIA,QAAArH,EAAA+F,IAAAsB,GAAA0/E,EAAArvC,EAAA13C,KAAA03C,MAAAlwB,GAAAngB,EAGA,OAAAmgB,IAGAk8G,GAAA,SAAAhtC,GACA,KAAA3wF,EAAA2wF,EAAAz2F,QAAA,QACA,QAAAD,IAAA,EAAAuI,EAAA41E,GAAAuY,EAAAz2F,GAAAyjI,EAAA,GAAA97H,OAAAW,KAAqEvI,EAAAuI,GACrE,OAAAxC,GAAA/D,GAAA,EAAA2jG,EAAA+9B,EAAA1jI,GAAA,GAAA4H,OAAA7B,KAA0D/D,EAAA+D,GAC1D4/F,EAAA3jG,GAAA00F,EAAA10F,GAAAhC,EAGA,OAAA0jI,IAOAjiD,GAAA,WACA,MAAAiiD,IAAAp8H,YAGA0iF,GAAApiF,MAAAmG,UAAAiY,MAEA4iE,GAAA,SAAA5B,GACA,MAAAA,IAGAtpD,GAAA,EACAqY,GAAA,EACA8zC,GAAA,EACArsD,GAAA,EACAssD,GAAA,KAqKA/mF,IAAYgE,MAAA,aAuBZyjF,GAAAz8E,UAAAu8E,EAAAv8E,WACAwU,YAAAioE,EACAr5E,GAAA,SAAA86E,EAAAhuE,GACA,GAEAssE,GAFAr6D,EAAA5wB,KAAA4wB,EACAyzG,EAAAl5C,EAAAwB,EAAA,GAAA/7D,GAEAlwB,GAAA,EACA+F,EAAA49H,EAAA1jI,MAGA,OAAAqH,UAAArH,OAAA,IAOA,SAAAge,GAAA,kBAAAA,GAAA,SAAArZ,OAAA,qBAAAqZ,EACA,QAAAje,EAAA+F,GACA,GAAAwkF,GAAA0B,EAAA03C,EAAA3jI,IAAAvB,KAAAyxB,EAAAq6D,GAAA5+E,EAAAukB,EAAAq6D,GAAA0B,EAAAn/E,KAAAmR,OACA,UAAAA,EAAA,IAAAssE,IAAAr6D,KAAAq6D,GAAA5+E,EAAAukB,EAAAq6D,GAAA0B,EAAAn/E,KAAA,KAGA,OAAAxN,MAZA,OAAAU,EAAA+F,GAAA,IAAAwkF,GAAA0B,EAAA03C,EAAA3jI,IAAAvB,QAAA8rF,EAAAtpF,EAAAivB,EAAAq6D,GAAA0B,EAAAn/E,OAAA,MAAAy9E,KAcAhkB,KAAA,WACA,GAAAA,MAAiBr2C,EAAA5wB,KAAA4wB,CACjB,QAAAq6D,KAAAr6D,GAAAq2C,EAAAgkB,GAAAr6D,EAAAq6D,GAAAvkE,OACA,WAAAwkE,GAAAjkB,IAEA1/D,KAAA,SAAApI,EAAA8tF,GACA,IAAAxmF,EAAAuB,UAAArH,OAAA,YAAA8F,GAAAwkF,EAAA32E,EAAA,GAAAhM,OAAA7B,GAAA/F,EAAA,EAAkFA,EAAA+F,IAAO/F,EAAA4T,EAAA5T,GAAAsH,UAAAtH,EAAA,EACzF,KAAAV,KAAA4wB,EAAAtpB,eAAAnI,GAAA,SAAAmG,OAAA,iBAAAnG,EACA,KAAA8rF,EAAAjrF,KAAA4wB,EAAAzxB,GAAAuB,EAAA,EAAA+F,EAAAwkF,EAAAtqF,OAA+CD,EAAA+F,IAAO/F,EAAAuqF,EAAAvqF,GAAA+G,MAAAQ,MAAAglF,EAAA34E,IAEtDrM,MAAA,SAAA9I,EAAA8tF,EAAA34E,GACA,IAAAtU,KAAA4wB,EAAAtpB,eAAAnI,GAAA,SAAAmG,OAAA,iBAAAnG,EACA,QAAA8rF,GAAAjrF,KAAA4wB,EAAAzxB,GAAAuB,EAAA,EAAA+F,EAAAwkF,EAAAtqF,OAAmDD,EAAA+F,IAAO/F,EAAAuqF,EAAAvqF,GAAA+G,MAAAQ,MAAAglF,EAAA34E,IAuB1D,IAAAo3E,IAAA,+BAEA44C,IACAnyF,IAAA,6BACAu5C,SACA64C,MAAA,+BACAC,IAAA,uCACAC,MAAA,iCAGAn9G,GAAA,SAAA9Z,GACA,GAAAgxE,GAAAhxE,GAAA,GAAA9M,EAAA89E,EAAAr3E,QAAA,IAEA,OADAzG,IAAA,cAAA89E,EAAAhxE,EAAAkZ,MAAA,EAAAhmB,MAAA8M,IAAAkZ,MAAAhmB,EAAA,IACA4jI,GAAAh9H,eAAAk3E,IAA8CjoC,MAAA+tF,GAAA9lD,GAAAqN,MAAAr+E,GAAuCA,GAmBrFk3H,GAAA,SAAAl3H,GACA,GAAAo+E,GAAAtkE,GAAA9Z,EACA,QAAAo+E,EAAAC,MACAF,EACAL,GAAAM,IAGAI,GAAA,CAUAD,GAAAt9E,UAAAq9E,EAAAr9E,WACAwU,YAAA8oE,EACApqF,IAAA,SAAAmT,GAEA,IADA,GAAAjU,GAAAb,KAAA4wB,IACA/vB,IAAAiU,KAAA,KAAAA,IAAA7Q,YAAA,MACA,OAAA6Q,GAAAjU,IAEAwL,IAAA,SAAAyI,EAAArN,GACA,MAAAqN,GAAA9U,KAAA4wB,GAAAnpB,GAEApE,OAAA,SAAAyR,GACA,MAAA9U,MAAA4wB,IAAA9b,aAAA9U,KAAA4wB,IAEA9uB,SAAA,WACA,MAAA9B,MAAA4wB,GAIA,IAAA+zG,IAAA,SAAAC,GACA,kBACA,MAAA5kI,MAAAmlB,QAAAy/G,IAIA,uBAAA7hI,UAAA,CACA,GAAA6/B,IAAA7/B,SAAA40C,eACA,KAAA/U,GAAAzd,QAAA,CACA,GAAA0/G,IAAAjiG,GAAAkiG,uBACAliG,GAAAmiG,mBACAniG,GAAAoiG,oBACApiG,GAAAqiG,gBACAN,IAAA,SAAAC,GACA,kBACA,MAAAC,IAAAt9H,KAAAvH,KAAA4kI,MAMA,GAAAM,IAAAP,GAEA53C,KAIA,IAFAnuF,EAAAuT,MAAA,KAEA,mBAAApP,UAAA,CAEA,gBADAA,UAAA40C,kBAEAo1C,IAAoBo4C,WAAA,YAAAC,WAAA,aAqEpB,GAAAC,IAAA,SAAA14C,EAAAllF,EAAA4K,GACA,GAAA3R,GAAAuqF,EAAAG,EAAAqB,EAAAE,EAAA,IAAAlmF,EAAA2kF,EAAAzqF,MAEA,OAAAqH,UAAArH,OAAA,IAcA,IAFAkR,EAAApK,EAAAqlF,EAAAJ,EACA,MAAAr6E,OAAA,GACA3R,EAAA,EAAaA,EAAA+F,IAAO/F,EAAAV,KAAAqmF,KAAAx0E,EAAAu5E,EAAA1qF,GAAA+G,EAAA4K,GACpB,OAAArS,MAdA,GAAA6R,GAAA7R,KAAA8U,OAAA83E,IACA,IAAA/6E,EAAA,OAAAg7E,GAAAnqF,EAAA,EAAAuG,EAAA4I,EAAAlR,OAA6C+B,EAAAuG,IAAOvG,EACpD,IAAAhC,EAAA,EAAAmsF,EAAAh7E,EAAAnP,GAA4BhC,EAAA+F,IAAO/F,EACnC,IAAAuqF,EAAAG,EAAA1qF,IAAAvB,OAAA0tF,EAAA1tF,MAAA8rF,EAAAz9E,OAAAq/E,EAAAr/E,KACA,MAAAq/E,GAAAplF,QAwBAylF,GAAA,WAEA,IADA,GAAAvqE,GAAAo4B,EAAAn8C,EAAAuT,MACAwQ,EAAAo4B,EAAAmyC,aAAAnyC,EAAAp4B,CACA,OAAAo4B,IAGAonD,GAAA,SAAArtF,EAAA3C,GACA,GAAAggC,GAAAr9B,EAAAsrF,iBAAAtrF,CAEA,IAAAq9B,EAAAmzF,eAAA,CACA,GAAAnjC,GAAAhwD,EAAAmzF,gBAGA,OAFAnjC,GAAAza,EAAAv1E,EAAAozH,QAAApjC,EAAA3Z,EAAAr2E,EAAAqzH,QACArjC,IAAAsjC,gBAAA3wH,EAAA4wH,eAAAC,YACAxjC,EAAAza,EAAAya,EAAA3Z,GAGA,GAAAo9C,GAAA9wH,EAAA+oB,uBACA,QAAA1rB,EAAAozH,QAAAK,EAAA1nG,KAAAppB,EAAA+wH,WAAA1zH,EAAAqzH,QAAAI,EAAAxnG,IAAAtpB,EAAAgxH,YAGA/jC,GAAA,SAAAjtF,GACA,GAAA3C,GAAA+6E,IAEA,OADA/6E,GAAA6xF,iBAAA7xF,IAAA6xF,eAAA,IACA7B,GAAArtF,EAAA3C,IAKAyyH,GAAA,SAAAA,GACA,aAAAA,EAAAz3C,EAAA,WACA,MAAAntF,MAAAsD,cAAAshI,KAIAmB,GAAA,SAAA17C,GACA,kBAAAA,OAAAu6C,GAAAv6C,GAEA,QAAAuG,GAAA5wF,KAAA8wF,QAAA7nF,EAAA2nF,EAAAjwF,OAAAqlI,EAAA,GAAA19H,OAAAW,GAAAvG,EAAA,EAAqFA,EAAAuG,IAAOvG,EAC5F,OAAAoS,GAAAmxH,EAAAvyD,EAAAkd,EAAAluF,GAAA+D,EAAAitE,EAAA/yE,OAAAulI,EAAAF,EAAAtjI,GAAA,GAAA4F,OAAA7B,GAAA/F,EAAA,EAA+GA,EAAA+F,IAAO/F,GACtHoU,EAAA4+D,EAAAhzE,MAAAulI,EAAA57C,EAAA9iF,KAAAuN,IAAAoiD,SAAAx2D,EAAAgzE,MACA,YAAA5+D,KAAAmxH,EAAA/uE,SAAApiD,EAAAoiD,UACAgvE,EAAAxlI,GAAAulI,EAKA,WAAAt1C,IAAAq1C,EAAAhmI,KAAA+wF,WAOAo1C,GAAA,SAAAvB,GACA,aAAAA,EAAAx3C,EAAA,WACA,MAAAptF,MAAAomI,iBAAAxB,KAIAyB,GAAA,SAAAh8C,GACA,kBAAAA,OAAA87C,GAAA97C,GAEA,QAAAuG,GAAA5wF,KAAA8wF,QAAA7nF,EAAA2nF,EAAAjwF,OAAAqlI,KAAAn1C,KAAAnuF,EAAA,EAAyFA,EAAAuG,IAAOvG,EAChG,OAAAoS,GAAA4+D,EAAAkd,EAAAluF,GAAA+D,EAAAitE,EAAA/yE,OAAAD,EAAA,EAA8DA,EAAA+F,IAAO/F,GACrEoU,EAAA4+D,EAAAhzE,MACAslI,EAAA7kI,KAAAkpF,EAAA9iF,KAAAuN,IAAAoiD,SAAAx2D,EAAAgzE,IACAmd,EAAA1vF,KAAA2T,GAKA,WAAA67E,IAAAq1C,EAAAn1C,IAGAy1C,GAAA,SAAAx2H,GACA,kBAAAA,OAAAo1H,GAAAp1H,GAEA,QAAA8gF,GAAA5wF,KAAA8wF,QAAA7nF,EAAA2nF,EAAAjwF,OAAAqlI,EAAA,GAAA19H,OAAAW,GAAAvG,EAAA,EAAqFA,EAAAuG,IAAOvG,EAC5F,OAAAoS,GAAA4+D,EAAAkd,EAAAluF,GAAA+D,EAAAitE,EAAA/yE,OAAAulI,EAAAF,EAAAtjI,MAAAhC,EAAA,EAA4FA,EAAA+F,IAAO/F,GACnGoU,EAAA4+D,EAAAhzE,KAAAoP,EAAAvI,KAAAuN,IAAAoiD,SAAAx2D,EAAAgzE,IACAwyD,EAAA/kI,KAAA2T,EAKA,WAAA67E,IAAAq1C,EAAAhmI,KAAA+wF,WAGAw1C,GAAA,SAAAnjI,GACA,UAAAkF,OAAAlF,EAAAzC,SAGA6lI,GAAA,WACA,UAAA71C,IAAA3wF,KAAAg8B,QAAAh8B,KAAA8wF,QAAA/pF,IAAAw/H,IAAAvmI,KAAA+wF,UAWA1D,GAAA5+E,WACAwU,YAAAoqE,EACAnqF,YAAA,SAAA6K,GAAgC,MAAA/N,MAAAwtF,QAAA7oF,aAAAoJ,EAAA/N,KAAAutF,QAChC5oF,aAAA,SAAAoJ,EAAA8kB,GAAuC,MAAA7yB,MAAAwtF,QAAA7oF,aAAAoJ,EAAA8kB,IACvCvvB,cAAA,SAAAshI,GAAqC,MAAA5kI,MAAAwtF,QAAAlqF,cAAAshI,IACrCwB,iBAAA,SAAAxB,GAAwC,MAAA5kI,MAAAwtF,QAAA44C,iBAAAxB,IAGxC,IAAA6B,IAAA,SAAA/+C,GACA,kBACA,MAAAA,KAIAqG,GAAA,IAwEA24C,GAAA,SAAAj/H,EAAA5H,GACA,IAAA4H,EAGA,MAFAqJ,GAAA,GAAAxI,OAAAtI,KAAAo8C,QAAA15C,GAAA,EACA1C,KAAAqmF,KAAA,SAAAvpE,GAA2BhM,IAAApO,GAAAoa,IAC3BhM,CAGA,IAAA/M,GAAAlE,EAAAijF,EAAA2K,EACAoD,EAAA7wF,KAAA+wF,SACAH,EAAA5wF,KAAA8wF,OAEA,mBAAArpF,OAAAg/H,GAAAh/H,GAEA,QAAAwB,GAAA2nF,EAAAjwF,OAAAyC,EAAA,GAAAkF,OAAAW,GAAAiwB,EAAA,GAAA5wB,OAAAW,GAAAghF,EAAA,GAAA3hF,OAAAW,GAAAvG,EAAA,EAAsGA,EAAAuG,IAAOvG,EAAA,CAC7G,GAAAoL,GAAA+iF,EAAAnuF,GACAgxE,EAAAkd,EAAAluF,GACAgrF,EAAAha,EAAA/yE,OACAmQ,EAAArJ,EAAAF,KAAAuG,OAAAopD,SAAAx0D,EAAAmuF,GACAlD,EAAA78E,EAAAnQ,OACAgmI,EAAAztG,EAAAx2B,GAAA,GAAA4F,OAAAqlF,GACAi5C,EAAAxjI,EAAAV,GAAA,GAAA4F,OAAAqlF,EAGA5pF,GAAA+J,EAAA4lE,EAAAizD,EAAAC,EAFA38C,EAAAvnF,GAAA,GAAA4F,OAAAolF,GAEA58E,EAAAjR,EAKA,QAAA8jE,GAAA9wC,EAAAgyF,EAAA,EAAAC,EAAA,EAA4CD,EAAAl3B,IAAiBk3B,EAC7D,GAAAlhD,EAAAgjE,EAAA9hB,GAAA,CAEA,IADAA,GAAAC,MAAAD,EAAA,KACAhyF,EAAA+zG,EAAA9hB,SAAAn3B,IACAhqB,EAAA4pB,MAAA16D,GAAA,MAQA,MAHAzvB,GAAA,GAAAutF,IAAAvtF,EAAAytF,GACAztF,EAAA44B,OAAA9C,EACA91B,EAAAyjI,MAAA58C,EACA7mF,GAGA0jI,GAAA,WACA,UAAAn2C,IAAA3wF,KAAA6mI,OAAA7mI,KAAA8wF,QAAA/pF,IAAAw/H,IAAAvmI,KAAA+wF,WAGAg2C,GAAA,SAAAn9C,GAEA,OAAAo9C,GAAAhnI,KAAA8wF,QAAAm2C,EAAAr9C,EAAAkH,QAAAo2C,EAAAF,EAAArmI,OAAA2yF,EAAA2zC,EAAAtmI,OAAAsI,EAAA0D,KAAAkyE,IAAAqoD,EAAA5zC,GAAA6zC,EAAA,GAAA7+H,OAAA4+H,GAAAxkI,EAAA,EAA8JA,EAAAuG,IAAOvG,EACrK,OAAAoS,GAAAsyH,EAAAJ,EAAAtkI,GAAA2kI,EAAAJ,EAAAvkI,GAAA+D,EAAA2gI,EAAAzmI,OAAAujF,EAAAijD,EAAAzkI,GAAA,GAAA4F,OAAA7B,GAAA/F,EAAA,EAAwHA,EAAA+F,IAAO/F,GAC/HoU,EAAAsyH,EAAA1mI,IAAA2mI,EAAA3mI,MACAwjF,EAAAxjF,GAAAoU,EAKA,MAAQpS,EAAAwkI,IAAQxkI,EAChBykI,EAAAzkI,GAAAskI,EAAAtkI,EAGA,WAAAiuF,IAAAw2C,EAAAnnI,KAAA+wF,WAGAu2C,GAAA,WAEA,OAAA12C,GAAA5wF,KAAA8wF,QAAApuF,GAAA,EAAAuG,EAAA2nF,EAAAjwF,SAA4D+B,EAAAuG,GAC5D,OAAA6L,GAAA4+D,EAAAkd,EAAAluF,GAAAhC,EAAAgzE,EAAA/yE,OAAA,EAAAkyB,EAAA6gD,EAAAhzE,KAA4EA,GAAA,IAC5EoU,EAAA4+D,EAAAhzE,MACAmyB,OAAA/d,EAAA6S,aAAAkL,EAAA5uB,WAAAU,aAAAmQ,EAAA+d,GACAA,EAAA/d,EAKA,OAAA9U,OAGAunI,GAAA,SAAAziC,GAGA,QAAA0iC,GAAAz/H,EAAAsB,GACA,MAAAtB,IAAAsB,EAAAy7F,EAAA/8F,EAAAmvD,SAAA7tD,EAAA6tD,WAAAnvD,GAAAsB,EAHAy7F,MAAA9W,EAMA,QAAA4C,GAAA5wF,KAAA8wF,QAAA7nF,EAAA2nF,EAAAjwF,OAAA8mI,EAAA,GAAAn/H,OAAAW,GAAAvG,EAAA,EAAsFA,EAAAuG,IAAOvG,EAAA,CAC7F,OAAAoS,GAAA4+D,EAAAkd,EAAAluF,GAAA+D,EAAAitE,EAAA/yE,OAAA+mI,EAAAD,EAAA/kI,GAAA,GAAA4F,OAAA7B,GAAA/F,EAAA,EAAwGA,EAAA+F,IAAO/F,GAC/GoU,EAAA4+D,EAAAhzE,MACAgnI,EAAAhnI,GAAAoU,EAGA4yH,GAAA3uH,KAAAyuH,GAGA,UAAA72C,IAAA82C,EAAAznI,KAAA+wF,UAAAhH,SAOA49C,GAAA,WACA,GAAAhpH,GAAA3W,UAAA,EAGA,OAFAA,WAAA,GAAAhI,KACA2e,EAAA1W,MAAA,KAAAD,WACAhI,MAGA4nI,GAAA,WACA,GAAA9/B,GAAA,GAAAx/F,OAAAtI,KAAAo8C,QAAA17C,GAAA,CAEA,OADAV,MAAAqmF,KAAA,WAAwByhB,IAAApnG,GAAAV,OACxB8nG,GAGA+/B,GAAA,WAEA,OAAAj3C,GAAA5wF,KAAA8wF,QAAApuF,EAAA,EAAAuG,EAAA2nF,EAAAjwF,OAA2D+B,EAAAuG,IAAOvG,EAClE,OAAAgxE,GAAAkd,EAAAluF,GAAAhC,EAAA,EAAA+F,EAAAitE,EAAA/yE,OAAwDD,EAAA+F,IAAO/F,EAAA,CAC/D,GAAAoU,GAAA4+D,EAAAhzE,EACA,IAAAoU,EAAA,MAAAA,GAIA,aAGAgzH,GAAA,WACA,GAAA1rF,GAAA,CAEA,OADAp8C,MAAAqmF,KAAA,aAAwBjqC,IACxBA,GAGA2rF,GAAA,WACA,OAAA/nI,KAAA8U,QAGAkzH,GAAA,SAAArpH,GAEA,OAAAiyE,GAAA5wF,KAAA8wF,QAAApuF,EAAA,EAAAuG,EAAA2nF,EAAAjwF,OAA2D+B,EAAAuG,IAAOvG,EAClE,OAAAoS,GAAA4+D,EAAAkd,EAAAluF,GAAAhC,EAAA,EAAA+F,EAAAitE,EAAA/yE,OAA8DD,EAAA+F,IAAO/F,GACrEoU,EAAA4+D,EAAAhzE,KAAAie,EAAApX,KAAAuN,IAAAoiD,SAAAx2D,EAAAgzE,EAIA,OAAA1zE,OA2CAioI,GAAA,SAAAz6H,EAAA/F,GACA,GAAAmkF,GAAAtkE,GAAA9Z,EAEA,IAAAxF,UAAArH,OAAA,GACA,GAAAmU,GAAA9U,KAAA8U,MACA,OAAA82E,GAAAC,MACA/2E,EAAAunF,eAAAzQ,EAAAr1C,MAAAq1C,EAAAC,OACA/2E,EAAA4hB,aAAAk1D,GAGA,MAAA5rF,MAAAqmF,MAAA,MAAA5+E,EACAmkF,EAAAC,MAAAsC,EAAAD,EAAA,kBAAAzmF,GACAmkF,EAAAC,MAAA0C,EAAAD,EACA1C,EAAAC,MAAAwC,EAAAD,GAAAxC,EAAAnkF,KAGArH,GAAA,SAAA0U,GACA,MAAAA,GAAAy2E,eAAAz2E,EAAAy2E,cAAAsL,aACA/hF,EAAA/R,UAAA+R,GACAA,EAAA+hF,aAuBAqxC,GAAA,SAAA16H,EAAA/F,EAAAknF,GACA,GAAA75E,EACA,OAAA9M,WAAArH,OAAA,EACAX,KAAAqmF,MAAA,MAAA5+E,EACA+mF,EAAA,kBAAA/mF,GACAmnF,EACAF,GAAAlhF,EAAA/F,EAAA,MAAAknF,EAAA,GAAAA,IACAvuF,GAAA0U,EAAA9U,KAAA8U,QACAmjB,iBAAAnjB,EAAA,MACAgiF,iBAAAtpF,IAuBA26H,GAAA,SAAA36H,EAAA/F,GACA,MAAAO,WAAArH,OAAA,EACAX,KAAAqmF,MAAA,MAAA5+E,EACAonF,EAAA,kBAAApnF,GACAsnF,EACAD,GAAAthF,EAAA/F,IACAzH,KAAA8U,OAAAtH,GAgBAyhF,GAAAxgF,WACAsD,IAAA,SAAAvE,GACAxN,KAAAmvF,OAAAhoF,QAAAqG,GACA,IACAxN,KAAAmvF,OAAAhuF,KAAAqM,GACAxN,KAAAkvF,MAAAtqF,aAAA,QAAA5E,KAAAmvF,OAAAntF,KAAA,QAGAqB,OAAA,SAAAmK,GACA,GAAA9M,GAAAV,KAAAmvF,OAAAhoF,QAAAqG,EACA9M,IAAA,IACAV,KAAAmvF,OAAA/nF,OAAA1G,EAAA,GACAV,KAAAkvF,MAAAtqF,aAAA,QAAA5E,KAAAmvF,OAAAntF,KAAA,QAGAomI,SAAA,SAAA56H,GACA,MAAAxN,MAAAmvF,OAAAhoF,QAAAqG,IAAA,GAgCA,IAAA66H,IAAA,SAAA76H,EAAA/F,GACA,GAAA4nF,GAAAL,EAAAxhF,EAAA,GAEA,IAAAxF,UAAArH,OAAA,GAEA,IADA,GAAAJ,GAAAk2B,EAAAz2B,KAAA8U,QAAApU,GAAA,EAAA+F,EAAA4oF,EAAA1uF,SACAD,EAAA+F,GAAA,IAAAlG,EAAA6nI,SAAA/4C,EAAA3uF,IAAA,QACA,UAGA,MAAAV,MAAAqmF,MAAA,kBAAA5+E,GACAgoF,GAAAhoF,EACA8nF,EACAC,GAAAH,EAAA5nF,KAoBA6gI,GAAA,SAAA7gI,GACA,MAAAO,WAAArH,OACAX,KAAAqmF,KAAA,MAAA5+E,EACAioF,IAAA,kBAAAjoF,GACAmoF,GACAD,IAAAloF,IACAzH,KAAA8U,OAAA+S,aAoBA0gH,GAAA,SAAA9gI,GACA,MAAAO,WAAArH,OACAX,KAAAqmF,KAAA,MAAA5+E,EACAooF,IAAA,kBAAApoF,GACAsoF,GACAD,IAAAroF,IACAzH,KAAA8U,OAAA+pB,WAOA2pG,GAAA,WACA,MAAAxoI,MAAAqmF,KAAA2J,KAOAy4C,GAAA,WACA,MAAAzoI,MAAAqmF,KAAAzrB,KAGA8tE,GAAA,SAAAl7H,GACA,GAAAxG,GAAA,kBAAAwG,KAAAk3H,GAAAl3H,EACA,OAAAxN,MAAAqqF,OAAA,WACA,MAAArqF,MAAAkD,YAAA8D,EAAAiB,MAAAjI,KAAAgI,eAQA2gI,GAAA,SAAAn7H,EAAA8nE,GACA,GAAAtuE,GAAA,kBAAAwG,KAAAk3H,GAAAl3H,GACA68E,EAAA,MAAA/U,EAAA4a,GAAA,kBAAA5a,KAAAsvD,GAAAtvD,EACA,OAAAt1E,MAAAqqF,OAAA,WACA,MAAArqF,MAAA2E,aAAAqC,EAAAiB,MAAAjI,KAAAgI,WAAAqiF,EAAApiF,MAAAjI,KAAAgI,YAAA,SASA4gI,GAAA,WACA,MAAA5oI,MAAAqmF,KAAAhjF,KAGAwlI,GAAA,SAAAphI,GACA,MAAAO,WAAArH,OACAX,KAAAiM,SAAA,WAAAxE,GACAzH,KAAA8U,OAAAoiD,UA8BA4xE,GAAA,SAAA3pI,EAAAgxF,GACA,MAAAnwF,MAAAqmF,MAAA,kBAAA8J,GACAO,GACAD,IAAAtxF,EAAAgxF,KAGA3sD,IAAA,KAWAmtD,IAAAliF,UAAAm7E,GAAAn7E,WACAwU,YAAA0tE,GACAtG,OAAA07C,GACAl8C,UAAAw8C,GACApgI,OAAAqgI,GACAx1H,KAAA41H,GACAxtG,MAAAstG,GACAv8C,KAAA68C,GACA5iD,MAAA6iD,GACAh9C,MAAAu9C,GACAvuH,KAAAwuH,GACAhgI,KAAAogI,GACA7/B,MAAA8/B,GACA9yH,KAAA+yH,GACAzrF,KAAA0rF,GACArnC,MAAAsnC,GACA1hD,KAAA2hD,GACAroG,KAAAsoG,GACAvyG,MAAAwyG,GACAj8H,SAAAk8H,GACAY,QAAAV,GACAt3H,KAAAu3H,GACAvpG,KAAAwpG,GACAv4C,MAAAw4C,GACA5tE,MAAA6tE,GACAt+C,OAAAu+C,GACAl/G,OAAAm/G,GACAtlI,OAAAulI,GACAt7C,MAAAu7C,GACAh3H,GAAAwzH,GACAr6C,SAAA89C,GAGA,IAAAz+C,IAAA,SAAAu6C,GACA,sBAAAA,GACA,GAAAj0C,MAAA5tF,SAAAO,cAAAshI,MAAA7hI,SAAA40C,kBACA,GAAAg5C,MAAAi0C,IAAAphG,KAGAqmD,GAAA,SAAA+6C,GACA,sBAAAA,GACA,GAAAj0C,KAAA5tF,SAAAqjI,iBAAAxB,KAAA7hI,SAAA40C,kBACA,GAAAg5C,KAAA,MAAAi0C,QAAAphG,KAGAwlG,GAAA,SAAAl0H,EAAA6uF,EAAAjS,GACA1pF,UAAArH,OAAA,IAAA+wF,EAAAiS,IAAAzW,KAAA8W,eAEA,QAAAglC,GAAAtoI,EAAA,EAAA+F,EAAAk9F,IAAAhjG,OAAA,EAA0DD,EAAA+F,IAAO/F,EACjE,IAAAsoI,EAAArlC,EAAAjjG,IAAAgxF,eACA,MAAAyQ,IAAArtF,EAAAk0H,EAIA,cAGArlC,GAAA,SAAA7uF,EAAA6uF,GACA,MAAAA,MAAAzW,KAAAyW,QAEA,QAAAjjG,GAAA,EAAA+F,EAAAk9F,IAAAhjG,OAAA,EAAAgxG,EAAA,GAAArpG,OAAA7B,GAA0E/F,EAAA+F,IAAO/F,EACjFixG,EAAAjxG,GAAAyhG,GAAArtF,EAAA6uF,EAAAjjG,GAGA,OAAAixG,IAOAtgB,GAAA,WACAzyF,EAAAuT,MAAA82H,iBACArqI,EAAAuT,MAAA8+E,4BAGAqT,GAAA,SAAAjuC,GACA,GAAA7yB,GAAA6yB,EAAAtzD,SAAA40C,gBACAy5C,EAAA/G,GAAAh0B,GAAAxkD,GAAA,iBAAAw/E,IAAA,EACA,kBAAA7tD,GACA4tD,EAAAv/E,GAAA,mBAAAw/E,IAAA,IAEA7tD,EAAA+tD,WAAA/tD,EAAA9N,MAAA47D,cACA9tD,EAAA9N,MAAA47D,cAAA,SAmBA43C,GAAA,SAAAxhD,GACA,kBACA,MAAAA,IAiBA8J,IAAA/iF,UAAAoD,GAAA,WACA,GAAApK,GAAAzH,KAAA4wB,EAAA/e,GAAA5J,MAAAjI,KAAA4wB,EAAA5oB,UACA,OAAAP,KAAAzH,KAAA4wB,EAAA5wB,KAAAyH,EAgBA,IAAA0hI,IAAA,WAUA,QAAAA,GAAA/3C,GACAA,EACAv/E,GAAA,iBAAAu3H,GACAv3H,GAAA,kBAAAw3H,GACAx3H,GAAA,iBAAAy3H,GACAz3H,GAAA,iCAAA03H,GACA7zG,MAAA,+CAGA,QAAA0zG,KACA,IAAAxlC,GAAA39F,EAAAgC,MAAAjI,KAAAgI,WAAA,CACA,GAAAwhI,GAAAnlC,EAAA,QAAAj3D,EAAAnlC,MAAAjI,KAAAgI,WAAA+5F,GAAA/hG,KAAAgI,UACAwhI,KACAn/C,GAAAzrF,EAAAuT,MAAAkkD,MAAAxkD,GAAA,iBAAA43H,GAAA,GAAA53H,GAAA,eAAA63H,GAAA,GACAplC,GAAA1lG,EAAAuT,MAAAkkD,MACA26B,KACA24C,GAAA,EACAH,EAAA,WAGA,QAAAC,KACAp4C,KACAs4C,GAAA,EACAC,EAAA7nC,MAAA,QAGA,QAAA2nC,KACAr/C,GAAAzrF,EAAAuT,MAAAkkD,MAAAxkD,GAAA,oCACAq/E,GAAAtyF,EAAAuT,MAAAkkD,KAAAszE,GACAt4C,KACAu4C,EAAA7nC,MAAA,OAGA,QAAAsnC,KACA,GAAApjI,EAAAgC,MAAAjI,KAAAgI,WAAA,CACA,GAEAtH,GAAA8oI,EAFAK,EAAAjrI,EAAAuT,MAAA6xF,eACAp6F,EAAAwjC,EAAAnlC,MAAAjI,KAAAgI,WACAvB,EAAAojI,EAAAlpI,MAEA,KAAAD,EAAA,EAAeA,EAAA+F,IAAO/F,GACtB8oI,EAAAnlC,EAAAwlC,EAAAnpI,GAAAgxF,WAAA9nF,EAAAo/H,GAAAhpI,KAAAgI,cACAgpF,KACAw4C,EAAA,WAKA,QAAAF,KACA,GACA5oI,GAAA8oI,EADAK,EAAAjrI,EAAAuT,MAAA6xF,eACAv9F,EAAAojI,EAAAlpI,MAEA,KAAAD,EAAA,EAAeA,EAAA+F,IAAO/F,GACtB8oI,EAAAI,EAAAC,EAAAnpI,GAAAgxF,eACAL,KACAm4C,EAAA,SAKA,QAAAD,KACA,GACA7oI,GAAA8oI,EADAK,EAAAjrI,EAAAuT,MAAA6xF,eACAv9F,EAAAojI,EAAAlpI,MAIA,KAFAijG,GAAA/sB,aAAA+sB,GACAA,EAAA5rE,WAAA,WAAyC4rE,EAAA,MAAsB,KAC/DljG,EAAA,EAAeA,EAAA+F,IAAO/F,GACtB8oI,EAAAI,EAAAC,EAAAnpI,GAAAgxF,eACAV,KACAw4C,EAAA,QAKA,QAAAnlC,GAAAxjG,EAAAusC,EAAA+0D,EAAAlV,EAAA34E,GACA,GAAA4T,GAAA+V,EAAAE,EAAA9N,EAAA8xE,EAAA/0D,EAAAvsC,GACAipI,EAAAz2H,EAAA4zD,MAEA,IAAA+lB,EAAA,GAAAwE,IAAA23C,EAAA,cAAAjhH,EAAArnB,EAAAqwC,EAAA7gB,EAAA,GAAAA,EAAA,OAAAy5G,GAAA,WACA,cAAAlrI,EAAAuT,MAAAs/E,QAAAvpE,EAAAupE,EAAAxpF,MAAAglF,EAAA34E,MACA2pB,EAAA/V,EAAAw/D,EAAAr3D,EAAA,MACA8N,EAAAjW,EAAAsgE,EAAAn4D,EAAA,OACA,KAGA,eAAAm5G,GAAArqI,GACA,GAAAsH,GAAAumG,EAAA38E,CACA,QAAAlxB,GACA,YAAAyqI,EAAA/oI,GAAA2oI,EAAA/iI,EAAAyqC,GAA2D,MAC3D,iBAAA04F,GAAA/oI,KAAAqwC,CACA,YAAA7gB,EAAA8xE,EAAA/0D,EAAAvsC,GAAA4F,EAAAyqC,EAEA87C,EAAA,GAAAwE,IAAA23C,EAAAhqI,EAAA+oB,EAAArnB,EAAA4F,EAAA4pB,EAAA,GAAA4N,EAAA5N,EAAA,GAAA8N,EAAA9N,EAAA,GAAA28E,EAAA,GAAA38E,EAAA,GAAA28E,EAAA,GAAA88B,KAAA7hI,MAAA6hI,GAAA3qI,EAAA8tF,EAAA34E,KApGA,GAMAq1H,GACA/lC,EAPA39F,EAAA0rF,GACAvkD,EAAAykD,GACAJ,EAAAK,GACA83C,KACAv2H,EAAA23E,EAAA,sBACA95C,EAAA,CAoHA,OAjBAi4F,GAAAljI,OAAA,SAAA2qB,GACA,MAAA5oB,WAAArH,QAAAsF,EAAA,kBAAA2qB,KAAAs4G,KAAAt4G,GAAAu4G,GAAAljI,GAGAkjI,EAAA/7F,UAAA,SAAAxc,GACA,MAAA5oB,WAAArH,QAAAysC,EAAA,kBAAAxc,KAAAs4G,GAAAt4G,GAAAu4G,GAAA/7F,GAGA+7F,EAAA13C,QAAA,SAAA7gE,GACA,MAAA5oB,WAAArH,QAAA8wF,EAAA,kBAAA7gE,KAAAs4G,GAAAt4G,GAAAu4G,GAAA13C,GAGA03C,EAAAt3H,GAAA,WACA,GAAApK,GAAA4L,EAAAxB,GAAA5J,MAAAoL,EAAArL,UACA,OAAAP,KAAA4L,EAAA81H,EAAA1hI,GAGA0hI,GAGAY,GAAA,SAAA9mH,EAAA3F,EAAA7O,GACAwU,EAAAxU,UAAA6O,EAAA7O,YACAA,EAAAwU,eAWA+mH,GAAA,GACAC,GAAA,EAAAD,GAEAE,GAAA,sBACAC,GAAA,gDACAC,GAAA,iDACAn4C,GAAA,mBACAE,GAAA,mBACAE,GAAA,GAAAhtE,QAAA,WAAA6kH,UAAA,QACA53C,GAAA,GAAAjtE,QAAA,WAAA+kH,UAAA,QACA73C,GAAA,GAAAltE,QAAA,YAAA6kH,SAAAC,IAAA,QACA13C,GAAA,GAAAptE,QAAA,YAAA+kH,SAAAD,IAAA,QACAz3C,GAAA,GAAArtE,QAAA,WAAA8kH,GAAAC,OAAA,QACAx3C,GAAA,GAAAvtE,QAAA,YAAA8kH,GAAAC,MAAAD,IAAA,QAEAt3C,IACAw3C,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACAx1B,IAAA,SACAy1B,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,SAGAxJ,IAAAh4C,GAAAC,IACAwhD,YAAA,WACA,MAAAxzI,MAAAgzF,MAAAwgD,eAEA1xI,SAAA,WACA,MAAA9B,MAAAgzF,MAAA,MA+CA+2C,GAAA73C,GAAAc,GAAAzqF,GAAAwpF,IACAk4C,SAAA,SAAA3/C,GAEA,MADAA,GAAA,MAAAA,EAAA2/C,GAAAt9H,KAAAq7E,IAAAiiD,GAAA3/C,GACA,GAAA4H,IAAAlyF,KAAA8yF,EAAAxI,EAAAtqF,KAAAD,EAAAuqF,EAAAtqF,KAAAqJ,EAAAihF,EAAAtqF,KAAAizF,UAEA+2C,OAAA,SAAA1/C,GAEA,MADAA,GAAA,MAAAA,EAAA0/C,GAAAr9H,KAAAq7E,IAAAgiD,GAAA1/C,GACA,GAAA4H,IAAAlyF,KAAA8yF,EAAAxI,EAAAtqF,KAAAD,EAAAuqF,EAAAtqF,KAAAqJ,EAAAihF,EAAAtqF,KAAAizF,UAEAD,IAAA,WACA,MAAAhzF,OAEAwzI,YAAA,WACA,UAAAxzI,KAAA8yF,GAAA9yF,KAAA8yF,GAAA,KACA,GAAA9yF,KAAAD,GAAAC,KAAAD,GAAA,KACA,GAAAC,KAAAqJ,GAAArJ,KAAAqJ,GAAA,KACA,GAAArJ,KAAAizF,SAAAjzF,KAAAizF,SAAA,GAEAnxF,SAAA,WACA,GAAAiG,GAAA/H,KAAAizF,OACA,OADyBlrF,GAAApB,MAAAoB,GAAA,EAAA4E,KAAAC,IAAA,EAAAD,KAAAkyE,IAAA,EAAA92E,KACzB,IAAAA,EAAA,gBACA4E,KAAAC,IAAA,EAAAD,KAAAkyE,IAAA,IAAAlyE,KAAAo5E,MAAA/lF,KAAA8yF,IAAA,SACAnmF,KAAAC,IAAA,EAAAD,KAAAkyE,IAAA,IAAAlyE,KAAAo5E,MAAA/lF,KAAAD,IAAA,SACA4M,KAAAC,IAAA,EAAAD,KAAAkyE,IAAA,IAAAlyE,KAAAo5E,MAAA/lF,KAAAqJ,IAAA,KACA,IAAAtB,EAAA,SAAAA,EAAA,SAgDAgiI,GAAA72C,GAAAE,GAAA7qF,GAAAwpF,IACAk4C,SAAA,SAAA3/C,GAEA,MADAA,GAAA,MAAAA,EAAA2/C,GAAAt9H,KAAAq7E,IAAAiiD,GAAA3/C,GACA,GAAA4I,IAAAlzF,KAAA6c,EAAA7c,KAAAkoB,EAAAloB,KAAA4B,EAAA0oF,EAAAtqF,KAAAizF,UAEA+2C,OAAA,SAAA1/C,GAEA,MADAA,GAAA,MAAAA,EAAA0/C,GAAAr9H,KAAAq7E,IAAAgiD,GAAA1/C,GACA,GAAA4I,IAAAlzF,KAAA6c,EAAA7c,KAAAkoB,EAAAloB,KAAA4B,EAAA0oF,EAAAtqF,KAAAizF,UAEAD,IAAA,WACA,GAAAn2E,GAAA7c,KAAA6c,EAAA,SAAA7c,KAAA6c,EAAA,GACAqL,EAAAvhB,MAAAkW,IAAAlW,MAAA3G,KAAAkoB,GAAA,EAAAloB,KAAAkoB,EACAtmB,EAAA5B,KAAA4B,EACA2xF,EAAA3xF,KAAA,GAAAA,EAAA,EAAAA,GAAAsmB,EACAorE,EAAA,EAAA1xF,EAAA2xF,CACA,WAAArB,IACAmB,GAAAx2E,GAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAy2E,EAAAC,GACAF,GAAAx2E,EAAAy2E,EAAAC,GACAF,GAAAx2E,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAy2E,EAAAC,GACAvzF,KAAAizF,UAGAugD,YAAA,WACA,UAAAxzI,KAAAkoB,GAAAloB,KAAAkoB,GAAA,GAAAvhB,MAAA3G,KAAAkoB,KACA,GAAAloB,KAAA4B,GAAA5B,KAAA4B,GAAA,GACA,GAAA5B,KAAAizF,SAAAjzF,KAAAizF,SAAA,KAYA,IAAAU,IAAAhnF,KAAA8mI,GAAA,IACA7+C,GAAA,IAAAjoF,KAAA8mI,GAEAC,GAAA,GACA1/C,GAAA,OACAC,GAAA,EACAC,GAAA,QACAI,GAAA,KACAE,GAAA,KACAH,GAAA,EAAAG,MACAJ,GAAAI,QA6BAu1C,IAAAt2C,GAAAU,GAAA5rF,GAAAwpF,IACAk4C,SAAA,SAAA3/C,GACA,UAAAmJ,IAAAzzF,KAAA4B,EAAA8xI,IAAA,MAAAppD,EAAA,EAAAA,GAAAtqF,KAAA+H,EAAA/H,KAAAqJ,EAAArJ,KAAAizF,UAEA+2C,OAAA,SAAA1/C,GACA,UAAAmJ,IAAAzzF,KAAA4B,EAAA8xI,IAAA,MAAAppD,EAAA,EAAAA,GAAAtqF,KAAA+H,EAAA/H,KAAAqJ,EAAArJ,KAAAizF,UAEAD,IAAA,WACA,GAAAxK,IAAAxoF,KAAA4B,EAAA,QACA8lF,EAAA/gF,MAAA3G,KAAA+H,GAAAygF,IAAAxoF,KAAA+H,EAAA,IACA2mG,EAAA/nG,MAAA3G,KAAAqJ,GAAAm/E,IAAAxoF,KAAAqJ,EAAA,GAIA,OAHAm/E,GAAAyL,GAAAM,GAAA/L,GACAd,EAAAsM,GAAAO,GAAA7M,GACAgnB,EAAAxa,GAAAK,GAAAma,GACA,GAAAxc,IACAuC,GAAA,UAAA/M,EAAA,UAAAc,EAAA,SAAAkmB,GACAja,IAAA,QAAA/M,EAAA,UAAAc,EAAA,QAAAkmB,GACAja,GAAA,SAAA/M,EAAA,SAAAc,EAAA,UAAAkmB,GACA1uG,KAAAizF,aAuCA82C,GAAAr2C,GAAAoB,GAAAvsF,GAAAwpF,IACAk4C,SAAA,SAAA3/C,GACA,UAAAoJ,IAAA1zF,KAAA6c,EAAA7c,KAAA4J,EAAA5J,KAAA4B,EAAA8xI,IAAA,MAAAppD,EAAA,EAAAA,GAAAtqF,KAAAizF,UAEA+2C,OAAA,SAAA1/C,GACA,UAAAoJ,IAAA1zF,KAAA6c,EAAA7c,KAAA4J,EAAA5J,KAAA4B,EAAA8xI,IAAA,MAAAppD,EAAA,EAAAA,GAAAtqF,KAAAizF,UAEAD,IAAA,WACA,MAAAQ,IAAAxzF,MAAAgzF,SAIA,IAAAwuB,KAAA,OACAtB,GAAA,QACA5qB,IAAA,OACAC,IAAA,OACAF,GAAA,QACAH,GAAAG,GAAAE,GACAJ,GAAAE,GAAA6qB,GACAjrB,GAAAirB,GAAA5qB,GAAAC,GAAAisB,EA2BAuoB,IAAA/0C,GAAAQ,GAAAjtF,GAAAwpF,IACAk4C,SAAA,SAAA3/C,GAEA,MADAA,GAAA,MAAAA,EAAA2/C,GAAAt9H,KAAAq7E,IAAAiiD,GAAA3/C,GACA,GAAA0K,IAAAh1F,KAAA6c,EAAA7c,KAAAkoB,EAAAloB,KAAA4B,EAAA0oF,EAAAtqF,KAAAizF,UAEA+2C,OAAA,SAAA1/C,GAEA,MADAA,GAAA,MAAAA,EAAA0/C,GAAAr9H,KAAAq7E,IAAAgiD,GAAA1/C,GACA,GAAA0K,IAAAh1F,KAAA6c,EAAA7c,KAAAkoB,EAAAloB,KAAA4B,EAAA0oF,EAAAtqF,KAAAizF,UAEAD,IAAA,WACA,GAAAn2E,GAAAlW,MAAA3G,KAAA6c,GAAA,GAAA7c,KAAA6c,EAAA,KAAA82E,GACA/xF,GAAA5B,KAAA4B,EACAmG,EAAApB,MAAA3G,KAAAkoB,GAAA,EAAAloB,KAAAkoB,EAAAtmB,GAAA,EAAAA,GACAw2F,EAAAzrF,KAAAinF,IAAA/2E,GACAw7E,EAAA1rF,KAAAknF,IAAAh3E,EACA,WAAAq1E,IACA,KAAAtwF,EAAAmG,GAAAy5G,GAAAppB,EAAA8nB,GAAA7nB,IACA,KAAAz2F,EAAAmG,GAAAutF,GAAA8C,EAAA7C,GAAA8C,IACA,KAAAz2F,EAAAmG,GAAAstF,GAAA+C,IACAp4F,KAAAizF,YAaA,IA4QAzuF,IACAmyF,GACAC,GACAK,GA4OAyC,GACAM,GA5fA25C,GAAA,SAAAx6F,GACA,GAAA1yC,GAAA0yC,EAAAx4C,OAAA,CACA,iBAAAsqF,GACA,GAAAvqF,GAAAuqF,GAAA,EAAAA,EAAA,EAAAA,GAAA,GAAAA,EAAA,EAAAxkF,EAAA,GAAAkG,KAAAszE,MAAAgL,EAAAxkF,GACAkvF,EAAAx8C,EAAAz4C,GACAk1F,EAAAz8C,EAAAz4C,EAAA,EAGA,OAAA+0F,KAAAxK,EAAAvqF,EAAA+F,KAFA/F,EAAA,EAAAy4C,EAAAz4C,EAAA,KAAAi1F,EAAAC,EAEAD,EAAAC,EADAl1F,EAAA+F,EAAA,EAAA0yC,EAAAz4C,EAAA,KAAAk1F,EAAAD,KAKAi+C,GAAA,SAAAz6F,GACA,GAAA1yC,GAAA0yC,EAAAx4C,MACA,iBAAAsqF,GACA,GAAAvqF,GAAAiM,KAAAszE,QAAAgL,GAAA,OAAAA,KAAAxkF,EAKA,OAAAgvF,KAAAxK,EAAAvqF,EAAA+F,KAJA0yC,GAAAz4C,EAAA+F,EAAA,GAAAA,GACA0yC,EAAAz4C,EAAA+F,GACA0yC,GAAAz4C,EAAA,GAAA+F,GACA0yC,GAAAz4C,EAAA,GAAA+F,MAKAwvF,GAAA,SAAAvO,GACA,kBACA,MAAAA,KAgCAmsD,GAAA,QAAAC,GAAAtrD,GAGA,QAAAurD,GAAA3rI,EAAA0vB,GACA,GAAAg7D,GAAAyD,GAAAnuF,EAAA4qF,GAAA5qF,IAAA0qF,GAAAh7D,EAAAk7D,GAAAl7D,IAAAg7D,GACA/yF,EAAAw2F,EAAAnuF,EAAArI,EAAA+3B,EAAA/3B,GACAsJ,EAAAktF,EAAAnuF,EAAAiB,EAAAyuB,EAAAzuB,GACA4pF,EAAAkD,GAAA/tF,EAAA6qF,QAAAn7D,EAAAm7D,QACA,iBAAAhI,GAKA,MAJA7iF,GAAA0qF,IAAA7H,GACA7iF,EAAArI,IAAAkrF,GACA7iF,EAAAiB,IAAA4hF,GACA7iF,EAAA6qF,UAAAhI,GACA7iF,EAAA,IAZA,GAAAmuF,GAAAL,GAAA1N,EAkBA,OAFAurD,GAAA79C,MAAA49C,EAEAC,GACC,GA4BDC,GAAA59C,GAAAu9C,IACAM,GAAA79C,GAAAw9C,IAEAM,GAAA,SAAAnsI,EAAAsB,GACA,GAIA3I,GAJAuiI,EAAA55H,IAAA1I,OAAA,EACAqiI,EAAAj7H,EAAA4E,KAAAkyE,IAAAokD,EAAAl7H,EAAApH,QAAA,EACA+mF,EAAA,GAAAp/E,OAAA26H,GACAr5H,EAAA,GAAAtB,OAAA26H,EAGA,KAAAviI,EAAA,EAAaA,EAAAsiI,IAAQtiI,EAAAgnF,EAAAhnF,GAAA+7E,GAAA10E,EAAArH,GAAA2I,EAAA3I,GACrB,MAAQA,EAAAuiI,IAAQviI,EAAAkJ,EAAAlJ,GAAA2I,EAAA3I,EAEhB,iBAAAuqF,GACA,IAAAvqF,EAAA,EAAeA,EAAAsiI,IAAQtiI,EAAAkJ,EAAAlJ,GAAAgnF,EAAAhnF,GAAAuqF,EACvB,OAAArhF,KAIA0gH,GAAA,SAAAviH,EAAAsB,GACA,GAAAyT,GAAA,GAAAqiE,KACA,OAAAp3E,MAAAsB,GAAAtB,EAAA,SAAAkjF,GACA,MAAAnuE,GAAAytG,QAAAxiH,EAAAsB,EAAA4hF,GAAAnuE,IAIAi7E,GAAA,SAAAhwF,EAAAsB,GACA,MAAAtB,MAAAsB,GAAAtB,EAAA,SAAAkjF,GACA,MAAAljF,GAAAsB,EAAA4hF,IAIAvwC,GAAA,SAAA3yC,EAAAsB,GACA,GAEAihF,GAFA5pF,KACAkJ,IAGA,QAAA7B,GAAA,gBAAAA,WACA,OAAAsB,GAAA,gBAAAA,UAEA,KAAAihF,IAAAjhF,GACAihF,IAAAviF,GACArH,EAAA4pF,GAAA7N,GAAA10E,EAAAuiF,GAAAjhF,EAAAihF,IAEA1gF,EAAA0gF,GAAAjhF,EAAAihF,EAIA,iBAAAW,GACA,IAAAX,IAAA5pF,GAAAkJ,EAAA0gF,GAAA5pF,EAAA4pF,GAAAW,EACA,OAAArhF,KAIAuqI,GAAA,8CACAC,GAAA,GAAA/uH,QAAA8uH,GAAAxxH,OAAA,KAcA0xH,GAAA,SAAAtsI,EAAAsB,GACA,GACAirI,GACAC,EACAC,EAHAC,EAAAN,GAAA5xG,UAAA6xG,GAAA7xG,UAAA,EAIA7hC,GAAA,EACAwnB,KACA4vE,IAMA,KAHA/vF,GAAA,GAAAsB,GAAA,IAGAirI,EAAAH,GAAA3xG,KAAAz6B,MACAwsI,EAAAH,GAAA5xG,KAAAn5B,MACAmrI,EAAAD,EAAAnwI,OAAAqwI,IACAD,EAAAnrI,EAAAqd,MAAA+tH,EAAAD,GACAtsH,EAAAxnB,GAAAwnB,EAAAxnB,IAAA8zI,EACAtsH,IAAAxnB,GAAA8zI,IAEAF,IAAA,OAAAC,IAAA,IACArsH,EAAAxnB,GAAAwnB,EAAAxnB,IAAA6zI,EACArsH,IAAAxnB,GAAA6zI,GAEArsH,IAAAxnB,GAAA,KACAo3F,EAAA32F,MAAcT,IAAAgnF,EAAAqQ,GAAAu8C,EAAAC,MAEdE,EAAAL,GAAA7xG,SAYA,OARAkyG,GAAAprI,EAAA1I,SACA6zI,EAAAnrI,EAAAqd,MAAA+tH,GACAvsH,EAAAxnB,GAAAwnB,EAAAxnB,IAAA8zI,EACAtsH,IAAAxnB,GAAA8zI,GAKAtsH,EAAAvnB,OAAA,EAAAm3F,EAAA,GACAr5E,GAAAq5E,EAAA,GAAApQ,GACA8O,GAAAntF,IACAA,EAAAyuF,EAAAn3F,OAAA,SAAAsqF,GACA,OAAA4B,GAAAnsF,EAAA,EAA4BA,EAAA2I,IAAO3I,EAAAwnB,GAAA2kE,EAAAiL,EAAAp3F,OAAAmsF,EAAAnF,EAAAuD,EACnC,OAAA/iE,GAAAlmB,KAAA,OAIAy6E,GAAA,SAAA10E,EAAAsB,GACA,GAAAO,GAAAqhF,QAAA5hF,EACA,cAAAA,GAAA,YAAA4hF,EAAAgL,GAAA5sF,IACA,WAAA4hF,EAAA8M,GACA,WAAA9M,GAAArhF,EAAAooF,GAAA3oF,OAAAO,EAAAiqI,IAAAQ,GACAhrI,YAAA2oF,IAAA6hD,GACAxqI,YAAA81E,MAAAmrC,GACAhiH,MAAAoD,QAAArC,GAAA6qI,GACAvtI,MAAA0C,GAAAqxC,GACAq9C,IAAAhwF,EAAAsB,IAGAk/G,GAAA,SAAAxgH,EAAAsB,GACA,MAAAtB,MAAAsB,GAAAtB,EAAA,SAAAkjF,GACA,MAAAt+E,MAAAo5E,MAAAh+E,EAAAsB,EAAA4hF,KAIAypD,GAAA,IAAA/nI,KAAA8mI,GAEA/8C,IACApO,WAAA,EACAC,WAAA,EACAyP,OAAA,EACAC,MAAA,EACAC,OAAA,EACAC,OAAA,GAGApB,GAAA,SAAAhvF,EAAAsB,EAAAO,EAAAkT,EAAA3c,EAAAsnF,GACA,GAAAyQ,GAAAC,EAAAF,CAKA,QAJAC,EAAAvrF,KAAAkoF,KAAA9sF,IAAAsB,QAAAtB,GAAAmwF,EAAA7uF,GAAA6uF,IACAD,EAAAlwF,EAAA6B,EAAAP,EAAAyT,KAAAlT,GAAA7B,EAAAkwF,EAAAn7E,GAAAzT,EAAA4uF,IACAE,EAAAxrF,KAAAkoF,KAAAjrF,IAAAkT,QAAAlT,GAAAuuF,EAAAr7E,GAAAq7E,EAAAF,GAAAE,GACApwF,EAAA+U,EAAAzT,EAAAO,IAAA7B,KAAAsB,KAAA4uF,KAAAC,OAEA5P,WAAAnoF,EACAooF,WAAAd,EACAuQ,OAAArrF,KAAAgoF,MAAAtrF,EAAAtB,GAAA2sI,GACAz8C,MAAAtrF,KAAA0sG,KAAAphB,GAAAy8C,GACAx8C,SACAC,WAsFAw8C,GAAAt9C,GAAAZ,GAAA,qBACAm+C,GAAAv9C,GAAAL,GAAA,cAEA69C,GAAAloI,KAAAmoI,MACAC,GAAA,EACAC,GAAA,EACAC,GAAA,MAgBAC,GAAA,SAAAloC,EAAAqT,GACA,GAKA3/G,GACAyiG,EANAgyC,EAAAnoC,EAAA,GAAAooC,EAAApoC,EAAA,GAAApK,EAAAoK,EAAA,GACAqoC,EAAAh1B,EAAA,GAAAi1B,EAAAj1B,EAAA,GAAAvd,EAAAud,EAAA,GACApiF,EAAAo3G,EAAAF,EACAh3G,EAAAm3G,EAAAF,EACA96B,EAAAr8E,IAAAE,GAKA,IAAAm8E,EAAA26B,GACA9xC,EAAAx2F,KAAAs7E,IAAA6a,EAAAF,GAAAiyC,GACAn0I,EAAA,SAAAuqF,GACA,OACAkqD,EAAAlqD,EAAAhtD,EACAm3G,EAAAnqD,EAAA9sD,EACAykE,EAAAj2F,KAAA4iB,IAAAslH,GAAA5pD,EAAAkY,SAMA,CACA,GAAA4kB,GAAAp7G,KAAAkoF,KAAAylB,GACAlb,GAAA0D,IAAAF,IAAAoyC,GAAA16B,IAAA,EAAA1X,EAAAmyC,GAAAhtB,GACA5oB,GAAA2D,IAAAF,IAAAoyC,GAAA16B,IAAA,EAAAxX,EAAAiyC,GAAAhtB,GACApL,EAAAhwG,KAAAs7E,IAAAt7E,KAAAkoF,KAAAuK,IAAA,GAAAA,EAEA+D,IADAx2F,KAAAs7E,IAAAt7E,KAAAkoF,KAAAsK,IAAA,GAAAA,GACAwd,GAAAk4B,GACAn0I,EAAA,SAAAuqF,GACA,GAAA/iE,GAAA+iE,EAAAkY,EACAoyC,EAAAn9C,GAAAukB,GACA5Q,EAAAnJ,GAAAmyC,GAAAhtB,IAAAwtB,EAAAj9C,GAAAu8C,GAAA3sH,EAAAy0F,GAAAtkB,GAAAskB,GACA,QACAw4B,EAAAppC,EAAA9tE,EACAm3G,EAAArpC,EAAA5tE,EACAykE,EAAA2yC,EAAAn9C,GAAAy8C,GAAA3sH,EAAAy0F,KAOA,MAFAj8G,GAAAy5B,SAAA,IAAAgpE,EAEAziG,GAmBA80I,GAAAj9C,GAAAvC,IACAy/C,GAAAl9C,GAAApC,IAgCAu/C,GAAAh9C,GAAA1C,IACA2/C,GAAAj9C,GAAAvC,IA0BAy/C,GAAAj9C,GAAA3C,IACA6/C,GAAAl9C,GAAAxC,IAEA2/C,GAAA,SAAA5f,EAAAzvH,GAEA,OADAsvI,GAAA,GAAAztI,OAAA7B,GACA/F,EAAA,EAAiBA,EAAA+F,IAAO/F,EAAAq1I,EAAAr1I,GAAAw1H,EAAAx1H,GAAA+F,EAAA,GACxB,OAAAsvI,IAGAt8C,GAAA,EACAjiE,GAAA,EACA0iE,GAAA,EACAH,GAAA,IAGAH,GAAA,EACAd,GAAA,EACAI,GAAA,EACAD,GAAA,gBAAAnrD,0BAAA4oC,IAAA5oC,YAAAqxC,KACA4Z,GAAA,kBAAAzlD,6CAAA,SAAAm0C,GAAkGzvD,WAAAyvD,EAAA,IAgBlG0R,IAAA1qF,UAAA6qF,GAAA7qF,WACAwU,YAAAk2E,GACAI,QAAA,SAAA56E,EAAAqkE,EAAArN,GACA,qBAAAh3D,GAAA,SAAAy9C,WAAA,6BACAuZ,IAAA,MAAAA,EAAAe,MAAAf,IAAA,MAAAqN,EAAA,GAAAA,GACAhjF,KAAAutF,OAAAyM,KAAAh6F,OACAg6F,MAAAzM,MAAAvtF,KACA05F,GAAA15F,KACAg6F,GAAAh6F,MAEAA,KAAAo5F,MAAAz6E,EACA3e,KAAAq5F,MAAA1jB,EACAskB,MAEArjD,KAAA,WACA52C,KAAAo5F,QACAp5F,KAAAo5F,MAAA,KACAp5F,KAAAq5F,MAAAr6B,IACAi7B,OAmEA,IAAAe,IAAA,SAAAr8E,EAAAqkE,EAAArN,GACA,GAAAsV,GAAA,GAAAkO,GAMA,OALAnW,GAAA,MAAAA,EAAA,GAAAA,EACAiI,EAAAsO,QAAA,SAAAqB,GACA3P,EAAAr0C,OACAj4B,EAAAi8E,EAAA5X,IACGA,EAAArN,GACHsV,GAGA+qD,GAAA,SAAAr3H,EAAAqkE,EAAArN,GACA,GAAAsV,GAAA,GAAAkO,IAAA88C,EAAAjzD,CACA,cAAAA,GAAAiI,EAAAsO,QAAA56E,EAAAqkE,EAAArN,GAAAsV,IACAjI,KAAArN,EAAA,MAAAA,EAAAe,MAAAf,EACAsV,EAAAsO,QAAA,QAAAzP,GAAA8Q,GACAA,GAAAq7C,EACAhrD,EAAAsO,QAAAzP,EAAAmsD,GAAAjzD,EAAArN,GACAh3D,EAAAi8E,IACG5X,EAAArN,GACHsV,IAGAirD,GAAAlrD,EAAA,2BACAmrD,MAEA37C,GAAA,EACAK,GAAA,EACAH,GAAA,EACAK,GAAA,EACAE,GAAA,EACAI,GAAA,EACAH,GAAA,EAEAb,GAAA,SAAAvlF,EAAAtH,EAAA3M,EAAAuD,EAAAsvE,EAAAqsB,GACA,GAAAjF,GAAAhmF,EAAAwlF,YACA,IAAAQ,GACA,GAAAj6F,IAAAi6F,GAAA,WADAhmF,GAAAwlF,eAEAtzF,IAAA8N,EAAAjU,GACA2M,OACApJ,QACAsvE,QACA7hE,GAAAqkI,GACA/6C,MAAAg7C,GACAxgE,KAAAoqB,EAAApqB,KACAqN,MAAA+c,EAAA/c,MACA7oD,SAAA4lE,EAAA5lE,SACAihE,KAAA2E,EAAA3E,KACA9B,MAAA,KACAiB,MAAAC,MA+HA+J,GAAA,SAAAzvF,EAAAtH,GACA,GACA6sF,GACAnpD,EAEAxwC,EAJAo6F,EAAAhmF,EAAAwlF,aAGAmG,GAAA,CAGA,IAAA3F,EAAA,CAEAttF,EAAA,MAAAA,EAAA,KAAAA,EAAA,EAEA,KAAA9M,IAAAo6F,IACAT,EAAAS,EAAAp6F,IAAA8M,UACA0jC,EAAAmpD,EAAAE,MAAAG,IAAAL,EAAAE,MAAAc,GACAhB,EAAAE,MAAAW,GACAb,EAAAf,MAAA1iD,OACA1F,GAAAmpD,EAAAxoF,GAAAtK,KAAA,YAAAuN,IAAAoiD,SAAAmjC,EAAAj2F,MAAAi2F,EAAA3mB,aACAonB,GAAAp6F,IALkD+/F,GAAA,CAQlDA,UAAA3rF,GAAAwlF,eAGA87C,GAAA,SAAA5oI,GACA,MAAAxN,MAAAqmF,KAAA,WACAke,GAAAvkG,KAAAwN,MAqDA6oI,GAAA,SAAA7oI,EAAA/F,GACA,GAAA5G,GAAAb,KAAA27F,GAIA,IAFAnuF,GAAA,GAEAxF,UAAArH,OAAA,GAEA,OAAAsqF,GADAkQ,EAAAR,GAAA36F,KAAA8U,OAAAjU,GAAAs6F,MACAz6F,EAAA,EAAA+F,EAAA00F,EAAAx6F,OAAwCD,EAAA+F,IAAO/F,EAC/C,IAAAuqF,EAAAkQ,EAAAz6F,IAAA8M,SACA,MAAAy9E,GAAAxjF,KAGA,aAGA,MAAAzH,MAAAqmF,MAAA,MAAA5+E,EAAA6zF,GAAAG,IAAA56F,EAAA2M,EAAA/F,KAgBAs0F,GAAA,SAAAh0F,EAAAsB,GACA,GAAAO,EACA,wBAAAP,GAAA0uF,GACA1uF,YAAA2oF,IAAA6hD,IACAjqI,EAAAooF,GAAA3oF,OAAAO,EAAAiqI,IACAQ,IAAAtsI,EAAAsB,IAiEAitI,GAAA,SAAA9oI,EAAA/F,GACA,GAAAmkF,GAAAtkE,GAAA9Z,GAAA9M,EAAA,cAAAkrF,EAAAgpD,GAAA74C,EACA,OAAA/7F,MAAA08F,UAAAlvF,EAAA,kBAAA/F,IACAmkF,EAAAC,MAAA2Q,GAAAF,IAAA1Q,EAAAlrF,EAAAg7F,GAAA17F,KAAA,QAAAwN,EAAA/F,IACA,MAAAA,GAAAmkF,EAAAC,MAAAgQ,GAAAD,IAAAhQ,IACAA,EAAAC,MAAAuQ,GAAAN,IAAAlQ,EAAAlrF,EAAA+G,EAAA,MAyBA8uI,GAAA,SAAA/oI,EAAA/F,GACA,GAAA5H,GAAA,QAAA2N,CACA,IAAAxF,UAAArH,OAAA,SAAAd,EAAAG,KAAAm7F,MAAAt7F,OAAAm1B,MACA,UAAAvtB,EAAA,MAAAzH,MAAAm7F,MAAAt7F,EAAA,KACA,sBAAA4H,GAAA,SAAAnC,MACA,IAAAsmF,GAAAtkE,GAAA9Z,EACA,OAAAxN,MAAAm7F,MAAAt7F,GAAA+rF,EAAAC,MAAA4Q,GAAAC,IAAA9Q,EAAAnkF,KAeA+uI,GAAA,SAAA/uI,GACA,GAAA5G,GAAAb,KAAA27F,GAEA,OAAA3zF,WAAArH,OACAX,KAAAqmF,MAAA,kBAAA5+E,GACAk1F,GACAC,IAAA/7F,EAAA4G,IACAkzF,GAAA36F,KAAA8U,OAAAjU,GAAAmiF,OAeAyzD,GAAA,SAAAhvI,GACA,GAAA5G,GAAAb,KAAA27F,GAEA,OAAA3zF,WAAArH,OACAX,KAAAqmF,MAAA,kBAAA5+E,GACAo1F,GACAC,IAAAj8F,EAAA4G,IACAkzF,GAAA36F,KAAA8U,OAAAjU,GAAAs5B,UAUAu8G,GAAA,SAAAjvI,GACA,GAAA5G,GAAAb,KAAA27F,GAEA,OAAA3zF,WAAArH,OACAX,KAAAqmF,KAAA0W,GAAAl8F,EAAA4G,IACAkzF,GAAA36F,KAAA8U,OAAAjU,GAAAu6F,MAGAu7C,GAAA,SAAA7mI,GACA,kBAAAA,OAAAo1H,GAAAp1H,GAEA,QAAA8gF,GAAA5wF,KAAA8wF,QAAA7nF,EAAA2nF,EAAAjwF,OAAAqlI,EAAA,GAAA19H,OAAAW,GAAAvG,EAAA,EAAqFA,EAAAuG,IAAOvG,EAC5F,OAAAoS,GAAA4+D,EAAAkd,EAAAluF,GAAA+D,EAAAitE,EAAA/yE,OAAAulI,EAAAF,EAAAtjI,MAAAhC,EAAA,EAA4FA,EAAA+F,IAAO/F,GACnGoU,EAAA4+D,EAAAhzE,KAAAoP,EAAAvI,KAAAuN,IAAAoiD,SAAAx2D,EAAAgzE,IACAwyD,EAAA/kI,KAAA2T,EAKA,WAAAq/B,IAAA6xF,EAAAhmI,KAAA+wF,SAAA/wF,KAAA69F,MAAA79F,KAAA27F,MAGAi7C,GAAA,SAAA3sH,GACA,GAAAA,EAAA0xE,MAAA37F,KAAA27F,IAAA,SAAAr2F,MAEA,QAAA0hI,GAAAhnI,KAAA8wF,QAAAm2C,EAAAh9G,EAAA6mE,QAAAo2C,EAAAF,EAAArmI,OAAA2yF,EAAA2zC,EAAAtmI,OAAAsI,EAAA0D,KAAAkyE,IAAAqoD,EAAA5zC,GAAA6zC,EAAA,GAAA7+H,OAAA4+H,GAAAxkI,EAAA,EAA+JA,EAAAuG,IAAOvG,EACtK,OAAAoS,GAAAsyH,EAAAJ,EAAAtkI,GAAA2kI,EAAAJ,EAAAvkI,GAAA+D,EAAA2gI,EAAAzmI,OAAAujF,EAAAijD,EAAAzkI,GAAA,GAAA4F,OAAA7B,GAAA/F,EAAA,EAAwHA,EAAA+F,IAAO/F,GAC/HoU,EAAAsyH,EAAA1mI,IAAA2mI,EAAA3mI,MACAwjF,EAAAxjF,GAAAoU,EAKA,MAAQpS,EAAAwkI,IAAQxkI,EAChBykI,EAAAzkI,GAAAskI,EAAAtkI,EAGA,WAAAyxC,IAAAgzF,EAAAnnI,KAAA+wF,SAAA/wF,KAAA69F,MAAA79F,KAAA27F,MA0BAk7C,GAAA,SAAArpI,EAAA0+E,GACA,GAAArrF,GAAAb,KAAA27F,GAEA,OAAA3zF,WAAArH,OAAA,EACAg6F,GAAA36F,KAAA8U,OAAAjU,GAAAgR,MAAArE,GACAxN,KAAAqmF,KAAA2W,GAAAn8F,EAAA2M,EAAA0+E,KAWA4qD,GAAA,WACA,MAAA92I,MAAA6R,GAAA,aAAAurF,GAAAp9F,KAAA27F,OAGAo7C,GAAA,SAAAC,GACA,GAAAxpI,GAAAxN,KAAA69F,MACAh9F,EAAAb,KAAA27F,GAEA,mBAAAq7C,OAAApS,GAAAoS,GAEA,QAAApmD,GAAA5wF,KAAA8wF,QAAA7nF,EAAA2nF,EAAAjwF,OAAAqlI,EAAA,GAAA19H,OAAAW,GAAAvG,EAAA,EAAqFA,EAAAuG,IAAOvG,EAC5F,OAAAoS,GAAAmxH,EAAAvyD,EAAAkd,EAAAluF,GAAA+D,EAAAitE,EAAA/yE,OAAAulI,EAAAF,EAAAtjI,GAAA,GAAA4F,OAAA7B,GAAA/F,EAAA,EAA+GA,EAAA+F,IAAO/F,GACtHoU,EAAA4+D,EAAAhzE,MAAAulI,EAAA+Q,EAAAzvI,KAAAuN,IAAAoiD,SAAAx2D,EAAAgzE,MACA,YAAA5+D,KAAAmxH,EAAA/uE,SAAApiD,EAAAoiD,UACAgvE,EAAAxlI,GAAAulI,EACA5rC,GAAA6rC,EAAAxlI,GAAA8M,EAAA3M,EAAAH,EAAAwlI,EAAAvrC,GAAA7lF,EAAAjU,IAKA,WAAAszC,IAAA6xF,EAAAhmI,KAAA+wF,SAAAvjF,EAAA3M,IAGAo2I,GAAA,SAAAD,GACA,GAAAxpI,GAAAxN,KAAA69F,MACAh9F,EAAAb,KAAA27F,GAEA,mBAAAq7C,OAAA7Q,GAAA6Q,GAEA,QAAApmD,GAAA5wF,KAAA8wF,QAAA7nF,EAAA2nF,EAAAjwF,OAAAqlI,KAAAn1C,KAAAnuF,EAAA,EAAyFA,EAAAuG,IAAOvG,EAChG,OAAAoS,GAAA4+D,EAAAkd,EAAAluF,GAAA+D,EAAAitE,EAAA/yE,OAAAD,EAAA,EAA8DA,EAAA+F,IAAO/F,EACrE,GAAAoU,EAAA4+D,EAAAhzE,GAAA,CACA,OAAAqN,GAAAvM,EAAAw1I,EAAAzvI,KAAAuN,IAAAoiD,SAAAx2D,EAAAgzE,GAAAosB,EAAAnF,GAAA7lF,EAAAjU,GAAAypF,EAAA,EAAA1oF,EAAAJ,EAAAb,OAAwI2pF,EAAA1oF,IAAO0oF,GAC/Iv8E,EAAAvM,EAAA8oF,KACA+P,GAAAtsF,EAAAP,EAAA3M,EAAAypF,EAAA9oF,EAAAs+F,EAGAkmC,GAAA7kI,KAAAK,GACAqvF,EAAA1vF,KAAA2T,GAKA,UAAAq/B,IAAA6xF,EAAAn1C,EAAArjF,EAAA3M,IAGAq2I,GAAAttD,GAAAn7E,UAAAwU,YAEAk0H,GAAA,WACA,UAAAD,IAAAl3I,KAAA8wF,QAAA9wF,KAAA+wF,WAiDAqmD,GAAA,SAAA5pI,EAAA/F,EAAAknF,GACA,GAAAjuF,GAAA,cAAA8M,GAAA,IAAAmnI,GAAA54C,EACA,cAAAt0F,EAAAzH,KACA09F,WAAAlwF,EAAA6vF,GAAA7vF,EAAA9M,IACAmR,GAAA,aAAArE,EAAA+vF,GAAA/vF,IACAxN,KAAA09F,WAAAlwF,EAAA,kBAAA/F,GACAg2F,GAAAjwF,EAAA9M,EAAAg7F,GAAA17F,KAAA,SAAAwN,EAAA/F,IACA+1F,GAAAhwF,EAAA9M,EAAA+G,EAAA,IAAAknF,IAcA0oD,GAAA,SAAA7pI,EAAA/F,EAAAknF,GACA,GAAA9uF,GAAA,UAAA2N,GAAA,GACA,IAAAxF,UAAArH,OAAA,SAAAd,EAAAG,KAAAm7F,MAAAt7F,OAAAm1B,MACA,UAAAvtB,EAAA,MAAAzH,MAAAm7F,MAAAt7F,EAAA,KACA,sBAAA4H,GAAA,SAAAnC,MACA,OAAAtF,MAAAm7F,MAAAt7F,EAAA69F,GAAAlwF,EAAA/F,EAAA,MAAAknF,EAAA,GAAAA,KAgBA2oD,GAAA,SAAA7vI,GACA,MAAAzH,MAAAm7F,MAAA,yBAAA1zF,GACAm2F,GAAAlC,GAAA17F,KAAA,OAAAyH,IACAk2F,GAAA,MAAAl2F,EAAA,GAAAA,EAAA,MAGA8vI,GAAA,WAKA,OAJA/pI,GAAAxN,KAAA69F,MACA25C,EAAAx3I,KAAA27F,IACA87C,EAAA35C,KAEAlN,EAAA5wF,KAAA8wF,QAAA7nF,EAAA2nF,EAAAjwF,OAAA+B,EAAA,EAA2DA,EAAAuG,IAAOvG,EAClE,OAAAoS,GAAA4+D,EAAAkd,EAAAluF,GAAA+D,EAAAitE,EAAA/yE,OAAAD,EAAA,EAA8DA,EAAA+F,IAAO/F,EACrE,GAAAoU,EAAA4+D,EAAAhzE,GAAA,CACA,GAAAo/F,GAAAnF,GAAA7lF,EAAA0iI,EACAn9C,IAAAvlF,EAAAtH,EAAAiqI,EAAA/2I,EAAAgzE,GACAiC,KAAAmqB,EAAAnqB,KAAAmqB,EAAA9c,MAAA8c,EAAA3lE,SACA6oD,MAAA,EACA7oD,SAAA2lE,EAAA3lE,SACAihE,KAAA0E,EAAA1E,OAMA,UAAAjnD,IAAAy8C,EAAA5wF,KAAA+wF,SAAAvjF,EAAAiqI,IAGA52I,GAAA,EAiBA62I,GAAA9tD,GAAAn7E,SAEA0lC,IAAA1lC,UAAAwb,GAAAxb,WACAwU,YAAAkxB,GACAk2C,OAAA0sD,GACAltD,UAAAotD,GACAhxI,OAAA0wI,GACAzyD,MAAA0yD,GACAhtD,UAAAutD,GACAltH,WAAAstH,GACAhwI,KAAAmwI,GAAAnwI,KACAugG,MAAA4vC,GAAA5vC,MACAhzF,KAAA4iI,GAAA5iI,KACAsnC,KAAAs7F,GAAAt7F,KACAqkD,MAAAi3C,GAAAj3C,MACApa,KAAAqxD,GAAArxD,KACAx0E,GAAAglI,GACAl3G,KAAA22G,GACA55C,UAAA65C,GACA7gH,MAAA0hH,GACA15C,WAAA25C,GACAtmI,KAAAumI,GACAj0I,OAAAyzI,GACA37C,MAAAk7C,GACArzD,MAAAwzD,GACAr8G,SAAAs8G,GACAr7C,KAAAs7C,GA+BA,IAAAltB,IAAA,EAEAmuB,GAAA,QAAAC,GAAAz3I,GAGA,QAAAw3I,GAAA1sD,GACA,MAAAt+E,MAAAq7E,IAAAiD,EAAA9qF,GAKA,MARAA,MAMAw3I,EAAAnuB,SAAAouB,EAEAD,GACCnuB,IAEDquB,GAAA,QAAAD,GAAAz3I,GAGA,QAAA03I,GAAA5sD,GACA,SAAAt+E,KAAAq7E,IAAA,EAAAiD,EAAA9qF,GAKA,MARAA,MAMA03I,EAAAruB,SAAAouB,EAEAC,GACCruB,IAEDsuB,GAAA,QAAAF,GAAAz3I,GAGA,QAAA23I,GAAA7sD,GACA,QAAAA,GAAA,MAAAt+E,KAAAq7E,IAAAiD,EAAA9qF,GAAA,EAAAwM,KAAAq7E,IAAA,EAAAiD,EAAA9qF,IAAA,EAKA,MARAA,MAMA23I,EAAAtuB,SAAAouB,EAEAE,GACCtuB,IAED9qB,GAAA/xF,KAAA8mI,GACAl1C,GAAAG,GAAA,EAsCAS,GAAA,KACAG,GAAA,KACAD,GAAA,KACAE,GAAA,IACAE,GAAA,KACAD,GAAA,MACAE,GAAA,MACAC,GAAA,MACAC,GAAA,MACAR,GAAA,EAAAD,MAcA44C,GAAA,QAEAC,GAAA,QAAAJ,GAAA1vH,GAGA,QAAA8vH,GAAA/sD,GACA,MAAAA,OAAA/iE,EAAA,GAAA+iE,EAAA/iE,GAKA,MARAA,MAMA8vH,EAAAD,UAAAH,EAEAI,GACCD,IAEDE,GAAA,QAAAL,GAAA1vH,GAGA,QAAA+vH,GAAAhtD,GACA,QAAAA,MAAA/iE,EAAA,GAAA+iE,EAAA/iE,GAAA,EAKA,MARAA,MAMA+vH,EAAAF,UAAAH,EAEAK,GACCF,IAEDG,GAAA,QAAAN,GAAA1vH,GAGA,QAAAgwH,GAAAjtD,GACA,QAAAA,GAAA,KAAAA,MAAA/iE,EAAA,GAAA+iE,EAAA/iE,IAAA+iE,GAAA,GAAAA,IAAA/iE,EAAA,GAAA+iE,EAAA/iE,GAAA,KAKA,MARAA,MAMAgwH,EAAAH,UAAAH,EAEAM,GACCH,IAEDI,GAAA,EAAAxrI,KAAA8mI,GACA2E,GAAA,EACAC,GAAA,GAEAC,GAAA,QAAAV,GAAA7vI,EAAAsoB,GAGA,QAAAioH,GAAArtD,GACA,MAAAljF,GAAA4E,KAAAq7E,IAAA,OAAAiD,GAAAt+E,KAAAknF,KAAA3rE,EAAA+iE,GAAA56D,GAHA,GAAAnI,GAAAvb,KAAA88F,KAAA,GAAA1hG,EAAA4E,KAAAC,IAAA,EAAA7E,MAAAsoB,GAAA8nH,GASA,OAHAG,GAAAF,UAAA,SAAArwI,GAAqC,MAAA6vI,GAAA7vI,EAAAsoB,EAAA8nH,KACrCG,EAAAD,OAAA,SAAAhoH,GAAkC,MAAAunH,GAAA7vI,EAAAsoB,IAElCioH,GACCF,GAAAC,IAEDE,GAAA,QAAAX,GAAA7vI,EAAAsoB,GAGA,QAAAkoH,GAAAttD,GACA,SAAAljF,EAAA4E,KAAAq7E,IAAA,OAAAiD,OAAAt+E,KAAAknF,KAAA5I,EAAA/iE,GAAAmI,GAHA,GAAAnI,GAAAvb,KAAA88F,KAAA,GAAA1hG,EAAA4E,KAAAC,IAAA,EAAA7E,MAAAsoB,GAAA8nH,GASA,OAHAI,GAAAH,UAAA,SAAArwI,GAAsC,MAAA6vI,GAAA7vI,EAAAsoB,EAAA8nH,KACtCI,EAAAF,OAAA,SAAAhoH,GAAmC,MAAAunH,GAAA7vI,EAAAsoB,IAEnCkoH,GACCH,GAAAC,IAEDG,GAAA,QAAAZ,GAAA7vI,EAAAsoB,GAGA,QAAAmoH,GAAAvtD,GACA,QAAAA,EAAA,EAAAA,EAAA,KACAljF,EAAA4E,KAAAq7E,IAAA,KAAAiD,GAAAt+E,KAAAknF,KAAA3rE,EAAA+iE,GAAA56D,GACA,EAAAtoB,EAAA4E,KAAAq7E,IAAA,MAAAiD,GAAAt+E,KAAAknF,KAAA3rE,EAAA+iE,GAAA56D,IAAA,EALA,GAAAnI,GAAAvb,KAAA88F,KAAA,GAAA1hG,EAAA4E,KAAAC,IAAA,EAAA7E,MAAAsoB,GAAA8nH,GAWA,OAHAK,GAAAJ,UAAA,SAAArwI,GAAwC,MAAA6vI,GAAA7vI,EAAAsoB,EAAA8nH,KACxCK,EAAAH,OAAA,SAAAhoH,GAAqC,MAAAunH,GAAA7vI,EAAAsoB,IAErCmoH,GACCJ,GAAAC,IAEDr4C,IACArqB,KAAA,KACAqN,MAAA,EACA7oD,SAAA,IACAihE,KAAAiD,IAaAo6C,GAAA,SAAAjrI,GACA,GAAA3M,GACAk/F,CAEAvyF,aAAA2mC,KACAtzC,EAAA2M,EAAAmuF,IAAAnuF,IAAAqwF,QAEAh9F,EAAAi9F,MAAAiC,EAAAC,IAAArqB,KAAAe,KAAAlpE,EAAA,MAAAA,EAAA,KAAAA,EAAA,GAGA,QAAAojF,GAAA5wF,KAAA8wF,QAAA7nF,EAAA2nF,EAAAjwF,OAAA+B,EAAA,EAA2DA,EAAAuG,IAAOvG,EAClE,OAAAoS,GAAA4+D,EAAAkd,EAAAluF,GAAA+D,EAAAitE,EAAA/yE,OAAAD,EAAA,EAA8DA,EAAA+F,IAAO/F,GACrEoU,EAAA4+D,EAAAhzE,KACA25F,GAAAvlF,EAAAtH,EAAA3M,EAAAH,EAAAgzE,EAAAqsB,GAAAD,GAAAhrF,EAAAjU,GAKA,WAAAszC,IAAAy8C,EAAA5wF,KAAA+wF,SAAAvjF,EAAA3M,GAGA+oF,IAAAn7E,UAAA81F,UAAA6xC,GACAxsD,GAAAn7E,UAAAwb,WAAAwuH,EAEA,IAAAC,KAAA,MAEAxnG,GAAA,SAAAp8B,EAAAtH,GACA,GACA6sF,GACA35F,EAFAo6F,EAAAhmF,EAAAwlF,YAIA,IAAAQ,EAAA,CACAttF,EAAA,MAAAA,EAAA,KAAAA,EAAA,EACA,KAAA9M,IAAAo6F,GACA,IAAAT,EAAAS,EAAAp6F,IAAA65F,MAAAM,IAAAR,EAAA7sF,SACA,UAAA2mC,MAAAr/B,IAAA4jI,GAAAlrI,GAAA9M,GAKA,aAGAkkG,GAAA,SAAAld,GACA,kBACA,MAAAA,KAIAid,GAAA,SAAAj6F,EAAAvL,EAAAyqF,GACA5pF,KAAA0K,SACA1K,KAAAb,OACAa,KAAA4pF,aAOAyY,GAAA,WACAzjG,EAAAuT,MAAA82H,iBACArqI,EAAAuT,MAAA8+E,4BAGAwR,IAAiBj1F,KAAA,QACjBg1F,IAAkBh1F,KAAA,SAClB+1F,IAAmB/1F,KAAA,UACnBg2F,IAAmBh2F,KAAA,UAEnBwzF,IACAxzF,KAAA,IACAg0F,SAAA,SAAAz6F,IAAA5H,IACA4wE,MAAA,SAAA2X,EAAAvnF,GAAyB,MAAAunF,QAAA,GAAAvnF,EAAA,QAAAunF,EAAA,GAAAvnF,EAAA,SACzB0gG,OAAA,SAAA83C,GAAwB,MAAAA,OAAA,MAAAA,EAAA,SAGxBz3C,IACA1zF,KAAA,IACAg0F,SAAA,SAAAz6F,IAAA5H,IACA4wE,MAAA,SAAAyY,EAAAroF,GAAyB,MAAAqoF,MAAAroF,EAAA,MAAAqoF,EAAA,KAAAroF,EAAA,MAAAqoF,EAAA,MACzBqY,OAAA,SAAA83C,GAAwB,MAAAA,OAAA,MAAAA,EAAA,SAGxBC,IACAprI,KAAA,KACAg0F,SAAA,qCAAAz6F,IAAA5H,IACA4wE,MAAA,SAAA4oE,GAAuB,MAAAA,IACvB93C,OAAA,SAAA83C,GAAwB,MAAAA,KAGxBr3C,IACAF,QAAA,YACAxX,UAAA,OACAnjF,EAAA,YACAtG,EAAA,YACA+nB,EAAA,YACAknF,EAAA,YACAypC,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAGAv1C,IACAtjG,EAAA,IACAivG,EAAA,IACAypC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGAt1C,IACAj9F,EAAA,IACAyhB,EAAA,IACA2wH,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGA90C,IACA9C,QAAA,EACAxX,UAAA,EACAnjF,EAAA,KACAtG,EAAA,EACA+nB,EAAA,KACAknF,GAAA,EACAypC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,GAGA70C,IACA/C,QAAA,EACAxX,UAAA,EACAnjF,GAAA,EACAtG,EAAA,KACA+nB,EAAA,EACAknF,EAAA,KACAypC,IAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,GAyCA73C,GAAA,WACA,MAAAJ,IAAA63C,KAyZAhlD,GAAAjnF,KAAAinF,IACAC,GAAAlnF,KAAAknF,IACAolD,GAAAtsI,KAAA8mI,GACAyF,GAAAD,GAAA,EACAE,GAAA,EAAAF,GACAG,GAAAzsI,KAAAC,IAWAysI,GAAA,WAMA,QAAAA,GAAAjiD,GACA,GAOA9M,GACA5C,EACAsf,EACA/oE,EACAv9B,EACAgC,EAZA+D,EAAA2wF,EAAAz2F,OACA24I,KACAC,EAAAtkC,GAAAxuG,GACA+yI,KACAC,KACA7oD,EAAA6oD,EAAA7oD,OAAA,GAAAtoF,OAAA7B,GACAu/H,EAAA,GAAA19H,OAAA7B,IASkB,KAAlB6jF,EAAA,EAAA5pF,GAAA,IAAkBA,EAAA+F,GAAA,CACE,IAApBihF,EAAA,EAAAhlF,GAAA,IAAoBA,EAAA+D,GACpBihF,GAAA0P,EAAA12F,GAAAgC,EAEA42I,GAAAn4I,KAAAumF,GACA8xD,EAAAr4I,KAAA8zG,GAAAxuG,IACA6jF,GAAA5C,EAuBkB,IAnBlBgyD,GAAAH,EAAAxgI,KAAA,SAAAhR,EAAAsB,GACA,MAAAqwI,GAAAJ,EAAAvxI,GAAAuxI,EAAAjwI,MAIAswI,GAAAH,EAAA55I,QAAA,SAAAkd,EAAApc,GACAoc,EAAA/D,KAAA,SAAAhR,EAAAsB,GACA,MAAAswI,GAAAviD,EAAA12F,GAAAqH,GAAAqvF,EAAA12F,GAAA2I,QAOAihF,EAAA8uD,GAAA,EAAAD,GAAAriB,EAAArwH,GAAA6jF,EACArsD,EAAAqsD,EAAAwsC,EAAAqiB,GAAA1yI,EAIAihF,EAAA,EAAAhnF,GAAA,IAAkBA,EAAA+F,GAAA,CACG,IAArBugG,EAAAtf,EAAAhlF,GAAA,IAAqBA,EAAA+D,GAAA,CACrB,GAAAmzI,GAAAL,EAAA74I,GACAm5I,EAAAL,EAAAI,GAAAl3I,GACAixC,EAAAyjD,EAAAwiD,GAAAC,GACArnC,EAAA9qB,EACAqqB,EAAArqB,GAAA/zC,EAAA22C,CACA07C,GAAA6T,EAAApzI,EAAAmzI,IACAx1I,MAAAw1I,EACAE,SAAAD,EACAp0C,WAAA+M,EACA7M,SAAAoM,EACAtqG,MAAAksC,GAGAi9C,EAAAgpD,IACAx1I,MAAAw1I,EACAn0C,WAAAuB,EACArB,SAAAje,EACAjgF,MAAA6xI,EAAAM,IAEAlyD,GAAAzpD,EAIW,IAAXv9B,GAAA,IAAWA,EAAA+F,GACK,IAAhB/D,EAAAhC,EAAA,IAAgBgC,EAAA+D,GAAA,CAChB,GAAAkc,GAAAqjH,EAAAtjI,EAAA+D,EAAA/F,GACAgK,EAAAs7H,EAAAtlI,EAAA+F,EAAA/D,IACAigB,EAAAlb,OAAAiD,EAAAjD,QACAgyI,EAAAt4I,KAAAwhB,EAAAlb,MAAAiD,EAAAjD,OACiBkb,OAAAjY,SAAAiY,IACAA,SAAAjY,WAKjB,MAAAqvI,GAAAN,EAAA1gI,KAAAghI,GAAAN,EAvFA,GAAA3iB,GAAA,EACA4iB,EAAA,KACAC,EAAA,KACAI,EAAA,IAuGA,OAhBAV,GAAAviB,SAAA,SAAAlmG,GACA,MAAA5oB,WAAArH,QAAAm2H,EAAAsiB,GAAA,EAAAxoH,GAAAyoH,GAAAviB,GAGAuiB,EAAAK,WAAA,SAAA9oH,GACA,MAAA5oB,WAAArH,QAAA+4I,EAAA9oH,EAAAyoH,GAAAK,GAGAL,EAAAM,cAAA,SAAA/oH,GACA,MAAA5oB,WAAArH,QAAAg5I,EAAA/oH,EAAAyoH,GAAAM,GAGAN,EAAAU,WAAA,SAAAnpH,GACA,MAAA5oB,WAAArH,QAAA,MAAAiwB,EAAAmpH,EAAA,MAAAA,EAAAl1C,GAAAj0E,QAAAyoH,GAAAU,KAAAnpH,GAGAyoH,GAGAW,GAAA1xI,MAAAmG,UAAAiY,MAEAuzH,GAAA,SAAAvyD,GACA,kBACA,MAAAA,KAIAwyD,GAAAvtI,KAAA8mI,GACA0G,GAAA,EAAAD,GACAE,GAAA,KACAC,GAAAF,GAAAC,EAYAr1C,IAAAt2F,UAAAvE,GAAAuE,WACAwU,YAAA8hF,GACAu1C,OAAA,SAAA5yD,EAAAc,GACAxoF,KAAA4wB,GAAA,KAAA5wB,KAAAglG,IAAAhlG,KAAAklG,KAAAxd,GAAA,KAAA1nF,KAAAilG,IAAAjlG,KAAAmlG,KAAA3c,IAEA+xD,UAAA,WACA,OAAAv6I,KAAAklG,MACAllG,KAAAklG,IAAAllG,KAAAglG,IAAAhlG,KAAAmlG,IAAAnlG,KAAAilG,IACAjlG,KAAA4wB,GAAA,MAGA4pH,OAAA,SAAA9yD,EAAAc,GACAxoF,KAAA4wB,GAAA,KAAA5wB,KAAAklG,KAAAxd,GAAA,KAAA1nF,KAAAmlG,KAAA3c,IAEAiyD,iBAAA,SAAAvzC,EAAAC,EAAAzf,EAAAc,GACAxoF,KAAA4wB,GAAA,MAAAs2E,EAAA,MAAAC,EAAA,KAAAnnG,KAAAklG,KAAAxd,GAAA,KAAA1nF,KAAAmlG,KAAA3c,IAEAuwC,cAAA,SAAA7xB,EAAAC,EAAAqT,EAAAC,EAAA/yB,EAAAc,GACAxoF,KAAA4wB,GAAA,MAAAs2E,EAAA,MAAAC,EAAA,MAAAqT,EAAA,MAAAC,EAAA,KAAAz6G,KAAAklG,KAAAxd,GAAA,KAAA1nF,KAAAmlG,KAAA3c,IAEAkyD,MAAA,SAAAxzC,EAAAC,EAAAqT,EAAAC,EAAA3nB,GACAoU,KAAAC,KAAAqT,KAAAC,KAAA3nB,IACA,IAAAkU,GAAAhnG,KAAAklG,IACA+B,EAAAjnG,KAAAmlG,IACA0b,EAAArG,EAAAtT,EACA4Z,EAAArG,EAAAtT,EACAowB,EAAAvwB,EAAAE,EACAswB,EAAAvwB,EAAAE,EACAwzC,EAAApjB,IAAAC,GAGA,IAAA1kC,EAAA,WAAAxtF,OAAA,oBAAAwtF,EAGA,WAAA9yF,KAAAklG,IACAllG,KAAA4wB,GAAA,KAAA5wB,KAAAklG,IAAAgC,GAAA,KAAAlnG,KAAAmlG,IAAAgC,OAIA,IAAAwzC,EAAAP,GAKA,GAAAztI,KAAAm7E,IAAA0vC,EAAA3W,EAAAC,EAAAyW,GAAA6iB,IAAAtnD,EAKA,CACA,GAAA8nD,GAAApgC,EAAAxT,EACA6zC,EAAApgC,EAAAxT,EACA6zC,EAAAj6B,IAAAC,IACAi6B,EAAAH,IAAAC,IACAG,EAAAruI,KAAAkoF,KAAAimD,GACAG,EAAAtuI,KAAAkoF,KAAA8lD,GACA/4I,EAAAkxF,EAAAnmF,KAAA0wG,KAAA68B,GAAAvtI,KAAA48F,MAAAuxC,EAAAH,EAAAI,IAAA,EAAAC,EAAAC,KAAA,GACAC,EAAAt5I,EAAAq5I,EACAE,EAAAv5I,EAAAo5I,CAGAruI,MAAAm7E,IAAAozD,EAAA,GAAAd,KACAp6I,KAAA4wB,GAAA,KAAAs2E,EAAAg0C,EAAA3jB,GAAA,KAAApwB,EAAA+zC,EAAA1jB,IAGAx3H,KAAA4wB,GAAA,IAAAkiE,EAAA,IAAAA,EAAA,WAAA0kC,EAAAojB,EAAArjB,EAAAsjB,GAAA,KAAA76I,KAAAklG,IAAAgC,EAAAi0C,EAAAt6B,GAAA,KAAA7gH,KAAAmlG,IAAAgC,EAAAg0C,EAAAr6B,OApBA9gH,MAAA4wB,GAAA,KAAA5wB,KAAAklG,IAAAgC,GAAA,KAAAlnG,KAAAmlG,IAAAgC,UAuBA+3B,IAAA,SAAAx3C,EAAAc,EAAAsK,EAAA0f,EAAAT,EAAAqpC,GACA1zD,KAAAc,KAAAsK,IACA,IAAA70D,GAAA60D,EAAAnmF,KAAAinF,IAAA4e,GACAr0E,EAAA20D,EAAAnmF,KAAAknF,IAAA2e,GACAxL,EAAAtf,EAAAzpD,EACAgpE,EAAAze,EAAArqD,EACAm5F,EAAA,EAAA8jB,EACAx5B,EAAAw5B,EAAA5oC,EAAAT,IAAAS,CAGA,IAAA1f,EAAA,WAAAxtF,OAAA,oBAAAwtF,EAGA,QAAA9yF,KAAAklG,IACAllG,KAAA4wB,GAAA,IAAAo2E,EAAA,IAAAC,GAIAt6F,KAAAm7E,IAAA9nF,KAAAklG,IAAA8B,GAAAozC,IAAAztI,KAAAm7E,IAAA9nF,KAAAmlG,IAAA8B,GAAAmzC,MACAp6I,KAAA4wB,GAAA,IAAAo2E,EAAA,IAAAC,GAIAnU,IAGA8uB,EAAA,IAAAA,IAAAu4B,OAGAv4B,EAAAy4B,GACAr6I,KAAA4wB,GAAA,IAAAkiE,EAAA,IAAAA,EAAA,QAAAwkC,EAAA,KAAA5vC,EAAAzpD,GAAA,KAAAuqD,EAAArqD,GAAA,IAAA20D,EAAA,IAAAA,EAAA,QAAAwkC,EAAA,KAAAt3H,KAAAklG,IAAA8B,GAAA,KAAAhnG,KAAAmlG,IAAA8B,GAIA2a,EAAAw4B,KACAp6I,KAAA4wB,GAAA,IAAAkiE,EAAA,IAAAA,EAAA,SAAA8uB,GAAAs4B,IAAA,IAAA5iB,EAAA,KAAAt3H,KAAAklG,IAAAxd,EAAAoL,EAAAnmF,KAAAinF,IAAAme,IAAA,KAAA/xG,KAAAmlG,IAAA3c,EAAAsK,EAAAnmF,KAAAknF,IAAAke,OAGA6zB,KAAA,SAAAl+C,EAAAc,EAAA4mB,EAAAvyF,GACA7c,KAAA4wB,GAAA,KAAA5wB,KAAAglG,IAAAhlG,KAAAklG,KAAAxd,GAAA,KAAA1nF,KAAAilG,IAAAjlG,KAAAmlG,KAAA3c,GAAA,MAAA4mB,EAAA,MAAAvyF,EAAA,KAAAuyF,EAAA,KAEAttG,SAAA,WACA,MAAA9B,MAAA4wB,GAwBA,IAAAyqH,IAAA,WAQA,QAAAA,KACA,GAAAt0E,GACAu0E,EAAAtB,GAAAzyI,KAAAS,WACAkgB,EAAAvF,EAAA1a,MAAAjI,KAAAs7I,GACArwD,EAAAvgF,EAAAzC,MAAAjI,KAAAs7I,GACAC,GAAAh2C,EAAAt9F,MAAAjI,MAAAs7I,EAAA,GAAApzH,EAAAozH,IACAE,EAAA/1C,EAAAx9F,MAAAjI,KAAAs7I,GAAApC,GACAuC,EAAA91C,EAAA19F,MAAAjI,KAAAs7I,GAAApC,GACAwC,EAAAH,EAAA3nD,GAAA4nD,GACA5+B,EAAA2+B,EAAA1nD,GAAA2nD,GACAG,GAAAp2C,EAAAt9F,MAAAjI,MAAAs7I,EAAA,GAAArwD,EAAAqwD,IACAM,EAAAn2C,EAAAx9F,MAAAjI,KAAAs7I,GAAApC,GACA2C,EAAAl2C,EAAA19F,MAAAjI,KAAAs7I,GAAApC,EAaA,IAXAjoI,MAAA81D,EAAA78D,MAEA+G,EAAAqpI,OAAAoB,EAAA9+B,GACA3rG,EAAAiuH,IAAA,IAAAqc,EAAAC,EAAAC,GACAD,IAAAI,GAAAH,IAAAI,IACA5qI,EAAAwpI,iBAAA,IAAAkB,EAAA/nD,GAAAgoD,GAAAD,EAAA9nD,GAAA+nD,IACA3qI,EAAAiuH,IAAA,IAAAyc,EAAAC,EAAAC,IAEA5qI,EAAAwpI,iBAAA,IAAAiB,EAAA9+B,GACA3rG,EAAAspI,YAEAxzE,EAAA,MAAA91D,GAAA,KAAA81D,EAAA,SAhCA,GAAApkD,GAAAyiF,GACA16F,EAAA26F,GACAE,EAAAD,GACAG,EAAAD,GACAG,EAAAD,GACAz0F,EAAA,IAsDA,OAxBAoqI,GAAA91C,OAAA,SAAA30E,GACA,MAAA5oB,WAAArH,QAAA4kG,EAAA,kBAAA30E,KAAAqpH,IAAArpH,GAAAyqH,GAAA91C,GAGA81C,EAAA51C,WAAA,SAAA70E,GACA,MAAA5oB,WAAArH,QAAA8kG,EAAA,kBAAA70E,KAAAqpH,IAAArpH,GAAAyqH,GAAA51C,GAGA41C,EAAA11C,SAAA,SAAA/0E,GACA,MAAA5oB,WAAArH,QAAAglG,EAAA,kBAAA/0E,KAAAqpH,IAAArpH,GAAAyqH,GAAA11C,GAGA01C,EAAA14H,OAAA,SAAAiO,GACA,MAAA5oB,WAAArH,QAAAgiB,EAAAiO,EAAAyqH,GAAA14H,GAGA04H,EAAA3wI,OAAA,SAAAkmB,GACA,MAAA5oB,WAAArH,QAAA+J,EAAAkmB,EAAAyqH,GAAA3wI,GAGA2wI,EAAApqI,QAAA,SAAA2f,GACA,MAAA5oB,WAAArH,QAAAsQ,EAAA,MAAA2f,EAAA,KAAAA,EAAAyqH,GAAApqI,GAGAoqI,GAGA78D,GAAA,GAIAvmB,IAAAxpD,UAAAm3F,GAAAn3F,WACAwU,YAAAg1C,GACAv/C,IAAA,SAAA7Y,GACA,MAAA2+E,IAAA3+E,IAAAG,OAEA2B,IAAA,SAAA9B,GACA,MAAAG,MAAAw+E,GAAA3+E,IAEAwM,IAAA,SAAAxM,EAAA4H,GAEA,MADAzH,MAAAw+E,GAAA3+E,GAAA4H,EACAzH,MAEAqD,OAAA,SAAAxD,GACA,GAAAoM,GAAAuyE,GAAA3+E,CACA,OAAAoM,KAAAjM,mBAAAiM,IAEAsN,MAAA,WACA,OAAAtN,KAAAjM,MAAAiM,EAAA,KAAAuyE,UAAAx+E,MAAAiM,IAEAtM,KAAA,WACA,GAAAA,KACA,QAAAsM,KAAAjM,MAAAiM,EAAA,KAAAuyE,IAAA7+E,EAAAwB,KAAA8K,EAAAya,MAAA,GACA,OAAA/mB,IAEAw5C,OAAA,WACA,GAAAA,KACA,QAAAltC,KAAAjM,MAAAiM,EAAA,KAAAuyE,IAAArlC,EAAAh4C,KAAAnB,KAAAiM,GACA,OAAAktC,IAEA4d,QAAA,WACA,GAAAA,KACA,QAAA9qD,KAAAjM,MAAAiM,EAAA,KAAAuyE,IAAAznB,EAAA51D,MAAyEtB,IAAAoM,EAAAya,MAAA,GAAAjf,MAAAzH,KAAAiM,IACzE,OAAA8qD,IAEA3a,KAAA,WACA,GAAAA,GAAA,CACA,QAAAnwC,KAAAjM,MAAAiM,EAAA,KAAAuyE,MAAApiC,CACA,OAAAA,IAEAqkD,MAAA,WACA,OAAAx0F,KAAAjM,MAAA,GAAAiM,EAAA,KAAAuyE,GAAA,QACA,WAEA6H,KAAA,SAAAoB,GACA,OAAAx7E,KAAAjM,MAAAiM,EAAA,KAAAuyE,IAAAiJ,EAAAznF,KAAAiM,KAAAya,MAAA,GAAA1mB,OA0BA,IAAA87I,IAAA,WAOA,QAAA7zI,GAAAmwC,EAAA8kB,EAAA6+E,EAAAC,GACA,GAAA9+E,GAAAv9D,EAAAgB,OAAA,aAAAs7I,EACAA,EAAA7jG,GAAA,MAAA8jG,EACA9jG,EAAAr/B,KAAAmjI,GACA9jG,CAWA,KATA,GAGAw1C,GACAnmF,EAEA0xC,EANAz4C,GAAA,EACA+F,EAAA2xC,EAAAz3C,OACAd,EAAAF,EAAAu9D,KAGAi/E,EAAAv2C,KAEA7jG,EAAAg6I,MAEAr7I,EAAA+F,IACA0yC,EAAAgjG,EAAAx6I,IAAAisF,EAAA/tF,EAAA4H,EAAA2wC,EAAA13C,IAAA,KACAy4C,EAAAh4C,KAAAsG,GAEA00I,EAAA9vI,IAAAuhF,GAAAnmF,GAQA,OAJA00I,GAAA91D,KAAA,SAAAltC,EAAAt5C,GACAm8I,EAAAj6I,EAAAlC,EAAAoI,EAAAkxC,EAAA+jB,EAAA6+E,EAAAC,MAGAj6I,EAGA,QAAAg1D,GAAAhwD,EAAAm2D,GACA,KAAAA,EAAAv9D,EAAAgB,OAAA,MAAAoG,EACA,IAAAqxC,GAAAgkG,EAAAC,EAAAn/E,EAAA,EAGA,OAFA,OAAA++E,GAAA/+E,GAAAv9D,EAAAgB,OAAAy3C,EAAArxC,EAAAgwD,WACA3e,KAAArxC,EAAAs/E,KAAA,SAAA1yC,EAAA22C,GAA8ClyC,EAAAj3C,MAAatB,IAAAyqF,EAAAnxC,OAAA4d,EAAApjB,EAAAupB,QAC3D,MAAAk/E,EAAAhkG,EAAAr/B,KAAA,SAAAhR,EAAAsB,GAAwD,MAAA+yI,GAAAr0I,EAAAlI,IAAAwJ,EAAAxJ,OAAgCu4C,EAzCxF,GAEA8jG,GACAD,EACAH,EAJAn8I,KACA08I,IA2CA,OAAAP,IACAphG,OAAA,SAAAtC,GAA6B,MAAAnwC,GAAAmwC,EAAA,EAAAytD,GAAAC,KAC7B/+F,IAAA,SAAAqxC,GAA0B,MAAAnwC,GAAAmwC,EAAA,EAAA2tD,GAAAC,KAC1BjvC,QAAA,SAAA3e,GAA8B,MAAA2e,GAAA9uD,EAAAmwC,EAAA,EAAA2tD,GAAAC,IAAA,IAC9BnmG,IAAA,SAAAid,GAAoC,MAAdnd,GAAAwB,KAAA2b,GAAcg/H,GACpCO,SAAA,SAAAtyD,GAAkE,MAAnCsyD,GAAA18I,EAAAgB,OAAA,GAAAopF,EAAmC+xD,GAClEI,WAAA,SAAAnyD,GAAqD,MAApBmyD,GAAAnyD,EAAoB+xD,GACrDG,OAAA,SAAAx0D,GAAqC,MAAZw0D,GAAAx0D,EAAYq0D,KAsBrCjjE,GAAA+sB,GAAAn3F,SAEAihC,IAAAjhC,UAAAw3F,GAAAx3F,WACAwU,YAAAysB,GACAh3B,IAAAmgE,GAAAngE,IACA3G,IAAA,SAAAtK,GAGA,MAFAA,IAAA,GACAzH,KAAAw+E,GAAA/2E,KACAzH,MAEAqD,OAAAw1E,GAAAx1E,OACAkW,MAAAs/D,GAAAt/D,MACA4/B,OAAA0/B,GAAAl5E,KACAy8C,KAAAy8B,GAAAz8B,KACAqkD,MAAA5nB,GAAA4nB,MACApa,KAAAxN,GAAAwN,KAmBA,IAAA1mF,IAAA,SAAAoH,GACA,GAAApH,KACA,QAAAE,KAAAkH,GAAApH,EAAAwB,KAAAtB,EACA,OAAAF,IAGAw5C,GAAA,SAAApyC,GACA,GAAAoyC,KACA,QAAAt5C,KAAAkH,GAAAoyC,EAAAh4C,KAAA4F,EAAAlH,GACA,OAAAs5C,IAGA4d,GAAA,SAAAhwD,GACA,GAAAgwD,KACA,QAAAl3D,KAAAkH,GAAAgwD,EAAA51D,MAAqCtB,MAAA4H,MAAAV,EAAAlH,IACrC,OAAAk3D,IAgCAulF,GAAA,SAAAC,GAIA,QAAA95G,GAAA1xB,EAAA02E,GACA,GAAA3Y,GAAAq3B,EAAAI,EAAAi2C,EAAAzrI,EAAA,SAAAs1F,EAAA3lG,GACA,GAAAouE,EAAA,MAAAA,GAAAu3B,EAAA3lG,EAAA,EACAylG,GAAAE,EAAAv3B,EAAA2Y,EAAA2e,GAAAC,EAAA5e,GAAAye,GAAAG,IAGA,OADAE,GAAAJ,UACAI,EAGA,QAAAi2C,GAAAzrI,EAAA02E,GAUA,QAAAg1D,KACA,GAAA5sB,GAAA5sB,EAAA,MAAAy5C,EACA,IAAAC,EAAA,MAAAA,IAAA,EAAAC,CAGA,IAAAhzI,GAAAlH,EAAAmtH,CACA,SAAA9+G,EAAAlH,WAAAnH,GAAA,CAEA,IADA,GAAAhC,GAAAgC,EACAhC,IAAAuiG,GACA,QAAAlyF,EAAAlH,WAAAnJ,GAAA,CACA,QAAAqQ,EAAAlH,WAAAnJ,EAAA,WACAA,EAWA,MARAmvH,GAAAnvH,EAAA,EACAkJ,EAAAmH,EAAAlH,WAAAnJ,EAAA,GACA,KAAAkJ,GACA+yI,GAAA,EACA,KAAA5rI,EAAAlH,WAAAnJ,EAAA,MAAAmvH,GACS,KAAAjmH,IACT+yI,GAAA,GAEA5rI,EAAA2V,MAAAhkB,EAAA,EAAAhC,GAAAm2B,QAAA,WAIA,KAAAg5F,EAAA5sB,GAAA,CACA,GAAA3Y,GAAA,CAEA,UADA1gF,EAAAmH,EAAAlH,WAAAgmH,MACA8sB,GAAA,MACA,SAAA/yI,EAA4B+yI,GAAA,EAAY,KAAA5rI,EAAAlH,WAAAgmH,WAAAvlC,OACxC,IAAA1gF,IAAAizI,EAAA,QACA,OAAA9rI,GAAA2V,MAAAhkB,EAAAmtH,EAAAvlC,GAIA,MAAAv5E,GAAA2V,MAAAhkB,GAGA,IAhDA,GAMAuoF,GACA0xD,EAPAC,KACAF,KACAn2C,KACAtD,EAAAlyF,EAAApQ,OACAkvH,EAAA,EACAppH,EAAA,GA2CAwkF,EAAAwxD,OAAAC,GAAA,CAEA,IADA,GAAA30I,MACAkjF,IAAA2xD,GAAA3xD,IAAAyxD,GACA30I,EAAA5G,KAAA8pF,GACAA,EAAAwxD,GAEAh1D,IAAA,OAAA1/E,EAAA0/E,EAAA1/E,EAAAtB,OACA8/F,EAAAplG,KAAA4G,GAGA,MAAAw+F,GAGA,QAAAnd,GAAAmd,EAAAJ,GAEA,MADA,OAAAA,MAAAG,GAAAC,KACAJ,EAAAp/F,IAAA+1I,GAAA96I,KAAAu6I,IAAArzI,OAAAq9F,EAAAx/F,IAAA,SAAAs/F,GACA,MAAAF,GAAAp/F,IAAA,SAAA0/F,GACA,MAAAq2C,GAAAz2C,EAAAI,MACOzkG,KAAAu6I,MACFv6I,KAAA,MAGL,QAAA+6I,GAAAx2C,GACA,MAAAA,GAAAx/F,IAAAi2I,GAAAh7I,KAAA,MAGA,QAAAg7I,GAAA32C,GACA,MAAAA,GAAAt/F,IAAA+1I,GAAA96I,KAAAu6I,GAGA,QAAAO,GAAA/rI,GACA,aAAAA,EAAA,GACAksI,EAAAx3I,KAAAsL,GAAA,QAAAA,EAAA8lB,QAAA,gBACA9lB,EA9FA,GAAAksI,GAAA,GAAA53H,QAAA,KAAAk3H,EAAA,SACAM,EAAAN,EAAA1yI,WAAA,EAgGA,QACA44B,QACA+5G,YACApzD,SACA2zD,eAIAG,GAAAZ,GAAA,KAEAa,GAAAD,GAAAz6G,MACA26G,GAAAF,GAAAV,UACAa,GAAAH,GAAA9zD,OACAk0D,GAAAJ,GAAAH,WAEAQ,GAAAjB,GAAA,MAEAkB,GAAAD,GAAA96G,MACAg7G,GAAAF,GAAAf,UACAkB,GAAAH,GAAAn0D,OACAu0D,GAAAJ,GAAAR,WAEAa,GAAA,SAAAl2D,EAAAc,GAMA,QAAAq1D,KACA,GAAAn9I,GAEAoU,EADArO,EAAAqhG,EAAAnnG,OAEAm9I,EAAA,EACAC,EAAA,CAEA,KAAAr9I,EAAA,EAAeA,EAAA+F,IAAO/F,EACtBoU,EAAAgzF,EAAApnG,GAAAo9I,GAAAhpI,EAAA4yE,EAAAq2D,GAAAjpI,EAAA0zE,CAGA,KAAAs1D,IAAAr3I,EAAAihF,EAAAq2D,IAAAt3I,EAAA+hF,EAAA9nF,EAAA,EAAiDA,EAAA+F,IAAO/F,EACxDoU,EAAAgzF,EAAApnG,GAAAoU,EAAA4yE,GAAAo2D,EAAAhpI,EAAA0zE,GAAAu1D,EAjBA,GAAAj2C,EAiCA,OA/BA,OAAApgB,MAAA,GACA,MAAAc,MAAA,GAkBAq1D,EAAAx8C,WAAA,SAAAzwE,GACAk3E,EAAAl3E,GAGAitH,EAAAn2D,EAAA,SAAA92D,GACA,MAAA5oB,WAAArH,QAAA+mF,GAAA92D,EAAAitH,GAAAn2D,GAGAm2D,EAAAr1D,EAAA,SAAA53D,GACA,MAAA5oB,WAAArH,QAAA6nF,GAAA53D,EAAAitH,GAAAr1D,GAGAq1D,GAGAG,GAAA,SAAAt2D,GACA,kBACA,MAAAA,KAIAu2D,GAAA,WACA,aAAAtxI,KAAAiuE,SAAA,KAGAsjE,GAAA,SAAAphI,GACA,GAAA4qE,IAAA1nF,KAAAonG,GAAA7/F,KAAA,KAAAuV,GACA0rE,GAAAxoF,KAAAqnG,GAAA9/F,KAAA,KAAAuV,EACA,OAAA/K,IAAA/R,KAAAynG,MAAA/f,EAAAc,GAAAd,EAAAc,EAAA1rE,IAmFAqhI,GAAA,SAAAz2D,EAAAc,GACA,GAAA7hF,MAAA+gF,OAAA/gF,MAAA6hF,MAAA,MAAAxoF,KAEA,IAAAgnG,GAAAhnG,KAAAglG,IACAiC,EAAAjnG,KAAAilG,IACAiC,EAAAlnG,KAAAklG,IACAiC,EAAAnnG,KAAAmlG,GAKA,IAAAx+F,MAAAqgG,GACAE,GAAAF,EAAAr6F,KAAAszE,MAAAyH,IAAA,EACAyf,GAAAF,EAAAt6F,KAAAszE,MAAAuI,IAAA,MAIA,MAAAwe,EAAAtf,KAAAwf,GAAAD,EAAAze,KAAA2e,GAiCA,MAAAnnG,KAhCA,IAEA8N,GACApN,EAHAguG,EAAAxH,EAAAF,EACAlyF,EAAA9U,KAAA8mG,KAIA,QAAApmG,GAAA8nF,GAAAye,EAAAE,GAAA,MAAAzf,GAAAsf,EAAAE,GAAA,GACA,OACA,GAAAp5F,EAAA,GAAAxF,OAAA,GAAAwF,EAAApN,GAAAoU,IAAAhH,QACA4gG,GAAA,EAAAxH,EAAAF,EAAA0H,EAAAvH,EAAAF,EAAAyH,EAAAhnB,EAAAwf,GAAA1e,EAAA2e,EACA,MAEA,QACA,GAAAr5F,EAAA,GAAAxF,OAAA,GAAAwF,EAAApN,GAAAoU,IAAAhH,QACA4gG,GAAA,EAAA1H,EAAAE,EAAAwH,EAAAvH,EAAAF,EAAAyH,EAAA1H,EAAAtf,GAAAc,EAAA2e,EACA,MAEA,QACA,GAAAr5F,EAAA,GAAAxF,OAAA,GAAAwF,EAAApN,GAAAoU,IAAAhH,QACA4gG,GAAA,EAAAxH,EAAAF,EAAA0H,EAAAzH,EAAAE,EAAAuH,EAAAhnB,EAAAwf,GAAAD,EAAAze,EACA,MAEA,QACA,GAAA16E,EAAA,GAAAxF,OAAA,GAAAwF,EAAApN,GAAAoU,IAAAhH,QACA4gG,GAAA,EAAA1H,EAAAE,EAAAwH,EAAAzH,EAAAE,EAAAuH,EAAA1H,EAAAtf,GAAAuf,EAAAze,GAKAxoF,KAAA8mG,OAAA9mG,KAAA8mG,MAAAnmG,SAAAX,KAAA8mG,MAAAhyF,GAUA,MAJA9U,MAAAglG,IAAAgC,EACAhnG,KAAAilG,IAAAgC,EACAjnG,KAAAklG,IAAAgC,EACAlnG,KAAAmlG,IAAAgC,EACAnnG,MAGAo+I,GAAA,WACA,GAAAttI,KAIA,OAHA9Q,MAAAq+I,MAAA,SAAAvpI,GACA,IAAAA,EAAAnU,OAAA,GAAAmQ,EAAA3P,KAAA2T,EAAAhE,YAA8CgE,IAAA+d,QAE9C/hB,GAGAwtI,GAAA,SAAA1tH,GACA,MAAA5oB,WAAArH,OACAX,KAAAynG,OAAA72E,EAAA,OAAAA,EAAA,OAAA62E,OAAA72E,EAAA,OAAAA,EAAA,OACAjqB,MAAA3G,KAAAglG,KAAAx1F,SAAAxP,KAAAglG,IAAAhlG,KAAAilG,MAAAjlG,KAAAklG,IAAAllG,KAAAmlG,OAGAo5C,GAAA,SAAAzpI,EAAAkyF,EAAAC,EAAAC,EAAAC,GACAnnG,KAAA8U,OACA9U,KAAAgnG,KACAhnG,KAAAinG,KACAjnG,KAAAknG,KACAlnG,KAAAmnG,MAGAq3C,GAAA,SAAA92D,EAAAc,EAAA+c,GACA,GAAAz0F,GAGAo2F,EACAC,EACAqT,EACAC,EAKA3iB,EACAp3F,EAXAsmG,EAAAhnG,KAAAglG,IACAiC,EAAAjnG,KAAAilG,IAKA+b,EAAAhhH,KAAAklG,IACA+b,EAAAjhH,KAAAmlG,IACAs5C,KACA3pI,EAAA9U,KAAA8mG,KAYA,KARAhyF,GAAA2pI,EAAAt9I,KAAA,GAAAo9I,IAAAzpI,EAAAkyF,EAAAC,EAAA+Z,EAAAC,IACA,MAAA1b,IAAAvmC,KAEAgoC,EAAAtf,EAAA6d,EAAA0B,EAAAze,EAAA+c,EACAyb,EAAAt5B,EAAA6d,EAAA0b,EAAAz4B,EAAA+c,EACAA,MAGAzN,EAAA2mD,EAAA5zI,OAGA,OAAAiK,EAAAgjF,EAAAhjF,QACAoyF,EAAApP,EAAAkP,IAAAga,IACA7Z,EAAArP,EAAAmP,IAAAga,IACAzG,EAAA1iB,EAAAoP,IAAAF,IACAyT,EAAA3iB,EAAAqP,IAAAF,GAGA,GAAAnyF,EAAAnU,OAAA,CACA,GAAA+lG,IAAAQ,EAAAsT,GAAA,EACA7T,GAAAQ,EAAAsT,GAAA,CAEAgkC,GAAAt9I,KACA,GAAAo9I,IAAAzpI,EAAA,GAAA4xF,EAAAC,EAAA6T,EAAAC,GACA,GAAA8jC,IAAAzpI,EAAA,GAAAoyF,EAAAP,EAAAD,EAAA+T,GACA,GAAA8jC,IAAAzpI,EAAA,GAAA4xF,EAAAS,EAAAqT,EAAA7T,GACA,GAAA43C,IAAAzpI,EAAA,GAAAoyF,EAAAC,EAAAT,EAAAC,KAIAjmG,GAAA8nF,GAAAme,IAAA,EAAAjf,GAAAgf,KACA5O,EAAA2mD,IAAA99I,OAAA,GACA89I,IAAA99I,OAAA,GAAA89I,IAAA99I,OAAA,EAAAD,GACA+9I,IAAA99I,OAAA,EAAAD,GAAAo3F,OAKA,CACA,GAAA75D,GAAAypD,GAAA1nF,KAAAonG,GAAA7/F,KAAA,KAAAuN,EAAAhE,MACAqtB,EAAAqqD,GAAAxoF,KAAAqnG,GAAA9/F,KAAA,KAAAuN,EAAAhE,MACAwpG,EAAAr8E,IAAAE,GACA,IAAAm8E,EAAA/U,EAAA,CACA,GAAAzoF,GAAAnQ,KAAAkoF,KAAA0Q,EAAA+U,EACAtT,GAAAtf,EAAA5qE,EAAAmqF,EAAAze,EAAA1rE,EACAkkG,EAAAt5B,EAAA5qE,EAAAmkG,EAAAz4B,EAAA1rE,EACAhM,EAAAgE,EAAAhE,MAKA,MAAAA,IAGA4tI,GAAA,SAAA5hI,GACA,GAAAnW,MAAA+gF,GAAA1nF,KAAAonG,GAAA7/F,KAAA,KAAAuV,KAAAnW,MAAA6hF,GAAAxoF,KAAAqnG,GAAA9/F,KAAA,KAAAuV,IAAA,MAAA9c,KAEA,IAAA8N,GAEA6wI,EACAh7E,EACA9wC,EAKA60D,EACAc,EACAke,EACAC,EACAlwD,EACA8zC,EACA7pF,EACAgC,EAfAoS,EAAA9U,KAAA8mG,MAIAE,EAAAhnG,KAAAglG,IACAiC,EAAAjnG,KAAAilG,IACAiC,EAAAlnG,KAAAklG,IACAiC,EAAAnnG,KAAAmlG,GAWA,KAAArwF,EAAA,MAAA9U,KAIA,IAAA8U,EAAAnU,OAAA,QAGA,IAFA81C,EAAAixC,IAAAgf,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAmDQ,EAAAR,GACnDnc,EAAA/B,IAAAme,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAoDQ,EAAAR,EACpD74F,EAAAgH,QAAApU,EAAA6pF,GAAA,EAAA9zC,IAAA,MAAAz2C,KACA,KAAA8U,EAAAnU,OAAA,OACAmN,EAAApN,EAAA,MAAAoN,EAAApN,EAAA,MAAAoN,EAAApN,EAAA,QAAAi+I,EAAA7wI,EAAApL,EAAAhC,GAIA,KAAAoU,EAAAhE,OAAAgM,GAAA,GAAA6mD,EAAA7uD,QAAA+d,MAAA,MAAA7yB,KAIA,QAHA6yB,EAAA/d,EAAA+d,aAAA/d,GAAA+d,KAGA8wC,GAAA9wC,EAAA8wC,EAAA9wC,aAAA8wC,GAAA9wC,KAAA7yB,MAGA8N,GAGA+kB,EAAA/kB,EAAApN,GAAAmyB,QAAA/kB,GAAApN,IAGAoU,EAAAhH,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAgH,KAAAhH,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MACAgH,EAAAnU,SACAg+I,IAAAj8I,GAAAoS,EACA9U,KAAA8mG,MAAAhyF,GAGA9U,OAbAA,KAAA8mG,MAAAj0E,EAAA7yB,OAqBA4+I,GAAA,WACA,MAAA5+I,MAAA8mG,OAGA+3C,GAAA,WACA,GAAAziG,GAAA,CAIA,OAHAp8C,MAAAq+I,MAAA,SAAAvpI,GACA,IAAAA,EAAAnU,OAAA,KAAAy7C,QAAgCtnC,IAAA+d,QAEhCupB,GAGA0iG,GAAA,SAAAngI,GACA,GAAAm5E,GAAA/pF,EAAAi5F,EAAAC,EAAAC,EAAAC,EAAAs3C,KAAA3pI,EAAA9U,KAAA8mG,KAEA,KADAhyF,GAAA2pI,EAAAt9I,KAAA,GAAAo9I,IAAAzpI,EAAA9U,KAAAglG,IAAAhlG,KAAAilG,IAAAjlG,KAAAklG,IAAAllG,KAAAmlG,MACArN,EAAA2mD,EAAA5zI,OACA,IAAA8T,EAAA7J,EAAAgjF,EAAAhjF,KAAAkyF,EAAAlP,EAAAkP,GAAAC,EAAAnP,EAAAmP,GAAAC,EAAApP,EAAAoP,GAAAC,EAAArP,EAAAqP,KAAAryF,EAAAnU,OAAA,CACA,GAAA+lG,IAAAM,EAAAE,GAAA,EAAAP,GAAAM,EAAAE,GAAA,GACAp5F,EAAA+G,EAAA,KAAA2pI,EAAAt9I,KAAA,GAAAo9I,IAAAxwI,EAAA24F,EAAAC,EAAAO,EAAAC,KACAp5F,EAAA+G,EAAA,KAAA2pI,EAAAt9I,KAAA,GAAAo9I,IAAAxwI,EAAAi5F,EAAAL,EAAAD,EAAAS,KACAp5F,EAAA+G,EAAA,KAAA2pI,EAAAt9I,KAAA,GAAAo9I,IAAAxwI,EAAA24F,EAAAO,EAAAC,EAAAP,KACA54F,EAAA+G,EAAA,KAAA2pI,EAAAt9I,KAAA,GAAAo9I,IAAAxwI,EAAAi5F,EAAAC,EAAAP,EAAAC,IAGA,MAAA3mG,OAGA++I,GAAA,SAAApgI,GACA,GAAAm5E,GAAA2mD,KAAA5rH,IAEA,KADA7yB,KAAA8mG,OAAA23C,EAAAt9I,KAAA,GAAAo9I,IAAAv+I,KAAA8mG,MAAA9mG,KAAAglG,IAAAhlG,KAAAilG,IAAAjlG,KAAAklG,IAAAllG,KAAAmlG,MACArN,EAAA2mD,EAAA5zI,OAAA,CACA,GAAAiK,GAAAgjF,EAAAhjF,IACA,IAAAA,EAAAnU,OAAA,CACA,GAAAoN,GAAAi5F,EAAAlP,EAAAkP,GAAAC,EAAAnP,EAAAmP,GAAAC,EAAApP,EAAAoP,GAAAC,EAAArP,EAAAqP,GAAAT,GAAAM,EAAAE,GAAA,EAAAP,GAAAM,EAAAE,GAAA,GACAp5F,EAAA+G,EAAA,KAAA2pI,EAAAt9I,KAAA,GAAAo9I,IAAAxwI,EAAAi5F,EAAAC,EAAAP,EAAAC,KACA54F,EAAA+G,EAAA,KAAA2pI,EAAAt9I,KAAA,GAAAo9I,IAAAxwI,EAAA24F,EAAAO,EAAAC,EAAAP,KACA54F,EAAA+G,EAAA,KAAA2pI,EAAAt9I,KAAA,GAAAo9I,IAAAxwI,EAAAi5F,EAAAL,EAAAD,EAAAS,KACAp5F,EAAA+G,EAAA,KAAA2pI,EAAAt9I,KAAA,GAAAo9I,IAAAxwI,EAAA24F,EAAAC,EAAAO,EAAAC,IAEAt0E,EAAA1xB,KAAA22F,GAEA,KAAAA,EAAAjlE,EAAAhoB,OACA8T,EAAAm5E,EAAAhjF,KAAAgjF,EAAAkP,GAAAlP,EAAAmP,GAAAnP,EAAAoP,GAAApP,EAAAqP,GAEA,OAAAnnG,OAOAg/I,GAAA,SAAApuH,GACA,MAAA5oB,WAAArH,QAAAX,KAAAonG,GAAAx2E,EAAA5wB,WAAAonG,IAOA63C,GAAA,SAAAruH,GACA,MAAA5oB,WAAArH,QAAAX,KAAAqnG,GAAAz2E,EAAA5wB,WAAAqnG,IAwBA63C,GAAAr3C,GAAAp5F,UAAAs5F,GAAAt5F,SAEAywI,IAAAj4E,KAAA,WACA,GAEA6gC,GACA/5F,EAHAk5D,EAAA,GAAA8gC,IAAA/nG,KAAAonG,GAAApnG,KAAAqnG,GAAArnG,KAAAglG,IAAAhlG,KAAAilG,IAAAjlG,KAAAklG,IAAAllG,KAAAmlG,KACArwF,EAAA9U,KAAA8mG,KAIA,KAAAhyF,EAAA,MAAAmyD,EAEA,KAAAnyD,EAAAnU,OAAA,MAAAsmE,GAAA6/B,MAAAkB,GAAAlzF,GAAAmyD,CAGA,KADA6gC,IAAYnlF,OAAA7N,EAAApK,OAAAu8D,EAAA6/B,MAAA,GAAAx+F,OAAA,KACZwM,EAAAgzF,EAAAj9F,OACA,OAAAnK,GAAA,EAAmBA,EAAA,IAAOA,GAC1BqN,EAAA+G,EAAA6N,OAAAjiB,MACAqN,EAAApN,OAAAmnG,EAAA3mG,MAAsCwhB,OAAA5U,EAAArD,OAAAoK,EAAApK,OAAAhK,GAAA,GAAA4H,OAAA,KACtCwM,EAAApK,OAAAhK,GAAAsnG,GAAAj6F,GAKA,OAAAk5D,IAGAi4E,GAAAntI,IAAAmsI,GACAgB,GAAA53C,UACA43C,GAAAz3C,MAAA02C,GACAe,GAAApuI,KAAAstI,GACAc,GAAAx+C,OAAA49C,GACAY,GAAA38D,KAAAi8D,GACAU,GAAA77I,OAAAq7I,GACAQ,GAAAx3C,aACAw3C,GAAA17G,KAAAo7G,GACAM,GAAA9iG,KAAAyiG,GACAK,GAAAb,MAAAS,GACAI,GAAAC,WAAAJ,GACAG,GAAAx3D,EAAAs3D,GACAE,GAAA12D,EAAAy2D,EAUA,IA+kBAG,IA/kBAC,GAAA,SAAA95C,GAQA,QAAAs4C,KAoBA,QAAA51I,GAAAq3I,EAAAt4C,EAAAC,EAAAC,EAAAC,GACA,GAAAr2F,GAAAwuI,EAAAxuI,KAAAyuI,EAAAD,EAAAxsD,IAAA0sD,EAAAD,CACA,MAAAzuI,EAiBA,MAAAk2F,GAAAk9B,EAAApxC,GAAAoU,EAAAg9B,EAAApxC,GAAAmU,EAAAw4C,EAAA3sD,GAAAqU,EAAAs4C,EAAA3sD,CAhBA,IAAAhiF,EAAA1M,MAAA0Q,EAAA1Q,MAAA,CACA,GAAAsjF,GAAAw8C,EAAApzH,EAAA42E,EAAA52E,EAAAm3F,GACAzf,EAAAi3D,EAAA3uI,EAAA03E,EAAA13E,EAAAo3F,GACAtmG,EAAA8lF,IAAAc,GACA5mF,GAAAkxF,MACA,IAAApL,MAAAu2D,KAAAr8I,GAAA8lF,KACA,IAAAc,MAAAy1D,KAAAr8I,GAAA4mF,KACA5mF,GAAAkxF,GAAAlxF,EAAA+K,KAAAkoF,KAAAjzF,OAAA89I,EACA5qI,EAAAmzF,KAAAvgB,GAAA9lF,IAAAkxF,GAAAysD,OAAAI,EAAAJ,IACAzqI,EAAAozF,KAAA1f,GAAA5mF,GAAAkxF,EACAhiF,EAAAm3F,IAAAvgB,GAAAoL,EAAA,EAAAA,GACAhiF,EAAAo3F,IAAA1f,EAAAsK,KAzBA,OARApyF,GACA4f,EACAxL,EACAovH,EACAub,EACAD,EACAG,EANAl5I,EAAAqhG,EAAAnnG,OAQA2pF,EAAA,EAAmBA,EAAAs1D,IAAgBt1D,EAEnC,IADAhqE,EAAAunF,GAAAC,EAAApgB,GAAAc,IAAA22D,WAAAU,GACAn/I,EAAA,EAAiBA,EAAA+F,IAAO/F,EACxBoU,EAAAgzF,EAAApnG,GACA8+I,EAAAM,EAAAhrI,EAAA1Q,OAAAu7I,EAAAH,IACAtb,EAAApvH,EAAA4yE,EAAA5yE,EAAAmzF,GACAw3C,EAAA3qI,EAAA0zE,EAAA1zE,EAAAozF,GACA5nF,EAAA+9H,MAAAp2I,GA2BA,QAAA43I,GAAAP,GACA,GAAAA,EAAAxuI,KAAA,MAAAwuI,GAAAxsD,EAAAgtD,EAAAR,EAAAxuI,KAAA1M,MACA,QAAA1D,GAAA4+I,EAAAxsD,EAAA,EAA4BpyF,EAAA,IAAOA,EACnC4+I,EAAA5+I,IAAA4+I,EAAA5+I,GAAAoyF,EAAAwsD,EAAAxsD,IACAwsD,EAAAxsD,EAAAwsD,EAAA5+I,GAAAoyF,GAKA,QAAAuO,KACA,GAAAyG,EAAA,CACA,GAAApnG,GAAAoU,EAAArO,EAAAqhG,EAAAnnG,MAEA,KADAm/I,EAAA,GAAAx3I,OAAA7B,GACA/F,EAAA,EAAeA,EAAA+F,IAAO/F,EAAAoU,EAAAgzF,EAAApnG,GAAAo/I,EAAAhrI,EAAA1Q,QAAAmhG,EAAAzwF,EAAApU,EAAAonG,IA/DtB,GAAAA,GACAg4C,EACAJ,EAAA,EACAE,EAAA,CAgFA,OA9EA,kBAAAr6C,OAAAy4C,GAAA,MAAAz4C,EAAA,GAAAA,IA6DAs4C,EAAAx8C,WAAA,SAAAzwE,GACAk3E,EAAAl3E,EACAywE,KAGAw8C,EAAA+B,WAAA,SAAAhvH,GACA,MAAA5oB,WAAArH,QAAAi/I,GAAAhvH,EAAAitH,GAAA+B,GAGA/B,EAAA6B,SAAA,SAAA9uH,GACA,MAAA5oB,WAAArH,QAAA++I,GAAA9uH,EAAAitH,GAAA6B,GAGA7B,EAAAt4C,OAAA,SAAA30E,GACA,MAAA5oB,WAAArH,QAAA4kG,EAAA,kBAAA30E,KAAAotH,IAAAptH,GAAAywE,IAAAw8C,GAAAt4C,GAGAs4C,GAaAkC,GAAA,SAAAC,GAaA,QAAAC,GAAAF,GACA,SAAApzI,KAAAkyE,IAAA9N,EAAAgvE,EAAAp9H,OAAAve,OAAA2sE,EAAAgvE,EAAAr1I,OAAAtG,QAGA,QAAAy5I,GAAAl5B,GACA,OAAAr6B,GAAA,EAAA7jF,EAAAu5I,EAAAr/I,OAAqC2pF,EAAAs1D,IAAgBt1D,EACrD,OAAAy1D,GAAAp9H,EAAAjY,EAAAg9E,EAAAc,EAAA5mF,EAAAyH,EAAA3I,EAAA,EAAuDA,EAAA+F,IAAO/F,EAC9Dq/I,EAAAC,EAAAt/I,GAAAiiB,EAAAo9H,EAAAp9H,OAAAjY,EAAAq1I,EAAAr1I,OACAg9E,EAAAh9E,EAAAg9E,EAAAh9E,EAAAu9F,GAAAtlF,EAAA+kE,EAAA/kE,EAAAslF,IAAAg2C,KACAz1D,EAAA99E,EAAA89E,EAAA99E,EAAAw9F,GAAAvlF,EAAA6lE,EAAA7lE,EAAAulF,IAAA+1C,KACAr8I,EAAA+K,KAAAkoF,KAAAnN,IAAAc,KACA5mF,KAAAs+I,EAAAx/I,IAAAkB,EAAA+iH,EAAAw7B,EAAAz/I,GACAgnF,GAAA9lF,EAAA4mF,GAAA5mF,EACA8I,EAAAu9F,IAAAvgB,GAAAr+E,EAAA+2I,EAAA1/I,IACAgK,EAAAw9F,IAAA1f,EAAAn/E,EACAsZ,EAAAslF,IAAAvgB,GAAAr+E,EAAA,EAAAA,GACAsZ,EAAAulF,IAAA1f,EAAAn/E,EAKA,QAAAg4F,KACA,GAAAyG,EAAA,CAEA,GAAApnG,GAIAq/I,EAHAt5I,EAAAqhG,EAAAnnG,OACAsI,EAAA+2I,EAAAr/I,OACAwnG,EAAAvC,GAAAkC,EAAAjnG,EAGA,KAAAH,EAAA,EAAAqwE,EAAA,GAAAzoE,OAAA7B,GAAqC/F,EAAAuI,IAAOvI,EAC5Cq/I,EAAAC,EAAAt/I,GAAAq/I,EAAA37I,MAAA1D,EACA,gBAAAq/I,GAAAp9H,SAAAo9H,EAAAp9H,OAAA4/D,GAAA4lB,EAAA43C,EAAAp9H,SACA,gBAAAo9H,GAAAr1I,SAAAq1I,EAAAr1I,OAAA63E,GAAA4lB,EAAA43C,EAAAr1I,SACAqmE,EAAAgvE,EAAAp9H,OAAAve,QAAA2sE,EAAAgvE,EAAAp9H,OAAAve,QAAA,KACA2sE,EAAAgvE,EAAAr1I,OAAAtG,QAAA2sE,EAAAgvE,EAAAr1I,OAAAtG,QAAA,IAGA,KAAA1D,EAAA,EAAA0/I,EAAA,GAAA93I,OAAAW,GAAoCvI,EAAAuI,IAAOvI,EAC3Cq/I,EAAAC,EAAAt/I,GAAA0/I,EAAA1/I,GAAAqwE,EAAAgvE,EAAAp9H,OAAAve,QAAA2sE,EAAAgvE,EAAAp9H,OAAAve,OAAA2sE,EAAAgvE,EAAAr1I,OAAAtG,OAGA+7I,GAAA,GAAA73I,OAAAW,GAAAo3I,IACAH,EAAA,GAAA53I,OAAAW,GAAAq3I,KAGA,QAAAD,KACA,GAAAv4C,EAEA,OAAApnG,GAAA,EAAA+F,EAAAu5I,EAAAr/I,OAAqCD,EAAA+F,IAAO/F,EAC5Cy/I,EAAAz/I,IAAAg/I,EAAAM,EAAAt/I,KAAAs/I,GAIA,QAAAM,KACA,GAAAx4C,EAEA,OAAApnG,GAAA,EAAA+F,EAAAu5I,EAAAr/I,OAAqCD,EAAA+F,IAAO/F,EAC5Cw/I,EAAAx/I,IAAA+zG,EAAAurC,EAAAt/I,KAAAs/I,GAtEA,GAEAG,GAEAD,EACAp4C,EACA/2B,EACAqvE,EAPAv/I,EAAAuD,GACAs7I,EAAAO,EAEAxrC,EAAAupC,GAAA,IAKA4B,EAAA,CA2FA,OAzFA,OAAAI,UAgEAnC,EAAAx8C,WAAA,SAAAzwE,GACAk3E,EAAAl3E,EACAywE,KAGAw8C,EAAAmC,MAAA,SAAApvH,GACA,MAAA5oB,WAAArH,QAAAq/I,EAAApvH,EAAAywE,IAAAw8C,GAAAmC,GAGAnC,EAAAh9I,GAAA,SAAA+vB,GACA,MAAA5oB,WAAArH,QAAAE,EAAA+vB,EAAAitH,GAAAh9I,GAGAg9I,EAAA+B,WAAA,SAAAhvH,GACA,MAAA5oB,WAAArH,QAAAi/I,GAAAhvH,EAAAitH,GAAA+B,GAGA/B,EAAA6B,SAAA,SAAA9uH,GACA,MAAA5oB,WAAArH,QAAA++I,EAAA,kBAAA9uH,KAAAotH,IAAAptH,GAAAyvH,IAAAxC,GAAA6B,GAGA7B,EAAAppC,SAAA,SAAA7jF,GACA,MAAA5oB,WAAArH,QAAA8zG,EAAA,kBAAA7jF,KAAAotH,IAAAptH,GAAA0vH,IAAAzC,GAAAppC,GAGAopC,GAWA0C,GAAA,GACAC,GAAA7zI,KAAA8mI,IAAA,EAAA9mI,KAAAkoF,KAAA,IAEA4rD,GAAA,SAAA34C,GAaA,QAAA9jC,KACA8lB,IACA33E,EAAA5K,KAAA,OAAAk5I,GACA97B,EAAA+7B,IACAC,EAAA/pG,OACAzkC,EAAA5K,KAAA,MAAAk5I,IAIA,QAAA32D,KACA,GAAAppF,GAAAoU,EAAArO,EAAAqhG,EAAAnnG,MAQA,KANAgkH,IAAAi8B,EAAAj8B,GAAAk8B,EAEAC,EAAAz6D,KAAA,SAAAw3D,GACAA,EAAAl5B,KAGAjkH,EAAA,EAAeA,EAAA+F,IAAO/F,EACtBoU,EAAAgzF,EAAApnG,GACA,MAAAoU,EAAA0oH,GAAA1oH,EAAA4yE,GAAA5yE,EAAAmzF,IAAA84C,GACAjsI,EAAA4yE,EAAA5yE,EAAA0oH,GAAA1oH,EAAAmzF,GAAA,GACA,MAAAnzF,EAAA6oG,GAAA7oG,EAAA0zE,GAAA1zE,EAAAozF,IAAA64C,GACAjsI,EAAA0zE,EAAA1zE,EAAA6oG,GAAA7oG,EAAAozF,GAAA,GAIA,QAAA84C,KACA,OAAAlsI,GAAApU,EAAA,EAAA+F,EAAAqhG,EAAAnnG,OAA2CD,EAAA+F,IAAO/F,EAAA,CAElD,GADAoU,EAAAgzF,EAAApnG,GAAAoU,EAAA1Q,MAAA1D,EACAiG,MAAAmO,EAAA4yE,IAAA/gF,MAAAmO,EAAA0zE,GAAA,CACA,GAAA+c,GAAAg7C,GAAA5zI,KAAAkoF,KAAAn0F,GAAAitG,EAAAjtG,EAAA8/I,EACA1rI,GAAA4yE,EAAA6d,EAAA54F,KAAAinF,IAAA+Z,GACA74F,EAAA0zE,EAAA+c,EAAA54F,KAAAknF,IAAA8Z,IAEAhnG,MAAAmO,EAAAmzF,KAAAthG,MAAAmO,EAAAozF,OACApzF,EAAAmzF,GAAAnzF,EAAAozF,GAAA,IAKA,QAAA+4C,GAAApD,GAEA,MADAA,GAAAx8C,YAAAw8C,EAAAx8C,WAAAyG,GACA+1C,EAvDA,GAAA4C,GACA97B,EAAA,EACA+7B,EAAA,KACAG,EAAA,EAAAl0I,KAAAq7E,IAAA04D,EAAA,OACAE,EAAA,EACAG,EAAA,GACAD,EAAAl7C,KACA+6C,EAAArnD,GAAAt1B,GACA7xD,EAAA64E,EAAA,aAoDA,OAlDA,OAAA8c,UAgDAk5C,IAEAP,GACA32D,OAEAyP,QAAA,WACA,MAAAonD,GAAApnD,QAAAv1B,GAAAy8E,GAGA7pG,KAAA,WACA,MAAA+pG,GAAA/pG,OAAA6pG,GAGA34C,MAAA,SAAAl3E,GACA,MAAA5oB,WAAArH,QAAAmnG,EAAAl3E,EAAAowH,IAAAF,EAAAz6D,KAAA46D,GAAAR,GAAA34C,GAGA6c,MAAA,SAAA/zF,GACA,MAAA5oB,WAAArH,QAAAgkH,GAAA/zF,EAAA6vH,GAAA97B,GAGA+7B,SAAA,SAAA9vH,GACA,MAAA5oB,WAAArH,QAAA+/I,GAAA9vH,EAAA6vH,GAAAC,GAGAG,WAAA,SAAAjwH,GACA,MAAA5oB,WAAArH,QAAAkgJ,GAAAjwH,EAAA6vH,IAAAI,GAGAD,YAAA,SAAAhwH,GACA,MAAA5oB,WAAArH,QAAAigJ,GAAAhwH,EAAA6vH,GAAAG,GAGAG,cAAA,SAAAnwH,GACA,MAAA5oB,WAAArH,QAAAogJ,EAAA,EAAAnwH,EAAA6vH,GAAA,EAAAM,GAGAlD,MAAA,SAAArwI,EAAAojB,GACA,MAAA5oB,WAAArH,OAAA,SAAAiwB,EAAAkwH,EAAAz9I,OAAAmK,GAAAszI,EAAAz0I,IAAAmB,EAAAyzI,EAAArwH,IAAA6vH,GAAAK,EAAAn/I,IAAA6L,IAGA+0E,KAAA,SAAAmF,EAAAc,EAAA+c,GACA,GAEAtnE,GACAE,EACAm8E,EACAxlG,EACAosI,EANAxgJ,EAAA,EACA+F,EAAAqhG,EAAAnnG,MAUA,KAHA,MAAA4kG,IAAAvmC,IACAumC,KAEA7kG,EAAA,EAAiBA,EAAA+F,IAAO/F,EACxBoU,EAAAgzF,EAAApnG,GACAu9B,EAAAypD,EAAA5yE,EAAA4yE,EACAvpD,EAAAqqD,EAAA1zE,EAAA0zE,GACA8xB,EAAAr8E,IAAAE,KACAonE,IAAA27C,EAAApsI,EAAAywF,EAAA+U,EAGA,OAAA4mC,IAGArvI,GAAA,SAAArE,EAAAojB,GACA,MAAA5oB,WAAArH,OAAA,GAAAwR,EAAAN,GAAArE,EAAAojB,GAAA6vH,GAAAtuI,EAAAN,GAAArE,MAKA2zI,GAAA,WAUA,QAAAtD,GAAAjtH,GACA,GAAAlwB,GAAA+F,EAAAqhG,EAAAnnG,OAAA2f,EAAAunF,GAAAC,EAAAO,GAAAC,IAAA62C,WAAAiC,EACA,KAAAz8B,EAAA/zF,EAAAlwB,EAAA,EAA0BA,EAAA+F,IAAO/F,EAAAoU,EAAAgzF,EAAApnG,GAAA4f,EAAA+9H,MAAAp2I,GAGjC,QAAAo5F,KACA,GAAAyG,EAAA,CACA,GAAApnG,GAAAoU,EAAArO,EAAAqhG,EAAAnnG,MAEA,KADAw/I,EAAA,GAAA73I,OAAA7B,GACA/F,EAAA,EAAeA,EAAA+F,IAAO/F,EAAAoU,EAAAgzF,EAAApnG,GAAAy/I,EAAArrI,EAAA1Q,QAAAs7I,EAAA5qI,EAAApU,EAAAonG,IAGtB,QAAAs5C,GAAA9B,GACA,GAAAxnD,GAAAluF,EAAAy3I,EAAAC,EAAA5gJ,EAAAg/I,EAAA,CAGA,IAAAJ,EAAA3+I,OAAA,CACA,IAAA0gJ,EAAAC,EAAA5gJ,EAAA,EAA+BA,EAAA,IAAOA,GACtCo3F,EAAAwnD,EAAA5+I,MAAAkJ,EAAAkuF,EAAArwF,SACAi4I,GAAA91I,EAAAy3I,GAAAz3I,EAAAkuF,EAAApQ,EAAA45D,GAAA13I,EAAAkuF,EAAAtP,EAGA82D,GAAA53D,EAAA25D,EAAA3B,EACAJ,EAAA92D,EAAA84D,EAAA5B,MAIA,CACA5nD,EAAAwnD,EACAxnD,EAAApQ,EAAAoQ,EAAAhnF,KAAA42E,EACAoQ,EAAAtP,EAAAsP,EAAAhnF,KAAA03E,CACA,IAAAk3D,GAAAS,EAAAroD,EAAAhnF,KAAA1M,aACA0zF,IAAAjlE,MAGAysH,EAAA73I,MAAAi4I,EAGA,QAAAz3I,GAAAq3I,EAAAp4C,EAAAt2E,EAAA4pF,GACA,IAAA8kC,EAAA73I,MAAA,QAEA,IAAA45I,GAAA/B,EAAA53D,EAAA5yE,EAAA4yE,EACA45D,EAAAhC,EAAA92D,EAAA1zE,EAAA0zE,EACA4mB,EAAAoL,EAAAtT,EACAtlG,EAAAy/I,IAAAC,GAIA,IAAAlyC,IAAAmyC,EAAA3/I,EAQA,MAPAA,GAAA4/I,IACA,IAAAH,MAAApD,KAAAr8I,GAAAy/I,KACA,IAAAC,MAAArD,KAAAr8I,GAAA0/I,KACA1/I,EAAA6/I,IAAA7/I,EAAA+K,KAAAkoF,KAAA4sD,EAAA7/I,IACAkT,EAAAmzF,IAAAo5C,EAAA/B,EAAA73I,MAAAk9G,EAAA/iH,EACAkT,EAAAozF,IAAAo5C,EAAAhC,EAAA73I,MAAAk9G,EAAA/iH,IAEA,CAIA,MAAA09I,EAAA3+I,QAAAiB,GAAA4/I,GAAA,EAGAlC,EAAAxuI,OAAAgE,GAAAwqI,EAAAzsH,QACA,IAAAwuH,MAAApD,KAAAr8I,GAAAy/I,KACA,IAAAC,MAAArD,KAAAr8I,GAAA0/I,KACA1/I,EAAA6/I,IAAA7/I,EAAA+K,KAAAkoF,KAAA4sD,EAAA7/I,IAGA,IAAA09I,EAAAxuI,OAAAgE,IACAs6F,EAAA+wC,EAAAb,EAAAxuI,KAAA1M,OAAAugH,EAAA/iH,EACAkT,EAAAmzF,IAAAo5C,EAAAjyC,EACAt6F,EAAAozF,IAAAo5C,EAAAlyC,SACKkwC,IAAAzsH,OAlFL,GAAAi1E,GACAhzF,EACA6vG,EAEAw7B,EADAT,EAAA1B,IAAA,IAEAyD,EAAA,EACAD,EAAAxiF,IACAuiF,EAAA,GAmGA,OArBA1D,GAAAx8C,WAAA,SAAAzwE,GACAk3E,EAAAl3E,EACAywE,KAGAw8C,EAAA6B,SAAA,SAAA9uH,GACA,MAAA5oB,WAAArH,QAAA++I,EAAA,kBAAA9uH,KAAAotH,IAAAptH,GAAAywE,IAAAw8C,GAAA6B,GAGA7B,EAAA6D,YAAA,SAAA9wH,GACA,MAAA5oB,WAAArH,QAAA8gJ,EAAA7wH,IAAAitH,GAAAlxI,KAAAkoF,KAAA4sD,IAGA5D,EAAA8D,YAAA,SAAA/wH,GACA,MAAA5oB,WAAArH,QAAA6gJ,EAAA5wH,IAAAitH,GAAAlxI,KAAAkoF,KAAA2sD,IAGA3D,EAAAjiC,MAAA,SAAAhrF,GACA,MAAA5oB,WAAArH,QAAA4gJ,EAAA3wH,IAAAitH,GAAAlxI,KAAAkoF,KAAA0sD,IAGA1D,GAGA+D,GAAA,SAAAl6D,GAQA,QAAAm2D,GAAAl5B,GACA,OAAA7vG,GAAApU,EAAA,EAAA+F,EAAAqhG,EAAAnnG,OAA2CD,EAAA+F,IAAO/F,EAClDoU,EAAAgzF,EAAApnG,GAAAoU,EAAAmzF,KAAAV,EAAA7mG,GAAAoU,EAAA4yE,GAAAy4D,EAAAz/I,GAAAikH,EAIA,QAAAtjB,KACA,GAAAyG,EAAA,CACA,GAAApnG,GAAA+F,EAAAqhG,EAAAnnG,MAGA,KAFAw/I,EAAA,GAAA73I,OAAA7B,GACA8gG,EAAA,GAAAj/F,OAAA7B,GACA/F,EAAA,EAAeA,EAAA+F,IAAO/F,EACtBy/I,EAAAz/I,GAAAiG,MAAA4gG,EAAA7mG,IAAAgnF,EAAAogB,EAAApnG,KAAAonG,IAAA,GAAA43C,EAAA53C,EAAApnG,KAAAonG,IAnBA,GACAA,GACAq4C,EACA54C,EAHAm4C,EAAA1B,GAAA,GAoCA,OA/BA,kBAAAt2D,OAAAs2D,GAAA,MAAAt2D,EAAA,GAAAA,IAkBAm2D,EAAAx8C,WAAA,SAAAzwE,GACAk3E,EAAAl3E,EACAywE,KAGAw8C,EAAA6B,SAAA,SAAA9uH,GACA,MAAA5oB,WAAArH,QAAA++I,EAAA,kBAAA9uH,KAAAotH,IAAAptH,GAAAywE,IAAAw8C,GAAA6B,GAGA7B,EAAAn2D,EAAA,SAAA92D,GACA,MAAA5oB,WAAArH,QAAA+mF,EAAA,kBAAA92D,KAAAotH,IAAAptH,GAAAywE,IAAAw8C,GAAAn2D,GAGAm2D,GAGAgE,GAAA,SAAAr5D,GAQA,QAAAq1D,GAAAl5B,GACA,OAAA7vG,GAAApU,EAAA,EAAA+F,EAAAqhG,EAAAnnG,OAA2CD,EAAA+F,IAAO/F,EAClDoU,EAAAgzF,EAAApnG,GAAAoU,EAAAozF,KAAAV,EAAA9mG,GAAAoU,EAAA0zE,GAAA23D,EAAAz/I,GAAAikH,EAIA,QAAAtjB,KACA,GAAAyG,EAAA,CACA,GAAApnG,GAAA+F,EAAAqhG,EAAAnnG,MAGA,KAFAw/I,EAAA,GAAA73I,OAAA7B,GACA+gG,EAAA,GAAAl/F,OAAA7B,GACA/F,EAAA,EAAeA,EAAA+F,IAAO/F,EACtBy/I,EAAAz/I,GAAAiG,MAAA6gG,EAAA9mG,IAAA8nF,EAAAsf,EAAApnG,KAAAonG,IAAA,GAAA43C,EAAA53C,EAAApnG,KAAAonG,IAnBA,GACAA,GACAq4C,EACA34C,EAHAk4C,EAAA1B,GAAA,GAoCA,OA/BA,kBAAAx1D,OAAAw1D,GAAA,MAAAx1D,EAAA,GAAAA,IAkBAq1D,EAAAx8C,WAAA,SAAAzwE,GACAk3E,EAAAl3E,EACAywE,KAGAw8C,EAAA6B,SAAA,SAAA9uH,GACA,MAAA5oB,WAAArH,QAAA++I,EAAA,kBAAA9uH,KAAAotH,IAAAptH,GAAAywE,IAAAw8C,GAAA6B,GAGA7B,EAAAr1D,EAAA,SAAA53D,GACA,MAAA5oB,WAAArH,QAAA6nF,EAAA,kBAAA53D,KAAAotH,IAAAptH,GAAAywE,IAAAw8C,GAAAr1D,GAGAq1D,GAMAiE,GAAA,SAAAp6D,EAAAr3D,GACA,IAAA3vB,GAAAgnF,EAAAr3D,EAAAq3D,EAAAq6D,cAAA1xH,EAAA,GAAAq3D,EAAAq6D,iBAAA56I,QAAA,mBACA,IAAAzG,GAAAshJ,EAAAt6D,EAAAhhE,MAAA,EAAAhmB,EAIA,QACAshJ,EAAArhJ,OAAA,EAAAqhJ,EAAA,GAAAA,EAAAt7H,MAAA,GAAAs7H,GACAt6D,EAAAhhE,MAAAhmB,EAAA,KAIAuhJ,GAAA,SAAAv6D,GACA,MAAAA,GAAAo6D,GAAAn1I,KAAAm7E,IAAAJ,QAAA,GAAAuG,KAGAi0D,GAAA,SAAAC,EAAAC,GACA,gBAAA36I,EAAA44F,GAOA,IANA,GAAA3/F,GAAA+G,EAAA9G,OACAsqF,KACAvoF,EAAA,EACA3C,EAAAoiJ,EAAA,GACAxhJ,EAAA,EAEAD,EAAA,GAAAX,EAAA,IACAY,EAAAZ,EAAA,EAAAsgG,IAAAtgG,EAAA4M,KAAAC,IAAA,EAAAyzF,EAAA1/F,IACAsqF,EAAA9pF,KAAAsG,EAAAwrB,UAAAvyB,GAAAX,EAAAW,EAAAX,OACAY,GAAAZ,EAAA,GAAAsgG,KACAtgG,EAAAoiJ,EAAAz/I,KAAA,GAAAy/I,EAAAxhJ,OAGA,OAAAsqF,GAAAtf,UAAA3pE,KAAAogJ,KAIAC,GAAA,SAAAC,GACA,gBAAA76I,GACA,MAAAA,GAAAovB,QAAA,kBAAAn2B,GACA,MAAA4hJ,IAAA5hJ,OAKA6hJ,GAAA,SAAA76D,EAAAr3D,GACAq3D,IAAA86D,YAAAnyH,EAEAoyH,GAAA,OAAA39B,GAAAr+G,EAAAihF,EAAA/mF,OAAAD,EAAA,EAAAmkH,GAAA,EAAiDnkH,EAAA+F,IAAO/F,EACxD,OAAAgnF,EAAAhnF,IACA,QAAAmkH,EAAAC,EAAApkH,CAA4B,MAC5B,aAAAmkH,MAAAnkH,GAAqCokH,EAAApkH,CAAQ,MAC7C,cAAA+hJ,EACA,SAAA59B,EAAA,IAAAA,EAAA,GAIA,MAAAA,GAAA,EAAAn9B,EAAAhhE,MAAA,EAAAm+F,GAAAn9B,EAAAhhE,MAAAo+F,EAAA,GAAAp9B,GAKAg7D,GAAA,SAAAh7D,EAAAr3D,GACA,GAAAvT,GAAAglI,GAAAp6D,EAAAr3D,EACA,KAAAvT,EAAA,MAAA4qE,GAAA,EACA,IAAAs6D,GAAAllI,EAAA,GACA0sG,EAAA1sG,EAAA,GACApc,EAAA8oH,GAAA41B,GAAA,EAAAzyI,KAAAC,KAAA,EAAAD,KAAAkyE,IAAA,EAAAlyE,KAAAszE,MAAAupC,EAAA,QACA/iH,EAAAu7I,EAAArhJ,MACA,OAAAD,KAAA+F,EAAAu7I,EACAthJ,EAAA+F,EAAAu7I,EAAA,GAAA15I,OAAA5H,EAAA+F,EAAA,GAAAzE,KAAA,KACAtB,EAAA,EAAAshJ,EAAAt7H,MAAA,EAAAhmB,GAAA,IAAAshJ,EAAAt7H,MAAAhmB,GACA,QAAA4H,OAAA,EAAA5H,GAAAsB,KAAA,KAAA8/I,GAAAp6D,EAAA/6E,KAAAC,IAAA,EAAAyjB,EAAA3vB,EAAA,QAGAiiJ,GAAA,SAAAj7D,EAAAr3D,GACA,GAAAvT,GAAAglI,GAAAp6D,EAAAr3D,EACA,KAAAvT,EAAA,MAAA4qE,GAAA,EACA,IAAAs6D,GAAAllI,EAAA,GACA0sG,EAAA1sG,EAAA,EACA,OAAA0sG,GAAA,UAAAlhH,QAAAkhH,GAAAxnH,KAAA,KAAAggJ,EACAA,EAAArhJ,OAAA6oH,EAAA,EAAAw4B,EAAAt7H,MAAA,EAAA8iG,EAAA,OAAAw4B,EAAAt7H,MAAA8iG,EAAA,GACAw4B,EAAA,GAAA15I,OAAAkhH,EAAAw4B,EAAArhJ,OAAA,GAAAqB,KAAA,MAGA6mG,IACA+5C,GAAAL,GACA7xB,IAAA,SAAAhpC,EAAAr3D,GAAuB,WAAAq3D,GAAAm7D,QAAAxyH,IACvBhnB,EAAA,SAAAq+E,GAAoB,MAAA/6E,MAAAo5E,MAAA2B,GAAA5lF,SAAA,IACpB8H,EAAA,SAAA89E,GAAoB,MAAAA,GAAA,IACpB5qE,EAAA,SAAA4qE,GAAoB,MAAA/6E,MAAAo5E,MAAA2B,GAAA5lF,SAAA,KACpB3B,EAAA,SAAAunF,EAAAr3D,GAAuB,MAAAq3D,GAAAq6D,cAAA1xH,IACvBo3D,EAAA,SAAAC,EAAAr3D,GAAuB,MAAAq3D,GAAAm7D,QAAAxyH,IACvBtwB,EAAA,SAAA2nF,EAAAr3D,GAAuB,MAAAq3D,GAAA86D,YAAAnyH,IACvBw8D,EAAA,SAAAnF,GAAoB,MAAA/6E,MAAAo5E,MAAA2B,GAAA5lF,SAAA,IACpBuuB,EAAA,SAAAq3D,EAAAr3D,GAAuB,MAAAsyH,IAAA,IAAAj7D,EAAAr3D,IACvByiE,EAAA6vD,GACAz6H,EAAAw6H,GACA1hD,EAAA,SAAAtZ,GAAoB,MAAA/6E,MAAAo5E,MAAA2B,GAAA5lF,SAAA,IAAA2rC,eACpBi6C,EAAA,SAAAA,GAAoB,MAAA/6E,MAAAo5E,MAAA2B,GAAA5lF,SAAA,MAIpBq9B,GAAA,uEAMAopE,IAAA95F,UAAAg6F,GAAAh6F,UAoCAg6F,GAAAh6F,UAAA3M,SAAA,WACA,MAAA9B,MAAA4xE,KACA5xE,KAAA0oG,MACA1oG,KAAA2oG,KACA3oG,KAAA+nE,QACA/nE,KAAAw2F,KAAA,SACA,MAAAx2F,KAAAqgG,MAAA,GAAA1zF,KAAAC,IAAA,IAAA5M,KAAAqgG,SACArgG,KAAA4oG,MAAA,SACA,MAAA5oG,KAAAiuE,UAAA,OAAAthE,KAAAC,IAAA,IAAA5M,KAAAiuE,YACAjuE,KAAAb,KAGA,IA4HA4pG,IA5HA+5C,GAAA,SAAAp7D,GACA,MAAAA,IAGA50C,IAAA,oEAEAk2D,GAAA,SAAAgjB,GAMA,QAAAC,GAAAzjB,GAgCA,QAAApf,GAAA3hF,GACA,GAEA/G,GAAA+F,EAAAmD,EAFAm5I,EAAAvkE,EACAwkE,EAAAC,CAGA,UAAA9jJ,EACA6jJ,EAAAE,EAAAz7I,GAAAu7I,EACAv7I,EAAA,OACO,CACPA,IAGA,IAAA07I,GAAA17I,EAAA,CAYA,IAXAA,EAAAy7I,EAAAv2I,KAAAm7E,IAAArgF,GAAAwmE,GAGAk1E,GAAA,IAAA17I,IAAA07I,GAAA,GAGAJ,GAAAI,EAAA,MAAAx6C,IAAA,UAAAA,GAAA,MAAAA,EAAA,GAAAA,GAAAo6C,EACAC,KAAA,MAAA7jJ,EAAA2zC,GAAA,EAAAssG,GAAA,QAAA+D,GAAA,MAAAx6C,EAAA,QAIAy6C,EAEA,IADA1iJ,GAAA,EAAA+F,EAAAgB,EAAA9G,SACAD,EAAA+F,GACA,OAAAmD,EAAAnC,EAAAoC,WAAAnJ,KAAAkJ,EAAA,IACAo5I,GAAA,KAAAp5I,EAAAy5I,EAAA57I,EAAAif,MAAAhmB,EAAA,GAAA+G,EAAAif,MAAAhmB,IAAAsiJ,EACAv7I,IAAAif,MAAA,EAAAhmB,EACA,QAOAkoG,IAAApS,IAAA/uF,EAAAisE,EAAAjsE,EAAAu3D,KAGA,IAAAr+D,GAAAoiJ,EAAApiJ,OAAA8G,EAAA9G,OAAAqiJ,EAAAriJ,OACAwiH,EAAAxiH,EAAA0/F,EAAA,GAAA/3F,OAAA+3F,EAAA1/F,EAAA,GAAAqB,KAAA4vE,GAAA,EAMA,QAHAg3B,GAAApS,IAAA/uF,EAAAisE,EAAAyvC,EAAA17G,EAAA07G,EAAAxiH,OAAA0/F,EAAA2iD,EAAAriJ,OAAAq+D,KAAAmkD,EAAA,IAGAza,GACA,QAAAjhG,EAAAs7I,EAAAt7I,EAAAu7I,EAAA7/B,CAAsE,MACtE,SAAA17G,EAAAs7I,EAAA5/B,EAAA17G,EAAAu7I,CAAsE,MACtE,SAAAv7I,EAAA07G,EAAAz8F,MAAA,EAAA/lB,EAAAwiH,EAAAxiH,QAAA,GAAAoiJ,EAAAt7I,EAAAu7I,EAAA7/B,EAAAz8F,MAAA/lB,EAAqI,MACrI,SAAA8G,EAAA07G,EAAA4/B,EAAAt7I,EAAAu7I,EAGA,MAAAV,GAAA76I,GArFA+gG,EAAAD,GAAAC,EAEA,IAAA52B,GAAA42B,EAAA52B,KACA82B,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,KACA5gC,EAAAygC,EAAAzgC,OACAyuB,EAAAgS,EAAAhS,KACA6J,EAAAmI,EAAAnI,MACAuI,EAAAJ,EAAAI,MACA36B,EAAAu6B,EAAAv6B,UACA9uE,EAAAqpG,EAAArpG,KAIAq/E,EAAA,MAAAzW,EAAAu7E,EAAA,SAAAv7E,GAAA,SAAAtiE,KAAAtG,GAAA,IAAAA,EAAAwG,cAAA,GACAs9I,EAAA,MAAAl7E,EAAAu7E,EAAA,UAAA79I,KAAAtG,GAAA,OAKA+jJ,EAAAr6C,GAAA1pG,GACAikJ,GAAAjkJ,GAAA,aAAAsG,KAAAtG,EAuEA,OAjEA8uE,GAAA,MAAAA,EAAA9uE,EAAA,KACA,SAAAsG,KAAAtG,GAAAwN,KAAAC,IAAA,EAAAD,KAAAkyE,IAAA,GAAA5Q,IACAthE,KAAAC,IAAA,EAAAD,KAAAkyE,IAAA,GAAA5Q,IA2DAmb,EAAAtnF,SAAA,WACA,MAAA0mG,GAAA,IAGApf,EAGA,QAAA6f,GAAAT,EAAA/gG,GACA,GAAAggF,GAAAwkC,GAAAzjB,EAAAD,GAAAC,KAAArpG,KAAA,IAAAqpG,IACAroG,EAAA,EAAAwM,KAAAC,KAAA,EAAAD,KAAAkyE,IAAA,EAAAlyE,KAAAszE,MAAAgiE,GAAAx6I,GAAA,KACA6iF,EAAA39E,KAAAq7E,IAAA,IAAA7nF,GACAq+E,EAAA1rC,GAAA,EAAA3yC,EAAA,EACA,iBAAAsH,GACA,MAAAggF,GAAA6C,EAAA7iF,GAAA+2E,GA3GA,GAAA9K,GAAAs4C,EAAAm2B,UAAAn2B,EAAAo2B,UAAAF,GAAAl2B,EAAAm2B,SAAAn2B,EAAAo2B,WAAAU,GACAQ,EAAAt3B,EAAAs3B,SACAD,EAAAr3B,EAAAq3B,QACAf,EAAAt2B,EAAAs2B,SAAAD,GAAAr2B,EAAAs2B,UAAAQ,EA4GA,QACA15D,OAAA6iC,EACAhjB,gBAQAH,KACAu6C,QAAA,IACAjB,UAAA,IACAD,UAAA,GACAmB,UAAA,SAUA,IAAAC,IAAA,SAAAv/E,GACA,MAAAr3D,MAAAC,IAAA,GAAAq1I,GAAAt1I,KAAAm7E,IAAA9jB,MAGAw/E,GAAA,SAAAx/E,EAAAv8D,GACA,MAAAkF,MAAAC,IAAA,IAAAD,KAAAC,KAAA,EAAAD,KAAAkyE,IAAA,EAAAlyE,KAAAszE,MAAAgiE,GAAAx6I,GAAA,KAAAw6I,GAAAt1I,KAAAm7E,IAAA9jB,MAGAy/E,GAAA,SAAAz/E,EAAAp3D,GAEA,MADAo3D,GAAAr3D,KAAAm7E,IAAA9jB,GAAAp3D,EAAAD,KAAAm7E,IAAAl7E,GAAAo3D,EACAr3D,KAAAC,IAAA,EAAAq1I,GAAAr1I,GAAAq1I,GAAAj+E,IAAA,GAUAolC,GAAA,WACA,UAAAF,IAOAA,IAAAz6F,WACAwU,YAAAimF,GACAC,MAAA,WACAnpG,KAAAkoB,EACAloB,KAAAirF,EAAA,GAEAl5E,IAAA,SAAAy2E,GACAl0D,GAAAwmD,GAAA0N,EAAAxoF,KAAAirF,GACA32D,GAAAt0B,KAAA86E,GAAA5yD,EAAAloB,KAAAkoB,GACAloB,KAAAkoB,EAAAloB,KAAAirF,GAAAnQ,GAAAmQ,EACAjrF,KAAAkoB,EAAA4yD,GAAAmQ,GAEA5R,QAAA,WACA,MAAAr5E,MAAAkoB,GAIA,IAwHA8iF,IACAC,GACAI,GACAC,GACAG,GA+FAkB,GACAE,GACAD,GACAE,GACAQ,GACAW,GACAC,GACAlB,GAEAN,GACArnB,GAqKAspB,GACAU,GACAT,GACAC,GACAC,GACAQ,GACAC,GACAC,GACAW,GACAC,GACAC,GACAP,GACAC,GACA/I,GACAC,GACAiI,GAzZAp0B,GAAA,GAAAouB,IASAmF,GAAA,KACAq1C,GAAA,MACAl6C,GAAA78F,KAAA8mI,GACA/pC,GAAAF,GAAA,EACAgC,GAAAhC,GAAA,EACA+G,GAAA,EAAA/G,GAEAiE,GAAA,IAAAjE,GACA4B,GAAA5B,GAAA,IAEA1hB,GAAAn7E,KAAAm7E,IACAuxB,GAAA1sG,KAAA0sG,KACA1kB,GAAAhoF,KAAAgoF,MACA4W,GAAA5+F,KAAAinF,IACA5T,GAAArzE,KAAAqzE,KACAzwD,GAAA5iB,KAAA4iB,IAEA04D,GAAAt7E,KAAAs7E,IACAD,GAAAr7E,KAAAq7E,IACA4hB,GAAAj9F,KAAAknF,IACA8U,GAAAh8F,KAAAg8F,MAAA,SAAAjhB,GAAqC,MAAAA,GAAA,IAAAA,EAAA,QACrCmN,GAAAloF,KAAAkoF,KACAwoB,GAAA1wG,KAAA0wG,IAsBAsmC,IACAC,QAAA,SAAAlpG,EAAAsvD,GACAF,GAAApvD,EAAAqvD,SAAAC,IAEA65C,kBAAA,SAAAnpG,EAAAsvD,GAEA,IADA,GAAA85C,GAAAppG,EAAAopG,SAAApjJ,GAAA,EAAA+F,EAAAq9I,EAAAnjJ,SACAD,EAAA+F,GAAAqjG,GAAAg6C,EAAApjJ,GAAAqpG,SAAAC,KAIAC,IACA85C,OAAA,SAAArpG,EAAAsvD,GACAA,EAAAgT,UAEAgnC,MAAA,SAAAtpG,EAAAsvD,GACAtvD,IAAAyvD,YACAH,EAAA7H,MAAAznD,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAupG,WAAA,SAAAvpG,EAAAsvD,GAEA,IADA,GAAAG,GAAAzvD,EAAAyvD,YAAAzpG,GAAA,EAAA+F,EAAA0jG,EAAAxpG,SACAD,EAAA+F,GAAAi0C,EAAAyvD,EAAAzpG,GAAAspG,EAAA7H,MAAAznD,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAwpG,WAAA,SAAAxpG,EAAAsvD,GACAE,GAAAxvD,EAAAyvD,YAAAH,EAAA,IAEAm6C,gBAAA,SAAAzpG,EAAAsvD,GAEA,IADA,GAAAG,GAAAzvD,EAAAyvD,YAAAzpG,GAAA,EAAA+F,EAAA0jG,EAAAxpG,SACAD,EAAA+F,GAAAyjG,GAAAC,EAAAzpG,GAAAspG,EAAA,IAEAo6C,QAAA,SAAA1pG,EAAAsvD,GACAQ,GAAA9vD,EAAAyvD,YAAAH,IAEAq6C,aAAA,SAAA3pG,EAAAsvD,GAEA,IADA,GAAAG,GAAAzvD,EAAAyvD,YAAAzpG,GAAA,EAAA+F,EAAA0jG,EAAAxpG,SACAD,EAAA+F,GAAA+jG,GAAAL,EAAAzpG,GAAAspG,IAEAs6C,mBAAA,SAAA5pG,EAAAsvD,GAEA,IADA,GAAAu6C,GAAA7pG,EAAA6pG,WAAA7jJ,GAAA,EAAA+F,EAAA89I,EAAA5jJ,SACAD,EAAA+F,GAAAqjG,GAAAy6C,EAAA7jJ,GAAAspG,KAkBA4P,GAAA,SAAAl/D,EAAAsvD,GACAtvD,GAAAipG,GAAAr8I,eAAAozC,EAAAv7C,MACAwkJ,GAAAjpG,EAAAv7C,MAAAu7C,EAAAsvD,GAEAF,GAAApvD,EAAAsvD,IAIAgC,GAAA5C,KAEAo7C,GAAAp7C,KAOAwB,IACAzI,MAAA0H,GACAS,UAAAT,GACAU,QAAAV,GACAY,aAAA,WACAuB,GAAA7C,QACAyB,GAAAN,UAAAK,GACAC,GAAAL,QAAAO,IAEAJ,WAAA,WACA,GAAA+5C,IAAAz4C,EACAw4C,IAAAzyI,IAAA0yI,EAAA,EAAAl0C,GAAAk0C,KACAzkJ,KAAAsqG,UAAAtqG,KAAAuqG,QAAAvqG,KAAAmiG,MAAA0H,IAEAmT,OAAA,WACAwnC,GAAAzyI,IAAAw+F,MAwCAm0C,GAAA,SAAAhqG,GAGA,MAFA8pG,IAAAr7C,QACAyQ,GAAAl/D,EAAAkwD,IACA,EAAA45C,IA2CAx2C,GAAA5E,KAIAyE,IACA1L,MAAAsK,GACAnC,UAAAsD,GACArD,QAAAuD,GACArD,aAAA,WACAoD,GAAA1L,MAAA4L,GACAF,GAAAvD,UAAA6D,GACAN,GAAAtD,QAAA6D,GACAJ,GAAA7E,QACAyB,GAAAH,gBAEAC,WAAA,WACAE,GAAAF,aACAmD,GAAA1L,MAAAsK,GACAoB,GAAAvD,UAAAsD,GACAC,GAAAtD,QAAAuD,GACA9B,GAAA,GAAAW,KAAAC,GAAA,KAAAC,KAAAC,GAAA,KACAkB,GAAAK,GAAAvB,GAAA,GACAkB,IAAAK,KAAAxB,IAAA,IACAxnB,GAAA,GAAAsnB,GAAAtnB,GAAA,GAAAunB,KA2GA+3C,GAAA,SAAAC,GACA,GAAAlkJ,GAAA+F,EAAAsB,EAAAsB,EAAAsJ,EAAAkyI,EAAAx3C,CAOA,IALAP,GAAAF,KAAAD,GAAAE,GAAA7tC,KACA0tC,MACAkN,GAAAgrC,EAAA/2C,IAGApnG,EAAAimG,GAAA/rG,OAAA,CAIA,IAHA+rG,GAAA3zF,KAAAu1F,IAGA5tG,EAAA,EAAAqH,EAAA2kG,GAAA,GAAA/5F,GAAA5K,GAA4CrH,EAAA+F,IAAO/F,EACnD2I,EAAAqjG,GAAAhsG,GACA6tG,GAAAxmG,EAAAsB,EAAA,KAAAklG,GAAAxmG,EAAAsB,EAAA,KACAskG,GAAA5lG,EAAA,GAAAsB,EAAA,IAAAskG,GAAA5lG,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAsB,EAAA,IACAskG,GAAAtkG,EAAA,GAAAtB,EAAA,IAAA4lG,GAAA5lG,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAsB,EAAA,KAEAsJ,EAAAxR,KAAA4G,EAAAsB,EAMA,KAAAw7I,IAAA7lF,KAAAv4D,EAAAkM,EAAAhS,OAAA,EAAAD,EAAA,EAAAqH,EAAA4K,EAAAlM,GAA2E/F,GAAA+F,EAAQsB,EAAAsB,IAAA3I,EACnF2I,EAAAsJ,EAAAjS,IACA2sG,EAAAM,GAAA5lG,EAAA,GAAAsB,EAAA,KAAAw7I,MAAAx3C,EAAAV,GAAAtjG,EAAA,GAAAujG,GAAA7kG,EAAA,IAMA,MAFA2kG,IAAArnB,GAAA,KAEAsnB,KAAA3tC,KAAA6tC,KAAA7tC,MACAivB,sBACA0e,GAAAE,KAAAD,GAAAE,MAoBAkC,IACAgO,OAAAnT,GACA1H,MAAAqM,GACAlE,UAAAyE,GACAxE,QAAAkF,GACAhF,aAAA,WACAuE,GAAA1E,UAAAoF,GACAV,GAAAzE,QAAAqF,IAEAlF,WAAA,WACAsE,GAAA1E,UAAAyE,GACAC,GAAAzE,QAAAkF,KA8FAq1C,GAAA,SAAApqG,GACAi0D,GAAAU,GACAT,GAAAC,GAAAC,GACAQ,GAAAC,GAAAC,GACAW,GAAAC,GAAAC,GAAA,EACAuJ,GAAAl/D,EAAAs0D,GAEA,IAAAtnB,GAAAyoB,GACA3nB,EAAA4nB,GACA1B,EAAA2B,GACApnG,EAAAy+E,IAAAc,IAAAkmB,GAGA,OAAAzlG,GAAAy6I,KACAh8D,EAAA4nB,GAAA9mB,EAAA+mB,GAAAb,EAAAc,GAEAH,GAAAhB,KAAA3mB,EAAAknB,GAAApmB,EAAAqmB,GAAAH,EAAAI,KACA7lG,EAAAy+E,IAAAc,IAAAkmB,KAEAg1C,KAAAz1D,UAGA0G,GAAAnM,EAAAd,GAAA+lB,GAAAhE,GAAAiF,EAAA7Z,GAAA5rF,IAAAwkG,KAGAs3C,GAAA,SAAAr9D,GACA,kBACA,MAAAA,KAIAkpB,GAAA,SAAA7oG,EAAAsB,GAEA,QAAAunG,GAAAlpB,EAAAc,GACA,MAAAd,GAAA3/E,EAAA2/E,EAAAc,GAAAn/E,EAAAq+E,EAAA,GAAAA,EAAA,IAOA,MAJA3/E,GAAAg8E,QAAA16E,EAAA06E,SAAA6sB,EAAA7sB,OAAA,SAAA2D,EAAAc,GACA,OAAAd,EAAAr+E,EAAA06E,OAAA2D,EAAAc,KAAAzgF,EAAAg8E,OAAA2D,EAAA,GAAAA,EAAA,MAGAkpB,EAOAN,IAAAvsB,OAAAusB,EAsDA,IAwgBAyD,IACAC,GACAC,GAwRAgC,GACAE,GACAD,GACAE,GA4EAwB,GACAC,GACAX,GACAC,GAp3BAnG,GAAA,SAAAhZ,GAGA,QAAAykB,GAAAtS,GAEA,MADAA,GAAAnS,EAAAmS,EAAA,GAAAiB,GAAAjB,EAAA,GAAAiB,IACAjB,EAAA,IAAAsD,GAAAtD,EAAA,IAAAsD,GAAAtD,EAQA,MAZAnS,GAAAwY,GAAAxY,EAAA,GAAAoT,GAAApT,EAAA,GAAAoT,GAAApT,EAAAr3F,OAAA,EAAAq3F,EAAA,GAAAoT,GAAA,GAOAqR,EAAA14B,OAAA,SAAAomB,GAEA,MADAA,GAAAnS,EAAAjU,OAAAomB,EAAA,GAAAiB,GAAAjB,EAAA,GAAAiB,IACAjB,EAAA,IAAAsD,GAAAtD,EAAA,IAAAsD,GAAAtD,GAGAsS,GA+BA0D,GAAA,WAQA,QAAAhe,GAAAza,EAAAc,GACAiqB,EAAAtxG,KAAAumF,EAAAsQ,EAAAtQ,EAAAc,IACAd,EAAA,IAAA+lB,GAAA/lB,EAAA,IAAA+lB,GAGA,QAAA0S,KACA,GAAAv2G,GAAA6+E,EAAAxgF,MAAAjI,KAAAgI,WACA8qF,EAAAyS,EAAAt9F,MAAAjI,KAAAgI,WAAAojG,GACA/6E,EAAA49C,EAAAhmE,MAAAjI,KAAAgI,WAAAojG,EAMA,OALAqH,MACAza,EAAAwY,IAAA5mG,EAAA,GAAAwhG,IAAAxhG,EAAA,GAAAwhG,GAAA,GAAArnB,OACAstB,GAAArH,EAAAlX,EAAAziE,EAAA,GACAzmB,GAASzK,KAAA,UAAAgrG,aAAAsI,IACTA,EAAAza,EAAA,KACApuF,EArBA,GAGA6oG,GACAza,EAJAvP,EAAAs8D,IAAA,MACAx/C,EAAAw/C,GAAA,IACA92E,EAAA82E,GAAA,GAGA/6C,GAAgB7H,QA+BhB,OAZAge,GAAA13B,OAAA,SAAA73D,GACA,MAAA5oB,WAAArH,QAAA8nF,EAAA,kBAAA73D,KAAAm0H,KAAAn0H,EAAA,IAAAA,EAAA,KAAAuvF,GAAA13B,GAGA03B,EAAA5a,OAAA,SAAA30E,GACA,MAAA5oB,WAAArH,QAAA4kG,EAAA,kBAAA30E,KAAAm0H,IAAAn0H,GAAAuvF,GAAA5a,GAGA4a,EAAAlyC,UAAA,SAAAr9C,GACA,MAAA5oB,WAAArH,QAAAstE,EAAA,kBAAAr9C,KAAAm0H,IAAAn0H,GAAAuvF,GAAAlyC,GAGAkyC,GAGAzM,GAAA,WACA,GACAtpB,GADAgrB,IAEA,QACAjT,MAAA,SAAAza,EAAAc,GACA4B,EAAAjpF,MAAAumF,EAAAc,KAEA8hB,UAAA,WACA8K,EAAAj0G,KAAAipF,OAEAmgB,QAAAV,GACAyJ,OAAA,WACA8B,EAAAz0G,OAAA,GAAAy0G,EAAAj0G,KAAAi0G,EAAAvqG,MAAA3B,OAAAksG,EAAA5qE,WAEAzoC,OAAA,WACA,GAAAA,GAAAqzG,CAGA,OAFAA,MACAhrB,EAAA,KACAroF,KAKA0xG,GAAA,SAAA1rG,EAAAsB,EAAA29F,EAAAC,EAAAC,EAAAC,GACA,GAQArU,GARA4uB,EAAA35G,EAAA,GACA45G,EAAA55G,EAAA,GACAg1H,EAAA1zH,EAAA,GACA2zH,EAAA3zH,EAAA,GACAirF,EAAA,EACAE,EAAA,EACAv2D,EAAA8+F,EAAArb,EACAvjF,EAAA6+F,EAAArb,CAIA,IADA7uB,EAAAkU,EAAA0a,EACAzjF,KAAA60D,EAAA,IAEA,GADAA,GAAA70D,EACAA,EAAA,GACA,GAAA60D,EAAAwB,EAAA,MACAxB,GAAA0B,MAAA1B,OACG,IAAA70D,EAAA,GACH,GAAA60D,EAAA0B,EAAA,MACA1B,GAAAwB,MAAAxB,GAIA,GADAA,EAAAoU,EAAAwa,EACAzjF,KAAA60D,EAAA,IAEA,GADAA,GAAA70D,EACAA,EAAA,GACA,GAAA60D,EAAA0B,EAAA,MACA1B,GAAAwB,MAAAxB,OACG,IAAA70D,EAAA,GACH,GAAA60D,EAAAwB,EAAA,MACAxB,GAAA0B,MAAA1B,GAIA,GADAA,EAAAmU,EAAA0a,EACAxjF,KAAA20D,EAAA,IAEA,GADAA,GAAA30D,EACAA,EAAA,GACA,GAAA20D,EAAAwB,EAAA,MACAxB,GAAA0B,MAAA1B,OACG,IAAA30D,EAAA,GACH,GAAA20D,EAAA0B,EAAA,MACA1B,GAAAwB,MAAAxB,GAIA,GADAA,EAAAqU,EAAAwa,EACAxjF,KAAA20D,EAAA,IAEA,GADAA,GAAA30D,EACAA,EAAA,GACA,GAAA20D,EAAA0B,EAAA,MACA1B,GAAAwB,MAAAxB,OACG,IAAA30D,EAAA,GACH,GAAA20D,EAAAwB,EAAA,MACAxB,GAAA0B,MAAA1B,GAKA,MAFAwB,GAAA,IAAAvsF,EAAA,GAAA25G,EAAAptB,EAAAr2D,EAAAl2B,EAAA,GAAA45G,EAAArtB,EAAAn2D,GACAq2D,EAAA,IAAAnrF,EAAA,GAAAq4G,EAAAltB,EAAAv2D,EAAA50B,EAAA,GAAAs4G,EAAAntB,EAAAr2D,IACA,OAGA6mH,GAAA,SAAAj9I,EAAAsB,GACA,MAAAy+E,IAAA//E,EAAA,GAAAsB,EAAA,IAAAglG,IAAAvmB,GAAA//E,EAAA,GAAAsB,EAAA,IAAAglG,IAeAyE,GAAA,SAAA1oG,EAAA8nG,EAAAU,EAAAv2B,EAAA2tB,GACA,GAEAtpG,GACA+F,EAHAgrF,KACAkoB,IAwBA,IApBAvvG,EAAAxK,QAAA,SAAAk5G,GACA,MAAAryG,EAAAqyG,EAAAn4G,OAAA,QACA,GAAA8F,GAAAihF,EAAAslB,EAAA8L,EAAA,GAAAuH,EAAAvH,EAAAryG,EAKA,IAAAu+I,GAAAh4C,EAAAqT,GAAA,CAEA,IADArW,EAAAM,YACA5pG,EAAA,EAAiBA,EAAA+F,IAAO/F,EAAAspG,EAAA7H,OAAA6K,EAAA8L,EAAAp4G,IAAA,GAAAssG,EAAA,GAExB,YADAhD,GAAAO,UAIA9Y,EAAAtwF,KAAAumF,EAAA,GAAAgqB,IAAA1E,EAAA8L,EAAA,UACAa,EAAAx4G,KAAAumF,EAAAmF,EAAA,GAAA6kB,IAAA1E,EAAA,KAAAtlB,GAAA,IACA+J,EAAAtwF,KAAAumF,EAAA,GAAAgqB,IAAA2O,EAAAvH,EAAA,UACAa,EAAAx4G,KAAAumF,EAAAmF,EAAA,GAAA6kB,IAAA2O,EAAA,KAAA34B,GAAA,OAGA+J,EAAA9wF,OAAA,CAMA,IAJAg5G,EAAA5gG,KAAAm5F,GACAN,GAAAngB,GACAmgB,GAAA+H,GAEAj5G,EAAA,EAAA+F,EAAAkzG,EAAAh5G,OAA8BD,EAAA+F,IAAO/F,EACrCi5G,EAAAj5G,GAAAP,EAAAyyG,IAOA,KAJA,GACAjB,GACAxP,EAFA/5F,EAAAqpF,EAAA,KAIA,CAIA,IAFA,GAAA12C,GAAA3yC,EACA68I,GAAA,EACAlqG,EAAApH,GAAA,IAAAoH,IAAAt0C,KAAA2B,EAAA,MACAupG,GAAA52D,EAAA2zD,EACA1E,EAAAM,WACA,IAEA,GADAvvD,EAAApH,EAAAoH,EAAA8xC,EAAAl5C,GAAA,EACAoH,EAAA56C,EAAA,CACA,GAAA8kJ,EACA,IAAAvkJ,EAAA,EAAA+F,EAAAkrG,EAAAhxG,OAAwCD,EAAA+F,IAAO/F,EAAAspG,EAAA7H,SAAAwP,EAAAjxG,IAAA,GAAAyhG,EAAA,QAE/C9lB,GAAAthC,EAAA2sC,EAAA3sC,EAAAt0C,EAAAihF,EAAA,EAAAsiB,EAEAjvD,KAAAt0C,MACO,CACP,GAAAw+I,EAEA,IADAtzC,EAAA52D,EAAA1qB,EAAAq+E,EACAhuG,EAAAixG,EAAAhxG,OAAA,EAAqCD,GAAA,IAAQA,EAAAspG,EAAA7H,SAAAwP,EAAAjxG,IAAA,GAAAyhG,EAAA,QAE7C9lB,GAAAthC,EAAA2sC,EAAA3sC,EAAA1qB,EAAAq3D,GAAA,EAAAsiB,EAEAjvD,KAAA1qB,EAEA0qB,IAAA8xC,EACA8kB,EAAA52D,EAAA2zD,EACAu2C,YACKlqG,EAAApH,EACLq2D,GAAAO,aAmBAiJ,GAAA,IACAD,IAAAC,GAmKA0xC,GAAA,WACA,GAIAt9I,GACA+zG,EACAhC,EANA3S,EAAA,EACAC,EAAA,EACAC,EAAA,IACAC,EAAA,GAKA,OAAAwS,IACA3P,OAAA,SAAAA,GACA,MAAApiG,IAAA+zG,IAAA3R,EAAApiG,IAAAiqG,GAAA7K,EAAAC,EAAAC,EAAAC,GAAAwU,EAAA3R,IAEAtJ,OAAA,SAAA9vE,GACA,MAAA5oB,WAAArH,QAAAqmG,GAAAp2E,EAAA,MAAAq2E,GAAAr2E,EAAA,MAAAs2E,GAAAt2E,EAAA,MAAAu2E,GAAAv2E,EAAA,MAAAhpB,EAAA+zG,EAAA,KAAAhC,KAAA3S,EAAAC,IAAAC,EAAAC,OAKAg+C,GAAA/7C,KAEAyL,GAAA,SAAAtC,EAAApQ,GACA,GAAA+I,GAAA/I,EAAA,GACAgJ,EAAAhJ,EAAA,GACA8K,GAAArD,GAAAsB,IAAAK,GAAAL,GAAA,GACAyC,EAAA,EACA2E,EAAA,CAEA6yC,IAAAh8C,OAEA,QAAAzoG,GAAA,EAAA+F,EAAA8rG,EAAA5xG,OAAqCD,EAAA+F,IAAO/F,EAC5C,GAAAuI,GAAAwpG,EAAAF,EAAA7xG,IAAAC,OASA,OARA8xG,GACAxpG,EACAs5F,EAAAkQ,EAAAxpG,EAAA,GACAoiG,EAAA9I,EAAA,GACAsK,EAAAtK,EAAA,KAAAiJ,GACAC,EAAA7B,GAAAiD,GACAvB,EAAAC,GAAAsB,GAEAnqG,EAAA,EAAmBA,EAAAuG,IAAOvG,EAAA2oG,EAAAuB,EAAAnB,EAAA25C,EAAA95C,EAAA6N,EAAA5W,EAAAT,EAAA,CAC1B,GAAAA,GAAA2Q,EAAA/vG,GACAkqG,EAAA9K,EAAA,GACAgL,EAAAhL,EAAA,KAAA0J,GACA45C,EAAAx7C,GAAAkD,GACAqM,EAAA5N,GAAAuB,GACAO,EAAAT,EAAAvB,EACAkC,EAAAF,GAAA,OACAg4C,EAAA93C,EAAAF,EACAK,EAAA23C,EAAA77C,GACAlf,EAAAmhB,EAAA25C,CAOA,IALAD,GAAApzI,IAAA4iF,GAAArK,EAAAijB,EAAA3D,GAAAy7C,GAAA/5C,EAAA6N,EAAA7uB,EAAAihB,GAAA85C,KACA13C,GAAAD,EAAAL,EAAAE,EAAAgD,GAAAlD,EAIAK,EAAArC,GAAAH,EAAA0B,GAAA1B,EAAA,CACA,GAAAg0B,GAAA9yB,GAAAF,GAAA3J,GAAA2J,GAAApK,GACA0K,IAAA0yB,EACA,IAAA59C,GAAA8qB,GAAAa,EAAAiyB,EACA1yB,IAAAlrB,EACA,IAAAgkE,IAAA53C,EAAAL,GAAA,QAAA5D,GAAAnoB,EAAA,KACA6pB,EAAAm6C,GAAAn6C,IAAAm6C,IAAApmB,EAAA,IAAAA,EAAA,OACA5sB,GAAA5E,EAAAL,GAAA,SAiBA,OAAAM,GAAAU,IAAAV,EAAAU,IAAA82C,IAAA92C,IAAA,EAAAiE,GAGA+B,GAAAjL,KAKAwK,IACAoJ,OAAAnT,GACA1H,MAAA0H,GACAS,UAAAqJ,GACApJ,QAAAV,GACAY,aAAAZ,GACAa,WAAAb,IAgCA07C,GAAA,SAAA7qG,GAGA,MAFA25D,IAAAlL,QACAyQ,GAAAl/D,EAAAk5D,KACAS,IAGAlK,IAAA,WACAq7C,IAAgBrmJ,KAAA,aAAAgrG,gBAEhBsK,GAAA,SAAA1sG,EAAAsB,GAGA,MAFA8gG,IAAA,GAAApiG,EACAoiG,GAAA,GAAA9gG,EACAk8I,GAAAC,KAGAC,IACA7B,QAAA,SAAAlpG,EAAAynD,GACA,MAAAmS,IAAA55D,EAAAqvD,SAAA5H,IAEA0hD,kBAAA,SAAAnpG,EAAAynD,GAEA,IADA,GAAA2hD,GAAAppG,EAAAopG,SAAApjJ,GAAA,EAAA+F,EAAAq9I,EAAAnjJ,SACAD,EAAA+F,GAAA,GAAA6tG,GAAAwvC,EAAApjJ,GAAAqpG,SAAA5H,GAAA,QACA,YAIAoS,IACAwvC,OAAA,WACA,UAEAC,MAAA,SAAAtpG,EAAAynD,GACA,MAAAqS,IAAA95D,EAAAyvD,YAAAhI,IAEA8hD,WAAA,SAAAvpG,EAAAynD,GAEA,IADA,GAAAgI,GAAAzvD,EAAAyvD,YAAAzpG,GAAA,EAAA+F,EAAA0jG,EAAAxpG,SACAD,EAAA+F,GAAA,GAAA+tG,GAAArK,EAAAzpG,GAAAyhG,GAAA,QACA,WAEA+hD,WAAA,SAAAxpG,EAAAynD,GACA,MAAAuS,IAAAh6D,EAAAyvD,YAAAhI,IAEAgiD,gBAAA,SAAAzpG,EAAAynD,GAEA,IADA,GAAAgI,GAAAzvD,EAAAyvD,YAAAzpG,GAAA,EAAA+F,EAAA0jG,EAAAxpG,SACAD,EAAA+F,GAAA,GAAAiuG,GAAAvK,EAAAzpG,GAAAyhG,GAAA,QACA,WAEAiiD,QAAA,SAAA1pG,EAAAynD,GACA,MAAAyS,IAAAl6D,EAAAyvD,YAAAhI,IAEAkiD,aAAA,SAAA3pG,EAAAynD,GAEA,IADA,GAAAgI,GAAAzvD,EAAAyvD,YAAAzpG,GAAA,EAAA+F,EAAA0jG,EAAAxpG,SACAD,EAAA+F,GAAA,GAAAmuG,GAAAzK,EAAAzpG,GAAAyhG,GAAA,QACA,WAEAmiD,mBAAA,SAAA5pG,EAAAynD,GAEA,IADA,GAAAoiD,GAAA7pG,EAAA6pG,WAAA7jJ,GAAA,EAAA+F,EAAA89I,EAAA5jJ,SACAD,EAAA+F,GAAA,GAAA6tG,GAAAiwC,EAAA7jJ,GAAAyhG,GAAA,QACA,YAiCAimC,GAAA,SAAA1tF,EAAAynD,GACA,OAAAznD,GAAA+qG,GAAAn+I,eAAAozC,EAAAv7C,MACAsmJ,GAAA/qG,EAAAv7C,MACAm1G,IAAA55D,EAAAynD,IA0GAujD,GAAA,SAAA39I,EAAAsB,GACA,GAAA29F,GAAAj/F,EAAA,GAAAqjG,GACAnE,EAAAl/F,EAAA,GAAAqjG,GACAlE,EAAA79F,EAAA,GAAA+hG,GACAjE,EAAA99F,EAAA,GAAA+hG,GACAsS,EAAAnS,GAAAtE,GACA2V,EAAAhT,GAAA3C,GACA+wB,EAAAzsB,GAAApE,GACAw+C,EAAA/7C,GAAAzC,GACAy+C,EAAAloC,EAAAnS,GAAAvE,GACA6+C,EAAAnoC,EAAA9T,GAAA5C,GACA8+C,EAAA9tB,EAAAzsB,GAAArE,GACA6+C,EAAA/tB,EAAApuB,GAAA1C,GACApqF,EAAA,EAAA2sF,GAAA5U,GAAA8U,GAAAxC,EAAAF,GAAAyW,EAAAsa,EAAAruB,GAAAzC,EAAAF,KACA1c,EAAAsf,GAAA9sF,GAEAu/D,EAAAv/D,EAAA,SAAAmuE,GACA,GAAAi1B,GAAAtW,GAAA3e,GAAAnuE,GAAAwtE,EACAk3B,EAAA5X,GAAA9sF,EAAAmuE,GAAAX,EACA5C,EAAA85B,EAAAokC,EAAA1lC,EAAA4lC,EACAt9D,EAAAg5B,EAAAqkC,EAAA3lC,EAAA6lC,EACAr3C,EAAA8S,EAAA5E,EAAAsD,EAAAylC,CACA,QACAhxD,GAAAnM,EAAAd,GAAA+lB,GACA9Y,GAAA+Z,EAAA7Z,GAAAnN,IAAAc,MAAAilB,KAEG,WACH,OAAAzG,EAAAyG,GAAAxG,EAAAwG,IAKA,OAFApxB,GAAAo4B,SAAA33F,EAEAu/D,GAGA2/B,GAAA,SAAAt0B,GACA,MAAAA,IAGAs+D,GAAA58C,KACAiN,GAAAjN,KAMA0M,IACA3T,MAAA0H,GACAS,UAAAT,GACAU,QAAAV,GACAY,aAAA,WACAqL,GAAAxL,UAAAuL,GACAC,GAAAvL,QAAA+L,IAEA5L,WAAA,WACAoL,GAAAxL,UAAAwL,GAAAvL,QAAAuL,GAAA3T,MAAA0H,GACAm8C,GAAAj0I,IAAA+1E,GAAAuuB,KACAA,GAAAlN,SAEApnG,OAAA,WACA,GAAA2iJ,GAAAsB,GAAA,CAEA,OADAA,IAAA78C,QACAu7C,IAsBAluC,GAAAx3C,IACAy3C,GAAAD,GACAtP,IAAAsP,GACArP,GAAAD,GAEA2S,IACA1X,MAAAoU,GACAjM,UAAAT,GACAU,QAAAV,GACAY,aAAAZ,GACAa,WAAAb,GACA9nG,OAAA,WACA,GAAA4iJ,KAAAnuC,GAAAC,KAAAvP,GAAAC,IAEA,OADAD,IAAAC,KAAAsP,GAAAD,GAAAx3C,KACA2lF,IAaAhuC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAO,GAAA,EACAC,GAAA,EACAC,GAAA,EACAQ,GAAA,EACAC,GAAA,EACAC,GAAA,EAMAjB,IACA5U,MAAAuU,GACApM,UAAAwM,GACAvM,QAAAgN,GACA9M,aAAA,WACAsM,GAAAzM,UAAAkN,GACAT,GAAAxM,QAAAmN,IAEAhN,WAAA,WACAqM,GAAA5U,MAAAuU,GACAK,GAAAzM,UAAAwM,GACAC,GAAAxM,QAAAgN,IAEAx1G,OAAA,WACA,GAAA+iJ,GAAA9sC,IAAAF,GAAAE,GAAAD,GAAAC,IACAV,IAAAF,GAAAE,GAAAD,GAAAC,IACAT,IAAAF,GAAAE,GAAAD,GAAAC,KACA5oB,QAIA,OAHA0oB,IAAAC,GAAAC,GACAO,GAAAC,GAAAC,GACAQ,GAAAC,GAAAC,GAAA,EACA8sC,GAgEA7sC,IAAAxpG,WACAw3I,QAAA,IACAC,YAAA,SAAAt1H,GACA,MAAA5wB,MAAAimJ,QAAAr1H,EAAA5wB,MAEAyqG,aAAA,WACAzqG,KAAAmmJ,MAAA,GAEAz7C,WAAA,WACA1qG,KAAAmmJ,MAAAl4D,KAEAqc,UAAA,WACAtqG,KAAAomJ,OAAA,GAEA77C,QAAA,WACA,IAAAvqG,KAAAmmJ,OAAAnmJ,KAAA4c,SAAA29H,YACAv6I,KAAAomJ,OAAAn4D,KAEAkU,MAAA,SAAAza,EAAAc,GACA,OAAAxoF,KAAAomJ,QACA,OACApmJ,KAAA4c,SAAA09H,OAAA5yD,EAAAc,GACAxoF,KAAAomJ,OAAA,CACA,MAEA,QACApmJ,KAAA4c,SAAA49H,OAAA9yD,EAAAc,EACA,MAEA,SACAxoF,KAAA4c,SAAA09H,OAAA5yD,EAAA1nF,KAAAimJ,QAAAz9D,GACAxoF,KAAA4c,SAAAsiH,IAAAx3C,EAAAc,EAAAxoF,KAAAimJ,QAAA,EAAA11C,MAKAxuG,OAAA8nG,GAGA,IACAw8C,IACAhuC,GACAE,GACAD,GACAE,GALAC,GAAArP,KAOA+O,IACAhW,MAAA0H,GACAS,UAAA,WACA6N,GAAAhW,MAAA+V,IAEA3N,QAAA,WACA87C,IAAAjuC,GAAAC,GAAAE,IACAJ,GAAAhW,MAAA0H,IAEAY,aAAA,WACA47C,IAAA,GAEA37C,WAAA,WACA27C,GAAA,MAEAtkJ,OAAA,WACA,GAAApB,IAAA83G,EAEA,OADAA,IAAAtP,QACAxoG,GAmBA+3G,IAAAjqG,WACA63I,QAAA1tC,GAAA,KACAstC,YAAA,SAAAt1H,GACA,MAAA5wB,MAAAsmJ,QAAA1tC,GAAAhoF,GAAA5wB,MAEAyqG,aAAA,WACAzqG,KAAAmmJ,MAAA,GAEAz7C,WAAA,WACA1qG,KAAAmmJ,MAAAl4D,KAEAqc,UAAA,WACAtqG,KAAAomJ,OAAA,GAEA77C,QAAA,WACA,IAAAvqG,KAAAmmJ,OAAAnmJ,KAAA24G,QAAAx3G,KAAA,KACAnB,KAAAomJ,OAAAn4D,KAEAkU,MAAA,SAAAza,EAAAc,GACA,OAAAxoF,KAAAomJ,QACA,OACApmJ,KAAA24G,QAAAx3G,KAAA,IAAAumF,EAAA,IAAAc,GACAxoF,KAAAomJ,OAAA,CACA,MAEA,QACApmJ,KAAA24G,QAAAx3G,KAAA,IAAAumF,EAAA,IAAAc,EACA,MAEA,SACAxoF,KAAA24G,QAAAx3G,KAAA,IAAAumF,EAAA,IAAAc,EAAAxoF,KAAAsmJ,WAKAvkJ,OAAA,WACA,GAAA/B,KAAA24G,QAAAh4G,OAAA,CACA,GAAAoB,GAAA/B,KAAA24G,QAAA32G,KAAA,GAEA,OADAhC,MAAA24G,WACA52G,IAYA,IAAAwwB,IAAA,SAAAmnF,EAAAzoG,GAKA,QAAA/G,GAAAwwC,GAKA,MAJAA,KACA,kBAAAwrG,IAAAK,EAAAL,eAAAj+I,MAAAjI,KAAAgI,YACA4xG,GAAAl/D,EAAA8rG,EAAAD,KAEAA,EAAAxkJ,SATA,GACAykJ,GACAD,EAFAL,EAAA,GAiDA,OArCAh8I,GAAAw6I,KAAA,SAAAhqG,GAEA,MADAk/D,IAAAl/D,EAAA8rG,EAAA1wC,KACAA,GAAA/zG,UAGAmI,EAAAu8I,QAAA,SAAA/rG,GAEA,MADAk/D,IAAAl/D,EAAA8rG,EAAAruC,KACAA,GAAAp2G,UAGAmI,EAAAy6I,OAAA,SAAAjqG,GAEA,MADAk/D,IAAAl/D,EAAA8rG,EAAA3sC,KACAA,GAAA93G,UAGAmI,EAAA46I,SAAA,SAAApqG,GAEA,MADAk/D,IAAAl/D,EAAA8rG,EAAAzvC,KACAA,GAAAh1G,UAGAmI,EAAAwvG,WAAA,SAAA9oF,GACA,MAAA5oB,WAAArH,QAAA6lJ,EAAA,MAAA51H,GAAA8oF,EAAA,KAAAsC,KAAAtC,EAAA9oF,GAAAo5E,OAAA9/F,GAAAwvG,GAGAxvG,EAAA+G,QAAA,SAAA2f,GACA,MAAA5oB,WAAArH,QACA4lJ,EAAA,MAAA31H,GAAA3f,EAAA,QAAAynG,KAAA,GAAAT,IAAAhnG,EAAA2f,GACA,kBAAAs1H,IAAAK,EAAAL,eACAh8I,GAHA+G,GAMA/G,EAAAg8I,YAAA,SAAAt1H,GACA,MAAA5oB,WAAArH,QACAulJ,EAAA,kBAAAt1H,MAAA21H,EAAAL,aAAAt1H,OACA1mB,GAFAg8I,GAKAh8I,EAAAwvG,cAAAzoG,YAGA0oG,GAAA,SAAA+sC,EAAAjzC,EAAAp3B,EAAAj0E,GACA,gBAAA4vF,EAAA2uD,GAgDA,QAAAxkD,GAAA+I,EAAAC,GACA,GAAAhJ,GAAAnK,EAAAkT,EAAAC,EACAu7C,GAAAx7C,EAAA/I,EAAA,GAAAgJ,EAAAhJ,EAAA,KAAAwkD,EAAAxkD,MAAA+I,EAAAC,GAGA,QAAAy7C,GAAA17C,EAAAC,GACA,GAAAhJ,GAAAnK,EAAAkT,EAAAC,EACA/gB,GAAA+X,QAAA,GAAAA,EAAA,IAGA,QAAAmI,KACAqP,EAAAxX,MAAAykD,EACAx8D,EAAAkgB,YAGA,QAAAC,KACAoP,EAAAxX,QACA/X,EAAAmgB,UAGA,QAAAs8C,GAAA37C,EAAAC,GACAsH,EAAAtxG,MAAA+pG,EAAAC,GACA,IAAAhJ,GAAAnK,EAAAkT,EAAAC,EACA27C,GAAA3kD,QAAA,GAAAA,EAAA,IAGA,QAAA6Y,KACA8rC,EAAAx8C,YACAmI,KAGA,QAAAyI,KACA2rC,EAAAp0C,EAAA,MAAAA,EAAA,OACAq0C,EAAAv8C,SAEA,IAEA7pG,GAAAuI,EACA6vG,EACA3W,EAJAwQ,EAAAm0C,EAAAn0C,QACAo0C,EAAAC,EAAAjlJ,SACA0E,EAAAsgJ,EAAApmJ,MAQA,IAJA8xG,EAAA5nG,MACA0nG,EAAApxG,KAAAsxG,GACAA,EAAA,KAEAhsG,EAGA,KAAAksG,GAEA,GADAmG,EAAAiuC,EAAA,IACA99I,EAAA6vG,EAAAn4G,OAAA,MAGA,IAFAsmJ,IAAAN,EAAAl8C,eAAAw8C,GAAA,GACAN,EAAAr8C,YACA5pG,EAAA,EAAqBA,EAAAuI,IAAOvI,EAAAimJ,EAAAxkD,SAAA2W,EAAAp4G,IAAA,GAAAyhG,EAAA,GAC5BwkD,GAAAp8C,eAOA9jG,GAAA,KAAAksG,GAAAo0C,EAAA5lJ,KAAA4lJ,EAAAl8I,MAAA3B,OAAA69I,EAAAv8G,UAEApgC,EAAAjJ,KAAA4lJ,EAAA9gJ,OAAA4yG,KA9GA,GAKAtG,GACAnoG,EACAqoG,EAPAroB,EAAAqpB,EAAAkzC,GACAO,EAAAlvD,EAAAjU,OAAA37E,EAAA,GAAAA,EAAA,IACA4+I,EAAAtzC,KACAozC,EAAArzC,EAAAuzC,GACAC,GAAA,EAKAttC,GACAxX,QACAmI,YACAC,UACAE,aAAA,WACAkP,EAAAxX,MAAA0kD,EACAltC,EAAArP,UAAA0Q,EACArB,EAAApP,QAAA2Q,EACA9wG,KACAmoG,MAEA7H,WAAA,WACAiP,EAAAxX,QACAwX,EAAArP,YACAqP,EAAApP,UACAngG,EAAA85E,GAAA95E,EACA,IAAAwoG,GAAAiC,GAAAtC,EAAA20C,EACA98I,GAAAzJ,QACAsmJ,IAAAN,EAAAl8C,eAAAw8C,GAAA,GACAn0C,GAAA1oG,EAAA8nG,GAAAU,EAAAv2B,EAAAsqE,IACS/zC,IACTq0C,IAAAN,EAAAl8C,eAAAw8C,GAAA,GACAN,EAAAr8C,YACAjuB,EAAA,YAAAsqE,GACAA,EAAAp8C,WAEA08C,IAAAN,EAAAj8C,aAAAu8C,GAAA,GACA78I,EAAAmoG,EAAA,MAEAyK,OAAA,WACA2pC,EAAAl8C,eACAk8C,EAAAr8C,YACAjuB,EAAA,YAAAsqE,GACAA,EAAAp8C,UACAo8C,EAAAj8C,cAsEA,OAAAiP,KAeAmC,GAAAnC,GACA,WAAc,UACdZ,GACAO,KACA9P,IAAAE,KAsFA2S,GAAA,SAAA9W,EAAA8H,GAKA,QAAAhxB,GAAAtvE,EAAAvE,EAAA8oG,EAAAtH,GACAqH,GAAArH,EAAAzE,EAAA8H,EAAAiE,EAAAvkG,EAAAvE,GAGA,QAAAspG,GAAA5G,EAAAC,GACA,MAAAI,IAAAL,GAAAK,GAAAJ,GAAAg8C,EAOA,QAAA1zC,GAAAzJ,GACA,GAAAzH,GACA6X,EACA1kB,EACAmpC,EACAlsB,CACA,QACArI,UAAA,WACAu0B,EAAAnpC,GAAA,EACAid,EAAA,GAEAxQ,MAAA,SAAA+I,EAAAC,GACA,GACAi8C,GADAtlD,GAAAoJ,EAAAC,GAEAx3D,EAAAm+D,EAAA5G,EAAAC,GACAvhG,EAAAy9I,EACA1zG,EAAA,EAAA5f,EAAAm3E,EAAAC,GACAx3D,EAAA5f,EAAAm3E,KAAA,EAAA1B,QAAA2B,GAAA,CAYA,KAXA5I,IAAAs8B,EAAAnpC,EAAA/hD,IAAAq2D,EAAAM,YAGA32D,IAAA+hD,IACA0xD,EAAArwB,EAAAx0B,EAAAT,IACAkjD,GAAAziD,EAAA6kD,IAAApC,GAAAljD,EAAAslD,MACAtlD,EAAA,IAAAuM,GACAvM,EAAA,IAAAuM,GACA16D,EAAAm+D,EAAAhQ,EAAA,GAAAA,EAAA,MAGAnuD,IAAA+hD,EACAid,EAAA,EACAh/D,GAEAq2D,EAAAM,YACA88C,EAAArwB,EAAAj1B,EAAAS,GACAyH,EAAA7H,MAAAilD,EAAA,GAAAA,EAAA,MAGAA,EAAArwB,EAAAx0B,EAAAT,GACAkI,EAAA7H,MAAAilD,EAAA,GAAAA,EAAA,IACAp9C,EAAAO,WAEAhI,EAAA6kD,MACS,IAAAE,GAAA/kD,GAAA8kD,EAAA1zG,EAAA,CACT,GAAAs3C,EAGArhF,GAAAwwG,KAAAnvB,EAAA8rC,EAAAj1B,EAAAS,GAAA,MACAoQ,EAAA,EACA00C,GACAr9C,EAAAM,YACAN,EAAA7H,MAAAlX,EAAA,MAAAA,EAAA,OACA+e,EAAA7H,MAAAlX,EAAA,MAAAA,EAAA,OACA+e,EAAAO,YAEAP,EAAA7H,MAAAlX,EAAA,MAAAA,EAAA,OACA+e,EAAAO,UACAP,EAAAM,YACAN,EAAA7H,MAAAlX,EAAA,MAAAA,EAAA,UAIAt3C,GAAA4uD,GAAAyiD,GAAAziD,EAAAT,IACAkI,EAAA7H,MAAAL,EAAA,GAAAA,EAAA,IAEAS,EAAAT,EAAApM,EAAA/hD,EAAAymE,EAAAxwG,GAEA2gG,QAAA,WACA7U,GAAAsU,EAAAO,UACAhI,EAAA,MAIAoQ,MAAA,WACA,MAAAA,IAAAksB,GAAAnpC,IAAA,IAMA,QAAAqhC,GAAAhvH,EAAAsB,EAAAqV,GACA,GAAA6oI,GAAAr7C,GAAAnkG,GACAy/I,EAAAt7C,GAAA7iG,GAIAg6F,GAAA,OACAokD,EAAAr7C,GAAAm7C,EAAAC,GACAE,EAAAv7C,GAAAs7C,KACAE,EAAAF,EAAA,GACAG,EAAAF,EAAAC,GAGA,KAAAC,EAAA,OAAAlpI,GAAA3W,CAEA,IAAAsyG,GAAA8sC,EAAAO,EAAAE,EACAxmC,GAAA+lC,EAAAQ,EAAAC,EACAC,EAAAz7C,GAAA/I,EAAAokD,GACAjmC,EAAAlV,GAAAjJ,EAAAgX,EAEAhO,IAAAmV,EADAlV,GAAAm7C,EAAArmC,GAIA,IAAArV,GAAA87C,EACAz4C,EAAAjD,GAAAqV,EAAAzV,GACA+7C,EAAA37C,GAAAJ,KACA1X,EAAA+a,IAAA04C,GAAA37C,GAAAqV,KAAA,EAEA,MAAAntB,EAAA,IAEA,GAAApJ,GAAA4J,GAAAR,GACAyD,EAAAwU,GAAAP,IAAAqD,EAAAnkB,GAAA68D,EAIA,IAHAz7C,GAAAvU,EAAA0pB,GACA1pB,EAAAmU,GAAAnU,IAEAp5E,EAAA,MAAAo5E,EAGA,IAIA4W,GAJArD,EAAAtjG,EAAA,GACA6kG,EAAAvjG,EAAA,GACAwjG,EAAA9kG,EAAA,GACA+kG,EAAAzjG,EAAA,EAGAujG,GAAAvB,IAAAqD,EAAArD,IAAAuB,IAAA8B,EAEA,IAAArB,GAAAT,EAAAvB,EACA08C,EAAAjgE,GAAAulB,EAAA7D,IAAA6E,GACA25C,EAAAD,GAAA16C,EAAAgB,EAKA,KAHA05C,GAAAj7C,EAAAD,IAAA6B,EAAA7B,IAAAC,IAAA4B,GAGAs5C,EACAD,EACAl7C,EAAAC,EAAA,EAAAhV,EAAA,IAAAhQ,GAAAgQ,EAAA,GAAAuT,GAAAgD,GAAAxB,EAAAC,GACAD,GAAA/U,EAAA,IAAAA,EAAA,IAAAgV,EACAO,EAAA7D,IAAA6B,GAAAvT,EAAA,IAAAA,EAAA,IAAA8U,GAAA,CACA,GAAAq7C,GAAA37C,GAAAP,IAAAqD,EAAAnkB,GAAA68D,EAEA,OADAz7C,IAAA47C,EAAAzmC,IACA1pB,EAAAmU,GAAAg8C,MAMA,QAAAl0H,GAAAm3E,EAAAC,GACA,GAAArY,GAAAu0D,EAAA9hD,EAAAiE,GAAAjE,EACAxxE,EAAA,CAKA,OAJAm3E,IAAApY,EAAA/+D,GAAA,EACAm3E,EAAApY,IAAA/+D,GAAA,GACAo3E,GAAArY,EAAA/+D,GAAA,EACAo3E,EAAArY,IAAA/+D,GAAA,GACAA,EAzKA,GAAAozH,GAAA57C,GAAAhG,GACA8hD,EAAAF,EAAA,EACAG,EAAAx/D,GAAAq/D,GAAA94C,EA0KA,OAAAsL,IAAA7H,EAAA2B,EAAAp3B,EAAAgrE,GAAA,GAAA9hD,KAAAiE,GAAAjE,EAAAiE,MAGAlrE,GAAA,SAAApkB,GACA,OACA8vF,OAAAuP,GAAAr/F,IAeAs/F,IAAA/qG,WACAwU,YAAAu2F,GACArX,MAAA,SAAAza,EAAAc,GAAyBxoF,KAAAgqG,OAAA7H,MAAAza,EAAAc,IACzBw0B,OAAA,WAAsBh9G,KAAAgqG,OAAAgT,UACtB1S,UAAA,WAAyBtqG,KAAAgqG,OAAAM,aACzBC,QAAA,WAAuBvqG,KAAAgqG,OAAAO,WACvBE,aAAA,WAA4BzqG,KAAAgqG,OAAAS,gBAC5BC,WAAA,WAA0B1qG,KAAAgqG,OAAAU,cAgC1B,IAAAqQ,IAAA,GACAF,GAAAtP,GAAA,GAAAH,IAEA8Q,GAAA,SAAAlC,EAAAE,GACA,OAAAA,EAAAD,GAAAD,EAAAE,GAAAH,GAAAC,IA+FAmC,GAAA5C,IACApX,MAAA,SAAAza,EAAAc,GACAxoF,KAAAgqG,OAAA7H,MAAAza,EAAA0jB,GAAA5iB,EAAA4iB,OA8IA88C,GAAA,WACA,MAAA5rC,IAAAI,IACAh0B,MAAA,SACAD,QAAA,aAGA0/D,GAAA,WACA,MAAAD,MACA3rC,WAAA,YACA7zB,MAAA,MACA+O,WAAA,UACAO,QAAA,OACAvP,SAAA,WAsBA2/D,GAAA,WAQA,QAAAA,GAAAj+C,GACA,GAAAziB,GAAAyiB,EAAA,GAAA3hB,EAAA2hB,EAAA,EACA,OAAAhI,GAAA,KACAkmD,EAAAlmD,MAAAza,EAAAc,GAAA2Z,IACAmmD,EAAAnmD,MAAAza,EAAAc,GAAA2Z,KACAomD,EAAApmD,MAAAza,EAAAc,GAAA2Z,GA2DA,QAAAgH,KAEA,MADAvhG,GAAA+zG,EAAA,KACAysC,EAzEA,GAAAxgJ,GACA+zG,EACA0sC,EACAC,EACAC,EACApmD,EAHAqmD,EAAAL,KACAM,EAAAP,KAAAlwD,QAAA,QAAAvP,SAAA,SAAA8zB,WAAA,QACAmsC,EAAAR,KAAAlwD,QAAA,QAAAvP,SAAA,SAAA8zB,WAAA,OACAosC,GAA4BxmD,MAAA,SAAAza,EAAAc,GAAuB2Z,GAAAza,EAAAc,IAuEnD,OA7DA4/D,GAAArkE,OAAA,SAAAomB,GACA,GAAA7f,GAAAk+D,EAAA9/D,QACAuC,EAAAu9D,EAAA/wD,YACA/P,GAAAyiB,EAAA,GAAAlf,EAAA,IAAAX,EACA9B,GAAA2hB,EAAA,GAAAlf,EAAA,IAAAX,CACA,QAAA9B,GAAA,KAAAA,EAAA,MAAAd,IAAA,MAAAA,GAAA,KAAA+gE,EACAjgE,GAAA,MAAAA,EAAA,MAAAd,IAAA,MAAAA,GAAA,KAAAghE,EACAF,GAAAzkE,OAAAomB,IAGAi+C,EAAAp+C,OAAA,SAAAA,GACA,MAAApiG,IAAA+zG,IAAA3R,EAAApiG,IAAAk1G,IAAA0rC,EAAAx+C,OAAA2R,EAAA3R,GAAAy+C,EAAAz+C,UAAA0+C,EAAA1+C,aAGAo+C,EAAAn6E,UAAA,SAAAr9C,GACA,MAAA5oB,WAAArH,QACA6nJ,EAAAv6E,UAAAr9C,GAAA63H,EAAAx6E,UAAAr9C,GAAA83H,EAAAz6E,UAAAr9C,GACAu4E,KAFAq/C,EAAAv6E,aAKAm6E,EAAA1/D,MAAA,SAAA93D,GACA,MAAA5oB,WAAArH,QACA6nJ,EAAA9/D,MAAA93D,GAAA63H,EAAA//D,MAAA,IAAA93D,GAAA83H,EAAAhgE,MAAA93D,GACAw3H,EAAA3wD,UAAA+wD,EAAA/wD,cAFA+wD,EAAA9/D,SAKA0/D,EAAA3wD,UAAA,SAAA7mE,GACA,IAAA5oB,UAAArH,OAAA,MAAA6nJ,GAAA/wD,WACA,IAAAnN,GAAAk+D,EAAA9/D,QAAAhB,GAAA92D,EAAA,GAAA43D,GAAA53D,EAAA,EAiBA,OAfAy3H,GAAAG,EACA/wD,UAAA7mE,GACAihF,aAAAnqB,EAAA,KAAA4C,EAAA9B,EAAA,KAAA8B,IAAA5C,EAAA,KAAA4C,EAAA9B,EAAA,KAAA8B,KACA0f,OAAA2+C,GAEAL,EAAAG,EACAhxD,WAAA/P,EAAA,KAAA4C,EAAA9B,EAAA,KAAA8B,IACAunB,aAAAnqB,EAAA,KAAA4C,EAAA+jB,GAAA7lB,EAAA,IAAA8B,EAAA+jB,KAAA3mB,EAAA,KAAA4C,EAAA+jB,GAAA7lB,EAAA,KAAA8B,EAAA+jB,MACArE,OAAA2+C,GAEAJ,EAAAG,EACAjxD,WAAA/P,EAAA,KAAA4C,EAAA9B,EAAA,KAAA8B,IACAunB,aAAAnqB,EAAA,KAAA4C,EAAA+jB,GAAA7lB,EAAA,KAAA8B,EAAA+jB,KAAA3mB,EAAA,KAAA4C,EAAA+jB,GAAA7lB,EAAA,KAAA8B,EAAA+jB,MACArE,OAAA2+C,GAEAx/C,KAGAi/C,EAAA3uC,UAAA,SAAA/Y,EAAAhmD,GACA,MAAA++D,IAAA2uC,EAAA1nD,EAAAhmD,IAGA0tG,EAAAtuC,QAAA,SAAA19D,EAAA1B,GACA,MAAAo/D,IAAAsuC,EAAAhsG,EAAA1B,IAQA0tG,EAAA1/D,MAAA,OA4BAkgE,GAAA3rC,GAAA,SAAA4rC,GACA,MAAAh0D,IAAA,KAAAg0D,KAGAD,IAAA7kE,OAAAm5B,GAAA,SAAAxO,GACA,SAAAjF,GAAAiF,EAAA,IAGA,IAAAo6C,IAAA,WACA,MAAApvC,IAAAkvC,IACAlgE,MAAA,QACA0zB,UAAA,UAGA2sC,GAAA9rC,GAAA,SAAArzG,GACA,OAAAA,EAAA2/F,GAAA3/F,OAAAggG,GAAAhgG,IAGAm/I,IAAAhlE,OAAAm5B,GAAA,SAAAxO,GACA,MAAAA,IAGA,IAAAs6C,IAAA,WACA,MAAAtvC,IAAAqvC,IACArgE,MAAA,SACA0zB,UAAA,SAOAgB,IAAAr5B,OAAA,SAAA2D,EAAAc,GACA,OAAAd,EAAA,EAAA2xB,GAAA9pF,GAAAi5D,IAAAkhB,IAGA,IAAAu/C,IAAA,WACA,MAAA3rC,IAAAF,IACA10B,MAAA,IAAA6nB,KAgEA24C,GAAA,WACA,MAAA5sC,IAAAmB,IACA/0B,MAAA,OACA6zB,WAAA,QAOAqB,IAAA75B,OAAA65B,EAEA,IAAAurC,IAAA,WACA,MAAAzvC,IAAAkE,IACAl1B,MAAA,SAuBA0gE,GAAA,WACA,MAAA9sC,IAAAuB,IACAn1B,MAAA,SACAD,QAAA,YAQAu1B,IAAAj6B,OAAAm5B,GAAA7D,GAEA,IAAAgwC,IAAA,WACA,MAAA3vC,IAAAsE,IACAt1B,MAAA,SACA0zB,UAAA,KAWAktC,GAAA,WAOA,QAAAngD,KAEA,MADAvhG,GAAA+zG,EAAA,KACAjC,EARA,GACAzS,GAAAC,EAAAC,EACAv/F,EACA+zG,EACAjC,EAJApvB,EAAA,EAAA8zB,EAAA,EAAAC,EAAA,EAAAy/B,EAAA,EAAAC,EAAA,EAAAz/G,EAAA09E,GACAhV,EAAA,KAAA2S,EAAAqC,EAUA,OAAAtC,IACA1P,OAAA,SAAAA,GACA,MAAApiG,IAAA+zG,IAAA3R,EAAApiG,IAAA02B,EAAAq7E,EAAAgC,EAAA3R,KAEA6H,WAAA,SAAAjhF,GACA,MAAA5oB,WAAArH,QAAAg5G,EAAA,MAAA/oF,GAAAo2E,EAAAC,EAAAC,EAAAC,EAAA,KAAA6U,IAAAnK,GAAA7K,GAAAp2E,EAAA,MAAAq2E,GAAAr2E,EAAA,MAAAs2E,GAAAt2E,EAAA,MAAAu2E,GAAAv2E,EAAA,OAAAu4E,KAAA,MAAAnC,EAAA,OAAAA,EAAAC,IAAAC,EAAAC,KAEAze,MAAA,SAAA93D,GACA,MAAA5oB,WAAArH,QAAA29B,EAAA2/E,IAAA3zB,GAAA15D,GAAAktH,EAAAxzD,EAAAyzD,EAAA3/B,EAAAC,GAAAlV,KAAA7e,GAEAmN,UAAA,SAAA7mE,GACA,MAAA5oB,WAAArH,QAAA29B,EAAA2/E,GAAA3zB,EAAAwzD,EAAAxzD,EAAAyzD,EAAA3/B,GAAAxtF,EAAA,GAAAytF,GAAAztF,EAAA,IAAAu4E,MAAAiV,EAAAC,IAEAkrC,SAAA,SAAA34H,GACA,MAAA5oB,WAAArH,QAAA29B,EAAA2/E,GAAA3zB,GAAAwzD,EAAAltH,GAAA,KAAA05D,EAAAyzD,EAAA3/B,EAAAC,GAAAlV,KAAA20C,EAAA,GAEA0L,SAAA,SAAA54H,GACA,MAAA5oB,WAAArH,QAAA29B,EAAA2/E,GAAA3zB,EAAAwzD,EAAAxzD,GAAAyzD,EAAAntH,GAAA,KAAAwtF,EAAAC,GAAAlV,KAAA40C,EAAA,GAEAtkC,UAAA,SAAA/Y,EAAAhmD,GACA,MAAA++D,IAAAC,EAAAhZ,EAAAhmD,IAEAo/D,QAAA,SAAA19D,EAAA1B,GACA,MAAAo/D,IAAAJ,EAAAt9D,EAAA1B,KASA4jE,IAAAv6B,OAAAm5B,GAAAzT,GAEA,IAAAggD,IAAA,WACA,MAAA/vC,IAAA4E,IACA51B,MAAA,OACA0zB,UAAA,GAAA/N,IAQAkQ,IAAAx6B,OAAAm5B,GAAA,SAAAxO,GACA,SAAA2K,GAAA3K,IAGA,IAAAg7C,IAAA,WACA,MAAAhwC,IAAA6E,IACA71B,MAAA,KACA0zB,UAAA,KAOAoC,IAAAz6B,OAAA,SAAA2D,EAAAc,GACA,QAAAA,EAAA,EAAA6wB,GAAA9pF,GAAAm4D,IAAAgiB,IAGA,IAAAigD,IAAA,WACA,GAAA1gJ,GAAAq0G,GAAAkB,IACA/1B,EAAAx/E,EAAAw/E,OACAuP,EAAA/uF,EAAA+uF,MAUA,OARA/uF,GAAAw/E,OAAA,SAAA73D,GACA,MAAA5oB,WAAArH,OAAA8nF,IAAA73D,EAAA,GAAAA,EAAA,MAAAA,EAAA63D,KAAA73D,EAAA,IAAAA,EAAA,MAGA3nB,EAAA+uF,OAAA,SAAApnE,GACA,MAAA5oB,WAAArH,OAAAq3F,GAAApnE,EAAA,GAAAA,EAAA,GAAAA,EAAAjwB,OAAA,EAAAiwB,EAAA,YAAAA,EAAAonE,KAAApnE,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAGAonE,GAAA,SACAtP,MAAA,UAmCAkhE,GAAA,WAMA,QAAAA,GAAApmH,GACA,GAAAqmH,GACAniE,EAAA,CAGAlkD,GAAAsmH,UAAA,SAAAh1I,GACA,GAAAtT,GAAAsT,EAAAtT,QACAA,IACAsT,EAAA4yE,EAAAg3B,GAAAl9G,GACAsT,EAAA0zE,EAAAo2B,GAAAp9G,KAEAsT,EAAA4yE,EAAAmiE,EAAAniE,GAAAqiE,EAAAj1I,EAAA+0I,GAAA,EACA/0I,EAAA0zE,EAAA,EACAqhE,EAAA/0I,IAIA,IAAAopB,GAAA4gF,GAAAt7E,GACAiT,EAAAsoE,GAAAv7E,GACAwjE,EAAA9oE,EAAAwpD,EAAAqiE,EAAA7rH,EAAAuY,GAAA,EACAywD,EAAAzwD,EAAAixC,EAAAqiE,EAAAtzG,EAAAvY,GAAA,CAGA,OAAAsF,GAAAsmH,UAAAE,EAAA,SAAAl1I,GACAA,EAAA4yE,GAAA5yE,EAAA4yE,EAAAlkD,EAAAkkD,GAAAzpD,EACAnpB,EAAA0zE,GAAAhlD,EAAAglD,EAAA1zE,EAAA0zE,GAAArqD,GACK,SAAArpB,GACLA,EAAA4yE,GAAA5yE,EAAA4yE,EAAAsf,IAAAE,EAAAF,GAAA/oE,EACAnpB,EAAA0zE,GAAA,GAAAhlD,EAAAglD,EAAA1zE,EAAA0zE,EAAAhlD,EAAAglD,EAAA,IAAArqD,IAjCA,GAAA4rH,GAAAtrC,GACAxgF,EAAA,EACAE,EAAA,EACA6rH,GAAA,CA8CA,OAZAJ,GAAAG,WAAA,SAAAriE,GACA,MAAA1/E,WAAArH,QAAAopJ,EAAAriE,EAAAkiE,GAAAG,GAGAH,EAAAxtG,KAAA,SAAAsrC,GACA,MAAA1/E,WAAArH,QAAAqpJ,GAAA,EAAA/rH,GAAAypD,EAAA,GAAAvpD,GAAAupD,EAAA,GAAAkiE,GAAAI,EAAA,MAAA/rH,EAAAE,IAGAyrH,EAAAI,SAAA,SAAAtiE,GACA,MAAA1/E,WAAArH,QAAAqpJ,GAAA,EAAA/rH,GAAAypD,EAAA,GAAAvpD,GAAAupD,EAAA,GAAAkiE,GAAAI,GAAA/rH,EAAAE,GAAA,MAGAyrH,GAYAK,GAAA,WACA,MAAAjqJ,MAAA8pJ,UAAA/4E,KAGAm5E,GAAA,SAAAvrI,GACA,GAAAo8B,GAAAv5C,EAAAd,EAAA+F,EAAAqO,EAAA9U,KAAA6yB,GAAA/d,EACA,IAEA,IADAimC,EAAAloB,EAAA84C,UAAA94C,KACA/d,EAAAimC,EAAAlwC,OAEA,GADA8T,EAAA7J,GAAAtT,EAAAsT,EAAAtT,SACA,IAAAd,EAAA,EAAA+F,EAAAjF,EAAAb,OAAoDD,EAAA+F,IAAO/F,EAC3DmyB,EAAA1xB,KAAAK,EAAAd,UAGGmyB,EAAAlyB,OACH,OAAAX,OAGAmqJ,GAAA,SAAAxrI,GAEA,IADA,GAAAnd,GAAAd,EAAAoU,EAAA9U,KAAA8nG,GAAAhzF,GACAA,EAAAgzF,EAAAj9F,OAEA,GADA8T,EAAA7J,GAAAtT,EAAAsT,EAAAtT,SACA,IAAAd,EAAAc,EAAAb,OAAA,EAA+CD,GAAA,IAAQA,EACvDonG,EAAA3mG,KAAAK,EAAAd,GAGA,OAAAV,OAGAoqJ,GAAA,SAAAzrI,GAEA,IADA,GAAAnd,GAAAd,EAAA+F,EAAAqO,EAAA9U,KAAA8nG,GAAAhzF,GAAA+d,KACA/d,EAAAgzF,EAAAj9F,OAEA,GADAgoB,EAAA1xB,KAAA2T,GAAAtT,EAAAsT,EAAAtT,SACA,IAAAd,EAAA,EAAA+F,EAAAjF,EAAAb,OAAkDD,EAAA+F,IAAO/F,EACzDonG,EAAA3mG,KAAAK,EAAAd,GAGA,MAAAoU,EAAA+d,EAAAhoB,OACA8T,EAAA7J,EAEA,OAAA9U,OAGAqqJ,GAAA,SAAA5iJ,GACA,MAAAzH,MAAA8pJ,UAAA,SAAAh1I,GAIA,IAHA,GAAAiqE,IAAAt3E,EAAAqN,EAAAhE,OAAA,EACAtP,EAAAsT,EAAAtT,SACAd,EAAAc,KAAAb,SACAD,GAAA,GAAAq+E,GAAAv9E,EAAAd,GAAA+G,KACAqN,GAAArN,MAAAs3E,KAIAurE,GAAA,SAAAxlD,GACA,MAAA9kG,MAAAy/G,WAAA,SAAA3qG,GACAA,EAAAtT,UACAsT,EAAAtT,SAAAuX,KAAA+rF,MAKAylD,GAAA,SAAAzyH,GAIA,IAHA,GAAA1vB,GAAApI,KACAoqB,EAAA40F,GAAA52G,EAAA0vB,GACAgwE,GAAA1/F,GACAA,IAAAgiB,GACAhiB,IAAA0F,OACAg6F,EAAA3mG,KAAAiH,EAGA,KADA,GAAAkiF,GAAAwd,EAAAnnG,OACAm3B,IAAA1N,GACA09E,EAAA1gG,OAAAkjF,EAAA,EAAAxyD,GACAA,IAAAhqB,MAEA,OAAAg6F,IAkBA0iD,GAAA,WAEA,IADA,GAAA11I,GAAA9U,KAAA8nG,GAAAhzF,GACAA,IAAAhH,QACAg6F,EAAA3mG,KAAA2T,EAEA,OAAAgzF,IAGA2iD,GAAA,WACA,GAAA3iD,KAIA,OAHA9nG,MAAAqmF,KAAA,SAAAvxE,GACAgzF,EAAA3mG,KAAA2T,KAEAgzF,GAGA4iD,GAAA,WACA,GAAAC,KAMA,OALA3qJ,MAAAy/G,WAAA,SAAA3qG,GACAA,EAAAtT,UACAmpJ,EAAAxpJ,KAAA2T,KAGA61I,GAGAC,GAAA,WACA,GAAApnH,GAAAxjC,KAAAggJ,IAMA,OALAx8G,GAAA6iD,KAAA,SAAAvxE,GACAA,IAAA0uB,GACAw8G,EAAA7+I,MAAkBwhB,OAAA7N,EAAAhH,OAAApD,OAAAoK,MAGlBkrI,EAuDA1gC,IAAA7wG,UAAA2wG,GAAA3wG,WACAwU,YAAAq8F,GACAvuC,MAAAk5E,GACA5jE,KAAA6jE,GACAJ,UAAAM,GACA3qC,WAAA0qC,GACAprE,IAAAsrE,GACAtxI,KAAAuxI,GACApgJ,KAAAqgJ,GACArrC,UAAAsrC,GACAK,YAAAJ,GACAE,OAAAD,GACA1K,MAAA4K,GACA3jF,KAAA04C,GAQA,IAAAmrC,IAAA,SAAA1yG,GAMA,IALA,GAAA13C,GACA+F,GAAA2xC,IAAA1xB,SAAA/lB,OACAsC,EAAA,KACA6R,EAAA7R,EAEAwD,GAAA,CACA,GAAAosB,GAAA,GAAAgtF,IAAAznE,EAAA3xC,EAAA,GACAqO,OAAA+d,OACA5vB,EAAA4vB,EACAulB,EAAA13C,GAAA03C,IAAA3xC,GAGA,OACAxD,OACAgwE,KAAAn+D,IAIA8tG,GAAA,SAAAT,GACA,MAAAnC,IAAA8qC,GAAA3oC,QA8NA4oC,GAAA,SAAA5oC,GAEA,MADAD,IAAAC,GACAA,GAgBA6oC,GAAA,SAAAtjE,GACA,kBACA,MAAAA,KAQAujE,GAAA,WAMA,QAAAtoC,GAAAn/E,GAYA,MAXAA,GAAAkkD,EAAAzpD,EAAA,EAAAuF,EAAAglD,EAAArqD,EAAA,EACAonE,EACA/hE,EAAAi8E,WAAAwD,GAAA1d,IACAukD,UAAA5mC,GAAAC,EAAA,KACA1D,WAAA2D,GAAA,IAEA5/E,EAAAi8E,WAAAwD,GAAAD,KACA8mC,UAAA5mC,GAAAH,GAAA,IACA+mC,UAAA5mC,GAAAC,EAAA3/E,EAAAsvD,EAAAnmF,KAAAkyE,IAAA5gD,EAAAE,KACAshF,WAAA2D,GAAAz2G,KAAAkyE,IAAA5gD,EAAAE,IAAA,EAAAqF,EAAAsvD,KAEAtvD,EAjBA,GAAA+hE,GAAA,KACAtnE,EAAA,EACAE,EAAA,EACAglF,EAAAJ,EA6BA,OAZAJ,GAAApd,OAAA,SAAA7d,GACA,MAAA1/E,WAAArH,QAAA4kG,EAAAsd,GAAAn7B,GAAAi7B,GAAApd,GAGAod,EAAAvmE,KAAA,SAAAsrC,GACA,MAAA1/E,WAAArH,QAAAs9B,GAAAypD,EAAA,GAAAvpD,GAAAupD,EAAA,GAAAi7B,IAAA1kF,EAAAE,IAGAwkF,EAAAQ,QAAA,SAAAz7B,GACA,MAAA1/E,WAAArH,QAAAwiH,EAAA,kBAAAz7B,KAAAsjE,IAAAtjE,GAAAi7B,GAAAQ,GAGAR,GAuCAuoC,GAAA,SAAAp2I,GACAA,EAAAkyF,GAAAr6F,KAAAo5E,MAAAjxE,EAAAkyF,IACAlyF,EAAAmyF,GAAAt6F,KAAAo5E,MAAAjxE,EAAAmyF,IACAnyF,EAAAoyF,GAAAv6F,KAAAo5E,MAAAjxE,EAAAoyF,IACApyF,EAAAqyF,GAAAx6F,KAAAo5E,MAAAjxE,EAAAqyF,KAGA6d,GAAA,SAAAl3G,EAAAk5F,EAAAC,EAAAC,EAAAC,GAOA,IANA,GACAryF,GADAgzF,EAAAh6F,EAAAtM,SAEAd,GAAA,EACA+F,EAAAqhG,EAAAnnG,OACA2pF,EAAAx8E,EAAArG,QAAAy/F,EAAAF,GAAAl5F,EAAArG,QAEA/G,EAAA+F,GACAqO,EAAAgzF,EAAApnG,GAAAoU,EAAAmyF,KAAAnyF,EAAAqyF,KACAryF,EAAAkyF,KAAAlyF,EAAAoyF,GAAAF,GAAAlyF,EAAArN,MAAA6iF,GAIA1H,GAAA,WAMA,QAAAA,GAAAp/C,GACA,GAAA/8B,GAAA+8B,EAAA88D,OAAA,CAOA,OANA98D,GAAAwjE,GACAxjE,EAAAyjE,GAAAkc,EACA3/E,EAAA0jE,GAAAjpE,EACAuF,EAAA2jE,GAAAhpE,EAAA13B,EACA+8B,EAAAi8E,WAAA0rC,EAAAhtH,EAAA13B,IACAs/E,GAAAviD,EAAAi8E,WAAAyrC,IACA1nH,EAGA,QAAA2nH,GAAAhtH,EAAA13B,GACA,gBAAAqO,GACAA,EAAAtT,UACAwjH,GAAAlwG,IAAAkyF,GAAA7oE,GAAArpB,EAAAooD,MAAA,GAAAz2D,EAAAqO,EAAAoyF,GAAA/oE,GAAArpB,EAAAooD,MAAA,GAAAz2D,EAEA,IAAAugG,GAAAlyF,EAAAkyF,GACAC,EAAAnyF,EAAAmyF,GACAC,EAAApyF,EAAAoyF,GAAAic,EACAhc,EAAAryF,EAAAqyF,GAAAgc,CACAjc,GAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAryF,EAAAkyF,KACAlyF,EAAAmyF,KACAnyF,EAAAoyF,KACApyF,EAAAqyF,MA9BA,GAAAlpE,GAAA,EACAE,EAAA,EACAglF,EAAA,EACAp9B,GAAA,CA2CA,OAZAnD,GAAAmD,MAAA,SAAA2B,GACA,MAAA1/E,WAAArH,QAAAolF,IAAA2B,EAAA9E,GAAAmD,GAGAnD,EAAAxmC,KAAA,SAAAsrC,GACA,MAAA1/E,WAAArH,QAAAs9B,GAAAypD,EAAA,GAAAvpD,GAAAupD,EAAA,GAAA9E,IAAA3kD,EAAAE,IAGAykD,EAAAugC,QAAA,SAAAz7B,GACA,MAAA1/E,WAAArH,QAAAwiH,GAAAz7B,EAAA9E,GAAAugC,GAGAvgC,GAGAwoE,GAAA,IACAC,IAAenuF,OAAA,GACfouF,MAUAC,GAAA,WAIA,QAAAA,GAAAz6I,GACA,GAAAgM,GACApc,EAEA8iC,EACA11B,EACAgH,EAEAszF,EACAojD,EANA/kJ,EAAAqK,EAAAnQ,OAIAmnG,EAAA,GAAAx/F,OAAA7B,GAGAglJ,IAEA,KAAA/qJ,EAAA,EAAeA,EAAA+F,IAAO/F,EACtBoc,EAAAhM,EAAApQ,GAAAoU,EAAAgzF,EAAApnG,GAAA,GAAA4+G,IAAAxiG,GACA,OAAAsrF,EAAAvnG,EAAAic,EAAApc,EAAAoQ,MAAAs3F,GAAA,MACAojD,EAAAJ,IAAAt2I,EAAAjU,GAAAunG,GACAqjD,EAAAD,OAAAC,GAAAH,GAAAx2I,EAIA,KAAApU,EAAA,EAAeA,EAAA+F,IAAO/F,EAEtB,GADAoU,EAAAgzF,EAAApnG,GACA,OADA0nG,EAAA9nG,EAAAwQ,EAAApQ,KAAAoQ,MACAs3F,GAAA,IAGO,CAEP,KADAt6F,EAAA29I,EAAAL,GAAAhjD,IACA,SAAA9iG,OAAA,YAAA8iG,EACA,IAAAt6F,IAAAw9I,GAAA,SAAAhmJ,OAAA,cAAA8iG,EACAt6F,GAAAtM,SAAAsM,EAAAtM,SAAAL,KAAA2T,GACAhH,EAAAtM,UAAAsT,GACAA,EAAAhH,aATA,CACA,GAAA01B,EAAA,SAAAl+B,OAAA,iBACAk+B,GAAA1uB,EAWA,IAAA0uB,EAAA,SAAAl+B,OAAA,UAIA,IAHAk+B,EAAA11B,OAAAu9I,GACA7nH,EAAAi8E,WAAA,SAAA3qG,GAAoCA,EAAAooD,MAAApoD,EAAAhH,OAAAovD,MAAA,IAAoCz2D,IAAOg5G,WAAAC,IAC/El8E,EAAA11B,OAAA,KACArH,EAAA,WAAAnB,OAAA,QAEA,OAAAk+B,GA5CA,GAAA3iC,GAAAwiH,GACA/iH,EAAAgjH,EAsDA,OARAioC,GAAA1qJ,GAAA,SAAA6mF,GACA,MAAA1/E,WAAArH,QAAAE,EAAAiiH,GAAAp7B,GAAA6jE,GAAA1qJ,GAGA0qJ,EAAAjrJ,SAAA,SAAAonF,GACA,MAAA1/E,WAAArH,QAAAL,EAAAwiH,GAAAp7B,GAAA6jE,GAAAjrJ,GAGAirJ,EA0EAtnC,IAAAx1G,UAAA/O,OAAAsH,OAAAs4G,GAAA7wG,UA0BA,IAAA6R,IAAA,WAMA,QAAAA,GAAAkjB,GACA,GAAAynD,GAAAi5B,GAAA1gF,EAOA,IAJAynD,EAAA6+D,UAAA4B,GAAAzgE,EAAAn9E,OAAA7E,GAAAgiF,EAAAyjB,EACAzjB,EAAAw0B,WAAAksC,GAGA3B,EAAAxmH,EAAAi8E,WAAAmsC,OAIA,CACA,GAAA1tH,GAAAsF,EACAiT,EAAAjT,EACA+mD,EAAA/mD,CACAA,GAAAi8E,WAAA,SAAA3qG,GACAA,EAAA4yE,EAAAxpD,EAAAwpD,IAAAxpD,EAAAppB,GACAA,EAAA4yE,EAAAjxC,EAAAixC,IAAAjxC,EAAA3hC,GACAA,EAAAooD,MAAAqtB,EAAArtB,QAAAqtB,EAAAz1E,IAEA,IAAAoT,GAAAgW,IAAAuY,EAAA,EAAAszG,EAAA7rH,EAAAuY,GAAA,EACA2nE,EAAAl2F,EAAAgW,EAAAwpD,EACAw2B,EAAAjgF,GAAAwY,EAAAixC,EAAAx/D,EAAAk2F,GACAD,EAAAhgF,GAAAosD,EAAArtB,OAAA,EACA15B,GAAAi8E,WAAA,SAAA3qG,GACAA,EAAA4yE,GAAA5yE,EAAA4yE,EAAA02B,GAAAF,EACAppG,EAAA0zE,EAAA1zE,EAAAooD,MAAAihD,IAIA,MAAA36E,GAOA,QAAAkoH,GAAA/3G,GACA,GAAAnyC,GAAAmyC,EAAAnyC,SACAupJ,EAAAp3G,EAAA7lC,OAAAtM,SACA4tG,EAAAz7D,EAAAjzC,EAAAqqJ,EAAAp3G,EAAAjzC,EAAA,OACA,IAAAc,EAAA,CACAsiH,GAAAnwE,EACA,IAAAk4G,IAAArqJ,EAAA,GAAAktG,EAAAltG,IAAAb,OAAA,GAAA+tG,GAAA,CACAU,IACAz7D,EAAA+6D,EAAAU,EAAAV,EAAAq7C,EAAAp2G,EAAA/iB,EAAAw+E,EAAAx+E,GACA+iB,EAAA1qC,EAAA0qC,EAAA+6D,EAAAm9C,GAEAl4G,EAAA+6D,EAAAm9C,MAEKz8C,KACLz7D,EAAA+6D,EAAAU,EAAAV,EAAAq7C,EAAAp2G,EAAA/iB,EAAAw+E,EAAAx+E,GAEA+iB,GAAA7lC,OAAA0zG,EAAAsqC,EAAAn4G,EAAAy7D,EAAAz7D,EAAA7lC,OAAA0zG,GAAAupC,EAAA,IAIA,QAAAY,GAAAh4G,GACAA,EAAA/iB,EAAA82D,EAAA/zC,EAAA+6D,EAAA/6D,EAAA7lC,OAAA7E,EACA0qC,EAAA1qC,GAAA0qC,EAAA7lC,OAAA7E,EAcA,QAAA6iJ,GAAAn4G,EAAAy7D,EAAAhlF,GACA,GAAAglF,EAAA,CAUA,IATA,GAQA5kE,GARAuhH,EAAAp4G,EACAq4G,EAAAr4G,EACAqwE,EAAA5U,EACA68C,EAAAF,EAAAj+I,OAAAtM,SAAA,GACA0qJ,EAAAH,EAAA9iJ,EACAkjJ,EAAAH,EAAA/iJ,EACAmjJ,EAAApoC,EAAA/6G,EACAojJ,EAAAJ,EAAAhjJ,EAEA+6G,EAAAP,GAAAO,GAAA+nC,EAAAvoC,GAAAuoC,GAAA/nC,GAAA+nC,GACAE,EAAAzoC,GAAAyoC,GACAD,EAAAvoC,GAAAuoC,GACAA,EAAAjkJ,EAAA4rC,EACAnJ,EAAAw5E,EAAAtV,EAAA09C,EAAAL,EAAAr9C,EAAAw9C,EAAAnC,EAAA/lC,EAAApzF,EAAAm7H,EAAAn7H,GACA4Z,EAAA,IACAk5E,GAAAK,GAAAC,EAAArwE,EAAAvpB,GAAAupB,EAAAnJ,GACA0hH,GAAA1hH,EACA2hH,GAAA3hH,GAEA4hH,GAAApoC,EAAA/6G,EACAijJ,GAAAH,EAAA9iJ,EACAojJ,GAAAJ,EAAAhjJ,EACAkjJ,GAAAH,EAAA/iJ,CAEA+6G,KAAAP,GAAAuoC,KACAA,EAAA/gE,EAAA+4B,EACAgoC,EAAA/iJ,GAAAmjJ,EAAAD,GAEAJ,IAAAvoC,GAAAyoC,KACAA,EAAAhhE,EAAA8gE,EACAE,EAAAhjJ,GAAAijJ,EAAAG,EACAjiI,EAAAupB,GAGA,MAAAvpB,GAGA,QAAAwhI,GAAA92I,GACAA,EAAA4yE,GAAAzpD,EACAnpB,EAAA0zE,EAAA1zE,EAAAooD,MAAA/+B,EAxHA,GAAA4rH,GAAAxmC,GACAtlF,EAAA,EACAE,EAAA,EACA6rH,EAAA,IAoIA,OAZA1pI,GAAAypI,WAAA,SAAAriE,GACA,MAAA1/E,WAAArH,QAAAopJ,EAAAriE,EAAApnE,GAAAypI,GAGAzpI,EAAA87B,KAAA,SAAAsrC,GACA,MAAA1/E,WAAArH,QAAAqpJ,GAAA,EAAA/rH,GAAAypD,EAAA,GAAAvpD,GAAAupD,EAAA,GAAApnE,GAAA0pI,EAAA,MAAA/rH,EAAAE,IAGA7d,EAAA0pI,SAAA,SAAAtiE,GACA,MAAA1/E,WAAArH,QAAAqpJ,GAAA,EAAA/rH,GAAAypD,EAAA,GAAAvpD,GAAAupD,EAAA,GAAApnE,GAAA0pI,GAAA/rH,EAAAE,GAAA,MAGA7d,GAGA2kG,GAAA,SAAAn3G,EAAAk5F,EAAAC,EAAAC,EAAAC,GAOA,IANA,GACAryF,GADAgzF,EAAAh6F,EAAAtM,SAEAd,GAAA,EACA+F,EAAAqhG,EAAAnnG,OACA2pF,EAAAx8E,EAAArG,QAAA0/F,EAAAF,GAAAn5F,EAAArG,QAEA/G,EAAA+F,GACAqO,EAAAgzF,EAAApnG,GAAAoU,EAAAkyF,KAAAlyF,EAAAoyF,KACApyF,EAAAmyF,KAAAnyF,EAAAqyF,GAAAF,GAAAnyF,EAAArN,MAAA6iF,GAIA6gB,IAAA,EAAAx+F,KAAAkoF,KAAA,MAmDAy3D,GAAA,QAAA1U,GAAAxzB,GAEA,QAAAkoC,GAAAx+I,EAAAk5F,EAAAC,EAAAC,EAAAC,GACAgd,GAAAC,EAAAt2G,EAAAk5F,EAAAC,EAAAC,EAAAC,GAOA,MAJAmlD,GAAAloC,MAAA,SAAA18B,GACA,MAAAkwD,IAAAlwD,MAAA,EAAAA,EAAA,IAGA4kE,GACCnhD,IAEDohD,GAAA,WAYA,QAAAC,GAAAhpH,GAQA,MAPAA,GAAAwjE,GACAxjE,EAAAyjE,GAAA,EACAzjE,EAAA0jE,GAAAjpE,EACAuF,EAAA2jE,GAAAhpE,EACAqF,EAAAi8E,WAAA0rC,GACAsB,GAAA,GACA1mE,GAAAviD,EAAAi8E,WAAAyrC,IACA1nH,EAGA,QAAA2nH,GAAAr2I,GACA,GAAAub,GAAAo8H,EAAA33I,EAAAooD,OACA8pC,EAAAlyF,EAAAkyF,GAAA32E,EACA42E,EAAAnyF,EAAAmyF,GAAA52E,EACA62E,EAAApyF,EAAAoyF,GAAA72E,EACA82E,EAAAryF,EAAAqyF,GAAA92E,CACA62E,GAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAryF,EAAAkyF,KACAlyF,EAAAmyF,KACAnyF,EAAAoyF,KACApyF,EAAAqyF,KACAryF,EAAAtT,WACA6uB,EAAAo8H,EAAA33I,EAAAooD,MAAA,GAAAgqD,EAAApyG,GAAA,EACAkyF,GAAA0lD,EAAA53I,GAAAub,EACA42E,GAAA0lD,EAAA73I,GAAAub,EACA62E,GAAA0lD,EAAA93I,GAAAub,EACA82E,GAAA0lD,EAAA/3I,GAAAub,EACA62E,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACA2lD,EAAAh4I,EAAAkyF,EAAAC,EAAAC,EAAAC,IA1CA,GAAA2lD,GAAAR,GACAvmE,GAAA,EACA9nD,EAAA,EACAE,EAAA,EACAsuH,GAAA,GACAvlC,EAAAnE,GACA4pC,EAAA5pC,GACA6pC,EAAA7pC,GACA8pC,EAAA9pC,GACA2pC,EAAA3pC,EA6EA,OAxCAypC,GAAAzmE,MAAA,SAAA2B,GACA,MAAA1/E,WAAArH,QAAAolF,IAAA2B,EAAA8kE,GAAAzmE,GAGAymE,EAAApwG,KAAA,SAAAsrC,GACA,MAAA1/E,WAAArH,QAAAs9B,GAAAypD,EAAA,GAAAvpD,GAAAupD,EAAA,GAAA8kE,IAAAvuH,EAAAE,IAGAquH,EAAAM,KAAA,SAAAplE,GACA,MAAA1/E,WAAArH,QAAAmsJ,EAAAhqC,GAAAp7B,GAAA8kE,GAAAM,GAGAN,EAAArpC,QAAA,SAAAz7B,GACA,MAAA1/E,WAAArH,OAAA6rJ,EAAAtlC,aAAAx/B,GAAAy/B,aAAAz/B,GAAA8kE,EAAAtlC,gBAGAslC,EAAAtlC,aAAA,SAAAx/B,GACA,MAAA1/E,WAAArH,QAAAumH,EAAA,kBAAAx/B,KAAAsjE,IAAAtjE,GAAA8kE,GAAAtlC,GAGAslC,EAAArlC,aAAA,SAAAz/B,GACA,MAAA1/E,WAAArH,OAAA6rJ,EAAAG,WAAAjlE,GAAAklE,aAAAllE,GAAAmlE,cAAAnlE,GAAAglE,YAAAhlE,GAAA8kE,EAAAG,cAGAH,EAAAG,WAAA,SAAAjlE,GACA,MAAA1/E,WAAArH,QAAAgsJ,EAAA,kBAAAjlE,KAAAsjE,IAAAtjE,GAAA8kE,GAAAG,GAGAH,EAAAI,aAAA,SAAAllE,GACA,MAAA1/E,WAAArH,QAAAisJ,EAAA,kBAAAllE,KAAAsjE,IAAAtjE,GAAA8kE,GAAAI,GAGAJ,EAAAK,cAAA,SAAAnlE,GACA,MAAA1/E,WAAArH,QAAAksJ,EAAA,kBAAAnlE,KAAAsjE,IAAAtjE,GAAA8kE,GAAAK,GAGAL,EAAAE,YAAA,SAAAhlE,GACA,MAAA1/E,WAAArH,QAAA+rJ,EAAA,kBAAAhlE,KAAAsjE,IAAAtjE,GAAA8kE,GAAAE,GAGAF,GAGAO,GAAA,SAAAj/I,EAAAk5F,EAAAC,EAAAC,EAAAC,GAWA,QAAAvkB,GAAAliF,EAAAgC,EAAA+E,EAAAu/F,EAAAC,EAAAC,EAAAC,GACA,GAAAzmG,GAAAgC,EAAA,GACA,GAAAoS,GAAAgzF,EAAApnG,EAGA,OAFAoU,GAAAkyF,KAAAlyF,EAAAmyF,KACAnyF,EAAAoyF,KAAApyF,EAAAqyF,KACA,OAQA,IALA,GAAA6lD,GAAAC,EAAAvsJ,GACAwsJ,EAAAzlJ,EAAA,EAAAulJ,EACA1iE,EAAA5pF,EAAA,EACA+hI,EAAA//H,EAAA,EAEA4nF,EAAAm4C,GAAA,CACA,GAAA19D,GAAAulB,EAAAm4C,IAAA,CACAwqB,GAAAloF,GAAAmoF,EAAA5iE,EAAAvlB,EAAA,EACA09D,EAAA19D,EAGAmoF,EAAAD,EAAA3iE,EAAA,GAAA2iE,EAAA3iE,GAAA4iE,GAAAxsJ,EAAA,EAAA4pF,MAEA,IAAA6iE,GAAAF,EAAA3iE,GAAA0iE,EACAI,EAAA3lJ,EAAA0lJ,CAEA,IAAAjmD,EAAAF,EAAAG,EAAAF,EAAA,CACA,GAAAomD,IAAArmD,EAAAomD,EAAAlmD,EAAAimD,GAAA1lJ,CACAm7E,GAAAliF,EAAA4pF,EAAA6iE,EAAAnmD,EAAAC,EAAAomD,EAAAlmD,GACAvkB,EAAA0H,EAAA5nF,EAAA0qJ,EAAAC,EAAApmD,EAAAC,EAAAC,OACK,CACL,GAAAmmD,IAAArmD,EAAAmmD,EAAAjmD,EAAAgmD,GAAA1lJ,CACAm7E,GAAAliF,EAAA4pF,EAAA6iE,EAAAnmD,EAAAC,EAAAC,EAAAomD,GACA1qE,EAAA0H,EAAA5nF,EAAA0qJ,EAAApmD,EAAAsmD,EAAApmD,EAAAC,IAzCA,GACAzmG,GACAq+E,EAFA+oB,EAAAh6F,EAAAtM,SACAiF,EAAAqhG,EAAAnnG,OACAssJ,EAAA,GAAA3kJ,OAAA7B,EAAA,EAEA,KAAAwmJ,EAAA,GAAAluE,EAAAr+E,EAAA,EAA6BA,EAAA+F,IAAO/F,EACpCusJ,EAAAvsJ,EAAA,GAAAq+E,GAAA+oB,EAAApnG,GAAA+G,KAGAm7E,GAAA,EAAAn8E,EAAAqH,EAAArG,MAAAu/F,EAAAC,EAAAC,EAAAC,IAsCAomD,GAAA,SAAAz/I,EAAAk5F,EAAAC,EAAAC,EAAAC,IACA,EAAAr5F,EAAAovD,MAAA+nD,GAAAD,IAAAl3G,EAAAk5F,EAAAC,EAAAC,EAAAC,IAGAqmD,GAAA,QAAA5V,GAAAxzB,GAEA,QAAAopC,GAAA1/I,EAAAk5F,EAAAC,EAAAC,EAAAC,GACA,IAAAZ,EAAAz4F,EAAA2/I,YAAAlnD,EAAA6d,UAUA,IATA,GAAA7d,GACAF,EACAyB,EACApnG,EAEA+F,EADA/D,GAAA,EAEAuG,EAAAs9F,EAAA5lG,OACA8G,EAAAqG,EAAArG,QAEA/E,EAAAuG,GAAA,CAEA,IADAo9F,EAAAE,EAAA7jG,GAAAolG,EAAAzB,EAAA7kG,SACAd,EAAA2lG,EAAA5+F,MAAA,EAAAhB,EAAAqhG,EAAAnnG,OAAiDD,EAAA+F,IAAO/F,EAAA2lG,EAAA5+F,OAAAqgG,EAAApnG,GAAA+G,KACxD4+F,GAAA0e,KAAAC,GAAA3e,EAAAW,EAAAC,EAAAC,EAAAD,IAAAE,EAAAF,GAAAZ,EAAA5+F,SACAw9G,GAAA5e,EAAAW,EAAAC,EAAAD,IAAAE,EAAAF,GAAAX,EAAA5+F,QAAA0/F,GACA1/F,GAAA4+F,EAAA5+F,UAGAqG,GAAA2/I,UAAAlnD,EAAA4d,GAAAC,EAAAt2G,EAAAk5F,EAAAC,EAAAC,EAAAC,GACAZ,EAAA6d,QAQA,MAJAopC,GAAAppC,MAAA,SAAA18B,GACA,MAAAkwD,IAAAlwD,MAAA,EAAAA,EAAA,IAGA8lE,GACCriD,IAEDuiD,GAAA,SAAAn7C,GAOA,IANA,GAEAxqG,GAFArH,GAAA,EACA+F,EAAA8rG,EAAA5xG,OAEA0I,EAAAkpG,EAAA9rG,EAAA,GACAi+I,EAAA,IAEAhkJ,EAAA+F,GACAsB,EAAAsB,EACAA,EAAAkpG,EAAA7xG,GACAgkJ,GAAA38I,EAAA,GAAAsB,EAAA,GAAAtB,EAAA,GAAAsB,EAAA,EAGA,OAAAq7I,GAAA,GAGAiJ,GAAA,SAAAp7C,GAUA,IATA,GAIAxqG,GAEA6B,EANAlJ,GAAA,EACA+F,EAAA8rG,EAAA5xG,OACA+mF,EAAA,EACAc,EAAA,EAEAn/E,EAAAkpG,EAAA9rG,EAAA,GAEA6jF,EAAA,IAEA5pF,EAAA+F,GACAsB,EAAAsB,EACAA,EAAAkpG,EAAA7xG,GACA4pF,GAAA1gF,EAAA7B,EAAA,GAAAsB,EAAA,GAAAA,EAAA,GAAAtB,EAAA,GACA2/E,IAAA3/E,EAAA,GAAAsB,EAAA,IAAAO,EACA4+E,IAAAzgF,EAAA,GAAAsB,EAAA,IAAAO,CAGA,OAAA0gF,IAAA,GAAA5C,EAAA4C,EAAA9B,EAAA8B,IAOA86B,GAAA,SAAAr9G,EAAAsB,EAAAO,GACA,OAAAP,EAAA,GAAAtB,EAAA,KAAA6B,EAAA,GAAA7B,EAAA,KAAAsB,EAAA,GAAAtB,EAAA,KAAA6B,EAAA,GAAA7B,EAAA,KAuBA6lJ,GAAA,SAAAj8C,GACA,IAAAlrG,EAAAkrG,EAAAhxG,QAAA,aAEA,IAAAD,GACA+F,EACAonJ,EAAA,GAAAvlJ,OAAA7B,GACAqnJ,EAAA,GAAAxlJ,OAAA7B,EAEA,KAAA/F,EAAA,EAAaA,EAAA+F,IAAO/F,EAAAmtJ,EAAAntJ,KAAAixG,EAAAjxG,GAAA,IAAAixG,EAAAjxG,GAAA,GAAAA,EAEpB,KADAmtJ,EAAA90I,KAAAmsG,IACAxkH,EAAA,EAAaA,EAAA+F,IAAO/F,EAAAotJ,EAAAptJ,IAAAmtJ,EAAAntJ,GAAA,IAAAmtJ,EAAAntJ,GAAA,GAEpB,IAAAqtJ,GAAA5oC,GAAA0oC,GACAG,EAAA7oC,GAAA2oC,GAGAG,EAAAD,EAAA,KAAAD,EAAA,GACAG,EAAAF,IAAArtJ,OAAA,KAAAotJ,IAAAptJ,OAAA,GACAitJ,IAIA,KAAAltJ,EAAAqtJ,EAAAptJ,OAAA,EAAmCD,GAAA,IAAQA,EAAAktJ,EAAAzsJ,KAAAwwG,EAAAk8C,EAAAE,EAAArtJ,IAAA,IAC3C,KAAAA,GAAAutJ,EAAqBvtJ,EAAAstJ,EAAArtJ,OAAAutJ,IAAqCxtJ,EAAAktJ,EAAAzsJ,KAAAwwG,EAAAk8C,EAAAG,EAAAttJ,IAAA,IAE1D,OAAAktJ,IAGAO,GAAA,SAAA57C,EAAApQ,GAQA,OAHA+E,GAAAC,EAJA1gG,EAAA8rG,EAAA5xG,OACA0vB,EAAAkiF,EAAA9rG,EAAA,GACAihF,EAAAya,EAAA,GAAA3Z,EAAA2Z,EAAA,GACA6E,EAAA32E,EAAA,GAAA42E,EAAA52E,EAAA,GAEA+9H,GAAA,EAEA1tJ,EAAA,EAAiBA,EAAA+F,IAAO/F,EACxB2vB,EAAAkiF,EAAA7xG,GAAAwmG,EAAA72E,EAAA,GAAA82E,EAAA92E,EAAA,GACA82E,EAAA3e,GAAAye,EAAAze,GAAAd,GAAAsf,EAAAE,IAAA1e,EAAA2e,IAAAF,EAAAE,GAAAD,IAAAknD,MACApnD,EAAAE,EAAAD,EAAAE,CAGA,OAAAinD,IAGAC,GAAA,SAAA97C,GAUA,IATA,GAGA7a,GACAC,EAJAj3F,GAAA,EACA+F,EAAA8rG,EAAA5xG,OACA0I,EAAAkpG,EAAA9rG,EAAA,GAGAmxF,EAAAvuF,EAAA,GACAwuF,EAAAxuF,EAAA,GACAilJ,EAAA,IAEA5tJ,EAAA+F,GACAixF,EAAAE,EACAD,EAAAE,EACAxuF,EAAAkpG,EAAA7xG,GACAk3F,EAAAvuF,EAAA,GACAwuF,EAAAxuF,EAAA,GACAquF,GAAAE,EACAD,GAAAE,EACAy2D,GAAA3hJ,KAAAkoF,KAAA6C,IAAAC,IAGA,OAAA22D,IAGAC,MAAA7nI,MAEAs/F,KAeAX,IAAA52G,UAAAgK,GAAAhK,WACAwU,YAAAoiG,GACAtiC,MAAA,SAAApkE,GACA,qBAAAA,IAAA3e,KAAAo5F,MAAA,SAAA9zF,MACA,UAAAtF,KAAAulH,OAAA,MAAAvlH,KACA,IAAAirF,GAAAsjE,GAAAhnJ,KAAAS,UAAA,EAIA,OAHAijF,GAAA9pF,KAAAwd,KACA3e,KAAAylH,SAAAzlH,KAAAwlH,OAAArkH,KAAA8pF,GACA46B,GAAA7lH,MACAA,MAEA+lH,MAAA,WAEA,MADA,OAAA/lH,KAAAulH,QAAAQ,GAAA/lH,KAAA,GAAAsF,OAAA,UACAtF,MAEAwuJ,MAAA,SAAA7vI,GACA,qBAAAA,IAAA3e,KAAAo5F,MAAA,SAAA9zF,MAGA,OAFAtF,MAAAo5F,MAAA,SAAA7oF,EAAAk+I,GAA2C9vI,EAAA1W,MAAA,MAAAsI,GAAArH,OAAAulJ,KAC3CxoC,GAAAjmH,MACAA,MAEA0uJ,SAAA,SAAA/vI,GACA,qBAAAA,IAAA3e,KAAAo5F,MAAA,SAAA9zF,MAGA,OAFAtF,MAAAo5F,MAAAz6E,EACAsnG,GAAAjmH,MACAA,MA4EA,IAAA2uJ,IAAA,SAAA9vE,EAAAjyE,GAKA,MAJAiyE,GAAA,MAAAA,EAAA,GAAAA,EACAjyE,EAAA,MAAAA,EAAA,GAAAA,EACA,IAAA5E,UAAArH,QAAAiM,EAAAiyE,IAAA,GACAjyE,GAAAiyE,EACA,WACA,MAAAlyE,MAAAiuE,SAAAhuE,EAAAiyE,IAIAouB,GAAA,SAAA2hD,EAAAC,GACA,GAAAnnE,GAAAoL,CAGA,OAFA87D,GAAA,MAAAA,EAAA,GAAAA,EACAC,EAAA,MAAAA,EAAA,GAAAA,EACA,WACA,GAAArmE,EAGA,UAAAd,EAAAc,EAAAd,IAAA,SAGA,IACAA,EAAA,EAAA/6E,KAAAiuE,SAAA,EACA4N,EAAA,EAAA77E,KAAAiuE,SAAA,EACAkY,EAAApL,IAAAc,WACKsK,KAAA,EAEL,OAAA87D,GAAAC,EAAArmE,EAAA77E,KAAAkoF,MAAA,EAAAloF,KAAAs7E,IAAA6K,QAIAg8D,GAAA,WACA,GAAAC,GAAA9hD,GAAAhlG,MAAAjI,KAAAgI,UACA,mBACA,MAAA2E,MAAA4iB,IAAAw/H,OAIAC,GAAA,SAAAvoJ,GACA,kBACA,OAAAs4E,GAAA,EAAAr+E,EAAA,EAA4BA,EAAA+F,IAAO/F,EAAAq+E,GAAApyE,KAAAiuE,QACnC,OAAAmE,KAIAkwE,GAAA,SAAAxoJ,GACA,GAAAyoJ,GAAAF,GAAAvoJ,EACA,mBACA,MAAAyoJ,KAAAzoJ,IAIA0oJ,GAAA,SAAAjkD,GACA,kBACA,OAAAv+F,KAAAs7E,IAAA,EAAAt7E,KAAAiuE,UAAAswB,IAIAkkD,GAAA,SAAAC,EAAA1wI,GAqBA,QAAA2wI,GAAAziE,GACA,GAAA9qF,GAAAwtJ,EAAAnpC,EAAAmpC,MACA,KAAAA,GAAAlpC,GAAAD,IACAmpC,GAAA,KAAAA,EAAA,KACA,MAAAA,EAAA,CACA,GAAAhpC,EACA,IACAxkH,EAAAwkH,EAAAh/G,KAAA6nJ,EAAAhpC,GACS,MAAAjmH,GAET,WADAgS,GAAA5K,KAAA,QAAA6nJ,EAAAjvJ,OAIA4B,GAAAqkH,CAEAj0G,GAAA5K,KAAA,OAAA6nJ,EAAArtJ,OAEAoQ,GAAA5K,KAAA,QAAA6nJ,EAAAviE,GArCA,GAAAuiE,GAEAI,EAKAjpC,EACAD,EAPAn0G,EAAA64E,EAAA,wCAEAykE,EAAA7pD,KACAwgB,EAAA,GAAAspC,gBACA9zI,EAAA,KACA+zI,EAAA,KAGAn4H,EAAA,CAsHA,IAnHA,mBAAAo4H,iBACA,mBAAAxpC,KACA,oBAAA3gH,KAAA4pJ,KAAAjpC,EAAA,GAAAwpC,iBAEA,UAAAxpC,GACAA,EAAAypC,OAAAzpC,EAAA0pC,QAAA1pC,EAAA2pC,UAAAT,EACAlpC,EAAA4pC,mBAAA,SAAAnjE,GAA8Cu5B,EAAA6pC,WAAA,GAAAX,EAAAziE,IAuB9Cu5B,EAAA8pC,WAAA,SAAA/vJ,GACAgS,EAAA5K,KAAA,WAAA6nJ,EAAAjvJ,IAGAivJ,GACAe,OAAA,SAAA3iJ,EAAA/F,GAEA,MADA+F,MAAA,IAAA7H,cACAqC,UAAArH,OAAA,EAAA8uJ,EAAA9tJ,IAAA6L,IACA,MAAA/F,EAAAgoJ,EAAApsJ,OAAAmK,GACAiiJ,EAAApjJ,IAAAmB,EAAA/F,EAAA,IACA2nJ,IAIAI,SAAA,SAAA/nJ,GACA,MAAAO,WAAArH,QACA6uJ,EAAA,MAAA/nJ,EAAA,KAAAA,EAAA,GACA2nJ,GAFAI,GAOAlpC,aAAA,SAAA7+G,GACA,MAAAO,WAAArH,QACA2lH,EAAA7+G,EACA2nJ,GAFA9oC,GAKA9uF,QAAA,SAAA/vB,GACA,MAAAO,WAAArH,QACA62B,GAAA/vB,EACA2nJ,GAFA53H,GAKA5b,KAAA,SAAAnU,GACA,MAAAO,WAAArH,OAAA,EAAAib,KAAA,MAAAnU,EAAA,KAAAA,EAAA,GAAA2nJ,IAGAO,SAAA,SAAAloJ,GACA,MAAAO,WAAArH,OAAA,EAAAgvJ,KAAA,MAAAloJ,EAAA,KAAAA,EAAA,GAAA2nJ,IAKA7oC,SAAA,SAAA9+G,GAEA,MADA8+G,GAAA9+G,EACA2nJ,GAIAztJ,IAAA,SAAAmP,EAAA6N,GACA,MAAAywI,GAAAgB,KAAA,MAAAt/I,EAAA6N,IAIA0xI,KAAA,SAAAv/I,EAAA6N,GACA,MAAAywI,GAAAgB,KAAA,OAAAt/I,EAAA6N,IAIAyxI,KAAA,SAAAjgH,EAAAr/B,EAAA6N,GAYA,MAXAynG,GAAAjwE,KAAAhG,EAAAk/G,GAAA,EAAAzzI,EAAA+zI,GACA,MAAAH,GAAAC,EAAA/2I,IAAA,WAAA+2I,EAAApjJ,IAAA,SAAAmjJ,EAAA,QACAppC,EAAAkqC,kBAAAb,EAAAppE,KAAA,SAAA5+E,EAAA+F,GAAoE44G,EAAAkqC,iBAAA9iJ,EAAA/F,KACpE,MAAA+nJ,GAAAppC,EAAAmqC,kBAAAnqC,EAAAmqC,iBAAAf,GACA,MAAAlpC,IAAAF,EAAAE,gBACA9uF,EAAA,IAAA4uF,EAAA5uF,WACA,MAAA7Y,GAAA,kBAAA7N,KAAA6N,EAAA7N,IAAA,MACA,MAAA6N,GAAA,IAAAA,EAAAhe,SAAAge,EAAAwnG,GAAAxnG,IACA,MAAAA,GAAAywI,EAAAv9I,GAAA,QAAA8M,GAAA9M,GAAA,gBAAAu0G,GAAoFznG,EAAA,KAAAynG,KACpFj0G,EAAA5K,KAAA,aAAA6nJ,EAAAhpC,GACAA,EAAAgqC,KAAA,MAAAt/I,EAAA,KAAAA,GACAs+I,GAGArpC,MAAA,WAEA,MADAK,GAAAL,QACAqpC,GAGAv9I,GAAA,WACA,GAAApK,GAAA0K,EAAAN,GAAA5J,MAAAkK,EAAAnK,UACA,OAAAP,KAAA0K,EAAAi9I,EAAA3nJ,IAIA,MAAAkX,EAAA,CACA,qBAAAA,GAAA,SAAArZ,OAAA,qBAAAqZ,EACA,OAAAywI,GAAAztJ,IAAAgd,GAGA,MAAAywI,IAgBAoB,GAAA,SAAAC,EAAAlqC,GACA,gBAAA8oC,EAAA1wI,GACA,GAAAm0E,GAAAs8D,GAAAC,GAAAG,SAAAiB,GAAAlqC,WACA,UAAA5nG,EAAA,CACA,qBAAAA,GAAA,SAAArZ,OAAA,qBAAAqZ,EACA,OAAAm0E,GAAAnxF,IAAAgd,GAEA,MAAAm0E,KAIA/zD,GAAAyxH,GAAA,qBAAApqC,GACA,MAAArjH,UAAAsqE,cAAAqjF,yBAAAtqC,EAAAI,gBAGAmqC,GAAAH,GAAA,4BAAApqC,GACA,MAAAnhH,MAAAw9B,MAAA2jF,EAAAI,gBAGAz1G,GAAAy/I,GAAA,sBAAApqC,GACA,MAAAA,GAAAI,eAGAge,GAAAgsB,GAAA,2BAAApqC,GACA,GAAAoe,GAAApe,EAAAwqC,WACA,KAAApsB,EAAA,SAAAl/H,OAAA,cACA,OAAAk/H,KAGAqsB,GAAA,SAAAJ,EAAAhuH,GACA,gBAAA4sH,EAAAhpD,EAAA1nF,GACA3W,UAAArH,OAAA,IAAAge,EAAA0nF,IAAA,KACA,IAAAvT,GAAAs8D,GAAAC,GAAAG,SAAAiB,EAGA,OAFA39D,GAAAuT,IAAA,SAAAz1E,GAAyB,MAAA5oB,WAAArH,OAAAmyF,EAAAyzB,SAAAE,GAAAhkF,EAAA4jE,EAAAz1E,IAAAy1E,GACzBvT,EAAAuT,OACA1nF,EAAAm0E,EAAAnxF,IAAAgd,GAAAm0E,IAUAg+D,GAAAD,GAAA,WAAA1T,IAEA4T,GAAAF,GAAA,4BAAArT,IAEAwT,GAAA1oJ,MAAAmG,UAEA45G,GAAA2oC,GAAAjqJ,IACA+/G,GAAAkqC,GAAAtqI,MAEAmgG,IAAgBr5G,KAAA,YA+IhBi6G,GAAA,SAAA//B,GACA,kBACA,MAAAA,KAIA4gC,GAAA,SAAA5gC,GACA,OAAAA,GAGA0gC,IAAA,KA4GA/+B,GAAA,SAAAF,EAAApY,EAAAy3B,GACA,GAGAv6B,GAHA7lE,EAAA+gF,EAAA,GACAvyC,EAAAuyC,IAAAxoF,OAAA,GACAqjE,EAAA4jB,EAAAx/E,EAAAwuC,EAAA,MAAAm6B,EAAA,GAAAA,EAGA,QADAy3B,EAAAD,GAAA,MAAAC,EAAA,KAAAA,GACAA,EAAArpG,MACA,QACA,GAAAsI,GAAAkF,KAAAC,IAAAD,KAAAm7E,IAAA1/E,GAAAuE,KAAAm7E,IAAAlxC,GAEA,OADA,OAAA4xD,EAAAv6B,WAAAtnE,MAAAsnE,EAAAu1E,GAAAx/E,EAAAv8D,MAAA+gG,EAAAv6B,aACArvE,EAAAqqG,aAAAT,EAAA/gG,EAEA,QACA,QACA,QACA,QACA,QACA,MAAA+gG,EAAAv6B,WAAAtnE,MAAAsnE,EAAAw1E,GAAAz/E,EAAAr3D,KAAAC,IAAAD,KAAAm7E,IAAA1/E,GAAAuE,KAAAm7E,IAAAlxC,QAAA4xD,EAAAv6B,aAAA,MAAAu6B,EAAArpG,MACA,MAEA,SACA,QACA,MAAAqpG,EAAAv6B,WAAAtnE,MAAAsnE,EAAAs1E,GAAAv/E,MAAAwkC,EAAAv6B,YAAA,SAAAu6B,EAAArpG,OAIA,MAAAP,GAAAwqF,OAAAof,IAkEAigB,GAAA,SAAAt/B,EAAA+Q,GACA/Q,IAAAziE,OAEA,IAIAukE,GAJA45B,EAAA,EACAC,EAAA37B,EAAAxoF,OAAA,EACAqmG,EAAA7d,EAAA07B,GACA3d,EAAA/d,EAAA27B,EAUA,OAPA5d,GAAAF,IACA/b,EAAA45B,IAAAC,IAAA75B,EACAA,EAAA+b,IAAAE,IAAAjc,GAGA9B,EAAA07B,GAAA3qB,EAAAja,MAAA+mB,GACA7d,EAAA27B,GAAA5qB,EAAAla,KAAAknB,GACA/d,GA4RAqhC,GAAA,GAAArrC,MACAsrC,GAAA,GAAAtrC,MA6DA8xE,GAAA/mC,GAAA,aAEC,SAAAI,EAAAtmD,GACDsmD,EAAAC,SAAAD,EAAAtmD,IACC,SAAA57D,EAAA0vB,GACD,MAAAA,GAAA1vB,GAIA6oJ,IAAAr8I,MAAA,SAAA01E,GAEA,MADAA,GAAA39E,KAAAszE,MAAAqK,GACAlS,SAAAkS,MAAA,EACAA,EAAA,EACA4/B,GAAA,SAAAI,GACAA,EAAAC,QAAA59G,KAAAszE,MAAAqqC,EAAAhgC,OACG,SAAAggC,EAAAtmD,GACHsmD,EAAAC,SAAAD,EAAAtmD,EAAAsmB,IACG,SAAAliF,EAAA0vB,GACH,OAAAA,EAAA1vB,GAAAkiF,IANA2mE,GADA,KAWA,IAAAC,IAAAD,GAAA5rE,MAEA8rE,GAAA,IACAnmC,GAAA,IACAomC,GAAA,KACAC,GAAA,MACApmC,GAAA,OAEAqmC,GAAApnC,GAAA,SAAAI,GACAA,EAAAC,QAAA59G,KAAAszE,MAAAqqC,EAAA6mC,SACC,SAAA7mC,EAAAtmD,GACDsmD,EAAAC,SAAAD,EAAAtmD,EAAAmtF,KACC,SAAA/oJ,EAAA0vB,GACD,OAAAA,EAAA1vB,GAAA+oJ,IACC,SAAA7mC,GACD,MAAAA,GAAAqJ,kBAGA49B,GAAAD,GAAAjsE,MAEAmsE,GAAAtnC,GAAA,SAAAI,GACAA,EAAAC,QAAA59G,KAAAszE,MAAAqqC,EAAAU,SACC,SAAAV,EAAAtmD,GACDsmD,EAAAC,SAAAD,EAAAtmD,EAAAgnD,KACC,SAAA5iH,EAAA0vB,GACD,OAAAA,EAAA1vB,GAAA4iH,IACC,SAAAV,GACD,MAAAA,GAAA4I,eAGAu+B,GAAAD,GAAAnsE,MAEAqsE,GAAAxnC,GAAA,SAAAI,GACA,GAAAlxE,GAAAkxE,EAAAS,oBAAAC,GAAAomC,EACAh4G,GAAA,IAAAA,GAAAg4G,IACA9mC,EAAAC,QAAA59G,KAAAszE,QAAAqqC,EAAAlxE,GAAAg4G,OAAAh4G,IACC,SAAAkxE,EAAAtmD,GACDsmD,EAAAC,SAAAD,EAAAtmD,EAAAotF,KACC,SAAAhpJ,EAAA0vB,GACD,OAAAA,EAAA1vB,GAAAgpJ,IACC,SAAA9mC,GACD,MAAAA,GAAAqE,aAGAgjC,GAAAD,GAAArsE,MAEA0tC,GAAA7I,GAAA,SAAAI,GACAA,EAAAQ,SAAA,UACC,SAAAR,EAAAtmD,GACDsmD,EAAAK,QAAAL,EAAAM,UAAA5mD,IACC,SAAA57D,EAAA0vB,GACD,OAAAA,EAAA1vB,GAAA0vB,EAAAizF,oBAAA3iH,EAAA2iH,qBAAAC,IAAAqmC,IACC,SAAA/mC,GACD,MAAAA,GAAAM,UAAA,IAGAyE,GAAA0D,GAAA1tC,MAaA+tC,GAAA1I,GAAA,GACA2I,GAAA3I,GAAA,GACAknC,GAAAlnC,GAAA,GACAmnC,GAAAnnC,GAAA,GACAonC,GAAApnC,GAAA,GACAqnC,GAAArnC,GAAA,GACAsnC,GAAAtnC,GAAA,GAEAunC,GAAA7+B,GAAA/tC,MACA6sE,GAAA7+B,GAAAhuC,MACA8sE,GAAAP,GAAAvsE,MACA+sE,GAAAP,GAAAxsE,MACAgtE,GAAAP,GAAAzsE,MACAitE,GAAAP,GAAA1sE,MACAktE,GAAAP,GAAA3sE,MAEAmtE,GAAAtoC,GAAA,SAAAI,GACAA,EAAAK,QAAA,GACAL,EAAAQ,SAAA,UACC,SAAAR,EAAAtmD,GACDsmD,EAAAmoC,SAAAnoC,EAAAgE,WAAAtqD,IACC,SAAA57D,EAAA0vB,GACD,MAAAA,GAAAw2F,WAAAlmH,EAAAkmH,WAAA,IAAAx2F,EAAAw7F,cAAAlrH,EAAAkrH,gBACC,SAAAhJ,GACD,MAAAA,GAAAgE,aAGAiB,GAAAijC,GAAAntE,MAEA2tC,GAAA9I,GAAA,SAAAI,GACAA,EAAAmoC,SAAA,KACAnoC,EAAAQ,SAAA,UACC,SAAAR,EAAAtmD,GACDsmD,EAAAoB,YAAApB,EAAAgJ,cAAAtvD,IACC,SAAA57D,EAAA0vB,GACD,MAAAA,GAAAw7F,cAAAlrH,EAAAkrH,eACC,SAAAhJ,GACD,MAAAA,GAAAgJ,eAIAN,IAAAp+G,MAAA,SAAA01E,GACA,MAAAlS,UAAAkS,EAAA39E,KAAAszE,MAAAqK,OAAA,EAAA4/B,GAAA,SAAAI,GACAA,EAAAoB,YAAA/+G,KAAAszE,MAAAqqC,EAAAgJ,cAAAhpC,MACAggC,EAAAmoC,SAAA,KACAnoC,EAAAQ,SAAA,UACG,SAAAR,EAAAtmD,GACHsmD,EAAAoB,YAAApB,EAAAgJ,cAAAtvD,EAAAsmB,KALA,KASA,IAAAooE,IAAA1/B,GAAA3tC,MAEAstE,GAAAzoC,GAAA,SAAAI,GACAA,EAAAsoC,cAAA,MACC,SAAAtoC,EAAAtmD,GACDsmD,EAAAC,SAAAD,EAAAtmD,EAAAgnD,KACC,SAAA5iH,EAAA0vB,GACD,OAAAA,EAAA1vB,GAAA4iH,IACC,SAAAV,GACD,MAAAA,GAAAoJ,kBAGAm/B,GAAAF,GAAAttE,MAEAytE,GAAA5oC,GAAA,SAAAI,GACAA,EAAAyoC,cAAA,QACC,SAAAzoC,EAAAtmD,GACDsmD,EAAAC,SAAAD,EAAAtmD,EAAAotF,KACC,SAAAhpJ,EAAA0vB,GACD,OAAAA,EAAA1vB,GAAAgpJ,IACC,SAAA9mC,GACD,MAAAA,GAAA4E,gBAGA8jC,GAAAF,GAAAztE,MAEAkuC,GAAArJ,GAAA,SAAAI,GACAA,EAAAgB,YAAA,UACC,SAAAhB,EAAAtmD,GACDsmD,EAAAa,WAAAb,EAAAc,aAAApnD,IACC,SAAA57D,EAAA0vB,GACD,OAAAA,EAAA1vB,GAAAipJ,IACC,SAAA/mC,GACD,MAAAA,GAAAc,aAAA,IAGA6nC,GAAA1/B,GAAAluC,MAaAuuC,GAAA1I,GAAA,GACA2I,GAAA3I,GAAA,GACAgoC,GAAAhoC,GAAA,GACAioC,GAAAjoC,GAAA,GACAkoC,GAAAloC,GAAA,GACAmoC,GAAAnoC,GAAA,GACAooC,GAAApoC,GAAA,GAEAqoC,GAAA3/B,GAAAvuC,MACAmuE,GAAA3/B,GAAAxuC,MACAouE,GAAAP,GAAA7tE,MACAquE,GAAAP,GAAA9tE,MACAsuE,GAAAP,GAAA/tE,MACAuuE,GAAAP,GAAAhuE,MACAwuE,GAAAP,GAAAjuE,MAEAyuE,GAAA5pC,GAAA,SAAAI,GACAA,EAAAa,WAAA,GACAb,EAAAgB,YAAA,UACC,SAAAhB,EAAAtmD,GACDsmD,EAAAypC,YAAAzpC,EAAAyE,cAAA/qD,IACC,SAAA57D,EAAA0vB,GACD,MAAAA,GAAAi3F,cAAA3mH,EAAA2mH,cAAA,IAAAj3F,EAAAg8F,iBAAA1rH,EAAA0rH,mBACC,SAAAxJ,GACD,MAAAA,GAAAyE,gBAGAilC,GAAAF,GAAAzuE,MAEAmuC,GAAAtJ,GAAA,SAAAI,GACAA,EAAAypC,YAAA,KACAzpC,EAAAgB,YAAA,UACC,SAAAhB,EAAAtmD,GACDsmD,EAAAuB,eAAAvB,EAAAwJ,iBAAA9vD,IACC,SAAA57D,EAAA0vB,GACD,MAAAA,GAAAg8F,iBAAA1rH,EAAA0rH,kBACC,SAAAxJ,GACD,MAAAA,GAAAwJ,kBAIAN,IAAA5+G,MAAA,SAAA01E,GACA,MAAAlS,UAAAkS,EAAA39E,KAAAszE,MAAAqK,OAAA,EAAA4/B,GAAA,SAAAI,GACAA,EAAAuB,eAAAl/G,KAAAszE,MAAAqqC,EAAAwJ,iBAAAxpC,MACAggC,EAAAypC,YAAA,KACAzpC,EAAAgB,YAAA,UACG,SAAAhB,EAAAtmD,GACHsmD,EAAAuB,eAAAvB,EAAAwJ,iBAAA9vD,EAAAsmB,KALA,KASA,IAkhBA0pC,IAlhBAigC,GAAAzgC,GAAAnuC,MA2TA8mC,IAAY+nC,IAAA,GAAAtjI,EAAA,IAAAlyB,EAAA,KACZm0H,GAAA,UACAC,GAAA,KACAF,GAAA,iCA0NAmB,KACA5E,SAAA,SACA7E,KAAA,aACA30C,KAAA,eACAy5C,SAAA,WACAC,MAAA,wEACAC,WAAA,2CACAC,QAAA,+GACAC,aAAA,0EAYA,IAAA2kC,IAAA,wBAMAC,GAAAj1E,KAAA1wE,UAAA2lH,YACAD,GACAv1H,EAAA6zH,UAAA0hC,IAOAE,IAAA,GAAAl1E,MAAA,4BACAk1C,GACAz1H,EAAA8zH,SAAAyhC,IAEAz+B,GAAA,IACAC,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,EAAAD,GACAE,GAAA,GAAAF,GACAJ,GAAA,IAAAI,GAsHAlgD,GAAA,WACA,MAAA6+C,IAAAxB,GAAAw/B,GAAAp/B,GAAAL,GAAA2+B,GAAAF,GAAAF,GAAAL,GAAAryJ,EAAAq1H,YAAA9qC,QAAA,GAAAhK,MAAA,YAAAA,MAAA,YAGAm1E,GAAA,WACA,MAAA9/B,IAAAhB,GAAAsgC,GAAAlgC,GAAAL,GAAAu/B,GAAAH,GAAArB,GAAAL,GAAAryJ,EAAA6zH,WAAAtpC,QAAAhK,KAAAysC,IAAA,SAAAzsC,KAAAysC,IAAA,YAGAt1B,GAAA,SAAApuE,GACA,MAAAA,GAAApY,MAAA,SAAsB/I,IAAA,SAAA2gF,GACtB,UAAAA,KAIA6sE,GAAAj+D,GAAA,gEAEAk+D,GAAAl+D,GAAA,4HAEAm+D,GAAAn+D,GAAA,4HAEAo+D,GAAAp+D,GAAA,4HAEAq+D,GAAA9e,GAAArgD,GAAA,UAAAA,IAAA,WAEAo/D,GAAA/e,GAAArgD,IAAA,aAAAA,GAAA,YAEAq/D,GAAAhf,GAAArgD,GAAA,aAAAA,GAAA,YAEAs/D,GAAAt/D,KAEAu/D,GAAA,SAAA9pE,IACAA,EAAA,GAAAA,EAAA,KAAAA,GAAAt+E,KAAAszE,MAAAgL,GACA,IAAA+pE,GAAAroJ,KAAAm7E,IAAAmD,EAAA,GAIA,OAHA6pE,IAAAj4I,EAAA,IAAAouE,EAAA,IACA6pE,GAAA5sI,EAAA,QAAA8sI,EACAF,GAAAlzJ,EAAA,MAAAozJ,EACAF,GAAA,IAUAG,GAAAj/B,GAAA1/B,GAAA,qgDAEA4+D,GAAAl/B,GAAA1/B,GAAA,qgDAEA6+D,GAAAn/B,GAAA1/B,GAAA,qgDAEA8+D,GAAAp/B,GAAA1/B,GAAA,qgDA+BA++D,GAAA,SAAA3tE,GACA,kBACA,MAAAA,KAIA4tE,GAAA3oJ,KAAAm7E,IACAytE,GAAA5oJ,KAAAgoF,MACA6gE,GAAA7oJ,KAAAinF,IACAikC,GAAAlrH,KAAAC,IACA6oJ,GAAA9oJ,KAAAkyE,IACA62E,GAAA/oJ,KAAAknF,IACA6jC,GAAA/qH,KAAAkoF,KAEAklC,GAAA,MACA3D,GAAAzpH,KAAA8mI,GACAnd,GAAAF,GAAA,EACAu/B,GAAA,EAAAv/B,GAgFA8I,GAAA,WAUA,QAAAA,KACA,GAAAn4D,GACA+rB,EACA6pB,GAAA6Z,EAAAvuH,MAAAjI,KAAAgI,WACA24G,GAAA+V,EAAAzuH,MAAAjI,KAAAgI,WACAwqG,EAAA/M,EAAAx9F,MAAAjI,KAAAgI,WAAAsuH,GACAvkB,EAAApM,EAAA19F,MAAAjI,KAAAgI,WAAAsuH,GACA1U,EAAA0zC,GAAAvjD,EAAAS,GACA8kB,EAAAvlB,EAAAS,CAQA,IANAvhG,MAAA81D,EAAA78D,MAGAy2G,EAAAhE,IAAA7pB,EAAA6tB,IAAAhE,IAAA7pB,GAGA6tB,EAAAoZ,GAGA,GAAAnY,EAAA+zC,GAAA57B,GACA9oH,EAAAqpI,OAAA35B,EAAA60C,GAAAhjD,GAAAmO,EAAA+0C,GAAAljD,IACAvhG,EAAAiuH,IAAA,IAAAve,EAAAnO,EAAAT,GAAAulB,GACA3a,EAAAod,KACA9oH,EAAAqpI,OAAA39B,EAAA64C,GAAAzjD,GAAA4K,EAAA+4C,GAAA3jD,IACA9gG,EAAAiuH,IAAA,IAAAviB,EAAA5K,EAAAS,EAAA8kB,QAKA,CACA,GAWAhjC,GACAE,EAZAohE,EAAApjD,EACAqjD,EAAA9jD,EACAoJ,EAAA3I,EACAsjD,EAAA/jD,EACAgkD,EAAAn0C,EACAo0C,EAAAp0C,EACAq0C,EAAAn/B,EAAA7uH,MAAAjI,KAAAgI,WAAA,EACAkuJ,EAAAD,EAAAl8B,KAAAo8B,KAAAluJ,MAAAjI,KAAAgI,WAAA0vH,GAAA/a,IAAAgE,MACA0W,EAAAo+B,GAAAH,GAAA30C,EAAAhE,GAAA,GAAAy5C,EAAAnuJ,MAAAjI,KAAAgI,YACAquJ,EAAAh/B,EACAi/B,EAAAj/B,CAKA,IAAA6+B,EAAAn8B,GAAA,CACA,GAAA/sB,GAAAqpB,GAAA6/B,EAAAv5C,EAAA+4C,GAAAO,IACA51C,EAAAgW,GAAA6/B,EAAAv1C,EAAA+0C,GAAAO,KACAF,GAAA,EAAA/oD,GAAA+sB,IAAA/sB,GAAAsqB,EAAA,KAAAnc,GAAAnO,EAAA8oD,GAAA9oD,IACA+oD,EAAA,EAAA56C,EAAA26C,GAAAtjD,EAAAT,GAAA,IACAikD,GAAA,EAAA31C,GAAA0Z,IAAA1Z,GAAAiX,EAAA,KAAAs+B,GAAAv1C,EAAAw1C,GAAAx1C,IACA21C,EAAA,EAAAJ,EAAAC,GAAArjD,EAAAT,GAAA,GAGA,GAAAwlB,GAAA5W,EAAA60C,GAAAI,GACAp+B,EAAA7W,EAAA+0C,GAAAE,GACA5+B,EAAAra,EAAA64C,GAAAM,GACA7+B,EAAAta,EAAA+4C,GAAAI,EAGA,IAAAz+B,EAAA0C,GAAA,CACA,GAAApC,GAAAhX,EAAA60C,GAAAK,GACAj+B,EAAAjX,EAAA+0C,GAAAG,GACA5/C,EAAA0G,EAAA64C,GAAAr6C,GACAhF,EAAAwG,EAAA+4C,GAAAv6C,EAGA,IAAAyG,EAAAwU,GAAA,CACA,GAAAmgC,GAAAR,EAAAh8B,GAAAhD,GAAAQ,EAAAC,EAAAvhB,EAAAE,EAAAwhB,EAAAC,EAAAZ,EAAAC,IAAAD,EAAAC,GACAvV,EAAA6V,EAAAg/B,EAAA,GACA50C,EAAA6V,EAAA++B,EAAA,GACAx5B,EAAApF,EAAA4+B,EAAA,GACAv5B,EAAApF,EAAA2+B,EAAA,GACAC,EAAA,EAAAd,GAAAv/B,IAAAzU,EAAAqb,EAAApb,EAAAqb,IAAAtF,GAAAhW,IAAAC,KAAA+V,GAAAqF,IAAAC,OAAA,GACAy5B,EAAA/+B,GAAA6+B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAF,GAAAZ,GAAAp+B,GAAA1a,EAAA85C,IAAAD,EAAA,IACAF,EAAAb,GAAAp+B,GAAA1W,EAAA81C,IAAAD,EAAA,KAKAR,EAAAj8B,GAGAu8B,EAAAv8B,IACAzlC,EAAA8iC,GAAAnhB,EAAAE,EAAAohB,EAAAC,EAAA7W,EAAA21C,EAAAh/B,GACA9iC,EAAA4iC,GAAAO,EAAAC,EAAAZ,EAAAC,EAAAtW,EAAA21C,EAAAh/B,GAEArmH,EAAAqpI,OAAAhmD,EAAA0b,GAAA1b,EAAAijC,IAAAjjC,EAAA2b,GAAA3b,EAAAkjC,KAGA8+B,EAAAj/B,EAAApmH,EAAAiuH,IAAA5qC,EAAA0b,GAAA1b,EAAA2b,GAAAqmD,EAAAf,GAAAjhE,EAAAkjC,IAAAljC,EAAAijC,KAAAg+B,GAAA/gE,EAAAgjC,IAAAhjC,EAAA+iC,MAAAD,IAIArmH,EAAAiuH,IAAA5qC,EAAA0b,GAAA1b,EAAA2b,GAAAqmD,EAAAf,GAAAjhE,EAAAkjC,IAAAljC,EAAAijC,KAAAg+B,GAAAjhE,EAAAsjC,IAAAtjC,EAAAqjC,MAAAL,GACArmH,EAAAiuH,IAAA,IAAAve,EAAA40C,GAAAjhE,EAAA2b,GAAA3b,EAAAsjC,IAAAtjC,EAAA0b,GAAA1b,EAAAqjC,KAAA49B,GAAA/gE,EAAAyb,GAAAzb,EAAAojC,IAAApjC,EAAAwb,GAAAxb,EAAAmjC,MAAAL,GACArmH,EAAAiuH,IAAA1qC,EAAAwb,GAAAxb,EAAAyb,GAAAqmD,EAAAf,GAAA/gE,EAAAojC,IAAApjC,EAAAmjC,KAAA49B,GAAA/gE,EAAAgjC,IAAAhjC,EAAA+iC,MAAAD,MAKArmH,EAAAqpI,OAAA/iB,EAAAC,GAAAvmH,EAAAiuH,IAAA,IAAAve,EAAAi1C,EAAAC,GAAAv+B,IArBArmH,EAAAqpI,OAAA/iB,EAAAC,GAyBA7a,EAAAod,IAAAg8B,EAAAh8B,GAGAs8B,EAAAt8B,IACAzlC,EAAA8iC,GAAAJ,EAAAC,EAAAU,EAAAC,EAAAjb,GAAA05C,EAAA/+B,GACA9iC,EAAA4iC,GAAAG,EAAAC,EAAAvhB,EAAAE,EAAAwG,GAAA05C,EAAA/+B,GAEArmH,EAAAupI,OAAAlmD,EAAA0b,GAAA1b,EAAAijC,IAAAjjC,EAAA2b,GAAA3b,EAAAkjC,KAGA6+B,EAAAh/B,EAAApmH,EAAAiuH,IAAA5qC,EAAA0b,GAAA1b,EAAA2b,GAAAomD,EAAAd,GAAAjhE,EAAAkjC,IAAAljC,EAAAijC,KAAAg+B,GAAA/gE,EAAAgjC,IAAAhjC,EAAA+iC,MAAAD,IAIArmH,EAAAiuH,IAAA5qC,EAAA0b,GAAA1b,EAAA2b,GAAAomD,EAAAd,GAAAjhE,EAAAkjC,IAAAljC,EAAAijC,KAAAg+B,GAAAjhE,EAAAsjC,IAAAtjC,EAAAqjC,MAAAL,GACArmH,EAAAiuH,IAAA,IAAAviB,EAAA44C,GAAAjhE,EAAA2b,GAAA3b,EAAAsjC,IAAAtjC,EAAA0b,GAAA1b,EAAAqjC,KAAA49B,GAAA/gE,EAAAyb,GAAAzb,EAAAojC,IAAApjC,EAAAwb,GAAAxb,EAAAmjC,KAAAL,GACArmH,EAAAiuH,IAAA1qC,EAAAwb,GAAAxb,EAAAyb,GAAAomD,EAAAd,GAAA/gE,EAAAojC,IAAApjC,EAAAmjC,KAAA49B,GAAA/gE,EAAAgjC,IAAAhjC,EAAA+iC,MAAAD,KAKArmH,EAAAiuH,IAAA,IAAAviB,EAAAm5C,EAAA36C,EAAAmc,GArBArmH,EAAAupI,OAAAxjB,EAAAC,OA1FAhmH,GAAAqpI,OAAA,IAoHA,IAFArpI,EAAAspI,YAEAxzE,EAAA,MAAA91D,GAAA,KAAA81D,EAAA,SA7IA,GAAAyvD,GAAAD,GACAG,EAAAD,GACA2/B,EAAAf,GAAA,GACAc,EAAA,KACA1wD,EAAAkxB,GACAhxB,EAAAixB,GACAE,EAAAD,GACA5lH,EAAA,IA+KA,OAtCAiuH,GAAA4lB,SAAA,WACA,GAAAhyD,KAAA0jC,EAAAvuH,MAAAjI,KAAAgI,aAAA0uH,EAAAzuH,MAAAjI,KAAAgI,YAAA,EACAD,IAAA09F,EAAAx9F,MAAAjI,KAAAgI,aAAA29F,EAAA19F,MAAAjI,KAAAgI,YAAA,EAAAouH,GAAA,CACA,QAAAo/B,GAAAztJ,GAAA+qF,EAAA4iE,GAAA3tJ,GAAA+qF,IAGAosC,EAAA1I,YAAA,SAAA5lG,GACA,MAAA5oB,WAAArH,QAAA61H,EAAA,kBAAA5lG,KAAAykI,IAAAzkI,GAAAsuG,GAAA1I,GAGA0I,EAAAxI,YAAA,SAAA9lG,GACA,MAAA5oB,WAAArH,QAAA+1H,EAAA,kBAAA9lG,KAAAykI,IAAAzkI,GAAAsuG,GAAAxI,GAGAwI,EAAAk3B,aAAA,SAAAxlI,GACA,MAAA5oB,WAAArH,QAAAy1J,EAAA,kBAAAxlI,KAAAykI,IAAAzkI,GAAAsuG,GAAAk3B,GAGAl3B,EAAAi3B,UAAA,SAAAvlI,GACA,MAAA5oB,WAAArH,QAAAw1J,EAAA,MAAAvlI,EAAA,uBAAAA,KAAAykI,IAAAzkI,GAAAsuG,GAAAi3B,GAGAj3B,EAAAz5B,WAAA,SAAA70E,GACA,MAAA5oB,WAAArH,QAAA8kG,EAAA,kBAAA70E,KAAAykI,IAAAzkI,GAAAsuG,GAAAz5B,GAGAy5B,EAAAv5B,SAAA,SAAA/0E,GACA,MAAA5oB,WAAArH,QAAAglG,EAAA,kBAAA/0E,KAAAykI,IAAAzkI,GAAAsuG,GAAAv5B,GAGAu5B,EAAApI,SAAA,SAAAlmG,GACA,MAAA5oB,WAAArH,QAAAm2H,EAAA,kBAAAlmG,KAAAykI,IAAAzkI,GAAAsuG,GAAApI,GAGAoI,EAAAjuH,QAAA,SAAA2f,GACA,MAAA5oB,WAAArH,QAAAsQ,EAAA,MAAA2f,EAAA,KAAAA,EAAAsuG,GAAAjuH,GAGAiuH,EAOA7G,IAAA5pH,WACAioJ,UAAA,WACA12J,KAAAmmJ,MAAA,GAEAwQ,QAAA,WACA32J,KAAAmmJ,MAAAl4D,KAEAqc,UAAA,WACAtqG,KAAAomJ,OAAA,GAEA77C,QAAA,YACAvqG,KAAAmmJ,OAAA,IAAAnmJ,KAAAmmJ,OAAA,IAAAnmJ,KAAAomJ,SAAApmJ,KAAA4c,SAAA29H,YACAv6I,KAAAmmJ,MAAA,EAAAnmJ,KAAAmmJ,OAEAhkD,MAAA,SAAAza,EAAAc,GAEA,OADAd,KAAAc,KACAxoF,KAAAomJ,QACA,OAAApmJ,KAAAomJ,OAAA,EAA8BpmJ,KAAAmmJ,MAAAnmJ,KAAA4c,SAAA49H,OAAA9yD,EAAAc,GAAAxoF,KAAA4c,SAAA09H,OAAA5yD,EAAAc,EAAsE,MACpG,QAAAxoF,KAAAomJ,OAAA,CACA,SAAApmJ,KAAA4c,SAAA49H,OAAA9yD,EAAAc,KAKA,IAAAouE,IAAA,SAAA3lJ,GACA,UAAAonH,IAAApnH,IAWAm5E,GAAA,WAQA,QAAAA,GAAAt5E,GACA,GAAApQ,GAEAoc,EAEAiqD,EAHAtgE,EAAAqK,EAAAnQ,OAEAk2J,GAAA,CAKA,KAFA,MAAA5lJ,IAAA4vF,EAAA43B,EAAA1xD,EAAA78D,OAEAxJ,EAAA,EAAeA,GAAA+F,IAAQ/F,IACvBA,EAAA+F,GAAAqwJ,EAAAh6I,EAAAhM,EAAApQ,KAAAoQ,MAAA+lJ,KACAA,MAAAh2D,EAAAyJ,YACAzJ,EAAA0J,WAEAssD,GAAAh2D,EAAAsB,OAAAk/C,EAAAvkI,EAAApc,EAAAoQ,IAAAwwI,EAAAxkI,EAAApc,EAAAoQ,GAGA,IAAAi2D,EAAA,MAAA85B,GAAA,KAAA95B,EAAA,SAxBA,GAAAs6E,GAAA/oB,GACAgpB,EAAA/oB,GACAu+B,EAAAzB,IAAA,GACApkJ,EAAA,KACAwnH,EAAAm+B,GACA/1D,EAAA,IA0CA,OApBAzW,GAAA1C,EAAA,SAAA92D,GACA,MAAA5oB,WAAArH,QAAA0gJ,EAAA,kBAAAzwH,KAAAykI,IAAAzkI,GAAAw5D,GAAAi3D,GAGAj3D,EAAA5B,EAAA,SAAA53D,GACA,MAAA5oB,WAAArH,QAAA2gJ,EAAA,kBAAA1wH,KAAAykI,IAAAzkI,GAAAw5D,GAAAk3D,GAGAl3D,EAAA0sE,QAAA,SAAAlmI,GACA,MAAA5oB,WAAArH,QAAAm2J,EAAA,kBAAAlmI,KAAAykI,KAAAzkI,GAAAw5D,GAAA0sE,GAGA1sE,EAAAquC,MAAA,SAAA7nG,GACA,MAAA5oB,WAAArH,QAAA83H,EAAA7nG,EAAA,MAAA3f,IAAA4vF,EAAA43B,EAAAxnH,IAAAm5E,GAAAquC,GAGAruC,EAAAn5E,QAAA,SAAA2f,GACA,MAAA5oB,WAAArH,QAAA,MAAAiwB,EAAA3f,EAAA4vF,EAAA,KAAAA,EAAA43B,EAAAxnH,EAAA2f,GAAAw5D,GAAAn5E,GAGAm5E,GAGA2sE,GAAA,WAUA,QAAArS,GAAA5zI,GACA,GAAApQ,GACAgC,EACA4nF,EAEAxtE,EAEAiqD,EAHAtgE,EAAAqK,EAAAnQ,OAEAk2J,GAAA,EAEAG,EAAA,GAAA1uJ,OAAA7B,GACAwwJ,EAAA,GAAA3uJ,OAAA7B,EAIA,KAFA,MAAAwK,IAAA4vF,EAAA43B,EAAA1xD,EAAA78D,OAEAxJ,EAAA,EAAeA,GAAA+F,IAAQ/F,EAAA,CACvB,KAAAA,EAAA+F,GAAAqwJ,EAAAh6I,EAAAhM,EAAApQ,KAAAoQ,MAAA+lJ,EACA,GAAAA,KACAn0J,EAAAhC,EACAmgG,EAAA61D,YACA71D,EAAAyJ,gBACS,CAGT,IAFAzJ,EAAA0J,UACA1J,EAAAyJ,YACAhgB,EAAA5pF,EAAA,EAAyB4pF,GAAA5nF,IAAQ4nF,EACjCuW,EAAAsB,MAAA60D,EAAA1sE,GAAA2sE,EAAA3sE,GAEAuW,GAAA0J,UACA1J,EAAA81D,UAGAE,IACAG,EAAAt2J,IAAAsmG,EAAAlqF,EAAApc,EAAAoQ,GAAAmmJ,EAAAv2J,IAAAumG,EAAAnqF,EAAApc,EAAAoQ,GACA+vF,EAAAsB,MAAA+E,KAAApqF,EAAApc,EAAAoQ,GAAAkmJ,EAAAt2J,GAAAymG,KAAArqF,EAAApc,EAAAoQ,GAAAmmJ,EAAAv2J,KAIA,GAAAqmE,EAAA,MAAA85B,GAAA,KAAA95B,EAAA,SAGA,QAAAmwF,KACA,MAAA9sE,MAAA0sE,WAAAr+B,SAAAxnH,WAhDA,GAAA+1F,GAAAsxB,GACApxB,EAAA,KACAD,EAAAouD,GAAA,GACAluD,EAAAoxB,GACAu+B,EAAAzB,IAAA,GACApkJ,EAAA,KACAwnH,EAAAm+B,GACA/1D,EAAA,IA6FA,OAjDA6jD,GAAAh9D,EAAA,SAAA92D,GACA,MAAA5oB,WAAArH,QAAAqmG,EAAA,kBAAAp2E,KAAAykI,IAAAzkI,GAAAs2E,EAAA,KAAAw9C,GAAA19C,GAGA09C,EAAA19C,GAAA,SAAAp2E,GACA,MAAA5oB,WAAArH,QAAAqmG,EAAA,kBAAAp2E,KAAAykI,IAAAzkI,GAAA8zH,GAAA19C,GAGA09C,EAAAx9C,GAAA,SAAAt2E,GACA,MAAA5oB,WAAArH,QAAAumG,EAAA,MAAAt2E,EAAA,uBAAAA,KAAAykI,IAAAzkI,GAAA8zH,GAAAx9C,GAGAw9C,EAAAl8D,EAAA,SAAA53D,GACA,MAAA5oB,WAAArH,QAAAsmG,EAAA,kBAAAr2E,KAAAykI,IAAAzkI,GAAAu2E,EAAA,KAAAu9C,GAAAz9C,GAGAy9C,EAAAz9C,GAAA,SAAAr2E,GACA,MAAA5oB,WAAArH,QAAAsmG,EAAA,kBAAAr2E,KAAAykI,IAAAzkI,GAAA8zH,GAAAz9C,GAGAy9C,EAAAv9C,GAAA,SAAAv2E,GACA,MAAA5oB,WAAArH,QAAAwmG,EAAA,MAAAv2E,EAAA,uBAAAA,KAAAykI,IAAAzkI,GAAA8zH,GAAAv9C,GAGAu9C,EAAAyS,OACAzS,EAAA0S,OAAA,WACA,MAAAF,KAAAxvE,EAAAsf,GAAAxe,EAAAye,IAGAy9C,EAAA2S,OAAA,WACA,MAAAH,KAAAxvE,EAAAsf,GAAAxe,EAAA2e,IAGAu9C,EAAA4S,OAAA,WACA,MAAAJ,KAAAxvE,EAAAwf,GAAA1e,EAAAye,IAGAy9C,EAAAoS,QAAA,SAAAlmI,GACA,MAAA5oB,WAAArH,QAAAm2J,EAAA,kBAAAlmI,KAAAykI,KAAAzkI,GAAA8zH,GAAAoS,GAGApS,EAAAjsB,MAAA,SAAA7nG,GACA,MAAA5oB,WAAArH,QAAA83H,EAAA7nG,EAAA,MAAA3f,IAAA4vF,EAAA43B,EAAAxnH,IAAAyzI,GAAAjsB,GAGAisB,EAAAzzI,QAAA,SAAA2f,GACA,MAAA5oB,WAAArH,QAAA,MAAAiwB,EAAA3f,EAAA4vF,EAAA,KAAAA,EAAA43B,EAAAxnH,EAAA2f,GAAA8zH,GAAAzzI,GAGAyzI,GAGA6S,GAAA,SAAAxvJ,EAAAsB,GACA,MAAAA,GAAAtB,GAAA,EAAAsB,EAAAtB,EAAA,EAAAsB,GAAAtB,EAAA,EAAAkmF,KAGAupE,GAAA,SAAA16I,GACA,MAAAA,IAGA26I,GAAA,WAQA,QAAAA,GAAA3mJ,GACA,GAAApQ,GAEAgC,EACA4nF,EAMAynB,EAGAp+D,EAXAltC,EAAAqK,EAAAnQ,OAGAo+E,EAAA,EACA36E,EAAA,GAAAkE,OAAA7B,GACAixJ,EAAA,GAAApvJ,OAAA7B,GACA+rG,GAAA/M,EAAAx9F,MAAAjI,KAAAgI,WACA45G,EAAAj1G,KAAAkyE,IAAA82E,GAAAhpJ,KAAAC,KAAA+oJ,GAAAhwD,EAAA19F,MAAAjI,KAAAgI,WAAAwqG,IAEAniF,EAAA1jB,KAAAkyE,IAAAlyE,KAAAm7E,IAAA85B,GAAAn7G,EAAAqwH,EAAA7uH,MAAAjI,KAAAgI,YACAu/I,EAAAl3H,GAAAuxF,EAAA,OAGA,KAAAlhH,EAAA,EAAeA,EAAA+F,IAAO/F,GACtBizC,EAAA+jH,EAAAtzJ,EAAA1D,OAAA+G,EAAAqJ,EAAApQ,KAAAoQ,IAAA,IACAiuE,GAAAprC,EASA,KAJA,MAAAuoG,EAAA93I,EAAA2U,KAAA,SAAArY,EAAAgC,GAAuD,MAAAw5I,GAAAwb,EAAAh3J,GAAAg3J,EAAAh1J,MACvD,MAAAqW,GAAA3U,EAAA2U,KAAA,SAAArY,EAAAgC,GAAsD,MAAAqW,GAAAjI,EAAApQ,GAAAoQ,EAAApO,MAGtDhC,EAAA,EAAA4pF,EAAAvL,GAAA6iC,EAAAn7G,EAAA8gJ,GAAAxoE,EAAA,EAAkDr+E,EAAA+F,IAAO/F,EAAA8xG,EAAAT,EACzDrvG,EAAA0B,EAAA1D,GAAAizC,EAAA+jH,EAAAh1J,GAAAqvG,EAAAS,GAAA7+D,EAAA,EAAAA,EAAA22C,EAAA,GAAAi9D,EAAAmQ,EAAAh1J,IACAoO,OAAApO,GACA0B,MAAA1D,EACA+G,MAAAksC,EACA8xD,WAAA+M,EACA7M,SAAAoM,EACA+kB,SAAAzmG,EAIA,OAAAqnI,GA5CA,GAAAjwJ,GAAA+vJ,GACAtb,EAAAqb,GACAx+I,EAAA,KACA0sF,EAAA4vD,GAAA,GACA1vD,EAAA0vD,GAAAM,IACA7+B,EAAAu+B,GAAA,EAkEA,OAxBAoC,GAAAhwJ,MAAA,SAAAmpB,GACA,MAAA5oB,WAAArH,QAAA8G,EAAA,kBAAAmpB,KAAAykI,IAAAzkI,GAAA6mI,GAAAhwJ,GAGAgwJ,EAAAvb,WAAA,SAAAtrH,GACA,MAAA5oB,WAAArH,QAAAu7I,EAAAtrH,EAAA7X,EAAA,KAAA0+I,GAAAvb,GAGAub,EAAA1+I,KAAA,SAAA6X,GACA,MAAA5oB,WAAArH,QAAAoY,EAAA6X,EAAAsrH,EAAA,KAAAub,GAAA1+I,GAGA0+I,EAAAhyD,WAAA,SAAA70E,GACA,MAAA5oB,WAAArH,QAAA8kG,EAAA,kBAAA70E,KAAAykI,IAAAzkI,GAAA6mI,GAAAhyD,GAGAgyD,EAAA9xD,SAAA,SAAA/0E,GACA,MAAA5oB,WAAArH,QAAAglG,EAAA,kBAAA/0E,KAAAykI,IAAAzkI,GAAA6mI,GAAA9xD,GAGA8xD,EAAA3gC,SAAA,SAAAlmG,GACA,MAAA5oB,WAAArH,QAAAm2H,EAAA,kBAAAlmG,KAAAykI,IAAAzkI,GAAA6mI,GAAA3gC,GAGA2gC,GAGAE,GAAAh/B,GAAAi+B,GAMAp+B,IAAA/pH,WACAioJ,UAAA,WACA12J,KAAA04H,OAAAg+B,aAEAC,QAAA,WACA32J,KAAA04H,OAAAi+B,WAEArsD,UAAA,WACAtqG,KAAA04H,OAAApuB,aAEAC,QAAA,WACAvqG,KAAA04H,OAAAnuB,WAEApI,MAAA,SAAAp6F,EAAA+qF,GACA9yF,KAAA04H,OAAAv2B,MAAArP,EAAAnmF,KAAAknF,IAAA9rF,GAAA+qF,GAAAnmF,KAAAinF,IAAA7rF,KA4BA,IAAA6vJ,IAAA,WACA,MAAA/+B,IAAAzuC,KAAAquC,MAAAk/B,MAGAE,GAAA,WACA,GAAA9vJ,GAAAgvJ,KAAAt+B,MAAAk/B,IACA/tJ,EAAA7B,EAAA0wH,MACAzxB,EAAAj/F,EAAAovJ,OACAjwD,EAAAn/F,EAAAuvJ,OACArwD,EAAAl/F,EAAAqvJ,OACAjwD,EAAAp/F,EAAAsvJ,MAiBA,OAfAtvJ,GAAA4lG,MAAA5lG,EAAA2/E,QAAA3/E,GAAA2/E,EACA3/E,EAAA09F,WAAA19F,EAAAi/F,SAAAj/F,GAAAi/F,GACAj/F,EAAA49F,SAAA59F,EAAAm/F,SAAAn/F,GAAAm/F,GACAn/F,EAAAw9F,OAAAx9F,EAAAygF,QAAAzgF,GAAAygF,EACAzgF,EAAAyuH,YAAAzuH,EAAAk/F,SAAAl/F,GAAAk/F,GACAl/F,EAAA2uH,YAAA3uH,EAAAo/F,SAAAp/F,GAAAo/F,GACAp/F,EAAA+vJ,eAAA,WAAiC,MAAAj/B,IAAA7xB,YAA2Bj/F,GAAAovJ,OAC5DpvJ,EAAAgwJ,aAAA,WAA+B,MAAAl/B,IAAA3xB,YAA2Bn/F,GAAAuvJ,OAC1DvvJ,EAAAiwJ,gBAAA,WAAkC,MAAAn/B,IAAA5xB,YAA2Bl/F,GAAAqvJ,OAC7DrvJ,EAAAkwJ,gBAAA,WAAkC,MAAAp/B,IAAA1xB,YAA2Bp/F,GAAAsvJ,OAE7DtvJ,EAAA0wH,MAAA,SAAA7nG,GACA,MAAA5oB,WAAArH,OAAAiJ,EAAA+uH,GAAA/nG,IAAAhnB,IAAA8uH,QAGA3wH,GAGAmwJ,IACAC,KAAA,SAAAlnJ,EAAAmrC,GACA,GAAA02C,GAAAnmF,KAAAkoF,KAAAz4C,EAAAg6E,GACAnlH,GAAAqpI,OAAAxnD,EAAA,GACA7hF,EAAAiuH,IAAA,IAAApsC,EAAA,EAAA6iE,MAIAyC,IACAD,KAAA,SAAAlnJ,EAAAmrC,GACA,GAAA02C,GAAAnmF,KAAAkoF,KAAAz4C,EAAA,IACAnrC,GAAAqpI,QAAA,EAAAxnD,MACA7hF,EAAAupI,QAAA1nD,MACA7hF,EAAAupI,QAAA1nD,GAAA,EAAAA,GACA7hF,EAAAupI,OAAA1nD,GAAA,EAAAA,GACA7hF,EAAAupI,OAAA1nD,MACA7hF,EAAAupI,OAAA,EAAA1nD,MACA7hF,EAAAupI,OAAA,EAAA1nD,KACA7hF,EAAAupI,OAAA1nD,KACA7hF,EAAAupI,OAAA1nD,EAAA,EAAAA,GACA7hF,EAAAupI,QAAA1nD,EAAA,EAAAA,GACA7hF,EAAAupI,QAAA1nD,KACA7hF,EAAAupI,QAAA,EAAA1nD,KACA7hF,EAAAspI,cAIA8d,GAAA1rJ,KAAAkoF,KAAA,KACAyjE,GAAA,EAAAD,GAEAE,IACAJ,KAAA,SAAAlnJ,EAAAmrC,GACA,GAAAosC,GAAA77E,KAAAkoF,KAAAz4C,EAAAk8G,IACA5wE,EAAAc,EAAA6vE,EACApnJ,GAAAqpI,OAAA,GAAA9xD,GACAv3E,EAAAupI,OAAA9yD,EAAA,GACAz2E,EAAAupI,OAAA,EAAAhyD,GACAv3E,EAAAupI,QAAA9yD,EAAA,GACAz2E,EAAAspI,cAIAie,GAAA,kBACAC,GAAA9rJ,KAAAknF,IAAAuiC,GAAA,IAAAzpH,KAAAknF,IAAA,EAAAuiC,GAAA,IACAlY,GAAAvxG,KAAAknF,IAAA8hE,GAAA,IAAA8C,GACAt6C,IAAAxxG,KAAAinF,IAAA+hE,GAAA,IAAA8C,GAEAC,IACAP,KAAA,SAAAlnJ,EAAAmrC,GACA,GAAA02C,GAAAnmF,KAAAkoF,KAAAz4C,EAAAo8G,IACA9wE,EAAAw2B,GAAAprB,EACAtK,EAAA21B,GAAArrB,CACA7hF,GAAAqpI,OAAA,GAAAxnD,GACA7hF,EAAAupI,OAAA9yD,EAAAc,EACA,QAAA9nF,GAAA,EAAmBA,EAAA,IAAOA,EAAA,CAC1B,GAAAqH,GAAA4tJ,GAAAj1J,EAAA,EACAkJ,EAAA+C,KAAAinF,IAAA7rF,GACAmgB,EAAAvb,KAAAknF,IAAA9rF,EACAkJ,GAAAupI,OAAAtyH,EAAA4qE,GAAAlpF,EAAAkpF,GACA7hF,EAAAupI,OAAA5wI,EAAA89E,EAAAx/D,EAAAsgE,EAAAtgE,EAAAw/D,EAAA99E,EAAA4+E,GAEAv3E,EAAAspI,cAIApqH,IACAgoI,KAAA,SAAAlnJ,EAAAmrC,GACA,GAAAgzD,GAAAziG,KAAAkoF,KAAAz4C,GACAsrC,GAAA0nB,EAAA,CACAn+F,GAAA20H,KAAAl+C,IAAA0nB,OAIAupD,GAAAhsJ,KAAAkoF,KAAA,GAEA+jE,IACAT,KAAA,SAAAlnJ,EAAAmrC,GACA,GAAAosC,IAAA77E,KAAAkoF,KAAAz4C,GAAA,EAAAu8G,IACA1nJ,GAAAqpI,OAAA,IAAA9xD,GACAv3E,EAAAupI,QAAAme,GAAAnwE,MACAv3E,EAAAupI,OAAAme,GAAAnwE,MACAv3E,EAAAspI,cAIA3wI,IAAA,GACAse,GAAAvb,KAAAkoF,KAAA,KACAvK,GAAA,EAAA39E,KAAAkoF,KAAA,IACA9sF,GAAA,GAAAuiF,GAAA,KAEAuuE,IACAV,KAAA,SAAAlnJ,EAAAmrC,GACA,GAAA02C,GAAAnmF,KAAAkoF,KAAAz4C,EAAAr0C,IACAi/F,EAAAlU,EAAA,EACAmU,EAAAnU,EAAAxI,GACA4c,EAAAF,EACAG,EAAArU,EAAAxI,GAAAwI,EACA0nB,GAAAtT,EACAuT,EAAAtT,CACAl2F,GAAAqpI,OAAAtzC,EAAAC,GACAh2F,EAAAupI,OAAAtzC,EAAAC,GACAl2F,EAAAupI,OAAAhgC,EAAAC,GACAxpG,EAAAupI,OAAA5wI,GAAAo9F,EAAA9+E,GAAA++E,EAAA/+E,GAAA8+E,EAAAp9F,GAAAq9F,GACAh2F,EAAAupI,OAAA5wI,GAAAs9F,EAAAh/E,GAAAi/E,EAAAj/E,GAAAg/E,EAAAt9F,GAAAu9F,GACAl2F,EAAAupI,OAAA5wI,GAAA4wG,EAAAtyF,GAAAuyF,EAAAvyF,GAAAsyF,EAAA5wG,GAAA6wG,GACAxpG,EAAAupI,OAAA5wI,GAAAo9F,EAAA9+E,GAAA++E,EAAAr9F,GAAAq9F,EAAA/+E,GAAA8+E,GACA/1F,EAAAupI,OAAA5wI,GAAAs9F,EAAAh/E,GAAAi/E,EAAAv9F,GAAAu9F,EAAAj/E,GAAAg/E,GACAj2F,EAAAupI,OAAA5wI,GAAA4wG,EAAAtyF,GAAAuyF,EAAA7wG,GAAA6wG,EAAAvyF,GAAAsyF,GACAvpG,EAAAspI,cAIAue,IACAZ,GACAE,GACAG,GACApoI,GACAuoI,GACAE,GACAC,IAGA9wF,GAAA,WAKA,QAAAA,KACA,GAAAhB,EAGA,IAFA91D,MAAA81D,EAAA78D,MACA/K,EAAA8I,MAAAjI,KAAAgI,WAAAmwJ,KAAAlnJ,GAAAmrC,EAAAn0C,MAAAjI,KAAAgI,YACA++D,EAAA,MAAA91D,GAAA,KAAA81D,EAAA,SARA,GAAA5nE,GAAAk2J,GAAA6C,IACA97G,EAAAi5G,GAAA,IACApkJ,EAAA,IAqBA,OAZA82D,GAAA5oE,KAAA,SAAAyxB,GACA,MAAA5oB,WAAArH,QAAAxB,EAAA,kBAAAyxB,KAAAykI,GAAAzkI,GAAAm3C,GAAA5oE,GAGA4oE,EAAA3rB,KAAA,SAAAxrB,GACA,MAAA5oB,WAAArH,QAAAy7C,EAAA,kBAAAxrB,KAAAykI,IAAAzkI,GAAAm3C,GAAA3rB,GAGA2rB,EAAA92D,QAAA,SAAA2f,GACA,MAAA5oB,WAAArH,QAAAsQ,EAAA,MAAA2f,EAAA,KAAAA,EAAAm3C,GAAA92D,GAGA82D,GAGAgxF,GAAA,YAiBA//B,IAAAvqH,WACAioJ,UAAA,WACA12J,KAAAmmJ,MAAA,GAEAwQ,QAAA,WACA32J,KAAAmmJ,MAAAl4D,KAEAqc,UAAA,WACAtqG,KAAAglG,IAAAhlG,KAAAklG,IACAllG,KAAAilG,IAAAjlG,KAAAmlG,IAAAlX,IACAjuF,KAAAomJ,OAAA,GAEA77C,QAAA,WACA,OAAAvqG,KAAAomJ,QACA,OAAAttB,GAAA94H,UAAAklG,IAAAllG,KAAAmlG,IACA,QAAAnlG,KAAA4c,SAAA49H,OAAAx6I,KAAAklG,IAAAllG,KAAAmlG,MAEAnlG,KAAAmmJ,OAAA,IAAAnmJ,KAAAmmJ,OAAA,IAAAnmJ,KAAAomJ,SAAApmJ,KAAA4c,SAAA29H,YACAv6I,KAAAmmJ,MAAA,EAAAnmJ,KAAAmmJ,OAEAhkD,MAAA,SAAAza,EAAAc,GAEA,OADAd,KAAAc,KACAxoF,KAAAomJ,QACA,OAAApmJ,KAAAomJ,OAAA,EAA8BpmJ,KAAAmmJ,MAAAnmJ,KAAA4c,SAAA49H,OAAA9yD,EAAAc,GAAAxoF,KAAA4c,SAAA09H,OAAA5yD,EAAAc,EAAsE,MACpG,QAAAxoF,KAAAomJ,OAAA,CAA8B,MAC9B,QAAApmJ,KAAAomJ,OAAA,EAA8BpmJ,KAAA4c,SAAA49H,QAAA,EAAAx6I,KAAAglG,IAAAhlG,KAAAklG,KAAA,KAAAllG,KAAAilG,IAAAjlG,KAAAmlG,KAAA,EAC9B,SAAA2zB,GAAA94H,KAAA0nF,EAAAc,GAEAxoF,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAklG,IAAAxd,EACA1nF,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAmlG,IAAA3c,GAIA,IAAAwwE,IAAA,SAAA/nJ,GACA,UAAA+nH,IAAA/nH,GAOAgoH,IAAAxqH,WACAioJ,UAAAqC,GACApC,QAAAoC,GACAzuD,UAAA,WACAtqG,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAu5H,IAAAv5H,KAAAi5J,IAAAj5J,KAAAk5J,IACAl5J,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAw5H,IAAAx5H,KAAAm5J,IAAAn5J,KAAAo5J,IAAAnrE,IACAjuF,KAAAomJ,OAAA,GAEA77C,QAAA,WACA,OAAAvqG,KAAAomJ,QACA,OACApmJ,KAAA4c,SAAA09H,OAAAt6I,KAAAu5H,IAAAv5H,KAAAw5H,KACAx5H,KAAA4c,SAAA29H,WACA,MAEA,QACAv6I,KAAA4c,SAAA09H,QAAAt6I,KAAAu5H,IAAA,EAAAv5H,KAAAi5J,KAAA,GAAAj5J,KAAAw5H,IAAA,EAAAx5H,KAAAm5J,KAAA,GACAn5J,KAAA4c,SAAA49H,QAAAx6I,KAAAi5J,IAAA,EAAAj5J,KAAAu5H,KAAA,GAAAv5H,KAAAm5J,IAAA,EAAAn5J,KAAAw5H,KAAA,GACAx5H,KAAA4c,SAAA29H,WACA,MAEA,QACAv6I,KAAAmiG,MAAAniG,KAAAu5H,IAAAv5H,KAAAw5H,KACAx5H,KAAAmiG,MAAAniG,KAAAi5J,IAAAj5J,KAAAm5J,KACAn5J,KAAAmiG,MAAAniG,KAAAk5J,IAAAl5J,KAAAo5J,OAKAj3D,MAAA,SAAAza,EAAAc,GAEA,OADAd,KAAAc,KACAxoF,KAAAomJ,QACA,OAAApmJ,KAAAomJ,OAAA,EAA8BpmJ,KAAAu5H,IAAA7xC,EAAA1nF,KAAAw5H,IAAAhxC,CAA4B,MAC1D,QAAAxoF,KAAAomJ,OAAA,EAA8BpmJ,KAAAi5J,IAAAvxE,EAAA1nF,KAAAm5J,IAAA3wE,CAA4B,MAC1D,QAAAxoF,KAAAomJ,OAAA,EAA8BpmJ,KAAAk5J,IAAAxxE,EAAA1nF,KAAAo5J,IAAA5wE,EAA4BxoF,KAAA4c,SAAA09H,QAAAt6I,KAAAglG,IAAA,EAAAhlG,KAAAklG,IAAAxd,GAAA,GAAA1nF,KAAAilG,IAAA,EAAAjlG,KAAAmlG,IAAA3c,GAAA,EAA4F,MACtJ,SAAAswC,GAAA94H,KAAA0nF,EAAAc,GAEAxoF,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAklG,IAAAxd,EACA1nF,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAmlG,IAAA3c,GAIA,IAAA6wE,IAAA,SAAApoJ,GACA,UAAAgoH,IAAAhoH,GAOAioH,IAAAzqH,WACAioJ,UAAA,WACA12J,KAAAmmJ,MAAA,GAEAwQ,QAAA,WACA32J,KAAAmmJ,MAAAl4D,KAEAqc,UAAA,WACAtqG,KAAAglG,IAAAhlG,KAAAklG,IACAllG,KAAAilG,IAAAjlG,KAAAmlG,IAAAlX,IACAjuF,KAAAomJ,OAAA,GAEA77C,QAAA,YACAvqG,KAAAmmJ,OAAA,IAAAnmJ,KAAAmmJ,OAAA,IAAAnmJ,KAAAomJ,SAAApmJ,KAAA4c,SAAA29H,YACAv6I,KAAAmmJ,MAAA,EAAAnmJ,KAAAmmJ,OAEAhkD,MAAA,SAAAza,EAAAc,GAEA,OADAd,KAAAc,KACAxoF,KAAAomJ,QACA,OAAApmJ,KAAAomJ,OAAA,CAA8B,MAC9B,QAAApmJ,KAAAomJ,OAAA,CAA8B,MAC9B,QAAApmJ,KAAAomJ,OAAA,CAA8B,IAAAp/C,IAAAhnG,KAAAglG,IAAA,EAAAhlG,KAAAklG,IAAAxd,GAAA,EAAAuf,GAAAjnG,KAAAilG,IAAA,EAAAjlG,KAAAmlG,IAAA3c,GAAA,CAAoFxoF,MAAAmmJ,MAAAnmJ,KAAA4c,SAAA49H,OAAAxzC,EAAAC,GAAAjnG,KAAA4c,SAAA09H,OAAAtzC,EAAAC,EAA0E,MAC5L,QAAAjnG,KAAAomJ,OAAA,CACA,SAAAttB,GAAA94H,KAAA0nF,EAAAc,GAEAxoF,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAklG,IAAAxd,EACA1nF,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAmlG,IAAA3c,GAIA,IAAA8wE,IAAA,SAAAroJ,GACA,UAAAioH,IAAAjoH,GAQAkoH,IAAA1qH,WACA67F,UAAA,WACAtqG,KAAAonG,MACApnG,KAAAqnG,MACArnG,KAAAo5H,OAAA9uB,aAEAC,QAAA,WACA,GAAA7iB,GAAA1nF,KAAAonG,GACA5e,EAAAxoF,KAAAqnG,GACA3kG,EAAAglF,EAAA/mF,OAAA,CAEA,IAAA+B,EAAA,EAQA,IAPA,GAKAuoF,GALA+b,EAAAtf,EAAA,GACAuf,EAAAze,EAAA,GACAvqD,EAAAypD,EAAAhlF,GAAAskG,EACA7oE,EAAAqqD,EAAA9lF,GAAAukG,EACAvmG,GAAA,IAGAA,GAAAgC,GACAuoF,EAAAvqF,EAAAgC,EACA1C,KAAAo5H,OAAAj3B,MACAniG,KAAAq5H,MAAA3xC,EAAAhnF,IAAA,EAAAV,KAAAq5H,QAAAryB,EAAA/b,EAAAhtD,GACAj+B,KAAAq5H,MAAA7wC,EAAA9nF,IAAA,EAAAV,KAAAq5H,QAAApyB,EAAAhc,EAAA9sD,GAKAn+B,MAAAonG,GAAApnG,KAAAqnG,GAAA,KACArnG,KAAAo5H,OAAA7uB,WAEApI,MAAA,SAAAza,EAAAc,GACAxoF,KAAAonG,GAAAjmG,MAAAumF,GACA1nF,KAAAqnG,GAAAlmG,MAAAqnF,IAIA,IAAA+wE,IAAA,QAAA3hB,GAAAhzB,GAEA,QAAA20C,GAAAtoJ,GACA,WAAA2zG,EAAA,GAAAoU,IAAA/nH,GAAA,GAAAkoH,IAAAloH,EAAA2zG,GAOA,MAJA20C,GAAA30C,KAAA,SAAAA,GACA,MAAAgzB,IAAAhzB,IAGA20C,GACC,IAkBD9/B,IAAAhrH,WACAioJ,UAAA,WACA12J,KAAAmmJ,MAAA,GAEAwQ,QAAA,WACA32J,KAAAmmJ,MAAAl4D,KAEAqc,UAAA,WACAtqG,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAu5H,IACAv5H,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAw5H,IAAAvrC,IACAjuF,KAAAomJ,OAAA,GAEA77C,QAAA,WACA,OAAAvqG,KAAAomJ,QACA,OAAApmJ,KAAA4c,SAAA49H,OAAAx6I,KAAAu5H,IAAAv5H,KAAAw5H,IAAuD,MACvD,QAAAF,GAAAt5H,UAAAklG,IAAAllG,KAAAmlG,MAEAnlG,KAAAmmJ,OAAA,IAAAnmJ,KAAAmmJ,OAAA,IAAAnmJ,KAAAomJ,SAAApmJ,KAAA4c,SAAA29H,YACAv6I,KAAAmmJ,MAAA,EAAAnmJ,KAAAmmJ,OAEAhkD,MAAA,SAAAza,EAAAc,GAEA,OADAd,KAAAc,KACAxoF,KAAAomJ,QACA,OAAApmJ,KAAAomJ,OAAA,EAA8BpmJ,KAAAmmJ,MAAAnmJ,KAAA4c,SAAA49H,OAAA9yD,EAAAc,GAAAxoF,KAAA4c,SAAA09H,OAAA5yD,EAAAc,EAAsE,MACpG,QAAAxoF,KAAAomJ,OAAA,EAA8BpmJ,KAAAklG,IAAAxd,EAAA1nF,KAAAmlG,IAAA3c,CAA4B,MAC1D,QAAAxoF,KAAAomJ,OAAA,CACA,SAAA9sB,GAAAt5H,KAAA0nF,EAAAc,GAEAxoF,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAklG,IAAAllG,KAAAu5H,IAAAv5H,KAAAu5H,IAAA7xC,EACA1nF,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAmlG,IAAAnlG,KAAAw5H,IAAAx5H,KAAAw5H,IAAAhxC,GAIA,IAAAgxE,IAAA,QAAA5hB,GAAAle,GAEA,QAAA8/B,GAAAvoJ,GACA,UAAAwoH,IAAAxoH,EAAAyoH,GAOA,MAJA8/B,GAAA9/B,QAAA,SAAAA,GACA,MAAAke,IAAAle,IAGA8/B,GACC,EAOD7/B,IAAAlrH,WACAioJ,UAAAqC,GACApC,QAAAoC,GACAzuD,UAAA,WACAtqG,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAu5H,IAAAv5H,KAAAi5J,IAAAj5J,KAAAk5J,IAAAl5J,KAAAy5J,IACAz5J,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAw5H,IAAAx5H,KAAAm5J,IAAAn5J,KAAAo5J,IAAAp5J,KAAA05J,IAAAzrE,IACAjuF,KAAAomJ,OAAA,GAEA77C,QAAA,WACA,OAAAvqG,KAAAomJ,QACA,OACApmJ,KAAA4c,SAAA09H,OAAAt6I,KAAAi5J,IAAAj5J,KAAAm5J,KACAn5J,KAAA4c,SAAA29H,WACA,MAEA,QACAv6I,KAAA4c,SAAA49H,OAAAx6I,KAAAi5J,IAAAj5J,KAAAm5J,KACAn5J,KAAA4c,SAAA29H,WACA,MAEA,QACAv6I,KAAAmiG,MAAAniG,KAAAi5J,IAAAj5J,KAAAm5J,KACAn5J,KAAAmiG,MAAAniG,KAAAk5J,IAAAl5J,KAAAo5J,KACAp5J,KAAAmiG,MAAAniG,KAAAy5J,IAAAz5J,KAAA05J,OAKAv3D,MAAA,SAAAza,EAAAc,GAEA,OADAd,KAAAc,KACAxoF,KAAAomJ,QACA,OAAApmJ,KAAAomJ,OAAA,EAA8BpmJ,KAAAi5J,IAAAvxE,EAAA1nF,KAAAm5J,IAAA3wE,CAA4B,MAC1D,QAAAxoF,KAAAomJ,OAAA,EAA8BpmJ,KAAA4c,SAAA09H,OAAAt6I,KAAAk5J,IAAAxxE,EAAA1nF,KAAAo5J,IAAA5wE,EAAkD,MAChF,QAAAxoF,KAAAomJ,OAAA,EAA8BpmJ,KAAAy5J,IAAA/xE,EAAA1nF,KAAA05J,IAAAlxE,CAA4B,MAC1D,SAAA8wC,GAAAt5H,KAAA0nF,EAAAc,GAEAxoF,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAklG,IAAAllG,KAAAu5H,IAAAv5H,KAAAu5H,IAAA7xC,EACA1nF,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAmlG,IAAAnlG,KAAAw5H,IAAAx5H,KAAAw5H,IAAAhxC,GAIA,IAAAmxE,IAAA,QAAA/hB,GAAAle,GAEA,QAAA8/B,GAAAvoJ,GACA,UAAA0oH,IAAA1oH,EAAAyoH,GAOA,MAJA8/B,GAAA9/B,QAAA,SAAAA,GACA,MAAAke,IAAAle,IAGA8/B,GACC,EAOD5/B,IAAAnrH,WACAioJ,UAAA,WACA12J,KAAAmmJ,MAAA,GAEAwQ,QAAA,WACA32J,KAAAmmJ,MAAAl4D,KAEAqc,UAAA,WACAtqG,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAu5H,IACAv5H,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAw5H,IAAAvrC,IACAjuF,KAAAomJ,OAAA,GAEA77C,QAAA,YACAvqG,KAAAmmJ,OAAA,IAAAnmJ,KAAAmmJ,OAAA,IAAAnmJ,KAAAomJ,SAAApmJ,KAAA4c,SAAA29H,YACAv6I,KAAAmmJ,MAAA,EAAAnmJ,KAAAmmJ,OAEAhkD,MAAA,SAAAza,EAAAc,GAEA,OADAd,KAAAc,KACAxoF,KAAAomJ,QACA,OAAApmJ,KAAAomJ,OAAA,CAA8B,MAC9B,QAAApmJ,KAAAomJ,OAAA,CAA8B,MAC9B,QAAApmJ,KAAAomJ,OAAA,EAA8BpmJ,KAAAmmJ,MAAAnmJ,KAAA4c,SAAA49H,OAAAx6I,KAAAu5H,IAAAv5H,KAAAw5H,KAAAx5H,KAAA4c,SAAA09H,OAAAt6I,KAAAu5H,IAAAv5H,KAAAw5H,IAAkG,MAChI,QAAAx5H,KAAAomJ,OAAA,CACA,SAAA9sB,GAAAt5H,KAAA0nF,EAAAc,GAEAxoF,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAklG,IAAAllG,KAAAu5H,IAAAv5H,KAAAu5H,IAAA7xC,EACA1nF,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAmlG,IAAAnlG,KAAAw5H,IAAAx5H,KAAAw5H,IAAAhxC,GAIA,IAAAoxE,IAAA,QAAAhiB,GAAAle,GAEA,QAAA8/B,GAAAvoJ,GACA,UAAA2oH,IAAA3oH,EAAAyoH,GAOA,MAJA8/B,GAAA9/B,QAAA,SAAAA,GACA,MAAAke,IAAAle,IAGA8/B,GACC,EA8BDn/B,IAAA5rH,WACAioJ,UAAA,WACA12J,KAAAmmJ,MAAA,GAEAwQ,QAAA,WACA32J,KAAAmmJ,MAAAl4D,KAEAqc,UAAA,WACAtqG,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAu5H,IACAv5H,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAw5H,IAAAvrC,IACAjuF,KAAA85H,OAAA95H,KAAAi6H,OAAAj6H,KAAAm6H,OACAn6H,KAAAg6H,QAAAh6H,KAAAk6H,QAAAl6H,KAAAo6H,QACAp6H,KAAAomJ,OAAA,GAEA77C,QAAA,WACA,OAAAvqG,KAAAomJ,QACA,OAAApmJ,KAAA4c,SAAA49H,OAAAx6I,KAAAu5H,IAAAv5H,KAAAw5H,IAAuD,MACvD,QAAAx5H,KAAAmiG,MAAAniG,KAAAu5H,IAAAv5H,KAAAw5H,MAEAx5H,KAAAmmJ,OAAA,IAAAnmJ,KAAAmmJ,OAAA,IAAAnmJ,KAAAomJ,SAAApmJ,KAAA4c,SAAA29H,YACAv6I,KAAAmmJ,MAAA,EAAAnmJ,KAAAmmJ,OAEAhkD,MAAA,SAAAza,EAAAc,GAGA,GAFAd,KAAAc,KAEAxoF,KAAAomJ,OAAA,CACA,GAAAyT,GAAA75J,KAAAu5H,IAAA7xC,EACAoyE,EAAA95J,KAAAw5H,IAAAhxC,CACAxoF,MAAAm6H,OAAAxtH,KAAAkoF,KAAA70F,KAAAo6H,QAAAztH,KAAAq7E,IAAA6xE,IAAAC,IAAA95J,KAAAs6H,SAGA,OAAAt6H,KAAAomJ,QACA,OAAApmJ,KAAAomJ,OAAA,EAA8BpmJ,KAAAmmJ,MAAAnmJ,KAAA4c,SAAA49H,OAAA9yD,EAAAc,GAAAxoF,KAAA4c,SAAA09H,OAAA5yD,EAAAc,EAAsE,MACpG,QAAAxoF,KAAAomJ,OAAA,CAA8B,MAC9B,QAAApmJ,KAAAomJ,OAAA,CACA,SAAAvsB,GAAA75H,KAAA0nF,EAAAc,GAGAxoF,KAAA85H,OAAA95H,KAAAi6H,OAAAj6H,KAAAi6H,OAAAj6H,KAAAm6H,OACAn6H,KAAAg6H,QAAAh6H,KAAAk6H,QAAAl6H,KAAAk6H,QAAAl6H,KAAAo6H,QACAp6H,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAklG,IAAAllG,KAAAu5H,IAAAv5H,KAAAu5H,IAAA7xC,EACA1nF,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAmlG,IAAAnlG,KAAAw5H,IAAAx5H,KAAAw5H,IAAAhxC,GAIA,IAAAuxE,IAAA,QAAAniB,GAAAjzB,GAEA,QAAAo1C,GAAA9oJ,GACA,MAAA0zG,GAAA,GAAA0V,IAAAppH,EAAA0zG,GAAA,GAAA8U,IAAAxoH,EAAA,GAOA,MAJA8oJ,GAAAp1C,MAAA,SAAAA,GACA,MAAAizB,IAAAjzB,IAGAo1C,GACC,GAODx/B,IAAA9rH,WACAioJ,UAAAqC,GACApC,QAAAoC,GACAzuD,UAAA,WACAtqG,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAu5H,IAAAv5H,KAAAi5J,IAAAj5J,KAAAk5J,IAAAl5J,KAAAy5J,IACAz5J,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAw5H,IAAAx5H,KAAAm5J,IAAAn5J,KAAAo5J,IAAAp5J,KAAA05J,IAAAzrE,IACAjuF,KAAA85H,OAAA95H,KAAAi6H,OAAAj6H,KAAAm6H,OACAn6H,KAAAg6H,QAAAh6H,KAAAk6H,QAAAl6H,KAAAo6H,QACAp6H,KAAAomJ,OAAA,GAEA77C,QAAA,WACA,OAAAvqG,KAAAomJ,QACA,OACApmJ,KAAA4c,SAAA09H,OAAAt6I,KAAAi5J,IAAAj5J,KAAAm5J,KACAn5J,KAAA4c,SAAA29H,WACA,MAEA,QACAv6I,KAAA4c,SAAA49H,OAAAx6I,KAAAi5J,IAAAj5J,KAAAm5J,KACAn5J,KAAA4c,SAAA29H,WACA,MAEA,QACAv6I,KAAAmiG,MAAAniG,KAAAi5J,IAAAj5J,KAAAm5J,KACAn5J,KAAAmiG,MAAAniG,KAAAk5J,IAAAl5J,KAAAo5J,KACAp5J,KAAAmiG,MAAAniG,KAAAy5J,IAAAz5J,KAAA05J,OAKAv3D,MAAA,SAAAza,EAAAc,GAGA,GAFAd,KAAAc,KAEAxoF,KAAAomJ,OAAA,CACA,GAAAyT,GAAA75J,KAAAu5H,IAAA7xC,EACAoyE,EAAA95J,KAAAw5H,IAAAhxC,CACAxoF,MAAAm6H,OAAAxtH,KAAAkoF,KAAA70F,KAAAo6H,QAAAztH,KAAAq7E,IAAA6xE,IAAAC,IAAA95J,KAAAs6H,SAGA,OAAAt6H,KAAAomJ,QACA,OAAApmJ,KAAAomJ,OAAA,EAA8BpmJ,KAAAi5J,IAAAvxE,EAAA1nF,KAAAm5J,IAAA3wE,CAA4B,MAC1D,QAAAxoF,KAAAomJ,OAAA,EAA8BpmJ,KAAA4c,SAAA09H,OAAAt6I,KAAAk5J,IAAAxxE,EAAA1nF,KAAAo5J,IAAA5wE,EAAkD,MAChF,QAAAxoF,KAAAomJ,OAAA,EAA8BpmJ,KAAAy5J,IAAA/xE,EAAA1nF,KAAA05J,IAAAlxE,CAA4B,MAC1D,SAAAqxC,GAAA75H,KAAA0nF,EAAAc,GAGAxoF,KAAA85H,OAAA95H,KAAAi6H,OAAAj6H,KAAAi6H,OAAAj6H,KAAAm6H,OACAn6H,KAAAg6H,QAAAh6H,KAAAk6H,QAAAl6H,KAAAk6H,QAAAl6H,KAAAo6H,QACAp6H,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAklG,IAAAllG,KAAAu5H,IAAAv5H,KAAAu5H,IAAA7xC,EACA1nF,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAmlG,IAAAnlG,KAAAw5H,IAAAx5H,KAAAw5H,IAAAhxC,GAIA,IAAAwxE,IAAA,QAAApiB,GAAAjzB,GAEA,QAAAo1C,GAAA9oJ,GACA,MAAA0zG,GAAA,GAAA4V,IAAAtpH,EAAA0zG,GAAA,GAAAgV,IAAA1oH,EAAA,GAOA,MAJA8oJ,GAAAp1C,MAAA,SAAAA,GACA,MAAAizB,IAAAjzB,IAGAo1C,GACC,GAODv/B,IAAA/rH,WACAioJ,UAAA,WACA12J,KAAAmmJ,MAAA,GAEAwQ,QAAA,WACA32J,KAAAmmJ,MAAAl4D,KAEAqc,UAAA,WACAtqG,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAu5H,IACAv5H,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAw5H,IAAAvrC,IACAjuF,KAAA85H,OAAA95H,KAAAi6H,OAAAj6H,KAAAm6H,OACAn6H,KAAAg6H,QAAAh6H,KAAAk6H,QAAAl6H,KAAAo6H,QACAp6H,KAAAomJ,OAAA,GAEA77C,QAAA,YACAvqG,KAAAmmJ,OAAA,IAAAnmJ,KAAAmmJ,OAAA,IAAAnmJ,KAAAomJ,SAAApmJ,KAAA4c,SAAA29H,YACAv6I,KAAAmmJ,MAAA,EAAAnmJ,KAAAmmJ,OAEAhkD,MAAA,SAAAza,EAAAc,GAGA,GAFAd,KAAAc,KAEAxoF,KAAAomJ,OAAA,CACA,GAAAyT,GAAA75J,KAAAu5H,IAAA7xC,EACAoyE,EAAA95J,KAAAw5H,IAAAhxC,CACAxoF,MAAAm6H,OAAAxtH,KAAAkoF,KAAA70F,KAAAo6H,QAAAztH,KAAAq7E,IAAA6xE,IAAAC,IAAA95J,KAAAs6H,SAGA,OAAAt6H,KAAAomJ,QACA,OAAApmJ,KAAAomJ,OAAA,CAA8B,MAC9B,QAAApmJ,KAAAomJ,OAAA,CAA8B,MAC9B,QAAApmJ,KAAAomJ,OAAA,EAA8BpmJ,KAAAmmJ,MAAAnmJ,KAAA4c,SAAA49H,OAAAx6I,KAAAu5H,IAAAv5H,KAAAw5H,KAAAx5H,KAAA4c,SAAA09H,OAAAt6I,KAAAu5H,IAAAv5H,KAAAw5H,IAAkG,MAChI,QAAAx5H,KAAAomJ,OAAA,CACA,SAAAvsB,GAAA75H,KAAA0nF,EAAAc,GAGAxoF,KAAA85H,OAAA95H,KAAAi6H,OAAAj6H,KAAAi6H,OAAAj6H,KAAAm6H,OACAn6H,KAAAg6H,QAAAh6H,KAAAk6H,QAAAl6H,KAAAk6H,QAAAl6H,KAAAo6H,QACAp6H,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAklG,IAAAllG,KAAAu5H,IAAAv5H,KAAAu5H,IAAA7xC,EACA1nF,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAmlG,IAAAnlG,KAAAw5H,IAAAx5H,KAAAw5H,IAAAhxC,GAIA,IAAAyxE,IAAA,QAAAriB,GAAAjzB,GAEA,QAAAo1C,GAAA9oJ,GACA,MAAA0zG,GAAA,GAAA6V,IAAAvpH,EAAA0zG,GAAA,GAAAiV,IAAA3oH,EAAA,GAOA,MAJA8oJ,GAAAp1C,MAAA,SAAAA,GACA,MAAAizB,IAAAjzB,IAGAo1C,GACC,GAMDt/B,IAAAhsH,WACAioJ,UAAAqC,GACApC,QAAAoC,GACAzuD,UAAA,WACAtqG,KAAAomJ,OAAA,GAEA77C,QAAA,WACAvqG,KAAAomJ,QAAApmJ,KAAA4c,SAAA29H,aAEAp4C,MAAA,SAAAza,EAAAc,GACAd,KAAAc,KACAxoF,KAAAomJ,OAAApmJ,KAAA4c,SAAA49H,OAAA9yD,EAAAc,IACAxoF,KAAAomJ,OAAA,EAAApmJ,KAAA4c,SAAA09H,OAAA5yD,EAAAc,KAIA,IAAA0xE,IAAA,SAAAjpJ,GACA,UAAAwpH,IAAAxpH,GA0CA+pH,IAAAvsH,WACAioJ,UAAA,WACA12J,KAAAmmJ,MAAA,GAEAwQ,QAAA,WACA32J,KAAAmmJ,MAAAl4D,KAEAqc,UAAA,WACAtqG,KAAAglG,IAAAhlG,KAAAklG,IACAllG,KAAAilG,IAAAjlG,KAAAmlG,IACAnlG,KAAAm6J,IAAAlsE,IACAjuF,KAAAomJ,OAAA,GAEA77C,QAAA,WACA,OAAAvqG,KAAAomJ,QACA,OAAApmJ,KAAA4c,SAAA49H,OAAAx6I,KAAAklG,IAAAllG,KAAAmlG,IAAuD,MACvD,QAAA41B,GAAA/6H,UAAAm6J,IAAAr/B,GAAA96H,UAAAm6J,OAEAn6J,KAAAmmJ,OAAA,IAAAnmJ,KAAAmmJ,OAAA,IAAAnmJ,KAAAomJ,SAAApmJ,KAAA4c,SAAA29H,YACAv6I,KAAAmmJ,MAAA,EAAAnmJ,KAAAmmJ,OAEAhkD,MAAA,SAAAza,EAAAc,GACA,GAAAgM,GAAAvG,GAGA,IADAvG,KAAAc,KACAd,IAAA1nF,KAAAklG,KAAA1c,IAAAxoF,KAAAmlG,IAAA,CACA,OAAAnlG,KAAAomJ,QACA,OAAApmJ,KAAAomJ,OAAA,EAA8BpmJ,KAAAmmJ,MAAAnmJ,KAAA4c,SAAA49H,OAAA9yD,EAAAc,GAAAxoF,KAAA4c,SAAA09H,OAAA5yD,EAAAc,EAAsE,MACpG,QAAAxoF,KAAAomJ,OAAA,CAA8B,MAC9B,QAAApmJ,KAAAomJ,OAAA,EAA8BrrB,GAAA/6H,KAAA86H,GAAA96H,KAAAw0F,EAAAmmC,GAAA36H,KAAA0nF,EAAAc,IAAAgM,EAA0D,MACxF,SAAAumC,GAAA/6H,UAAAm6J,IAAA3lE,EAAAmmC,GAAA36H,KAAA0nF,EAAAc,IAGAxoF,KAAAglG,IAAAhlG,KAAAklG,IAAAllG,KAAAklG,IAAAxd,EACA1nF,KAAAilG,IAAAjlG,KAAAmlG,IAAAnlG,KAAAmlG,IAAA3c,EACAxoF,KAAAm6J,IAAA3lE,MAQAymC,GAAAxsH,UAAA/O,OAAAsH,OAAAg0H,GAAAvsH,YAAA0zF,MAAA,SAAAza,EAAAc,GACAwyC,GAAAvsH,UAAA0zF,MAAA56F,KAAAvH,KAAAwoF,EAAAd,IAOAwzC,GAAAzsH,WACA6rI,OAAA,SAAA5yD,EAAAc,GAA0BxoF,KAAA4c,SAAA09H,OAAA9xD,EAAAd,IAC1B6yD,UAAA,WAAyBv6I,KAAA4c,SAAA29H,aACzBC,OAAA,SAAA9yD,EAAAc,GAA0BxoF,KAAA4c,SAAA49H,OAAAhyD,EAAAd,IAC1BqxC,cAAA,SAAA7xB,EAAAC,EAAAqT,EAAAC,EAAA/yB,EAAAc,GAAiDxoF,KAAA4c,SAAAm8G,cAAA5xB,EAAAD,EAAAuT,EAAAD,EAAAhyB,EAAAd,KAejD2zC,GAAA5sH,WACAioJ,UAAA,WACA12J,KAAAmmJ,MAAA,GAEAwQ,QAAA,WACA32J,KAAAmmJ,MAAAl4D,KAEAqc,UAAA,WACAtqG,KAAAonG,MACApnG,KAAAqnG,OAEAkD,QAAA,WACA,GAAA7iB,GAAA1nF,KAAAonG,GACA5e,EAAAxoF,KAAAqnG,GACA5gG,EAAAihF,EAAA/mF,MAEA,IAAA8F,EAEA,GADAzG,KAAAmmJ,MAAAnmJ,KAAA4c,SAAA49H,OAAA9yD,EAAA,GAAAc,EAAA,IAAAxoF,KAAA4c,SAAA09H,OAAA5yD,EAAA,GAAAc,EAAA,IACA,IAAA/hF,EACAzG,KAAA4c,SAAA49H,OAAA9yD,EAAA,GAAAc,EAAA,QAIA,QAFA4xE,GAAA9+B,GAAA5zC,GACA2yE,EAAA/+B,GAAA9yC,GACAq8B,EAAA,EAAAC,EAAA,EAAgCA,EAAAr+G,IAAQo+G,IAAAC,EACxC9kH,KAAA4c,SAAAm8G,cAAAqhC,EAAA,GAAAv1C,GAAAw1C,EAAA,GAAAx1C,GAAAu1C,EAAA,GAAAv1C,GAAAw1C,EAAA,GAAAx1C,GAAAn9B,EAAAo9B,GAAAt8B,EAAAs8B,KAKA9kH,KAAAmmJ,OAAA,IAAAnmJ,KAAAmmJ,OAAA,IAAA1/I,IAAAzG,KAAA4c,SAAA29H,YACAv6I,KAAAmmJ,MAAA,EAAAnmJ,KAAAmmJ,MACAnmJ,KAAAonG,GAAApnG,KAAAqnG,GAAA,MAEAlF,MAAA,SAAAza,EAAAc,GACAxoF,KAAAonG,GAAAjmG,MAAAumF,GACA1nF,KAAAqnG,GAAAlmG,MAAAqnF,IAuBA,IAAA8xE,IAAA,SAAArpJ,GACA,UAAAoqH,IAAApqH,GAQAsqH,IAAA9sH,WACAioJ,UAAA,WACA12J,KAAAmmJ,MAAA,GAEAwQ,QAAA,WACA32J,KAAAmmJ,MAAAl4D,KAEAqc,UAAA,WACAtqG,KAAAonG,GAAApnG,KAAAqnG,GAAApZ,IACAjuF,KAAAomJ,OAAA,GAEA77C,QAAA,WACA,EAAAvqG,KAAAwhB,IAAAxhB,KAAAwhB,GAAA,OAAAxhB,KAAAomJ,QAAApmJ,KAAA4c,SAAA49H,OAAAx6I,KAAAonG,GAAApnG,KAAAqnG,KACArnG,KAAAmmJ,OAAA,IAAAnmJ,KAAAmmJ,OAAA,IAAAnmJ,KAAAomJ,SAAApmJ,KAAA4c,SAAA29H,YACAv6I,KAAAmmJ,OAAA,IAAAnmJ,KAAAwhB,GAAA,EAAAxhB,KAAAwhB,GAAAxhB,KAAAmmJ,MAAA,EAAAnmJ,KAAAmmJ,QAEAhkD,MAAA,SAAAza,EAAAc,GAEA,OADAd,KAAAc,KACAxoF,KAAAomJ,QACA,OAAApmJ,KAAAomJ,OAAA,EAA8BpmJ,KAAAmmJ,MAAAnmJ,KAAA4c,SAAA49H,OAAA9yD,EAAAc,GAAAxoF,KAAA4c,SAAA09H,OAAA5yD,EAAAc,EAAsE,MACpG,QAAAxoF,KAAAomJ,OAAA,CACA,SACA,GAAApmJ,KAAAwhB,IAAA,EACAxhB,KAAA4c,SAAA49H,OAAAx6I,KAAAonG,GAAA5e,GACAxoF,KAAA4c,SAAA49H,OAAA9yD,EAAAc,OACS,CACT,GAAA0e,GAAAlnG,KAAAonG,IAAA,EAAApnG,KAAAwhB,IAAAkmE,EAAA1nF,KAAAwhB,EACAxhB,MAAA4c,SAAA49H,OAAAtzC,EAAAlnG,KAAAqnG,IACArnG,KAAA4c,SAAA49H,OAAAtzC,EAAA1e,IAKAxoF,KAAAonG,GAAA1f,EAAA1nF,KAAAqnG,GAAA7e,GAIA,IAAAxkB,IAAA,SAAA/yD,GACA,UAAAsqH,IAAAtqH,EAAA,KAWAspJ,GAAAjyJ,MAAAmG,UAAAiY,MAEA8zI,GAAA,SAAA5+B,EAAA7xC,GACA,IAAAtjF,EAAAm1H,EAAAj7H,QAAA,EACA,OAAAyiG,GAAA38F,EAAA/F,EAAA,EAAA4iG,EAAAs4B,EAAA7xC,EAAA,IAAA9gF,EAAAq6F,EAAA3iG,OAA8DD,EAAA+F,IAAO/F,EAAA,CACrE0iG,EAAAE,IAAAs4B,EAAA7xC,EAAArpF,GACA,QAAAgC,GAAA,EAAmBA,EAAAuG,IAAOvG,EAC1B4gG,EAAA5gG,GAAA,IAAA4gG,EAAA5gG,GAAA,GAAAiE,MAAAy8F,EAAA1gG,GAAA,IAAA0gG,EAAA1gG,GAAA,GAAA0gG,EAAA1gG,GAAA,KAKA+3J,GAAA,SAAA7+B,GAEA,IADA,GAAAn1H,GAAAm1H,EAAAj7H,OAAAksF,EAAA,GAAAvkF,OAAA7B,KACAA,GAAA,GAAAomF,EAAApmF,IACA,OAAAomF,IAOArsD,GAAA,WAMA,QAAAA,GAAA1vB,GACA,GACApQ,GAIAg6J,EALAC,EAAAh7J,EAAAsI,MAAAjI,KAAAgI,WAEAiB,EAAA6H,EAAAnQ,OACA8F,EAAAk0J,EAAAh6J,OACAi6J,EAAA,GAAAtyJ,OAAA7B,EAGA,KAAA/F,EAAA,EAAeA,EAAA+F,IAAO/F,EAAA,CACtB,OAAAm6J,GAAAC,EAAAH,EAAAj6J,GAAAq6J,EAAAH,EAAAl6J,GAAA,GAAA4H,OAAAW,GAAAvG,EAAA,EAAiEA,EAAAuG,IAAOvG,EACxEq4J,EAAAr4J,GAAAm4J,GAAA,GAAApzJ,EAAAqJ,EAAApO,GAAAo4J,EAAAp4J,EAAAoO,IACA+pJ,EAAA/pJ,OAAApO,EAEAq4J,GAAAl7J,IAAAi7J,EAGA,IAAAp6J,EAAA,EAAAg6J,EAAA3wE,EAAA6wE,GAA+Bl6J,EAAA+F,IAAO/F,EACtCk6J,EAAAF,EAAAh6J,IAAA0D,MAAA1D,CAIA,OADA04C,GAAAwhH,EAAAF,GACAE,EA1BA,GAAAj7J,GAAA01J,OACAtrE,EAAA0wE,GACArhH,EAAAohH,GACA/yJ,EAAAi0H,EA0CA,OAhBAl7F,GAAA7gC,KAAA,SAAAixB,GACA,MAAA5oB,WAAArH,QAAAhB,EAAA,kBAAAixB,KAAAykI,GAAAkF,GAAAhzJ,KAAAqpB,IAAA4P,GAAA7gC,GAGA6gC,EAAA/4B,MAAA,SAAAmpB,GACA,MAAA5oB,WAAArH,QAAA8G,EAAA,kBAAAmpB,KAAAykI,IAAAzkI,GAAA4P,GAAA/4B,GAGA+4B,EAAAupD,MAAA,SAAAn5D,GACA,MAAA5oB,WAAArH,QAAAopF,EAAA,MAAAn5D,EAAA6pI,GAAA,kBAAA7pI,KAAAykI,GAAAkF,GAAAhzJ,KAAAqpB,IAAA4P,GAAAupD,GAGAvpD,EAAA4Y,OAAA,SAAAxoB,GACA,MAAA5oB,WAAArH,QAAAy4C,EAAA,MAAAxoB,EAAA4pI,GAAA5pI,EAAA4P,GAAA4Y,GAGA5Y,GAGAw6H,GAAA,SAAAp/B,EAAA7xC,GACA,IAAAtjF,EAAAm1H,EAAAj7H,QAAA,GACA,OAAAD,GAAA+F,EAAA+hF,EAAA9lF,EAAA,EAAAuG,EAAA2yH,EAAA,GAAAj7H,OAAgD+B,EAAAuG,IAAOvG,EAAA,CACvD,IAAA8lF,EAAA9nF,EAAA,EAAmBA,EAAA+F,IAAO/F,EAAA8nF,GAAAozC,EAAAl7H,GAAAgC,GAAA,KAC1B,IAAA8lF,EAAA,IAAA9nF,EAAA,EAAsBA,EAAA+F,IAAO/F,EAAAk7H,EAAAl7H,GAAAgC,GAAA,IAAA8lF,EAE7BgyE,GAAA5+B,EAAA7xC,KAGAkxE,GAAA,SAAAr/B,EAAA7xC,GACA,IAAAtjF,EAAAm1H,EAAAj7H,QAAA,GACA,OAAA8F,GAAA/D,EAAA,EAAA0gG,EAAAw4B,EAAA7xC,EAAA,IAAA9gF,EAAAm6F,EAAAziG,OAA0D+B,EAAAuG,IAAOvG,EAAA,CACjE,OAAAhC,GAAA,EAAA8nF,EAAA,EAA0B9nF,EAAA+F,IAAO/F,EAAA8nF,GAAAozC,EAAAl7H,GAAAgC,GAAA,KACjC0gG,GAAA1gG,GAAA,IAAA0gG,EAAA1gG,GAAA,IAAA8lF,EAAA,EAEAgyE,GAAA5+B,EAAA7xC,KAGAmxE,GAAA,SAAAt/B,EAAA7xC,GACA,IAAAtjF,EAAAm1H,EAAAj7H,QAAA,IAAAsI,GAAAm6F,EAAAw4B,EAAA7xC,EAAA,KAAAppF,QAAA,GACA,OAAAyiG,GAAAn6F,EAAAxC,EAAA+hF,EAAA,EAAA9lF,EAAA,EAAkCA,EAAAuG,IAAOvG,EAAA,CACzC,OAAAhC,GAAA,EAAA4iG,EAAA,EAAA63D,EAAA,EAAmCz6J,EAAA+F,IAAO/F,EAAA,CAK1C,OAJAq6J,GAAAn/B,EAAA7xC,EAAArpF,IACA06J,EAAAL,EAAAr4J,GAAA,MACA24J,EAAAN,EAAAr4J,EAAA,SACA44J,GAAAF,EAAAC,GAAA,EACA/wE,EAAA,EAAqBA,EAAA5pF,IAAO4pF,EAAA,CAC5B,GAAA+3B,GAAAuZ,EAAA7xC,EAAAO,GAGAgxE,KAFAj5C,EAAA3/G,GAAA,QACA2/G,EAAA3/G,EAAA,UAGA4gG,GAAA83D,EAAAD,GAAAG,EAAAF,EAEAh4D,EAAA1gG,EAAA,OAAA0gG,EAAA1gG,EAAA,MAAA8lF,EACA8a,IAAA9a,GAAA2yE,EAAA73D,GAEAF,EAAA1gG,EAAA,OAAA0gG,EAAA1gG,EAAA,MAAA8lF,EACAgyE,GAAA5+B,EAAA7xC,KAGAwxE,GAAA,SAAA3/B,GACA,GAAAqxB,GAAArxB,EAAA70H,IAAA40H,GACA,OAAA8+B,IAAA7+B,GAAA7iH,KAAA,SAAAhR,EAAAsB,GAA6C,MAAA4jJ,GAAAllJ,GAAAklJ,EAAA5jJ,MAS7CmyJ,GAAA,SAAA5/B,GACA,MAAA2/B,IAAA3/B,GAAAjwD,WAGA8vF,GAAA,SAAA7/B,GACA,GACAl7H,GACAgC,EAFA+D,EAAAm1H,EAAAj7H,OAGAssJ,EAAArxB,EAAA70H,IAAA40H,IACA5xC,EAAA0wE,GAAA7+B,GAAA7iH,KAAA,SAAAhR,EAAAsB,GAAkD,MAAA4jJ,GAAA5jJ,GAAA4jJ,EAAAllJ,KAClDq2B,EAAA,EACAmsD,EAAA,EACAmxE,KACAC,IAEA,KAAAj7J,EAAA,EAAaA,EAAA+F,IAAO/F,EACpBgC,EAAAqnF,EAAArpF,GACA09B,EAAAmsD,GACAnsD,GAAA6uH,EAAAvqJ,GACAg5J,EAAAv6J,KAAAuB,KAEA6nF,GAAA0iE,EAAAvqJ,GACAi5J,EAAAx6J,KAAAuB,GAIA,OAAAi5J,GAAAhwF,UAAAziE,OAAAwyJ,IAGA/vF,GAAA,SAAAiwD,GACA,MAAA6+B,IAAA7+B,GAAAjwD,WAGAiwF,GAAA,SAAAl0E,GACA,kBACA,MAAAA,IAyBAq0C,IAAAttH,WACAwU,YAAA84G,GAEAvyG,OAAA,SAAA6rD,EAAAvgE,GACA,GAAAhH,GAAA+tJ,EAAAC,CAEA,IAAAzmF,EAAA,CAKA,GAJAvgE,EAAAonH,EAAA7mD,EACAvgE,EAAAmuF,EAAA5tB,EAAA4tB,EACA5tB,EAAA4tB,IAAA5tB,EAAA4tB,EAAAi5B,EAAApnH,GACAugE,EAAA4tB,EAAAnuF,EACAugE,EAAA4mD,EAAA,CAEA,IADA5mD,IAAA4mD,EACA5mD,EAAA4qC,GAAA5qC,IAAA4qC,CACA5qC,GAAA4qC,EAAAnrG,MAEAugE,GAAA4mD,EAAAnnH,CAEAhH,GAAAunE,MACKr1E,MAAA4wB,GACLykD,EAAAgnD,GAAAr8H,KAAA4wB,GACA9b,EAAAonH,EAAA,KACApnH,EAAAmuF,EAAA5tB,EACAA,EAAA6mD,EAAA7mD,EAAA4qC,EAAAnrG,EACAhH,EAAAunE,IAEAvgE,EAAAonH,EAAApnH,EAAAmuF,EAAA,KACAjjG,KAAA4wB,EAAA9b,EACAhH,EAAA,KAOA,KALAgH,EAAAmrG,EAAAnrG,EAAAmnH,EAAA,KACAnnH,EAAA03G,EAAA1+G,EACAgH,EAAAwgF,GAAA,EAEAjgB,EAAAvgE,EACAhH,KAAAwnF,GACAumE,EAAA/tJ,EAAA0+G,EACA1+G,IAAA+tJ,EAAA57C,GACA67C,EAAAD,EAAA5/B,EACA6/B,KAAAxmE,GACAxnF,EAAAwnF,EAAAwmE,EAAAxmE,GAAA,EACAumE,EAAAvmE,GAAA,EACAjgB,EAAAwmF,IAEAxmF,IAAAvnE,EAAAmuH,IACAE,GAAAn8H,KAAA8N,GACAunE,EAAAvnE,EACAA,EAAAunE,EAAAm3C,GAEA1+G,EAAAwnF,GAAA,EACAumE,EAAAvmE,GAAA,EACA8mC,GAAAp8H,KAAA67J,MAGAC,EAAAD,EAAA57C,EACA67C,KAAAxmE,GACAxnF,EAAAwnF,EAAAwmE,EAAAxmE,GAAA,EACAumE,EAAAvmE,GAAA,EACAjgB,EAAAwmF,IAEAxmF,IAAAvnE,EAAAmyG,IACAmc,GAAAp8H,KAAA8N,GACAunE,EAAAvnE,EACAA,EAAAunE,EAAAm3C,GAEA1+G,EAAAwnF,GAAA,EACAumE,EAAAvmE,GAAA,EACA6mC,GAAAn8H,KAAA67J,KAGA/tJ,EAAAunE,EAAAm3C,CAEAxsH,MAAA4wB,EAAA0kE,GAAA,GAGAjyF,OAAA,SAAAyR,GACAA,EAAAmuF,IAAAnuF,EAAAmuF,EAAAi5B,EAAApnH,EAAAonH,GACApnH,EAAAonH,IAAApnH,EAAAonH,EAAAj5B,EAAAnuF,EAAAmuF,GACAnuF,EAAAmuF,EAAAnuF,EAAAonH,EAAA,IAEA,IACA6/B,GAGAlpI,EACAg/G,EALA/jI,EAAAgH,EAAA03G,EAEAtuF,EAAAppB,EAAAmrG,EACAxpE,EAAA3hC,EAAAmnH,CAsCA,IAhCAppG,EAFAqL,EACAuY,EACA4lF,GAAA5lF,GADAvY,EADAuY,EAIA3oC,EACAA,EAAAmyG,IAAAnrG,EAAAhH,EAAAmyG,EAAAptF,EACA/kB,EAAAmuH,EAAAppG,EAEA7yB,KAAA4wB,EAAAiC,EAGAqL,GAAAuY,GACAo7F,EAAAh/G,EAAAyiE,EACAziE,EAAAyiE,EAAAxgF,EAAAwgF,EACAziE,EAAAotF,EAAA/hF,EACAA,EAAAsuF,EAAA35F,EACAA,IAAA4jB,GACA3oC,EAAA+kB,EAAA25F,EACA35F,EAAA25F,EAAA13G,EAAA03G,EACA13G,EAAA+d,EAAAopG,EACAnuH,EAAAmyG,EAAAnrG,EACA+d,EAAAopG,EAAAxlF,EACAA,EAAA+1E,EAAA35F,IAEAA,EAAA25F,EAAA1+G,EACAA,EAAA+kB,EACA/d,EAAA+d,EAAAopG,KAGA4V,EAAA/8H,EAAAwgF,EACAxgF,EAAA+d,GAGA/d,MAAA03G,EAAA1+G,IACA+jI,EAAA,CACA,GAAA/8H,KAAAwgF,EAAyC,YAAhBxgF,EAAAwgF,GAAA,EAEzB,IACA,GAAAxgF,IAAA9U,KAAA4wB,EAAA,KACA,IAAA9b,IAAAhH,EAAAmyG,GAQA,GAPA87C,EAAAjuJ,EAAAmuH,EACA8/B,EAAAzmE,IACAymE,EAAAzmE,GAAA,EACAxnF,EAAAwnF,GAAA,EACA6mC,GAAAn8H,KAAA8N,GACAiuJ,EAAAjuJ,EAAAmuH,GAEA8/B,EAAA97C,GAAA87C,EAAA97C,EAAA3qB,GACAymE,EAAA9/B,GAAA8/B,EAAA9/B,EAAA3mC,EAAA,CACAymE,EAAA9/B,GAAA8/B,EAAA9/B,EAAA3mC,IACAymE,EAAA97C,EAAA3qB,GAAA,EACAymE,EAAAzmE,GAAA,EACA8mC,GAAAp8H,KAAA+7J,GACAA,EAAAjuJ,EAAAmuH,GAEA8/B,EAAAzmE,EAAAxnF,EAAAwnF,EACAxnF,EAAAwnF,EAAAymE,EAAA9/B,EAAA3mC,GAAA,EACA6mC,GAAAn8H,KAAA8N,GACAgH,EAAA9U,KAAA4wB,CACA,YAUA,IAPAmrI,EAAAjuJ,EAAAmyG,EACA87C,EAAAzmE,IACAymE,EAAAzmE,GAAA,EACAxnF,EAAAwnF,GAAA,EACA8mC,GAAAp8H,KAAA8N,GACAiuJ,EAAAjuJ,EAAAmyG,GAEA87C,EAAA97C,GAAA87C,EAAA97C,EAAA3qB,GACAymE,EAAA9/B,GAAA8/B,EAAA9/B,EAAA3mC,EAAA,CACAymE,EAAA97C,GAAA87C,EAAA97C,EAAA3qB,IACAymE,EAAA9/B,EAAA3mC,GAAA,EACAymE,EAAAzmE,GAAA,EACA6mC,GAAAn8H,KAAA+7J,GACAA,EAAAjuJ,EAAAmyG,GAEA87C,EAAAzmE,EAAAxnF,EAAAwnF,EACAxnF,EAAAwnF,EAAAymE,EAAA97C,EAAA3qB,GAAA,EACA8mC,GAAAp8H,KAAA8N,GACAgH,EAAA9U,KAAA4wB,CACA,OAGAmrI,EAAAzmE,GAAA,EACAxgF,EAAAhH,EACAA,IAAA0+G,SACK13G,EAAAwgF,EAELxgF,OAAAwgF,GAAA,KAkVA,IAEAuqC,IAwQAO,GACA1D,GACAva,GACAqa,GA7QAoD,MA4EAM,MA4LAxC,GAAA,KACA+B,GAAA,KA6DAkC,IAAAlzH,WACAwU,YAAA0+G,GAEAq6B,SAAA,WACA,GAAAx/B,GAAAx8H,KAAAw8H,KAEA,OAAAx8H,MAAA08H,MAAA31H,IAAA,SAAA+2H,GACA,GAAAvrB,GAAAurB,EAAAnB,UAAA51H,IAAA,SAAArG,GAAoD,MAAAu9H,IAAAH,EAAAtB,EAAA97H,KAEpD,OADA6xG,GAAAzhG,KAAAgtH,EAAAF,KAAA9sH,KACAyhG,KAIA0pD,UAAA,WACA,GAAAA,MACAz/B,EAAAx8H,KAAAw8H,KAsBA,OApBAx8H,MAAA08H,MAAA98H,QAAA,SAAAk+H,EAAAp9H,GACA,GAAAuI,GAAA0zH,EAAAmB,EAAAnB,WAAAh8H,OASA,IARA,GACAg8H,GAEA1zH,EACAm6F,EAJAw6B,EAAAE,EAAAF,KAEAl7H,GAAA,EAGAqgG,EAAAy5B,EAAAG,EAAA1zH,EAAA,IACAq6F,EAAAP,EAAA7kE,OAAA0/F,EAAA76B,EAAAtsD,MAAAssD,EAAA7kE,OAEAx7B,EAAAuG,GACAm6F,EAAAE,EACAP,EAAAy5B,EAAAG,EAAAj6H,IACA4gG,EAAAP,EAAA7kE,OAAA0/F,EAAA76B,EAAAtsD,MAAAssD,EAAA7kE,KACAklE,GAAAE,GAAA5iG,EAAA0iG,EAAAh/F,OAAA1D,EAAA4iG,EAAAl/F,OAAAq9H,GAAA7D,EAAAx6B,EAAAE,GAAA,GACA24D,EAAA96J,MAAAy8H,EAAA9sH,KAAAsyF,EAAAtyF,KAAAwyF,EAAAxyF,SAKAmrJ,GAGAjc,MAAA,WACA,MAAAhgJ,MAAAw8H,MAAAv2H,OAAA,SAAAs2H,GACA,MAAAA,GAAA9lF,QACK1vC,IAAA,SAAAw1H,GACL,OACA55G,OAAA45G,EAAAr+F,KAAAptB,KACApG,OAAA6xH,EAAA9lF,MAAA3lC,SAKAyxE,KAAA,SAAAmF,EAAAc,EAAA+c,GAIA,IAHA,GAAAsf,GAAAiZ,EAAA7wC,EAAAjtF,KAAA8kH,EAAA73B,EAAAivE,QAAA,EAAAz1J,EAAAwmF,EAAAyvC,MAAA/7H,SAGAm9H,EAAA7wC,EAAAyvC,MAAA5X,KAAA,KAAAA,GAAAr+G,EAAA,WACA,IAAAw3B,GAAAypD,EAAAo2C,EAAAF,KAAA,GAAAz/F,EAAAqqD,EAAAs1C,EAAAF,KAAA,GAAAtjB,EAAAr8E,IAAAE,GAGA,IACA2/F,EAAA7wC,EAAAyvC,MAAA7X,EAAAC,KAAA,KACAgZ,EAAAnB,UAAA/8H,QAAA,SAAAO,GACA,GAAAo8H,GAAAtvC,EAAAuvC,MAAAr8H,GAAAwzC,EAAA4oF,EAAAr+F,IACA,IAAAyV,IAAAmqF,EAAAF,MAAAjqF,MAAA4oF,EAAA9lF,OAAA,CACA,GAAAwxD,GAAAvgB,EAAA/zC,EAAA,GAAAu0D,EAAA1f,EAAA70C,EAAA,GAAAiiD,EAAAqS,IAAAC,GACAtS,GAAA0kB,MAAA1kB,EAAAkvB,EAAAnxE,EAAAvvC,gBAEK,OAAA0gH,EAIL,OAFA73B,GAAAivE,OAAAr3C,EAEA,MAAAtf,GAAA+U,GAAA/U,IAAAu4B,EAAAF,KAAA,MAIA,IAAAu+B,IAAA,WAKA,QAAAA,GAAArrJ,GACA,UAAA6wH,IAAA7wH,EAAA/J,IAAA,SAAA+V,EAAApc,GACA,GAAAwnB,IAAAvb,KAAAo5E,MAAAs7D,EAAAvkI,EAAApc,EAAAoQ,GAAA4sH,OAAA/wH,KAAAo5E,MAAAu7D,EAAAxkI,EAAApc,EAAAoQ,GAAA4sH,OAGA,OAFAx1G,GAAA9jB,MAAA1D,EACAwnB,EAAApX,KAAAgM,EACAoL,IACKw4E,GAVL,GAAA2gD,GAAAxlB,GACAylB,EAAAxlB,GACAp7B,EAAA,IAuCA,OA5BAy7D,GAAAH,SAAA,SAAAlrJ,GACA,MAAAqrJ,GAAArrJ,GAAAkrJ,YAGAG,EAAAnc,MAAA,SAAAlvI,GACA,MAAAqrJ,GAAArrJ,GAAAkvI,SAGAmc,EAAAF,UAAA,SAAAnrJ,GACA,MAAAqrJ,GAAArrJ,GAAAmrJ,aAGAE,EAAAz0E,EAAA,SAAA92D,GACA,MAAA5oB,WAAArH,QAAA0gJ,EAAA,kBAAAzwH,KAAAgrI,IAAAhrI,GAAAurI,GAAA9a,GAGA8a,EAAA3zE,EAAA,SAAA53D,GACA,MAAA5oB,WAAArH,QAAA2gJ,EAAA,kBAAA1wH,KAAAgrI,IAAAhrI,GAAAurI,GAAA7a,GAGA6a,EAAAz7D,OAAA,SAAA9vE,GACA,MAAA5oB,WAAArH,QAAA+/F,EAAA,MAAA9vE,EAAA,QAAAA,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,QAAAurI,GAAAz7D,OAAA,MAAAA,EAAA,QAAAA,EAAA,MAAAA,EAAA,SAGAy7D,EAAA//G,KAAA,SAAAxrB,GACA,MAAA5oB,WAAArH,QAAA+/F,EAAA,MAAA9vE,EAAA,cAAAA,EAAA,IAAAA,EAAA,KAAAurI,GAAAz7D,MAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAGAy7D,GAGAC,GAAA,SAAA10E,GACA,kBACA,MAAAA,IAgBAo6C,IAAArzH,WACAwU,YAAA6+G,GACAp5C,MAAA,SAAA4B,GACA,WAAAA,EAAAtqF,KAAA,GAAA8hI,IAAA9hI,KAAAsqF,IAAAtqF,KAAA0nF,EAAA1nF,KAAAwoF,IAEAiP,UAAA,SAAA/P,EAAAc,GACA,WAAAd,EAAA,IAAAc,EAAAxoF,KAAA,GAAA8hI,IAAA9hI,KAAAsqF,EAAAtqF,KAAA0nF,EAAA1nF,KAAAsqF,EAAA5C,EAAA1nF,KAAAwoF,EAAAxoF,KAAAsqF,EAAA9B,IAEAvgF,MAAA,SAAAk6F,GACA,OAAAA,EAAA,GAAAniG,KAAAsqF,EAAAtqF,KAAA0nF,EAAAya,EAAA,GAAAniG,KAAAsqF,EAAAtqF,KAAAwoF,IAEA6zE,OAAA,SAAA30E,GACA,MAAAA,GAAA1nF,KAAAsqF,EAAAtqF,KAAA0nF,GAEA40E,OAAA,SAAA9zE,GACA,MAAAA,GAAAxoF,KAAAsqF,EAAAtqF,KAAAwoF,GAEAzE,OAAA,SAAAw4E,GACA,QAAAA,EAAA,GAAAv8J,KAAA0nF,GAAA1nF,KAAAsqF,GAAAiyE,EAAA,GAAAv8J,KAAAwoF,GAAAxoF,KAAAsqF,IAEAkyE,QAAA,SAAA90E,GACA,OAAAA,EAAA1nF,KAAA0nF,GAAA1nF,KAAAsqF,GAEAmyE,QAAA,SAAAj0E,GACA,OAAAA,EAAAxoF,KAAAwoF,GAAAxoF,KAAAsqF,GAEAoyE,SAAA,SAAAh1E,GACA,MAAAA,GAAAzgB,OAAAkiB,OAAAzB,EAAArC,QAAAt+E,IAAA/G,KAAAw8J,QAAAx8J,MAAA+G,IAAA2gF,EAAA3D,OAAA2D,KAEAi1E,SAAA,SAAAn0E,GACA,MAAAA,GAAAvhB,OAAAkiB,OAAAX,EAAAnD,QAAAt+E,IAAA/G,KAAAy8J,QAAAz8J,MAAA+G,IAAAyhF,EAAAzE,OAAAyE,KAEA1mF,SAAA,WACA,mBAAA9B,KAAA0nF,EAAA,IAAA1nF,KAAAwoF,EAAA,WAAAxoF,KAAAsqF,EAAA,KAIA,IAAA23C,IAAA,GAAAH,IAAA,MAEAC,IAAAtzH,UAAAqzH,GAAArzH,SAUA,IAAAmuJ,IAAA,WACAh+J,EAAAuT,MAAA82H,iBACArqI,EAAAuT,MAAA8+E,4BAyBA4rE,GAAA,WAkBA,QAAAA,GAAAzrE,GACAA,EACAv/E,GAAA,aAAAirJ,GACAjrJ,GAAA,iBAAAu3H,GACAv3H,GAAA,gBAAAkrJ,GACAlrJ,GAAA,kBAAAw3H,GACAx3H,GAAA,iBAAAy3H,GACAz3H,GAAA,iCAAA03H,GACA7zG,MAAA,+CACAzpB,SAAA,SAAAu2H,IA8CA,QAAA95C,GAAApqD,EAAAgsD,GAEA,MADAA,GAAA39E,KAAAC,IAAAowJ,EAAArwJ,KAAAkyE,IAAAo+E,EAAA3yE,IACAA,IAAAhsD,EAAAgsD,EAAAhsD,EAAA,GAAAwjG,IAAAx3C,EAAAhsD,EAAAopD,EAAAppD,EAAAkqD,GAGA,QAAAiP,GAAAn5D,EAAA0uE,EAAAqT,GACA,GAAA34B,GAAAslB,EAAA,GAAAqT,EAAA,GAAA/hF,EAAAgsD,EAAA9B,EAAAwkB,EAAA,GAAAqT,EAAA,GAAA/hF,EAAAgsD,CACA,OAAA5C,KAAAppD,EAAAopD,GAAAc,IAAAlqD,EAAAkqD,EAAAlqD,EAAA,GAAAwjG,IAAAxjG,EAAAgsD,EAAA5C,EAAAc,GAGA,QAAA00E,GAAA5+H,EAAAoiE,GACA,GAAAu3B,GAAA35F,EAAAk+H,QAAA97D,EAAA,OAAAsG,EACAmxB,EAAA75F,EAAAk+H,QAAA97D,EAAA,OAAAwG,EACAgxB,EAAA55F,EAAAm+H,QAAA/7D,EAAA,OAAAuG,EACAmxB,EAAA95F,EAAAm+H,QAAA/7D,EAAA,OAAAyG,CACA,OAAA7oE,GAAAm5D,UACA0gC,EAAAF,KAAAE,GAAA,EAAAxrH,KAAAkyE,IAAA,EAAAo5C,IAAAtrH,KAAAC,IAAA,EAAAurH,GACAC,EAAAF,KAAAE,GAAA,EAAAzrH,KAAAkyE,IAAA,EAAAq5C,IAAAvrH,KAAAC,IAAA,EAAAwrH,IAIA,QAAA0sB,GAAApkD,GACA,SAAAA,EAAA,QAAAA,EAAA,WAAAA,EAAA,QAAAA,EAAA,UAGA,QAAArG,GAAA8iE,EAAA7+H,EAAAmqD,GACA00E,EACAtrJ,GAAA,wBAAsC23H,EAAAxpI,KAAAgI,WAAAI,UACtCyJ,GAAA,qCAAmD23H,EAAAxpI,KAAAgI,WAAA8vB,QACnDqjE,MAAA,kBACA,GAAAlO,GAAAjtF,KACAsU,EAAAtM,UACAjI,EAAAypI,EAAAv8C,EAAA34E,GACAnU,EAAAugG,EAAAz4F,MAAAglF,EAAA34E,GACA+b,EAAAo4D,GAAAq8D,EAAA3kJ,GACAivG,EAAAziG,KAAAC,IAAAzM,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACA4H,EAAAklF,EAAA+0C,OACA34H,EAAA,kBAAAi1B,KAAAr2B,MAAAglF,EAAA34E,GAAAgqB,EACA59B,EAAAq7F,EAAAh0F,EAAAg8E,OAAA1zD,GAAAnnB,OAAAkmG,EAAArnG,EAAAuiF,GAAAjhF,EAAA06E,OAAA1zD,GAAAnnB,OAAAkmG,EAAA/lG,EAAAihF,GACA,iBAAAW,GACA,OAAAA,IAAA5hF,MACA,CAAkB,GAAAzH,GAAAlB,EAAAuqF,GAAAX,EAAA8kB,EAAAxtG,EAAA,EAA4BqpF,GAAA,GAAA62C,IAAAx3C,EAAAj6D,EAAA,GAAAzuB,EAAA,GAAA0oF,EAAAj6D,EAAA,GAAAzuB,EAAA,GAAA0oF,GAC9CvqF,EAAA88J,KAAA,KAAA5xE,MAKA,QAAAu+C,GAAAv8C,EAAA34E,GACA,OAAAvU,GAAAW,EAAA,EAAA+F,EAAAmjI,EAAAjpI,OAA2CD,EAAA+F,IAAO/F,EAClD,IAAAX,EAAA6pI,EAAAlpI,IAAAusF,SACA,MAAAltF,EAGA,WAAAq9J,GAAAnwE,EAAA34E,GAGA,QAAA8oJ,GAAAnwE,EAAA34E,GACAtU,KAAAitF,OACAjtF,KAAAsU,OACAtU,KAAAoE,OAAA,EACApE,KAAAkxC,OAAA,EACAlxC,KAAA0gG,SAAAz4F,MAAAglF,EAAA34E,GAgCA,QAAAwoJ,KA8BA,QAAAO,KACAt9J,EAAAu9J,MAAA,KACAv9J,EAAA+3B,MA/BA,GAAA7xB,EAAAgC,MAAAjI,KAAAgI,WAAA,CACA,GAAAjI,GAAAypI,EAAAxpI,KAAAgI,WACAijF,EAAAjrF,KAAAgiI,OACA13C,EAAA39E,KAAAC,IAAAowJ,EAAArwJ,KAAAkyE,IAAAo+E,EAAAhyE,EAAAX,EAAA39E,KAAAq7E,IAAA,GAAAppF,EAAAuT,MAAAorJ,QAAA3+J,EAAAuT,MAAAqrJ,UAAA,cACAntI,EAAA0xE,GAAA/hG,KAIA,IAAAD,EAAAu9J,MACAv9J,EAAAgiG,MAAA,QAAA1xE,EAAA,IAAAtwB,EAAAgiG,MAAA,QAAA1xE,EAAA,KACAtwB,EAAAgiG,MAAA,GAAA9W,EAAAlH,OAAAhkF,EAAAgiG,MAAA,GAAA1xE,IAEAwmD,aAAA92E,EAAAu9J,WAIA,IAAAryE,EAAAX,MAAA,MAIAvqF,GAAAgiG,OAAA1xE,EAAA46D,EAAAlH,OAAA1zD,IACAk0E,GAAAvkG,MACAD,EAAAqI,QAGAw0J,KACA78J,EAAAu9J,MAAAtlI,WAAAqlI,EAAAI,GACA19J,EAAA88J,KAAA,QAAAK,EAAAzlE,EAAA/O,EAAAuC,EAAAX,GAAAvqF,EAAAgiG,MAAA,GAAAhiG,EAAAgiG,MAAA,IAAAhiG,EAAA2gG,UAQA,QAAA0oC,KAYA,QAAAK,KACAmzB,KACA78J,EAAAs+B,OAAA,EACAt+B,EAAA88J,KAAA,QAAAK,EAAAzlE,EAAA13F,EAAAktF,KAAA+0C,OAAAjiI,EAAAgiG,MAAA,GAAAA,GAAAhiG,EAAAktF,MAAAltF,EAAAgiG,MAAA,IAAAhiG,EAAA2gG,SAGA,QAAAgpC,KACA/1F,EAAA9hC,GAAA,oCACAq/E,GAAAtyF,EAAAuT,MAAAkkD,KAAAt2D,EAAAs+B,OACAu+H,KACA78J,EAAA+3B,MArBA,IAAA8rE,GAAA39F,EAAAgC,MAAAjI,KAAAgI,WAAA,CACA,GAAAjI,GAAAypI,EAAAxpI,KAAAgI,WACA2rC,EAAA02C,GAAAzrF,EAAAuT,MAAAkkD,MAAAxkD,GAAA,iBAAA43H,GAAA,GAAA53H,GAAA,eAAA63H,GAAA,GACAr5G,EAAA0xE,GAAA/hG,KAEAskG,IAAA1lG,EAAAuT,MAAAkkD,MACA6rE,KACAniI,EAAAgiG,OAAA1xE,EAAArwB,KAAAgiI,OAAAj+C,OAAA1zD,IACAk0E,GAAAvkG,MACAD,EAAAqI,SAgBA,QAAA20J,KACA,GAAA92J,EAAAgC,MAAAjI,KAAAgI,WAAA,CACA,GAAAssF,GAAAt0F,KAAAgiI,OACAh1B,EAAAjL,GAAA/hG,MACAqgH,EAAA/rB,EAAAvQ,OAAAipB,GACAiwD,EAAA3oE,EAAAhK,GAAA1rF,EAAAuT,MAAAiyF,SAAA,MACA5P,EAAA0oE,EAAAzlE,EAAA/O,EAAA4L,EAAA2oE,GAAAjwD,EAAAqT,GAAA3f,EAAAz4F,MAAAjI,KAAAgI,WAEA40J,MACAziI,EAAA,EAAAkwD,GAAArqF,MAAAiqB,aAAAkQ,YAAA5yB,KAAA8yF,EAAA7F,EAAAwY,GACA3iB,GAAArqF,MAAAuH,KAAAs1J,EAAAv+H,UAAAk2D,IAGA,QAAA60C,KACA,GAAApjI,EAAAgC,MAAAjI,KAAAgI,WAAA,CACA,GAEA05F,GACAhhG,EAAAuqF,EAAA56D,EAHAtwB,EAAAypI,EAAAxpI,KAAAgI,WACA6hI,EAAAjrI,EAAAuT,MAAA6xF,eAEAv9F,EAAAojI,EAAAlpI,MAGA,KADAuhI,KACAxhI,EAAA,EAAeA,EAAA+F,IAAO/F,EACtBuqF,EAAA4+C,EAAAnpI,GAAA2vB,EAAA24G,GAAAhpI,KAAA6pI,EAAA5+C,EAAAyG,YACArhE,KAAArwB,KAAAgiI,OAAAj+C,OAAA1zD,GAAA46D,EAAAyG,YACA3xF,EAAA29J,OACA39J,EAAA49J,SAAA59J,EAAA49J,OAAAttI,IADAtwB,EAAA29J,OAAArtI,EAAAqxE,GAAA,EAKA,IAAAk8D,IACAA,EAAA/mF,aAAA+mF,IACA79J,EAAA49J,QAIA,MAHA59J,GAAA+3B,YACAzH,EAAAg6D,GAAArqF,MAAA6R,GAAA,mBACAwe,EAAApoB,MAAAjI,KAAAgI,WAKA05F,KACAk8D,EAAA5lI,WAAA,WAA6C4lI,EAAA,MAAwBC,GACrEt5D,GAAAvkG,MACAD,EAAAqI,UAIA,QAAAkhI,KACA,GAEA5oI,GAAAuqF,EAAA56D,EAAAzuB,EAFA7B,EAAAypI,EAAAxpI,KAAAgI,WACA6hI,EAAAjrI,EAAAuT,MAAA6xF,eACAv9F,EAAAojI,EAAAlpI,MAIA,KAFAi8J,KACAgB,MAAA/mF,aAAA+mF,IACAl9J,EAAA,EAAeA,EAAA+F,IAAO/F,EACtBuqF,EAAA4+C,EAAAnpI,GAAA2vB,EAAA24G,GAAAhpI,KAAA6pI,EAAA5+C,EAAAyG,YACA3xF,EAAA29J,QAAA39J,EAAA29J,OAAA,KAAAzyE,EAAAyG,WAAA3xF,EAAA29J,OAAA,GAAArtI,EACAtwB,EAAA49J,QAAA59J,EAAA49J,OAAA,KAAA1yE,EAAAyG,aAAA3xF,EAAA49J,OAAA,GAAAttI,EAGA,IADA46D,EAAAlrF,EAAAktF,KAAA+0C,OACAjiI,EAAA49J,OAAA,CACA,GAAA3wD,GAAAjtG,EAAA29J,OAAA,GAAAp9C,EAAAvgH,EAAA29J,OAAA,GACAr9C,EAAAtgH,EAAA49J,OAAA,GAAAp9C,EAAAxgH,EAAA49J,OAAA,GACAG,KAAAz9C,EAAA,GAAArT,EAAA,IAAA8wD,KAAAz9C,EAAA,GAAArT,EAAA,IAAA8wD,EACAC,KAAAx9C,EAAA,GAAAD,EAAA,IAAAy9C,KAAAx9C,EAAA,GAAAD,EAAA,IAAAy9C,CACA9yE,GAAAvC,EAAAuC,EAAAt+E,KAAAkoF,KAAAipE,EAAAC,IACA1tI,IAAA28E,EAAA,GAAAqT,EAAA,OAAArT,EAAA,GAAAqT,EAAA,OACAz+G,IAAA0+G,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,WAEA,KAAAxgH,EAAA29J,OACA,MADArtI,GAAAtwB,EAAA29J,OAAA,GAAA97J,EAAA7B,EAAA29J,OAAA,GAEA39J,EAAA88J,KAAA,QAAAK,EAAAzlE,EAAAxM,EAAA56D,EAAAzuB,GAAA7B,EAAA2gG,SAGA,QAAA6oC,KACA,GAEA7oI,GAAAuqF,EAFAlrF,EAAAypI,EAAAxpI,KAAAgI,WACA6hI,EAAAjrI,EAAAuT,MAAA6xF,eACAv9F,EAAAojI,EAAAlpI,MAKA,KAHAuhI,KACAt+B,GAAA/sB,aAAA+sB,GACAA,EAAA5rE,WAAA,WAAyC4rE,EAAA,MAAsBi6D,GAC/Dn9J,EAAA,EAAeA,EAAA+F,IAAO/F,EACtBuqF,EAAA4+C,EAAAnpI,GACAX,EAAA29J,QAAA39J,EAAA29J,OAAA,KAAAzyE,EAAAyG,iBAAA3xF,GAAA29J,OACA39J,EAAA49J,QAAA59J,EAAA49J,OAAA,KAAA1yE,EAAAyG,kBAAA3xF,GAAA49J,MAEA59J,GAAA49J,SAAA59J,EAAA29J,SAAA39J,EAAA29J,OAAA39J,EAAA49J,aAAA59J,GAAA49J,QACA59J,EAAA29J,QAAA39J,EAAA+3B,MA1TA,GAYA8lI,GACAh6D,EAbA39F,EAAAk8H,GACAzhC,EAAA0hC,GACA46B,EAAA,EACAC,EAAAj+F,IACAgoC,GAAAi2D,EACA/1D,EAAA+1D,EACAh2D,EAAAD,EACAG,EAAAD,EACA/sE,EAAA,IACA4hE,EAAAm5C,GACAtL,KACAv2H,EAAA23E,EAAA,sBAGA6yE,EAAA,IACAJ,EAAA,GA2UA,OA7TAZ,GAAAv+H,UAAA,SAAAwb,EAAAxb,GACA,GAAA8yD,GAAAt3C,EAAA8vC,UAAA9vC,EAAA8vC,YAAA9vC,CACAs3C,GAAAnlF,SAAA,SAAAu2H,IACA1oF,IAAAs3C,EACAiJ,EAAAvgD,EAAAxb,GAEA8yD,EAAAmT,YAAAle,KAAA,WACAmjD,EAAAxpI,KAAAgI,WACAI,QACAy0J,KAAA,uBAAAv+H,KAAAr2B,MAAAjI,KAAAgI,WAAAs2B,GACAxG,SAKA+kI,EAAAmB,QAAA,SAAA5sE,EAAA9G,GACAuyE,EAAAoB,QAAA7sE,EAAA,WAGA,MAFApxF,MAAAgiI,OAAA13C,GACA,kBAAAA,KAAAriF,MAAAjI,KAAAgI,WAAAsiF,MAKAuyE,EAAAoB,QAAA,SAAA7sE,EAAA9G,GACAuyE,EAAAv+H,UAAA8yD,EAAA,WACA,GAAAjxF,GAAAugG,EAAAz4F,MAAAjI,KAAAgI,WACAssF,EAAAt0F,KAAAgiI,OACAh1B,EAAA83C,EAAA3kJ,GACAkgH,EAAA/rB,EAAAvQ,OAAAipB,EAEA,OAAAkwD,GAAAzlE,EAAA/O,EAAA4L,EADA,kBAAAhK,KAAAriF,MAAAjI,KAAAgI,WAAAsiF,GACA0iB,EAAAqT,GAAAlgH,MAIA08J,EAAAqB,YAAA,SAAA9sE,EAAA1J,EAAAc,GACAq0E,EAAAv+H,UAAA8yD,EAAA,WACA,MAAA8rE,GAAAl9J,KAAAgiI,OAAAvqC,UACA,kBAAA/P,KAAAz/E,MAAAjI,KAAAgI,WAAA0/E,EACA,kBAAAc,KAAAvgF,MAAAjI,KAAAgI,WAAAwgF,GACAkY,EAAAz4F,MAAAjI,KAAAgI,eAoEAo1J,EAAA3uJ,WACArG,MAAA,WAKA,MAJA,MAAApI,KAAAkxC,SACAlxC,KAAAoE,MAAAwlI,EAAAzoI,KAAAnB,MAAA,EACAA,KAAAkZ,KAAA,UAEAlZ,MAEA68J,KAAA,SAAAh9J,EAAAy+B,GAMA,MALAt+B,MAAA+hG,OAAA,UAAAliG,IAAAG,KAAA+hG,MAAA,GAAAzjE,EAAAylD,OAAA/jF,KAAA+hG,MAAA,KACA/hG,KAAA09J,QAAA,UAAA79J,IAAAG,KAAA09J,OAAA,GAAAp/H,EAAAylD,OAAA/jF,KAAA09J,OAAA,KACA19J,KAAA29J,QAAA,UAAA99J,IAAAG,KAAA29J,OAAA,GAAAr/H,EAAAylD,OAAA/jF,KAAA29J,OAAA,KACA39J,KAAAitF,KAAA+0C,OAAA1jG,EACAt+B,KAAAkZ,KAAA,QACAlZ,MAEA83B,IAAA,WAMA,MALA,MAAA93B,KAAAkxC,SACA04F,EAAAxiI,OAAApH,KAAAoE,MAAA,GACApE,KAAAoE,OAAA,EACApE,KAAAkZ,KAAA,QAEAlZ,MAEAkZ,KAAA,SAAA/Z,GACA6tF,EAAA,GAAA60C,IAAAg7B,EAAA19J,EAAAa,KAAAitF,KAAA+0C,QAAA3uH,EAAApL,MAAAoL,GAAAlU,EAAAa,KAAAitF,KAAAjtF,KAAAsU,SA4JAuoJ,EAAA52J,OAAA,SAAA2qB,GACA,MAAA5oB,WAAArH,QAAAsF,EAAA,kBAAA2qB,KAAAwrI,KAAAxrI,GAAAisI,GAAA52J,GAGA42J,EAAAn8D,OAAA,SAAA9vE,GACA,MAAA5oB,WAAArH,QAAA+/F,EAAA,kBAAA9vE,KAAAwrI,MAAAxrI,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,SAAAisI,GAAAn8D,GAGAm8D,EAAAsB,YAAA,SAAAvtI,GACA,MAAA5oB,WAAArH,QAAAq8J,GAAApsI,EAAA,GAAAqsI,GAAArsI,EAAA,GAAAisI,IAAAG,EAAAC,IAGAJ,EAAAuB,gBAAA,SAAAxtI,GACA,MAAA5oB,WAAArH,QAAAqmG,GAAAp2E,EAAA,MAAAs2E,GAAAt2E,EAAA,MAAAq2E,GAAAr2E,EAAA,MAAAu2E,GAAAv2E,EAAA,MAAAisI,KAAA71D,EAAAC,IAAAC,EAAAC,KAGA01D,EAAA1iI,SAAA,SAAAvJ,GACA,MAAA5oB,WAAArH,QAAAw5B,GAAAvJ,EAAAisI,GAAA1iI,GAGA0iI,EAAAxgF,YAAA,SAAAzrD,GACA,MAAA5oB,WAAArH,QAAAo7F,EAAAnrE,EAAAisI,GAAA9gE,GAGA8gE,EAAAhrJ,GAAA,WACA,GAAApK,GAAA4L,EAAAxB,GAAA5J,MAAAoL,EAAArL,UACA,OAAAP,KAAA4L,EAAAwpJ,EAAAp1J,GAGAo1J,EAGAj+J,GAAAozC,WACApzC,EAAAy/J,OAAAp2C,GACArpH,EAAAqpH,eACArpH,EAAA+jI,cACA/jI,EAAA+oF,aACA/oF,EAAA22H,YACA32H,EAAAgkI,SACAhkI,EAAAskI,cACAtkI,EAAAwkI,aACAxkI,EAAA8hG,UACA9hG,EAAA2kI,aACA3kI,EAAA0/J,0BAAA36B,GACA/kI,EAAA2/J,eAAA36B,GACAhlI,EAAA4/J,iBAAAn7B,GACAzkI,EAAAgO,OACAhO,EAAA+/E,QACA//E,EAAAilI,UACAjlI,EAAAslF,SACAtlF,EAAAigF,OACAjgF,EAAAo6D,SACAp6D,EAAAmlI,WACAnlI,EAAA6/J,SAAA50C,GACAjrH,EAAAymF,MAAA4vB,GACAr2G,EAAAqlI,QACArlI,EAAAw2E,WACAx2E,EAAAmgF,OACAngF,EAAAqqF,SACArqF,EAAAgpF,WACAhpF,EAAAwlI,aACAxlI,EAAAukI,YACAvkI,EAAAujF,OACAvjF,EAAAgsF,UACAhsF,EAAAisF,YACAjsF,EAAAksF,aACAlsF,EAAAmsF,WACAnsF,EAAAuiG,SACAviG,EAAAkiG,UACAliG,EAAAqiG,UACAriG,EAAA+hG,kBACA/hG,EAAAy6I,SACAz6I,EAAAy8I,UACAz8I,EAAAk9I,QACAl9I,EAAAyN,IAAA45F,GACArnG,EAAAmI,IAAA6+F,GACAhnG,EAAAe,QACAf,EAAAu6C,UACAv6C,EAAAm4D,WACAn4D,EAAAozF,SACApzF,EAAAo0F,OACAp0F,EAAAw0F,OACAx0F,EAAAu1F,OACAv1F,EAAAk2F,OACAl2F,EAAA42F,aACA52F,EAAAosF,WACApsF,EAAAuqI,QACAvqI,EAAA0lG,eACA1lG,EAAA8/J,WAAAxtE,GACAtyF,EAAA+/J,UAAAriB,GACA19I,EAAAu+I,YACAv+I,EAAAw+I,gBACAx+I,EAAAy+I,aACAz+I,EAAA0+I,iBACA1+I,EAAA4+I,YACA5+I,EAAA6+I,gBACA7+I,EAAA8+I,aACA9+I,EAAA++I,iBACA/+I,EAAAggK,WAAA7gE,GACAn/F,EAAAigK,SAAA3gE,GACAt/F,EAAAkgK,WAAA9gE,GACAp/F,EAAAmgK,YAAA9gE,GACAr/F,EAAAogK,cAAA9gE,GACAt/F,EAAAqgK,UAAA5gE,GACAz/F,EAAAsgK,YAAA/gE,GACAv/F,EAAAugK,aAAA/gE,GACAx/F,EAAAwgK,eAAA/gE,GACAz/F,EAAAygK,SAAAvnB,GACAl5I,EAAA0gK,WAAA3nB,GACA/4I,EAAA2gK,YAAA1nB,GACAj5I,EAAA4gK,cAAA1nB,GACAl5I,EAAA6gK,QAAAhhE,GACA7/F,EAAA8gK,UAAAphE,GACA1/F,EAAA+gK,WAAAnhE,GACA5/F,EAAAghK,aAAAnhE,GACA7/F,EAAAihK,QAAAhhE,GACAjgG,EAAAkhK,UAAAnhE,GACA//F,EAAAmhK,WAAAnhE,GACAhgG,EAAAohK,aAAAnhE,GACAjgG,EAAAqhK,WAAAjhE,GACApgG,EAAAshK,aAAAphE,GACAlgG,EAAAuhK,cAAAphE,GACAngG,EAAAwhK,gBAAAphE,GACApgG,EAAAyhK,WAAAnhE,GACAtgG,EAAA0hK,aAAArhE,GACArgG,EAAA2hK,cAAArhE,GACAtgG,EAAA4hK,gBAAA3gE,GACAjhG,EAAA6hK,SAAAvoB,GACAt5I,EAAA8hK,WAAA1oB,GACAp5I,EAAA+hK,YAAA1oB,GACAr5I,EAAAgiK,cAAA1oB,GACAt5I,EAAAiiK,YAAAtoB,GACA35I,EAAAkiK,cAAAxoB,GACA15I,EAAAmiK,eAAAxoB,GACA35I,EAAAoiK,iBAAAxoB,GACA55I,EAAAqiK,YAAArjB,GACAh/I,EAAAsiK,aAAA7hB,GACAzgJ,EAAAuiK,UAAAphB,GACAnhJ,EAAAwiK,cAAAjgB,GACAviJ,EAAAyiK,gBAAA5gB,GACA7hJ,EAAA0iK,OAAA1f,GACAhjJ,EAAA2iK,OAAA1f,GACAjjJ,EAAA4iK,oBAAA14D,GACAlqG,EAAAoqG,gBACApqG,EAAA2pG,mBACA3pG,EAAA2kJ,kBACA3kJ,EAAA4kJ,mBACA5kJ,EAAA6kJ,kBACA7kJ,EAAA6iK,QAAA/c,GACA9lJ,EAAA8iK,UAAA/c,GACA/lJ,EAAA+iK,YAAA7c,GACAlmJ,EAAAgjK,UAAAzhD,GACAvhH,EAAAijK,cAAA3c,GACAtmJ,EAAAkjK,YAAA15B,GACAxpI,EAAAmjK,YAAAttD,GACA71G,EAAAojK,aAAA7sD,GACAv2G,EAAAqjK,eAAArsD,GACAh3G,EAAAsjK,eAAAxc,GACA9mJ,EAAAujK,UAAA5c,GACA3mJ,EAAAwjK,QAAA7vI,GACA3zB,EAAAyjK,UAAAla,GACAvpJ,EAAA0jK,aAAAla,GACAxpJ,EAAA2jK,sBAAAzZ,GACAlqJ,EAAA4jK,yBAAA5Z,GACAhqJ,EAAA6jK,wBAAAzZ,GACApqJ,EAAA8jK,2BAAA3Z,GACAnqJ,EAAA+jK,kBAAAzZ,GACAtqJ,EAAAgkK,qBAAAnlD,GACA7+G,EAAAikK,kBAAA3a,GACAtpJ,EAAAkkK,qBAAApmD,GACA99G,EAAAmkK,oBAAA3Z,GACAxqJ,EAAAokK,uBAAAnlD,GACAj/G,EAAAqkK,mBAAA9Z,GACAvqJ,EAAAskK,sBAAAtlD,GACAh/G,EAAAukK,YAAA9Z,GACAzqJ,EAAAwkK,eAAAplD,GACAp/G,EAAAykK,YAAA/Z,GACA1qJ,EAAA0kK,cAAA5pD,GACA96G,EAAA2kK,qBAAAjoD,GACA18G,EAAA4kK,YAAAva,GACArqJ,EAAA6kK,eAAArmD,GACAx+G,EAAA8kK,gBAAAja,GACA7qJ,EAAA+kK,mBAAArlD,GACA1/G,EAAAglK,iBAAAla,GACA9qJ,EAAAilK,oBAAAtlD,GACA3/G,EAAAklK,sBAAAna,GACA/qJ,EAAAmlK,yBAAAvlD,GACA5/G,EAAAolK,YAAAhzD,GACApyG,EAAAg7G,aACAh7G,EAAAqlK,aAAA3lI,GACA1/B,EAAAgrJ,WACAhrJ,EAAAwgH,aACAxgH,EAAA+jH,KAAAsoC,GACArsJ,EAAAslK,aAAAnZ,GACAnsJ,EAAAsjH,YAAAU,GACAhkH,EAAAgkF,aACAhkF,EAAA2sJ,YACA3sJ,EAAA0hB,QACA1hB,EAAA4tJ,QAAAD,GACA3tJ,EAAAulK,cAAApX,GACAnuJ,EAAAomH,eACApmH,EAAAqmH,gBACArmH,EAAAwlK,iBAAA7W,GACA3uJ,EAAAylK,gBAAA/X,GACA1tJ,EAAA0lK,kBAAA9W,GACA5uJ,EAAAy9E,YAAAI,GACA79E,EAAA2lK,iBAAArwB,GACAt1I,EAAA4lK,iBAAA7wB,GACA/0I,EAAA6lK,uBAAA7wB,GACAh1I,EAAA8lK,gBAAAp6C,GACA1rH,EAAA+lK,kBAAA5sE,GACAn5F,EAAAgmK,kBAAAlqH,GACA97C,EAAA2pH,oBACA3pH,EAAAy1I,qBACAz1I,EAAA+1I,2BACA/1I,EAAAg2I,2BACAh2I,EAAAs2I,mBACAt2I,EAAAi1I,kBACAj1I,EAAAimK,oBAAA7wB,GACAp1I,EAAAkmK,0BAAA7wB,GACAr1I,EAAAmmK,eAAAvvB,GACA52I,EAAAomK,mBAAAvvB,GACA72I,EAAAqmK,eAAAxsE,GACA75F,EAAAsmK,eAAAxvB,GACA92I,EAAAumK,mBAAAxvB,GACA/2I,EAAAwmK,qBAAAxvB,GACAh3I,EAAAymK,yBAAAxvB,GACAj3I,EAAAk3I,YACAl3I,EAAAsL,QACAtL,EAAA0mK,YAAA5X,GACA9uJ,EAAA2mK,gBAAA5X,GACA/uJ,EAAA4mK,YAAA5X,EACAhvJ,GAAAi2G,gBAAAs5C,GACAvvJ,EAAA6mK,cAAApX,GACAzvJ,EAAAipG,YACAjpG,EAAA6Z,SACA7Z,EAAA8mK,cAAA/W,GACA/vJ,EAAAmwJ,aAAA9hD,GACAruG,EAAA+mK,gBAAA7W,GACAlwJ,EAAAgnK,YAAA3W,GACArwJ,EAAAswJ,gBAAAF,GACApwJ,EAAAinK,kBAAA1W,GACAvwJ,EAAAwwJ,WACAxwJ,EAAAmgC,QACAngC,EAAA+xJ,QACA/xJ,EAAAmS,QACAnS,EAAA4lI,OACA5lI,EAAAs+I,IAAA4T,GACAlyJ,EAAA2+I,IAAAwT,GACAnyJ,EAAAknK,UAAA/+C,GACAnoH,EAAAmnK,WAAAx+C,GACA3oH,EAAAonK,cAAAr9C,GACA/pH,EAAAqnK,YAAAv9C,GACA9pH,EAAAsnK,SAAA98C,GACAxqH,EAAAunK,aAAAx/C,GACA/nH,EAAAwnK,cAAAv/C,GACAjoH,EAAAynK,SAAA58C,GACA7qH,EAAA0nK,UAAA58C,GACA9qH,EAAA2nK,cAAA58C,GACA/qH,EAAA4nK,cAAAx8C,GACAprH,EAAA6nK,eAAAx8C,GACArrH,EAAA8nK,UAAA/wF,GACA/2E,EAAA+nK,SAAArS,GACA11J,EAAAgoK,iBAAArS,GACA31J,EAAAioK,kBAAArS,GACA51J,EAAAkoK,kBAAArS,GACA71J,EAAAmoK,iBAAArS,GACA91J,EAAAooK,4BAAArS,GACA/1J,EAAAqoK,mBAAAlS,GACAn2J,EAAAsoK,gBAAAtS,GACAh2J,EAAAuoK,gBAAAtS,GACAj2J,EAAAwoK,mBAAAnS,GACAr2J,EAAAyoK,iBAAAnS,GACAt2J,EAAA0oK,mBAAAnS,GACAv2J,EAAA2oK,kBAAAnS,GACAx2J,EAAA4oK,gBAAAvxC,GACAr3H,EAAA8lI,WACA9lI,EAAAitF,MAAAC,EACAltF,EAAA+lI,QAAAO,GACAtmI,EAAAmjG,SACAnjG,EAAA0oB,aACA1oB,EAAA0lI,cACA1lI,EAAAyrF,UACAzrF,EAAAirF,aACAjrF,EAAAgrF,aACAhrF,EAAAgmI,YACAhmI,EAAAunI,eACAvnI,EAAAoqI,SACApqI,EAAA+kG,WACA/kG,EAAAwB,UACAxB,EAAAouF,cACApuF,EAAAsgI,OACAtgI,EAAA8lJ,KAAAqS,GACAn4J,EAAAwrF,QACAxrF,EAAA64J,OACA74J,EAAAi5J,cACAj5J,EAAAi6H,WAAA++B,GACAh5J,EAAAmpE,UACAnpE,EAAAk6J,WACAl6J,EAAA6oK,aAAAvP,GACAt5J,EAAA8oK,YAAAtP,GACAx5J,EAAA+oK,cAAApP,GACA35J,EAAAgpK,aAAAz3I,GACAvxB,EAAAipK,WAAAnP,GACA95J,EAAAkpK,eAAAlP,GACAh6J,EAAAmpK,UAAAlP,GACAj6J,EAAAopK,iBAAA3O,GACAz6J,EAAAqpK,eAAA3O,GACA16J,EAAAspK,WAAAlP,GACAp6J,EAAAupK,YAAA5O,GACA36J,EAAAwpK,oBAAAzO,GACA/6J,EAAAypK,kBAAAzO,GACAh7J,EAAA0pK,cAAA9O,GACA56J,EAAA2pK,sBAAAvO,GACAp7J,EAAA4pK,oBAAAvO,GACAr7J,EAAA6pK,gBAAA1O,GACAn7J,EAAA8pK,kBAAAxO,GACAt7J,EAAAg4J,eACAh4J,EAAA+pK,eAAAxtC,GACAv8H,EAAAgqK,eAAAxtC,GACAx8H,EAAAiqK,aAAAvO,GACA17J,EAAAkqK,UAAA9kG,GACAplE,EAAAmqK,eAAAttC,GACA78H,EAAAoqK,gBAAAxtC,GACA58H,EAAA4hC,SACA5hC,EAAAqqK,kBAAAjO,GACAp8J,EAAAsqK,gBAAA1O,GACA57J,EAAAuqK,sBAAAlO,GACAr8J,EAAAwqK,kBAAAlO,GACAt8J,EAAAyqK,oBAAA9N,GACA38J,EAAA0qK,qBAAA9N,GACA58J,EAAA2qK,oBAAA9N,GACA78J,EAAA4qK,eAAA/O,GACA77J,EAAA6qK,kBAAA99F,GACA/sE,EAAA8qK,aAAAx/C,GACAtrH,EAAA+qK,gBAAA1Y,GACAryJ,EAAAgrK,iBAAA1Y,GACAtyJ,EAAAirK,eAAA5Y,GACAryJ,EAAAkrK,gBAAA5Y,GACAtyJ,EAAAmrK,WAAAzY,GACA1yJ,EAAAorK,YAAAzY,GACA3yJ,EAAAqrK,UAAA3Y,GACA1yJ,EAAAsrK,WAAA3Y,GACA3yJ,EAAAurK,WAAA3Y,GACA5yJ,EAAAwrK,YAAA3Y,GACA7yJ,EAAAyrK,SAAA3Y,GACA9yJ,EAAA0rK,UAAA3Y,GACA/yJ,EAAA2rK,QAAAx3C,GACAn0H,EAAA4rK,SAAAn7C,GACAzwH,EAAA6rK,SAAAr3C,GACAx0H,EAAA8rK,UAAAzY,GACArzJ,EAAA+rK,WAAAv3C,GACAx0H,EAAAgsK,YAAA3Y,GACArzJ,EAAAisK,WAAAx3C,GACAz0H,EAAAksK,YAAA5Y,GACAtzJ,EAAAmsK,YAAAnZ,GACAhzJ,EAAAosK,aAAA7Y,GACAvzJ,EAAAqsK,cAAApZ,GACAjzJ,EAAAssK,eAAA9Y,GACAxzJ,EAAAusK,aAAArZ,GACAlzJ,EAAAwsK,cAAA/Y,GACAzzJ,EAAAysK,WAAAtZ,GACAnzJ,EAAA0sK,YAAAhZ,GACA1zJ,EAAA2sK,aAAAvZ,GACApzJ,EAAA4sK,cAAAjZ,GACA3zJ,EAAA6sK,UAAAjZ,GACA5zJ,EAAA8sK,WAAAn8C,GACA3wH,EAAA+sK,SAAA34C,GACAp0H,EAAAgtK,UAAAlZ,GACA9zJ,EAAA+zJ,aACA/zJ,EAAAi0J,cACAj0J,EAAAk0J,WACAl0J,EAAAo0J,YACAp0J,EAAA20H,UACA30H,EAAAq0J,WACAr0J,EAAAitK,QAAAj4C,GACAh1H,EAAAktK,SAAAvY,GACA30J,EAAAg1H,aACAh1H,EAAA20J,cACA30J,EAAAi1H,aACAj1H,EAAA40J,cACA50J,EAAAs0J,cACAt0J,EAAA60J,eACA70J,EAAAu0J,gBACAv0J,EAAA80J,iBACA90J,EAAAw0J,eACAx0J,EAAA+0J,gBACA/0J,EAAAy0J,aACAz0J,EAAAg1J,cACAh1J,EAAA00J,eACA10J,EAAAi1J,gBACAj1J,EAAAk1J,YACAl1J,EAAAo1J,aACAp1J,EAAA40H,WACA50H,EAAAq1J,YACAr1J,EAAAmtK,wBAAAh4C,GACAn1H,EAAAotK,iBAAAjgD,GACAntH,EAAAqtK,UAAA7X,GACAx1J,EAAAstK,SAAA7X,GACAz1J,EAAA83E,OACA93E,EAAA06F,SACA16F,EAAA46F,cACA56F,EAAA44B,QAAAwjE,GACAp8F,EAAAs7F,SAAA87C,GACAp3I,EAAAqrB,cACArrB,EAAAsyC,UACAtyC,EAAA2lG,aACA3lG,EAAAu9J,WACAv9J,EAAAi+J,QACAj+J,EAAAutK,cAAApqC,GACAnjI,EAAAwtK,aAAAnqC,GAEAviI,OAAA+B,eAAA7C,EAAA,cAA8C6I,OAAA","file":"static/js/vendor.bd1a191fa169d4d8bee5.js","sourcesContent":["webpackJsonp([1,2],{\n\n/***/ 0:\n/***/ (function(module, exports) {\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ 12:\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n\n/***/ 140:\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n\n/***/ 141:\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n\n/***/ 143:\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n\n/***/ 144:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(140)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = { css: css, media: media, sourceMap: sourceMap }\n    if (!newStyles[id]) {\n      part.id = parentId + ':0'\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      part.id = parentId + ':' + newStyles[id].parts.length\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n  var hasSSR = styleElement != null\n\n  // if in production mode and style is already provided by SSR,\n  // simply do nothing.\n  if (hasSSR && isProduction) {\n    return noop\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = styleElement || createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (!hasSSR) {\n    update(obj)\n  }\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n\n/***/ 2:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.2.3\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n\n\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName;\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'function' && vm.options\n      ? vm.options.name\n      : vm._isVue\n        ? vm.$options.name || vm.$options._componentTag\n        : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === \"<Anonymous>\") {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = target.__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = target.__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$3) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (false) {\n      warn((\"Error in \" + info + \":\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!cur) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      if (!cur.fns) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (!oldHook) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (oldHook.fns && oldHook.merged) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns\n) {\n  var res = {};\n  for (var i = 0; i < fns.length; i++) {\n    res[fns[i][0]] = fns[i][1];\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var startTag = \"start \" + name;\n      var endTag = \"end \" + name;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (false) {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (false) {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive == null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar queue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id, vm;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // call updated hooks\n  index = queue.length;\n  while (index--) {\n    watcher = queue[index];\n    vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedProp[key]) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    if (!vnode.componentInstance._isMounted) {\n      vnode.componentInstance._isMounted = true;\n      callHook(vnode.componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      activateChildComponent(vnode.componentInstance, true /* direct */);\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    if (!vnode.componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        vnode.componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(vnode.componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (data.model) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && attrs.hasOwnProperty(keyInLowerCase)\n        ) {\n          warn(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is not declared in component \" +\n            (formatComponentName(Ctor)) + \". Note that HTML attributes are \" +\n            \"case-insensitive and camelCased props need to use their kebab-case \" +\n            \"equivalents when using in-DOM templates. You should probably use \" +\n            \"\\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (on[event]) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { normalizationType = ALWAYS_NORMALIZE; }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (data && data.__ob__) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"production\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = _toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var inject = vm.$options.inject;\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          vm[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n  }\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    /* istanbul ignore if */\n    if (false) {\n      mark('init');\n    }\n\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark('init end');\n      measure(((vm._name) + \" init\"), 'init', 'init end');\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    for (var i = 0; i < latest.length; i++) {\n      if (sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (false) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cachedNode);\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    if (!vnode.componentInstance._inactive) {\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$3.version = '2.2.3';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.componentInstance) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks[i]] !== undefined) { cbs[hooks[i]].push(modules[j][hooks[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (parent) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isReactivated) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (parent) {\n      if (ref) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        (vnode.isCloned || vnode.isOnce)) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (false) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (vnode.parent) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parentElm$1 !== null) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important\n) {\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + value + \"=$$c}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (on[RANGE_TOKEN]) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (on[CHECKBOX_RADIO_TOKEN]) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once,\n  capture\n) {\n  if (once) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(event, handler, capture);\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (!fn) { return false }\n  var invokerFns = fn.fns;\n  if (invokerFns) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n          currentParent.tag === 'textarea' &&\n          currentParent.attrsMap.placeholder === text) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"production\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (false) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (events, native) {\n  var res = native ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    false\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (false) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  return \"[\" + key + \",function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}]\"\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n        el$1.for &&\n        el$1.tag !== 'template' &&\n        el$1.tag !== 'slot') {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var keywordMatch = exp.replace(stripStringRE, '').match(unaryOperatorsRE);\n  if (keywordMatch) {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (false) {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nmodule.exports = Vue$3;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return _;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12), __webpack_require__(141)(module)))\n\n/***/ }),\n\n/***/ 51:\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org Version 4.7.2. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.7.2\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(a, b, f) {\n  var na = a.length, nb = b.length, c = new Array(na * nb), ia, ib, ic, va;\n  if (f == null) f = pair;\n  for (ia = ic = 0; ia < na; ++ia) for (va = a[ia], ib = 0; ib < nb; ++ib, ++ic) c[ic] = f(va, b[ib]);\n  return c;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m([0, 0]);\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]\n        : [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.bd1a191fa169d4d8bee5.js","module.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 0\n// module chunks = 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 12\n// module chunks = 1","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/listToStyles.js\n// module id = 140\n// module chunks = 1","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 141\n// module chunks = 1","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 143\n// module chunks = 1","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = { css: css, media: media, sourceMap: sourceMap }\n    if (!newStyles[id]) {\n      part.id = parentId + ':0'\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      part.id = parentId + ':' + newStyles[id].parts.length\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n  var hasSSR = styleElement != null\n\n  // if in production mode and style is already provided by SSR,\n  // simply do nothing.\n  if (hasSSR && isProduction) {\n    return noop\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = styleElement || createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (!hasSSR) {\n    update(obj)\n  }\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/addStylesClient.js\n// module id = 144\n// module chunks = 1","/*!\n * Vue.js v2.2.3\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName;\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'function' && vm.options\n      ? vm.options.name\n      : vm._isVue\n        ? vm.$options.name || vm.$options._componentTag\n        : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === \"<Anonymous>\") {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = target.__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = target.__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$3) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Error in \" + info + \":\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!cur) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      if (!cur.fns) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (!oldHook) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (oldHook.fns && oldHook.merged) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns\n) {\n  var res = {};\n  for (var i = 0; i < fns.length; i++) {\n    res[fns[i][0]] = fns[i][1];\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var startTag = \"start \" + name;\n      var endTag = \"end \" + name;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive == null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar queue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id, vm;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // call updated hooks\n  index = queue.length;\n  while (index--) {\n    watcher = queue[index];\n    vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedProp[key]) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    if (!vnode.componentInstance._isMounted) {\n      vnode.componentInstance._isMounted = true;\n      callHook(vnode.componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      activateChildComponent(vnode.componentInstance, true /* direct */);\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    if (!vnode.componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        vnode.componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(vnode.componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (data.model) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && attrs.hasOwnProperty(keyInLowerCase)\n        ) {\n          warn(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is not declared in component \" +\n            (formatComponentName(Ctor)) + \". Note that HTML attributes are \" +\n            \"case-insensitive and camelCased props need to use their kebab-case \" +\n            \"equivalents when using in-DOM templates. You should probably use \" +\n            \"\\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (on[event]) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { normalizationType = ALWAYS_NORMALIZE; }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (data && data.__ob__) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = _toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var inject = vm.$options.inject;\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          vm[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n  }\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      mark('init');\n    }\n\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark('init end');\n      measure(((vm._name) + \" init\"), 'init', 'init end');\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    for (var i = 0; i < latest.length; i++) {\n      if (sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cachedNode);\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    if (!vnode.componentInstance._inactive) {\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$3.version = '2.2.3';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.componentInstance) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks[i]] !== undefined) { cbs[hooks[i]].push(modules[j][hooks[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (parent) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isReactivated) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (parent) {\n      if (ref) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        (vnode.isCloned || vnode.isOnce)) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (vnode.parent) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parentElm$1 !== null) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important\n) {\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + value + \"=$$c}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (on[RANGE_TOKEN]) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (on[CHECKBOX_RADIO_TOKEN]) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once,\n  capture\n) {\n  if (once) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(event, handler, capture);\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitLeaveDuration != null) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (!fn) { return false }\n  var invokerFns = fn.fns;\n  if (invokerFns) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n        mode && mode !== 'in-out' && mode !== 'out-in') {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      config.productionTip !== false &&\n      inBrowser && typeof console !== 'undefined') {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n            (i > pos || !tagName) &&\n            options.warn) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n          currentParent.tag === 'textarea' &&\n          currentParent.attrsMap.placeholder === text) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (process.env.NODE_ENV !== 'production' && map[attrs[i].name] && !isIE) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (events, native) {\n  var res = native ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    maybeComponent(el) && el.tag !== 'slot' && el.tag !== 'template' && !el.key\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  return \"[\" + key + \",function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}]\"\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n        el$1.for &&\n        el$1.tag !== 'template' &&\n        el$1.tag !== 'slot') {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var keywordMatch = exp.replace(stripStringRE, '').match(unaryOperatorsRE);\n  if (keywordMatch) {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (process.env.NODE_ENV !== 'production') {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nmodule.exports = Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.common.js\n// module id = 2\n// module chunks = 1","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/lodash.js\n// module id = 4\n// module chunks = 1","// https://d3js.org Version 4.7.2. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.7.2\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(a, b, f) {\n  var na = a.length, nb = b.length, c = new Array(na * nb), ia, ib, ic, va;\n  if (f == null) f = pair;\n  for (ia = ic = 0; ia < na; ++ia) for (va = a[ia], ib = 0; ib < nb; ++ib, ++ic) c[ic] = f(va, b[ib]);\n  return c;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m([0, 0]);\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]\n        : [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 51\n// module chunks = 1"],"sourceRoot":""}
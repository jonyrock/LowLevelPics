{"version":3,"sources":["webpack:///static/js/vendor.eaf862e7a9738d75c726.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./~/lodash/lodash.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/vue-style-loader/lib/listToStyles.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/lib/addStylesClient.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/d3/build/d3.js"],"names":["webpackJsonp","0","module","exports","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","type","default","options","render","staticRenderFns","_scopeId","computed","Object","keys","forEach","key","1","__webpack_require__","global","__WEBPACK_AMD_DEFINE_RESULT__","addMapEntry","map","pair","set","addSetEntry","value","add","apply","func","thisArg","args","length","call","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","string","split","asciiWords","match","reAsciiWord","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","object","undefined","basePropertyOf","baseReduce","baseSortBy","comparer","sort","current","baseTimes","n","baseToPairs","props","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","hasUnicode","reHasUnicode","test","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","data","next","done","push","mapToArray","size","overArg","transform","arg","replaceHolders","PLACEHOLDER","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","lastIndex","unicodeWords","reUnicodeWord","VERSION","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","LAZY_WHILE_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","promiseTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsOptJoin","join","rsOrdLower","rsOrdUpper","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","\\","\n","\r"," "," ","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","freeSelf","self","root","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","e","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","context","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","this","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","splice","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","get","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isBuffer","isType","skipIndexes","String","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","baseAssignIn","keysIn","defineProperty","configurable","enumerable","writable","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","isObject","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","keysFunc","getAllKeysIn","getAllKeys","subValue","baseConforms","baseConformsTo","baseDelay","wait","TypeError","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","parent","last","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","isPlainObject","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","toString","castSlice","buffer","slice","allocUnsafe","constructor","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","exec","cloneSet","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","Ctor","isBind","arguments","createCtor","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","replace","thisBinding","baseCreate","prototype","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","fn","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","Math","precision","createToPairs","createWrap","mergeData","baseSetData","customDefaultsAssignIn","objectProto","customDefaultsMerge","customOmitClone","isPartial","arrValue","othValue","compared","name","message","convert","objProps","objLength","skipCtor","objCtor","othCtor","flatten","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","transforms","getWrapDetails","hasPath","hasFunc","input","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","memoizeCapped","memoize","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","reference","updateWrapDetails","shortOut","count","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","concat","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","head","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","filter","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","orderBy","reduce","reduceRight","reject","negate","sample","sampleSize","shuffle","some","after","before","curry","curryRight","debounce","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","now","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","flip","resolver","memoized","Cache","once","rest","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","Error","isNull","isNil","proto","objectCtorString","isSafeInteger","isUndefined","isWeakMap","isWeakSet","symIterator","remainder","valueOf","isBinary","toSafeInteger","create","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","prop","setWith","isArrLike","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","capitalize","upperFirst","toLowerCase","endsWith","target","position","escape","escapeRegExp","pad","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","toUpperCase","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","pattern","cond","conforms","constant","defaultTo","matches","matchesProperty","mixin","methodNames","noConflict","_","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","id","idCounter","max","maxBy","mean","meanBy","min","minBy","sum","sumBy","defaults","pick","Date","arrayProto","funcProto","coreJsData","uid","IE_PROTO","Buffer","Symbol","getPrototypeOf","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","ceil","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ArrayBuffer","resolve","ctorString","quote","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","keyBy","partition","sortBy","bind","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extend","extendWith","each","eachRight","first","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","15","g","eval","window","164","parentId","list","styles","newStyles","i","item","css","media","sourceMap","part","parts","165","webpackPolyfill","deprecate","children","l","167","modules","mediaQuery","alreadyImportedModules","168","addStylesToDom","domStyle","stylesInDom","refs","j","addStyle","listToStyles","createStyleElement","styleElement","document","createElement","appendChild","obj","querySelector","hasSSR","isProduction","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","parentNode","removeChild","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","btoa","encodeURIComponent","JSON","stringify","firstChild","hasDocument","DEBUG","getElementsByTagName","navigator","userAgent","_isProduction","newList","mayRemove","textStore","replacement","Boolean","4","_toString","val","makeMap","str","expectsLowerCase","arr","hasOwn","isPrimitive","cached","ctx","boundFn","a","_length","ret","to","_from","OBJECT_STRING","toObject","res","genStaticKeys","m","staticKeys","looseEqual","b","isObjectA","isObjectB","looseIndexOf","called","isReserved","c","charCodeAt","def","parsePath","bailRE","segments","pushTarget","_target","Dep","targetStack","popTarget","protoAugment","src","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","dep","getOwnPropertyDescriptor","getter","childOb","depend","dependArray","newVal","notify","del","from","toVal","fromVal","mergeHook","parentVal","childVal","mergeAssets","normalizeProps","camelize","normalizeDirectives","dirs","directives","mergeOptions","child","vm","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","Vue$3","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","absent","hyphenate","getPropDefaultValue","prevShouldConvert","$options","_props","getType","len","handleError","err","info","config","errorHandler","inBrowser","console","error","createTextVNode","VNode","cloneVNode","vnode","cloned","text","elm","componentOptions","ns","isStatic","isCloned","cloneVNodes","vnodes","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","cur","old","event","normalizeEvent","capture","mergeVNodeHook","hookKey","hook","wrappedHook","oldHook","merged","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","nestedIndex","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","once$$1","$once","$on","remove$1","$off","oldListeners","eventsMixin","Vue","hookRE","this$1","i$1","cbs","cb","$emit","resolveSlots","slots","defaultSlot","functionalContext","slot","isWhitespace","node","isComment","resolveScopedSlots","initLifecycle","abstract","$parent","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_update","hydrating","callHook","prevEl","$el","prevVnode","_vnode","prevActiveInstance","activeInstance","__patch__","_parentElm","_refElm","__vue__","$vnode","$forceUpdate","$destroy","teardown","_watchers","_data","mountComponent","el","createEmptyVNode","updateComponent","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","resetSchedulerState","queue","waiting","flushing","flushSchedulerQueue","watcher","run","devtools","emit","queueWatcher","nextTick","traverse","seenObjects","_traverse","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","opts","initProps","methods","initMethods","initData","initComputed","watch","initWatch","propsOptions","isRoot","loop","watchers","_computedWatchers","userDef","computedWatcherOptions","defineComputed","createComputedGetter","dirty","handler","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","expOrFn","user","immediate","createComponent","baseCtor","_base","cid","resolved","resolveAsyncComponent","resolveConstructorOptions","model","transformModel","extractProps","functional","createFunctionalComponent","nativeOn","mergeHooks","_context","h","d","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","inlineTemplate","factory","requested","pendingCallbacks","sync","reason","then","attrs","domProps","altKey","checkProp","preserve","hooksToMerge","fromParent","ours","componentVNodeHooks","mergeHook$1","one","two","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","resolveFilter","checkKeyCodes","eventKeyCode","builtInAlias","keyCodes","bindObjectProps","asProp","mustUseProp","renderStatic","isInFor","tree","_staticTrees","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","initRender","renderContext","_c","$createElement","renderMixin","$nextTick","ref","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","initProvide","provide","_provided","initInjections","inject","hasSymbol","Reflect","ownKeys","provideKey","initMixin","_init","_uid","initInternalComponent","_self","$mount","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","sealed","sealedOptions","dedupe","initUse","use","plugin","installed","unshift","install","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","_assetTypes","Comp","initAssetRegisters","definition","getComponentName","pruneCache","cachedNode","pruneCacheEntry","componentInstance","initGlobalAPI","configDef","util","warn","defineReactive","delete","builtInComponents","genClassForVnode","childNode","mergeClassData","genClassFromData","staticClass","class","dynamicClass","stringifyClass","stringified","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","query","selected","createElement$1","tagName","multiple","createElementNS","namespace","namespaceMap","createComment","newNode","referenceNode","nextSibling","setTextContent","textContent","registerRef","isRemoval","refInFor","isUndef","s","isDef","sameVnode","vnode1","vnode2","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","emptyNodeAt","nodeOps","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","isRootInsert","setScope","createChildren","invokeCreateHooks","insert","isReactivated","keepAlive","init","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","emptyNode","ancestor","addVnodes","startIdx","invokeDestroyHook","destroy","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","oldVnode","hasData","prepatch","postpatch","invokeInsertHook","hydrate","hasChildNodes","childrenMatch","isRenderedModule","hooks","isInitialPatch","isRealElement","hasAttribute","removeAttribute","oldElm","parentElm$1","_leaveCb","updateDirectives","oldDir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","oldAttrs","setAttr","isIE9","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","filters","lastFilterIndex","prev","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","p","validDivisionCharRE","wrapFilter","baseWarn","msg","pluckModuleFunction","addProp","addAttr","addDirective","addHandler","important","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","attrsMap","attrsList","genComponentModel","baseValueExpression","valueExpression","assignment","genAssignmentCode","modelRs","parseModel","idx","index$1","expressionPos","expressionEndPos","eof","isStringStart","parseString","parseBracket","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","CHECKBOX_RADIO_TOKEN","selectedVal","code","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isIE","isChrome","add$1","oldHandler","target$1","ev","remove$2","addEventListener","removeEventListener","updateDOMListeners","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","activeElement","_vModifiers","normalizeStyleData","style","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","oldStyle","newStyle","setProp","addClass","classList","getAttribute","removeClass","tar","resolveTransition","def$$1","autoCssTransition","nextFrame","raf","addTransitionClass","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","timeout","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","onEnd","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","Number","enter","toggleDisplay","cancelled","_enterCb","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","isMultiple","option","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","comp","key$1","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","pos","dx","left","dy","top","moved","WebkitTransform","transitionDuration","shouldDecode","content","encoded","div","innerHTML","decode","html","decoder","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","advance","parseStartTag","startTagOpen","attr","startTagClose","attribute","unarySlash","handleStartTag","expectHTML","lastTag","isNonPhrasingTag","parseEndTag","canBeLeftOpenTag","isUnaryTag$$1","IS_REGEX_CAPTURING_BROKEN","lowerCasedTag","lowerCasedTagName","isUnaryTag","no","isPlainTextElement","stackedTag","reStackedTag","reCache","endTagLength","all","endTag","textEnd","comment","commentEnd","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","rest$1","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokens","parse","endPre","element","pre","inVPre","platformIsPreTag","inPre","warn$2","platformGetTagNamespace","platformMustUseProp","isPreTag","preTransforms","postTransforms","currentParent","preserveWhitespace","checkRootConstraints","guardIESVGBug","makeAttrsMap","isForbiddenTag","forbidden","processPre","processRawAttrs","processFor","processIf","processOnce","processKey","plain","processRef","processSlot","processComponent","processAttrs","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","i$2","lastNode","decodeHTMLCached","checkInFor","inMatch","forAliasRE","for","alias","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","condition","ifConditions","slotName","component","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","optimize","isStaticKey","genStaticKeysCached","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","staticInFor","staticRoot","walkThroughConditionsBlocks","conditionBlocks","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genKeyFilter","genFilterCode","keyVal","bind$1","wrapData","generate","ast","prevStaticRenderFns","currentStaticRenderFns","prevOnceCount","onceCount","currentOptions","warn$3","transforms$1","dataGenFns","platformDirectives$1","isPlatformReservedTag$1","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData","genChildren","genIfConditions","conditions","genTernaryExp","shift","genDirectives","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","baseDirectives","inlineRenderFns","genScopedSlot","scope","checkSkip","el$1","getNormalizationType","genNode","needsNormalization","maybeComponent","genText","transformSpecialNewlines","bind$$1","componentName","baseCompile","makeFunction","errors","createCompiler","baseOptions","compile","finalOptions","tips","tip$$1","compiled","compileToFunctions","functionCompileCache","fnGenErrors","transformNode","classBinding","genData$1","transformNode$1","styleBinding","genData$2","getOuterHTML","outerHTML","container","cloneNode","_isServer","_Set","camelizeRE","hyphenateRE","optionMergeStrategies","silent","productionTip","performance","ignoredElements","_lifecycleHooks","_maxUpdateCount","freeze","hasProto","UA","isEdge","isAndroid","isIOS","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","nextTickHandler","pending","copies","callbacks","timerFunc","logError","catch","MutationObserver","counter","observer","textNode","characterData","_resolve","uid$1","subs","addSub","sub","removeSub","addDep","arrayMethods","original","observeArray","arrayKeys","getOwnPropertyNames","isSettingProps","walk","items","instanceData","defaultData","raw","prototypeAccessors","defineProperties","uid$2","deep","active","deps","newDeps","depIds","newDepIds","cleanupDeps","tmp","mountedNode","patternTypes","KeepAlive","include","exclude","created","destroyed","version","testEl","acceptValue","svg","math","isHTMLTag","baseModules","klass","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalize","prefixes","prefixed","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","platformModules","patch","vmodel","model$1","v","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","body","offsetHeight","propertyName","_hasMove","platformComponents","singleAttrIdentifier","singleAttrAssign","singleAttrValues","ncname","qnameCapture","&#10;","regexEscapeRE","open","close","esc","tab","space","up","right","down","genGuard","stop","prevent","ctrl","alt","meta","middle","cloak","klass$1","style$1","modules$1","directives$1","ref$1","idToTemplate","mount","documentElement","61","ascendingComparator","f","x","ascending","tickStep","step0","abs","step1","pow","log","LN10","e10","e5","e2","translateX","translateY","y","center","scale","bandwidth","entering","__axis","axis","orient","tickValues","ticks","tickArguments","domain","format","tickFormat","identity$1","spacing","tickSizeInner","tickPadding","range0","range1","selection","selectAll","tick","order","tickExit","exit","tickEnter","append","line","select","k","bottom","epsilon","tickSizeOuter","slice$1","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","t","Dispatch","parseTypenames","typenames","types","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","local","local$1","Local","nextId","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","parseTypenames$1","onRemove","typename","__on","o","onAdd","filterEvents","customEvent","that","sourceEvent","none","empty$1","EnterNode","datum","_next","_parent","bindIndex","groupLength","dataLength","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$1","NaN","attrRemove","attrRemoveNS","attrConstant","attrConstantNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","ClassList","_node","_names","classedAdd","names","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textConstant","textFunction","htmlRemove","htmlConstant","htmlFunction","raise","previousSibling","constantNull","params","window$$1","CustomEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","nopropagation","stopImmediatePropagation","yesdrag","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","Color","color","reHex3","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","rgbConvert","rgb","opacity","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","parseCss","identity$2","cssRoot","cssView","defaultView","getPropertyValue","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","cosh","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","restart","timerFlush","frame","taskHead","wake","clockLast","nap","poke","pokeDelay","taskTail","sleep","interval","clearInterval","setInterval","schedule","__transition","state","CREATED","set$1","STARTING","get$1","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","ease","ENDING","tweenRemove","tween0","tween1","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","ownerSVGElement","width","height","local$$1","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","move","point0","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","touches","touchending","keydowned","keyCode","keyupped","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","selection1","selection0","starting","BrushEvent","constant$4","compareValue","compare","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","map$1","createObject","setObject","createMap","setMap","set$2","objectConverter","columns","customConverter","row","inferColumns","rows","columnSet","column","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","leaf_copy","vx","vy","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","align","sign","comma","formatTypes","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","z","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","link$1","clipExtent","visible","a1","corner","comparePoint","compareIntersection","ca","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","clean","startInside","cleanInside","clipPolygon","clipStream","v_","x_","y_","x__","y__","v__","rejoin","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","L","B","circle","l2","p1","l0","l1","enclose1","enclose2","enclose3","r1","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","d3","A","place","ax","ay","da","db","dc","intersects","distance2","Node$1","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","change","executeShifts","nextAncestor","vim","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","cross$1","Queue","_size","_error","_tasks","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","d1","polymap","bisectRight","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pads","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","requoteRe","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","radialLine","point$2","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","hi","ascendingBisect","bisectLeft","cross","ia","ib","ic","na","nb","descending","variance","deviation","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","permute","permutes","scan","xi","xj","transpose","T","namespaces","xlink","xml","xmlns","creator","matcher","selector","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","mouseenter","mouseleave","selection_on","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","clientLeft","clientTop","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","constant$1","selection_data","enterGroup","updateGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","reA","reB","interpolateString","am","bm","bs","bi","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","dsv","delimiter","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","x$$1","y$$1","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","identity$3","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","epsilon2$1","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","sum$1","sinPhi1","absDelta","phiArc","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","lengthRing","_circle","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","notHemisphere","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$3","await","results","awaitAll","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential$1","request","url","respond","status","mimeType","headers","XMLHttpRequest","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","constant$10","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","ka","kr","star","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$5","none$1","none$2","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","randomUniform","randomLogNormal","randomBates","randomExponential","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity"],"mappings":"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","file":"static/js/vendor.eaf862e7a9738d75c726.js","sourcesContent":["webpackJsonp([1,2],{\n\n/***/ 0:\n/***/ (function(module, exports) {\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ 1:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return _;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(15), __webpack_require__(165)(module)))\n\n/***/ }),\n\n/***/ 15:\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n\n/***/ 164:\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n\n/***/ 165:\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n\n/***/ 167:\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n\n/***/ 168:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(164)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = { css: css, media: media, sourceMap: sourceMap }\n    if (!newStyles[id]) {\n      part.id = parentId + ':0'\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      part.id = parentId + ':' + newStyles[id].parts.length\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n  var hasSSR = styleElement != null\n\n  // if in production mode and style is already provided by SSR,\n  // simply do nothing.\n  if (hasSSR && isProduction) {\n    return noop\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = styleElement || createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (!hasSSR) {\n    update(obj)\n  }\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.2.3\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n\n\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName;\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'function' && vm.options\n      ? vm.options.name\n      : vm._isVue\n        ? vm.$options.name || vm.$options._componentTag\n        : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === \"<Anonymous>\") {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = target.__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = target.__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$3) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (false) {\n      warn((\"Error in \" + info + \":\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!cur) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      if (!cur.fns) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (!oldHook) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (oldHook.fns && oldHook.merged) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns\n) {\n  var res = {};\n  for (var i = 0; i < fns.length; i++) {\n    res[fns[i][0]] = fns[i][1];\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var startTag = \"start \" + name;\n      var endTag = \"end \" + name;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (false) {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (false) {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive == null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar queue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id, vm;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // call updated hooks\n  index = queue.length;\n  while (index--) {\n    watcher = queue[index];\n    vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedProp[key]) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    if (!vnode.componentInstance._isMounted) {\n      vnode.componentInstance._isMounted = true;\n      callHook(vnode.componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      activateChildComponent(vnode.componentInstance, true /* direct */);\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    if (!vnode.componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        vnode.componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(vnode.componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (data.model) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && attrs.hasOwnProperty(keyInLowerCase)\n        ) {\n          warn(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is not declared in component \" +\n            (formatComponentName(Ctor)) + \". Note that HTML attributes are \" +\n            \"case-insensitive and camelCased props need to use their kebab-case \" +\n            \"equivalents when using in-DOM templates. You should probably use \" +\n            \"\\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (on[event]) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { normalizationType = ALWAYS_NORMALIZE; }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (data && data.__ob__) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"production\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = _toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var inject = vm.$options.inject;\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          vm[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n  }\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    /* istanbul ignore if */\n    if (false) {\n      mark('init');\n    }\n\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark('init end');\n      measure(((vm._name) + \" init\"), 'init', 'init end');\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    for (var i = 0; i < latest.length; i++) {\n      if (sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (false) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cachedNode);\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    if (!vnode.componentInstance._inactive) {\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$3.version = '2.2.3';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.componentInstance) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks[i]] !== undefined) { cbs[hooks[i]].push(modules[j][hooks[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (parent) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isReactivated) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (parent) {\n      if (ref) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        (vnode.isCloned || vnode.isOnce)) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (false) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (vnode.parent) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parentElm$1 !== null) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important\n) {\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + value + \"=$$c}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (on[RANGE_TOKEN]) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (on[CHECKBOX_RADIO_TOKEN]) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once,\n  capture\n) {\n  if (once) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(event, handler, capture);\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (!fn) { return false }\n  var invokerFns = fn.fns;\n  if (invokerFns) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n          currentParent.tag === 'textarea' &&\n          currentParent.attrsMap.placeholder === text) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"production\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (false) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (events, native) {\n  var res = native ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    false\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (false) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  return \"[\" + key + \",function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}]\"\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n        el$1.for &&\n        el$1.tag !== 'template' &&\n        el$1.tag !== 'slot') {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var keywordMatch = exp.replace(stripStringRE, '').match(unaryOperatorsRE);\n  if (keywordMatch) {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (false) {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nmodule.exports = Vue$3;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(15)))\n\n/***/ }),\n\n/***/ 61:\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org Version 4.7.2. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.7.2\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(a, b, f) {\n  var na = a.length, nb = b.length, c = new Array(na * nb), ia, ib, ic, va;\n  if (f == null) f = pair;\n  for (ia = ic = 0; ia < na; ++ia) for (va = a[ia], ib = 0; ib < nb; ++ib, ++ic) c[ic] = f(va, b[ib]);\n  return c;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m([0, 0]);\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]\n        : [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.eaf862e7a9738d75c726.js","module.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 0\n// module chunks = 1","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/lodash.js\n// module id = 1\n// module chunks = 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 15\n// module chunks = 1","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/listToStyles.js\n// module id = 164\n// module chunks = 1","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 165\n// module chunks = 1","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 167\n// module chunks = 1","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = { css: css, media: media, sourceMap: sourceMap }\n    if (!newStyles[id]) {\n      part.id = parentId + ':0'\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      part.id = parentId + ':' + newStyles[id].parts.length\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n  var hasSSR = styleElement != null\n\n  // if in production mode and style is already provided by SSR,\n  // simply do nothing.\n  if (hasSSR && isProduction) {\n    return noop\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = styleElement || createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (!hasSSR) {\n    update(obj)\n  }\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/addStylesClient.js\n// module id = 168\n// module chunks = 1","/*!\n * Vue.js v2.2.3\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName;\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'function' && vm.options\n      ? vm.options.name\n      : vm._isVue\n        ? vm.$options.name || vm.$options._componentTag\n        : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === \"<Anonymous>\") {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = target.__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = target.__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$3) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Error in \" + info + \":\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!cur) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      if (!cur.fns) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (!oldHook) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (oldHook.fns && oldHook.merged) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns\n) {\n  var res = {};\n  for (var i = 0; i < fns.length; i++) {\n    res[fns[i][0]] = fns[i][1];\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var startTag = \"start \" + name;\n      var endTag = \"end \" + name;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive == null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar queue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id, vm;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // call updated hooks\n  index = queue.length;\n  while (index--) {\n    watcher = queue[index];\n    vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedProp[key]) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    if (!vnode.componentInstance._isMounted) {\n      vnode.componentInstance._isMounted = true;\n      callHook(vnode.componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      activateChildComponent(vnode.componentInstance, true /* direct */);\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    if (!vnode.componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        vnode.componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(vnode.componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (data.model) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && attrs.hasOwnProperty(keyInLowerCase)\n        ) {\n          warn(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is not declared in component \" +\n            (formatComponentName(Ctor)) + \". Note that HTML attributes are \" +\n            \"case-insensitive and camelCased props need to use their kebab-case \" +\n            \"equivalents when using in-DOM templates. You should probably use \" +\n            \"\\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (on[event]) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { normalizationType = ALWAYS_NORMALIZE; }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (data && data.__ob__) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = _toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var inject = vm.$options.inject;\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          vm[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n  }\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      mark('init');\n    }\n\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark('init end');\n      measure(((vm._name) + \" init\"), 'init', 'init end');\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    for (var i = 0; i < latest.length; i++) {\n      if (sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cachedNode);\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    if (!vnode.componentInstance._inactive) {\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$3.version = '2.2.3';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.componentInstance) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks[i]] !== undefined) { cbs[hooks[i]].push(modules[j][hooks[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (parent) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isReactivated) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (parent) {\n      if (ref) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        (vnode.isCloned || vnode.isOnce)) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (vnode.parent) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parentElm$1 !== null) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important\n) {\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + value + \"=$$c}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (on[RANGE_TOKEN]) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (on[CHECKBOX_RADIO_TOKEN]) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once,\n  capture\n) {\n  if (once) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(event, handler, capture);\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitLeaveDuration != null) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (!fn) { return false }\n  var invokerFns = fn.fns;\n  if (invokerFns) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n        mode && mode !== 'in-out' && mode !== 'out-in') {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      config.productionTip !== false &&\n      inBrowser && typeof console !== 'undefined') {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n            (i > pos || !tagName) &&\n            options.warn) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n          currentParent.tag === 'textarea' &&\n          currentParent.attrsMap.placeholder === text) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (process.env.NODE_ENV !== 'production' && map[attrs[i].name] && !isIE) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (events, native) {\n  var res = native ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    maybeComponent(el) && el.tag !== 'slot' && el.tag !== 'template' && !el.key\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  return \"[\" + key + \",function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}]\"\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n        el$1.for &&\n        el$1.tag !== 'template' &&\n        el$1.tag !== 'slot') {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var keywordMatch = exp.replace(stripStringRE, '').match(unaryOperatorsRE);\n  if (keywordMatch) {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (process.env.NODE_ENV !== 'production') {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nmodule.exports = Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.common.js\n// module id = 4\n// module chunks = 1","// https://d3js.org Version 4.7.2. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.7.2\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(a, b, f) {\n  var na = a.length, nb = b.length, c = new Array(na * nb), ia, ib, ic, va;\n  if (f == null) f = pair;\n  for (ia = ic = 0; ia < na; ++ia) for (va = a[ia], ib = 0; ib < nb; ++ib, ++ic) c[ic] = f(va, b[ib]);\n  return c;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m([0, 0]);\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]\n        : [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 61\n// module chunks = 1"],"sourceRoot":""}